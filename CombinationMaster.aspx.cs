
using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class CombinationMaster : System.Web.UI.Page
{
    int j = 0;
    int z = 0;
    static int alpha ;
    string checkboxname, compcode, userid, formname;
    static string saveormodify, chkquery,opendivsign;
    static DataSet globda = new DataSet();

    static int fpnl;
    static int FlagStatus;
    string valuee = "";
    public static string check = "";
    static string gcombinationcode = "";
    static string gadtype = "";
    static string gpaccode = "";
    static string gcombincode = "";
    static string galias = "";
    static string geditiontype = "";
    string sau = "";
    protected void Page_Load(object sender, System.EventArgs e)
    {

        // Put user code to initialize the page here
         j = 0;
         z = 0;
        Response.Expires = -1;
        if (Session["compcode"] != null)
        {
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            compcode = hiddencompcode.Value;
            userid = hiddenuserid.Value;
            hiddenusername.Value = Session["Username"].ToString();
            gcombinationcode = hiddengcomcode.Value;
            gadtype = hiddengadtype.Value;
            gpaccode = hiddengpackcode.Value;
            gcombincode = hiddengcombncode.Value;
            galias = hiddengalias.Value;
            geditiontype = hiddengeditiontype.Value;
       }
       else
       {
            Response.Write("<script>alert(\"Your Session Has Been Expired\");window.close();</script>");
            return;
       }
        
        formname = "CombinationMaster";
        Ajax.Utility.RegisterTypeForAjax(typeof(CombinationMaster));

        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();
        
        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/combinationmaster.xml"));

        adtype.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        adcategory.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        adsubcategory.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        AdvCombinationCode.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        Alias.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        packagename.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        advcombinationname.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        NoOfEditions.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnsubmit.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btncancelgrid.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        share.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lbnoofinsertion.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();
        lblpubcenter.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
        lblsplit.Text = ds.Tables[0].Rows[0].ItemArray[13].ToString();
        lblconsum.Text = ds.Tables[0].Rows[0].ItemArray[14].ToString();

        lblvalidfrom.Text = ds.Tables[0].Rows[0].ItemArray[15].ToString();
        lblvalidto.Text = ds.Tables[0].Rows[0].ItemArray[16].ToString();
        lbloldpkgcode.Text = ds.Tables[0].Rows[0].ItemArray[17].ToString();
        if (ds.Tables.Count > 1)
        {
            if (ds.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
            {
                share.Attributes.Add("style", "display:none");
                drpshare.Attributes.Add("style", "display:none");
            }
        }
    //    ScriptManager1.SetFocus(btnNew);

        if (!Page.IsPostBack)
        {
            fillPubCenter();
            bindcheckbox();
            advcat(compcode);
            adtypedata(compcode);
            btnoptionbutton.Items[0].Selected = true;
            navigation();
            getbuttoncheck("CombinationMaster");
            bindsharedist(compcode);
            addatagrid(valuee);
            lbaddon.Attributes.Add("OnClick", "javascript:return adon();");
            btnsubmit.Attributes.Add("OnClick", "javascript:return submitfromgrid('DataGrid1');");
            noofedi.Attributes.Add("OnChange", "javascript:return checkedition();");
            //btnNew.Attributes.Add("OnClick", "javascript:return newclick();");
            //btnCancel.Attributes.Add("OnClick", "javascript:return cancelclick('CombinationMaster');");
            btnExit.Attributes.Add("OnClick", "javascript:return exitclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return submittedclick();");
            btncancelgrid.Attributes.Add("OnClick", "javascript:return cancelgrid();");
            btnModify.Attributes.Add("OnClick", "javascript:return modifyclick();");
            //btnQuery.Attributes.Add("OnClick", "javascript:return queryclick();");
           //btnExecute.Attributes.Add("OnClick", "javascript:return executeclick();");
            //btnfirst.Attributes.Add("OnClick", "javascript:return firstclick();");
           // btnlast.Attributes.Add("OnClick", "javascript:return lastclick();");
            //btnnext.Attributes.Add("OnClick", "javascript:return nextclick();");
            //btnprevious.Attributes.Add("OnClick", "javascript:return previousclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return deleteclick();");
            btntextcomcode.Attributes.Add("OnChange", "javascript:return uppercase('btntextcomcode');");
            btextalias.Attributes.Add("OnChange", "javascript:return uppercase('btextalias');");
            //btnpackname.Attributes.Add("OnChange", "javascript:return uppercase('btnpackname');");
            btnpackname.Attributes.Add("OnChange", "javascript:return autoornot();");

            btnpackname.Attributes.Add("Onkeypress", "javascript:return chkchar(event);");

            btnoptionbutton.Attributes.Add("onclick", "javascript:return chkradiopkg();");
            txtvalidityfrom.Attributes.Add("OnChange", "javascript:return checkdate(this);  ");
            txtvalidto.Attributes.Add("OnChange", "javascript:return checkdate(this);  ");


 


           // drpadtype.Attributes.Add("OnChange", "javascript:return onchage_adtype();");
           // drpadcategory.Attributes.Add("OnChange", "javascript:return bind_subcategory();");
            //btntextcomcode.Attributes.Add("OnChange","javascript:return uppercase('btntextcomcode');");

        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
    }

    //bind the check boxes
    //public void bindcheckbox()

     public void bindcheckbox()
    {
         DataSet da = new DataSet();
         if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
         {

            NewAdbooking.Classes.CombinationMaster bindcheck = new NewAdbooking.Classes.CombinationMaster();
            
            da = bindcheck.checkboxbind();
         }

         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.CombinationMaster bindcheck = new NewAdbooking.classesoracle.CombinationMaster();

                 da = bindcheck.checkboxbind();
             }
         else
         {
             NewAdbooking.classmysql.CombinationMaster bindcheck = new NewAdbooking.classmysql.CombinationMaster();

             da = bindcheck.checkboxbind();

         }
        

        int i;
        for (i = 0; i < da.Tables[0].Rows.Count; i++)
        {

            ListItem li;
            li = new ListItem();
            li.Value = da.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = da.Tables[0].Rows[i].ItemArray[0].ToString();
            btnoptionbutton.Items.Add(li);
        }
    }

    public void advcat(string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster bind = new NewAdbooking.Classes.CombinationMaster();
            
            ds = bind.advdatacategory(compcode);
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster bind = new NewAdbooking.classesoracle.CombinationMaster();

                ds = bind.advdatacategory(compcode);
            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster bind = new NewAdbooking.classmysql.CombinationMaster();

            ds = bind.advdatacategory(compcode);

        }

        int i;
        ListItem li1;
        li1 = new ListItem();
        drpadcategory.Items.Clear();
        li1.Text = "Select Ad Category";
        li1.Value = "0";
        li1.Selected = true;
        drpadcategory.Items.Add(li1);

      if (ds.Tables.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drpadcategory.Items.Add(li);

            }
        }


    }
//-----------------bind adcat on adtype change-------------------------//
    [Ajax.AjaxMethod]
    public DataSet pkg_adcat_uom_bind(string compcode, string adtype, string center)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bind = new NewAdbooking.Classes.BookingMaster();
            ds = bind.advdatacategoryRate(compcode, adtype, center);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.RateMaster bind = new NewAdbooking.classesoracle.RateMaster();
            ds = bind.advdatacategory(compcode, adtype, center);

        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bind = new NewAdbooking.classmysql.BookingMaster();
            ds = bind.advdatacategory(compcode, adtype);
        }
        return ds;
    }

    public void adtypedata(string compcode)
    {
        DataSet ds = new DataSet();
        if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.CombinationMaster bind = new NewAdbooking.Classes.CombinationMaster();
  
        ds = bind.adtypbind(compcode);

        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                 NewAdbooking.classesoracle .CombinationMaster bind = new NewAdbooking.classesoracle.CombinationMaster();
  
        ds = bind.adtypbind(compcode);
            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster bind = new NewAdbooking.classmysql.CombinationMaster();
          
            ds = bind.adtypbind(compcode);

        }

        int i;
        ListItem li1;
       
        li1 = new ListItem();
        drpadtype.Items.Clear();
        li1.Text = "Select Ad Type";
        li1.Value = "0";
        li1.Selected = true;
        drpadtype.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
              ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpadtype.Items.Add(li);


        }

    }



    public void bindsharedist(string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster bind = new NewAdbooking.Classes.CombinationMaster();
           
            ds = bind.sharebind(compcode);
        }
            else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster bind = new NewAdbooking.classesoracle.CombinationMaster();

                ds = bind.sharebind(compcode);
            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster bind = new NewAdbooking.classmysql.CombinationMaster();

            ds = bind.sharebind(compcode);

        }

        int i;
        ListItem li1;

        li1 = new ListItem();
        drpshare.Items.Clear();
        li1.Text = "Select Share Type";
        li1.Value = "0";
        li1.Selected = true;
        drpshare.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpshare.Items.Add(li);


        }

    }



    //		public void addatagrid(string valuee)
     public void addatagrid(string valuee)
    {
       
        string adcat = drpadcategory.SelectedValue.ToString();

        DataSet da = new DataSet();
         if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
         {
        NewAdbooking.Classes.CombinationMaster datagridbind = new NewAdbooking.Classes.CombinationMaster();
       
        da = datagridbind.bindgrid(Session["compcode"].ToString(), Session["userid"].ToString(), valuee, adcat, drppubcenter.SelectedValue, drpadtype.SelectedValue);

        DataGrid1.DataSource = da;
        DataGrid1.DataBind();
         }

         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.CombinationMaster datagridbind = new NewAdbooking.classesoracle.CombinationMaster();

                 da = datagridbind.bindgrid(Session["compcode"].ToString(), Session["userid"].ToString(), valuee, adcat, drppubcenter.SelectedValue, drpadtype.SelectedValue);

                 DataGrid1.DataSource = da;
                 DataGrid1.DataBind();
             }
             else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
             {


                 if (adcat == "0")
                 {
                     //string procedureName = "bindcombination_bindcombination_p";
                     string[] parameterValueArray = { Session["compcode"].ToString(), adcat, valuee, drppubcenter.SelectedValue, drpadtype.SelectedValue };
                     //NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                     //da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                     NewAdbooking.classmysql.CombinationMaster datagridbind = new NewAdbooking.classmysql.CombinationMaster();
                     da = datagridbind.bindgridpackage(Session["compcode"].ToString(), adcat, valuee, drppubcenter.SelectedValue, drpadtype.SelectedValue);


                     
                 }
                 else
                 {
                     //string procedureName = "getedibyvat_getedibyvat_p";
                     string[] parameterValueArray = { Session["compcode"].ToString(), adcat, valuee, drppubcenter.SelectedValue, drpadtype.SelectedValue };
                     //NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                     //da = obj.DynamicBindProcedure(procedureName, parameterValueArray);

                     NewAdbooking.classmysql.CombinationMaster datagridbind = new NewAdbooking.classmysql.CombinationMaster();
                     da = datagridbind.bindgridpackage(Session["compcode"].ToString(), adcat, valuee, drppubcenter.SelectedValue, drpadtype.SelectedValue);


                 }
                 DataGrid1.DataSource = da;
                 DataGrid1.DataBind();
             }
         //else
         //{
         //    NewAdbooking.classmysql.CombinationMaster datagridbind = new NewAdbooking.classmysql.CombinationMaster();

         //    da = datagridbind.bindgrid(Session["compcode"].ToString(), Session["userid"].ToString(), valuee, adcat);

         //    DataGrid1.DataSource = da;
         //    DataGrid1.DataBind();

         //}




    }

    #region Web Form Designer generated code
     protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

  


    protected void btnoptionbutton_SelectedIndexChanged_1(object sender, System.EventArgs e)
    {
        //drpadtype.SelectedValue = "0";
        drpadcategory.SelectedValue = "0";
        drpsubcategory.SelectedValue = "0";
        btntextcomcode.Text = "";
        noofedi.Text = "";
        btextalias.Text = "";
        btnpackname.Text = "";
        btncomname.Text = "";
        drpshare.Text = "0";
        //saveormodify = "0";
        for (int j = 0; j < btnoptionbutton.Items.Count; j++)
        {
            if (btnoptionbutton.Items[j].Selected == true)
            {
                checkboxname = btnoptionbutton.SelectedValue.ToString();
            }


        }
        addatagrid(checkboxname);
        //ScriptManager.RegisterClientScriptBlock(this, typeof(CombinationMaster), "ss", "document.getElementById('drppubcenter').focus();", true);


    }
    [Ajax.AjaxMethod]
    public DataSet bindSubCat(string compcode, string userid, string category)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster cls_comb = new NewAdbooking.Classes.CombinationMaster();
            ds = cls_comb.advdatasubcatcat(compcode, category);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster cls_comb = new NewAdbooking.classesoracle.CombinationMaster();
                ds = cls_comb.advdatasubcatcat(compcode, category);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster cls_comb = new NewAdbooking.classmysql.CombinationMaster();
            ds = cls_comb.advdatasubcatcat(compcode, category);
            return ds;

        }
    }
    [Ajax.AjaxMethod]

    public DataSet checkcode(string comcode, string compcode, string userid, string combination, string adtype, string adcat, string adscat, string pubcenter, string combindesc, string values1)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster check = new NewAdbooking.Classes.CombinationMaster();
            
            da = check.checkcommcode(comcode, compcode, userid, combination, adtype, adcat, adscat, pubcenter, combindesc, values1);

            return da;
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CombinationMaster check = new NewAdbooking.classesoracle.CombinationMaster();

            da = check.checkcommcode(comcode, compcode, userid, combination, adtype, adcat, adscat, pubcenter, combindesc, values1);

            return da;
        }
        else
        {
            string[] parameterValueArray = new string[] { compcode, userid, comcode, combination, adtype, adcat, adscat, pubcenter, values1, combindesc };
            //string procedureName = "checkcodecommbination_checkcodecommbination_p";
            //NewAdbooking.classmysql.CommonClass sms = new NewAdbooking.classmysql.CommonClass();
            //da = sms.DynamicBindProcedure(procedureName, parameterValueArray);
            NewAdbooking.classmysql.CombinationMaster cls_comb = new NewAdbooking.classmysql.CombinationMaster();
            da = cls_comb.checkcommcode(compcode, userid, comcode, combination, adtype, adcat, adscat, pubcenter, values1, combindesc);
            return da;
        }

    }

    [Ajax.AjaxMethod]

    public DataSet insertcomm(string comcode, string alias, string packagename, string combinationname, string compcode, string userid, string codepub, string cat, string subcat, string adtype, string noedition, string editiontype, string valofchkbox, string noofinserts, string pubcenter, string split, string consumption,string validfrom,string validto,string oldpkgcd)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster insert = new NewAdbooking.Classes.CombinationMaster();

            da = insert.insertcombination(comcode, alias, packagename, combinationname, compcode, userid, codepub, cat, subcat, adtype, noedition, editiontype, valofchkbox, noofinserts, pubcenter, split, consumption, validfrom, validto);

            return da;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster insert = new NewAdbooking.classesoracle.CombinationMaster();

                da = insert.insertcombination(comcode, alias, packagename, combinationname, compcode, userid, codepub, cat, subcat, adtype, noedition, editiontype, valofchkbox, noofinserts, pubcenter, split, consumption,validfrom,validto);

                return da;
            }
        else
        {

            string[] parameterValueArray = new string[] { compcode, userid, comcode, alias, packagename, combinationname, codepub, cat, subcat, adtype, noedition, editiontype, valofchkbox, noofinserts, pubcenter, split, consumption, validfrom, validto, oldpkgcd };
            //string procedureName = "insertintocombination_insertintocombination_p";
            //NewAdbooking.classmysql.CommonClass sms = new NewAdbooking.classmysql.CommonClass();
            //da = sms.DynamicBindProcedure(procedureName, parameterValueArray);

            NewAdbooking.classmysql.CombinationMaster cls_comb = new NewAdbooking.classmysql.CombinationMaster();
            da = cls_comb.insertcombination(compcode, userid, comcode, alias, packagename, combinationname, codepub, cat, subcat, adtype, noedition, editiontype, valofchkbox, noofinserts, pubcenter, split, consumption, validfrom, validto, oldpkgcd);
           
             
            return da;

        }

    }


    [Ajax.AjaxMethod]

    public DataSet updatecomm(string comcode, string alias, string packagename, string combinationname, string compcode, string userid, string codepub, string cat, string subcat, string adtype, string noedition, string valofchkbox, string noofinserts, string split, string consumption, string validfrom,string validto,string CENTER,string oldpkg)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster insert = new NewAdbooking.Classes.CombinationMaster();

            da = insert.updatedetail(comcode, alias, packagename, combinationname, compcode, userid, codepub, cat, subcat, adtype, noedition, valofchkbox, noofinserts, split, consumption, validfrom, validto,oldpkg);

            return da;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster insert = new NewAdbooking.classesoracle.CombinationMaster();

                da = insert.updatedetail(comcode, alias, packagename, combinationname, compcode, userid, codepub, cat, subcat, adtype, noedition, valofchkbox, noofinserts, split, consumption, validfrom, validto, CENTER, oldpkg);

                return da;
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "updatecombination_updatecombination_p";
                string[] parameterValueArray = { comcode, userid, comcode, alias, packagename, combinationname, codepub, cat, subcat, adtype, noedition, valofchkbox, noofinserts, split, consumption, validfrom, validto, CENTER, oldpkg };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                
            }
        //else
        //{
        //    NewAdbooking.classmysql.CombinationMaster insert = new NewAdbooking.classmysql.CombinationMaster();

        //    da = insert.updatedetail(comcode, alias, packagename, combinationname, compcode, userid, codepub, cat, subcat, adtype, noedition, valofchkbox, noofinserts);

        //    return da;

        //}
        return da;

    }


    [Ajax.AjaxMethod]

    public DataSet executecomm(string comcode, string alias, string packagename, string compcode, string userid, string editiontype, string adtype, string pubcenter, string split,string oldpkgcode)
    {
        DataSet da = new DataSet();
        if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
        {

        NewAdbooking.Classes.CombinationMaster execute = new NewAdbooking.Classes.CombinationMaster();

        da = execute.executecommmdetail(comcode, alias, packagename, compcode, userid, editiontype, adtype, pubcenter, split, oldpkgcode);
        return da;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster execute = new NewAdbooking.classesoracle.CombinationMaster();

                da = execute.executecommmdetail(comcode, alias, packagename, compcode, userid, editiontype, adtype, pubcenter, split, oldpkgcode);
                return da;
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "executecommdetail_executecommdetail_p";
                string[] parameterValueArray = { compcode, userid, comcode, alias, packagename, editiontype, adtype, pubcenter, split, oldpkgcode };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                return da;
            }

        return da;
    }

    [Ajax.AjaxMethod]

     public DataSet firstcomm()
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster firstsearch = new NewAdbooking.Classes.CombinationMaster();
            
            da = firstsearch.firstcommdetail();

            return da;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster firstsearch = new NewAdbooking.classesoracle.CombinationMaster();

                da = firstsearch.firstcommdetail();

                return da;
            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster firstsearch = new NewAdbooking.classmysql.CombinationMaster();

            da = firstsearch.firstcommdetail();

            return da;
        }

    }

    [Ajax.AjaxMethod]

   
     public DataSet deletecomm(string comcode, string compcode, string userid)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster check = new NewAdbooking.Classes.CombinationMaster();
            
            da = check.deletecommdetail(comcode, compcode, userid);

            return da;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {


                NewAdbooking.classesoracle.CombinationMaster check = new NewAdbooking.classesoracle.CombinationMaster();

                da = check.deletecommdetail(comcode, compcode, userid);

                return da;
            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster check = new NewAdbooking.classmysql.CombinationMaster();

            da = check.deletecommdetail(comcode, compcode, userid);

            return da;
        }

    }
   
     public void navigation()
    {
       
        DataGrid1.Enabled = false;
        //btnsubmit.Enabled = false;
        drpadtype.Enabled = false;
        drppubcenter.Enabled = false;
        drpadcategory.Enabled = false;
        drpsubcategory.Enabled = false;
        btntextcomcode.Enabled = false;
        noofedi.Enabled = false;
        btextalias.Enabled = false;
        btnpackname.Enabled = false;
        btncomname.Enabled = false;
        drpshare.Enabled = false;

    }
    


   

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }






    protected void NewDg_ItemDataBound1(object sender, DataGridItemEventArgs e)
    {
        
        if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
        {


            //string imgnametrip =j+ "imgtrichild" + z;
            //string path = "Images/TripleStateCheckBox/UnChecked.gif";
            //e.Item.Cells[0].Text = "<img src='Images/TripleStateCheckBox/UnChecked.gif' id='" + imgnametrip + "' onClick=\"childchangeimage('" + imgnametrip + "','" + path + "')\" />";

            //e.Item.Cells[9].Visible = false;
            e.Item.Cells[0].Width = 150;
            string str =j+ "1" + z;
            if (e.Item.Cells[1].Text == "Y")
            {
                e.Item.Cells[1].Text = "<input type='checkbox' enabled width='5px' id=" + str + "  onclick=\"javascript:return unchk('" + str + "','1','" + j + "')\"    value='" + e.Item.Cells[0].Text + "'  />";
            }
            else
            {
                e.Item.Cells[1].Text = "<input type='checkbox' disabled width='5px' id=" + str + "   value='" + e.Item.Cells[0].Text + "'  />";
            }

            string str1 = j+ "1a" + z;
            if (e.Item.Cells[2].Text == "Y")
            {
                e.Item.Cells[2].Text = "<input type='checkbox' enabled width='5px' id=" + str1 + "  onclick=\"javascript:return unchk('" + str1 + "','1a','" + j + "')\"   value='" + e.Item.Cells[0].Text + "'  />";
            }
            else
            {
                e.Item.Cells[2].Text = "<input type='checkbox' disabled width='5px' id=" + str1 + "  value='" + e.Item.Cells[0].Text + "'  />";
            }

            string str2 = j+"1b" + z;
            if (e.Item.Cells[3].Text == "Y")
            {
                e.Item.Cells[3].Text = "<input type='checkbox' enabled width='5px' id=" + str2 + "  onclick=\"javascript:return unchk('" + str2 + "','1b','" + j + "')\"   value='" + e.Item.Cells[0].Text + "'  />";
            }
            else
            {
                e.Item.Cells[3].Text = "<input type='checkbox' disabled width='5px' id=" + str2 + "  value='" + e.Item.Cells[0].Text + "'  />";
            }

            string str3 =j+ "1c" + z;
            if (e.Item.Cells[4].Text == "Y")
            {
                e.Item.Cells[4].Text = "<input type='checkbox' enabled width='5px' id=" + str3 + " onclick=\"javascript:return unchk('"+str3+"','1c','"+j+"')\"   value='" + e.Item.Cells[0].Text + "'  />";
            }
            else
            {
                e.Item.Cells[4].Text = "<input type='checkbox' disabled width='5px' id=" + str3 + "   value='" + e.Item.Cells[0].Text + "'  />";
            }

            string str4 = j+"1d" + z;
            if (e.Item.Cells[5].Text == "Y")
            {
                e.Item.Cells[5].Text = "<input type='checkbox' enabled width='5px' id=" + str4 + " onclick=\"javascript:return unchk('" + str4 + "','1d','" + j + "')\"   value='" + e.Item.Cells[0].Text + "'  />";
            }
            else
            {
                e.Item.Cells[5].Text = "<input type='checkbox' disabled width='5px' id=" + str4 + "  value='" + e.Item.Cells[0].Text + "'  />";
            }

            string str5 = j+"1e" + z;
            if (e.Item.Cells[6].Text == "Y")
            {
                e.Item.Cells[6].Text = "<input type='checkbox' enabled width='5px' id=" + str5 + "  onclick=\"javascript:return unchk('" + str5 + "','1e','" + j + "')\"   value='" + e.Item.Cells[0].Text + "'  />";
            }
            else
            {
                e.Item.Cells[6].Text = "<input type='checkbox' disabled width='5px' id=" + str5 + "  value='" + e.Item.Cells[0].Text + "'  />";
            }

            string str6 =j+ "1f" + z;
            if (e.Item.Cells[7].Text == "Y")
            {
                e.Item.Cells[7].Text = "<input type='checkbox' enabled width='5px' id=" + str6 + "  onclick=\"javascript:return unchk('" + str6 + "','1f','" + j + "')\"   value='" + e.Item.Cells[0].Text + "'  />";
            }
            else
            {
                e.Item.Cells[7].Text = "<input type='checkbox' disabled width='5px' id=" + str6 + "  value='" + e.Item.Cells[0].Text + "'  />";
            }


            string str7 = j+"1g" + z;

            if (e.Item.Cells[1].Text.IndexOf("disabled") >= 0 && e.Item.Cells[2].Text.IndexOf("disabled") >= 0 && e.Item.Cells[3].Text.IndexOf("disabled") >= 0 && e.Item.Cells[4].Text.IndexOf("disabled") >= 0 && e.Item.Cells[5].Text.IndexOf("disabled") >= 0 && e.Item.Cells[6].Text.IndexOf("disabled") >= 0 && e.Item.Cells[7].Text.IndexOf("disabled") >= 0)
            {
                e.Item.Cells[8].Text = "<input type='checkbox' disabled width='5px' id=" + str7 + "   />";
            }
            else
            {
                e.Item.Cells[8].Text = "<input type='checkbox' enabled width='5px' id=" + str7 + "   value='" + e.Item.Cells[0].Text + "' onclick='javascript:return checkuncheckfocusday(\"" + str7 + "\",\"" + j + "\",\"" + z + "\");' />";
            }


            //string str8 =j+"1h" + z;
            //e.Item.Cells[9].Text = "<input type='checkbox' enabled width='5px' id=" + str8 + "    value=" + e.Item.Cells[0].Text + "  />";


            string str9 =j+ "1k" + z;
            if (e.Item.Cells[1].Text.IndexOf("disabled") >= 0 && e.Item.Cells[2].Text.IndexOf("disabled") >= 0 && e.Item.Cells[3].Text.IndexOf("disabled") >= 0 && e.Item.Cells[4].Text.IndexOf("disabled") >= 0 && e.Item.Cells[5].Text.IndexOf("disabled") >= 0 && e.Item.Cells[6].Text.IndexOf("disabled") >= 0 && e.Item.Cells[7].Text.IndexOf("disabled") >= 0)
            {
                e.Item.Cells[9].Text = "<input type='checkbox' disabled width='5px' id=" + str9 + "   />";
            }
            else
            {
                e.Item.Cells[9].Text = "<input type='checkbox' enabled width='5px' id=" + str9 + "  value='" + e.Item.Cells[0].Text + "' onclick='javascript:return checkuncheck(\"" + str9 + "\",\"" + j + "\",\"" + z + "\");'  />";
            }

            z++;
        }
    }


    public void SetProps(System.Web.UI.WebControls.DataGrid DG)
    {
       // DG.Columns[4].ItemStyle.HorizontalAlign = HorizontalAlign.Center;
        DG.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
        DG.ItemStyle.HorizontalAlign = HorizontalAlign.Center;
        /****************************************************************************/
        DG.Font.Size = 8;
        DG.Font.Bold = false;
        DG.Font.Name = "tahoma";

        /*******************************Professional 2**********************************/
        //Border Props 
        DG.GridLines = GridLines.Both;
        DG.CellPadding = 3;
        DG.CellSpacing = 0;
        DG.BorderColor = System.Drawing.Color.FromName("#CCCCCC");
        DG.BorderWidth = System.Web.UI.WebControls.Unit.Pixel(1);


        //Header Props
        DG.HeaderStyle.BackColor = System.Drawing.Color.FromName("#7daae3");
        DG.HeaderStyle.ForeColor = System.Drawing.Color.White;
        DG.HeaderStyle.Font.Bold = true;
        DG.HeaderStyle.Font.Size = 8;
      
        DG.HeaderStyle.Font.Name = "tahoma";

        DG.ItemStyle.BackColor = System.Drawing.Color.FromName("#ffffff");

    }
    protected void DataGrid1_ItemDataBound1(object sender, DataGridItemEventArgs e)
    {
       // j = 0;
        e.Item.Cells[2].Width = 72;
        if (e.Item.ItemType == ListItemType.Header)
            j = 0;
        if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
        {
            


                string data = "uniquename" + e.Item.ItemIndex.ToString();

                //string radioval = "";
                string edition = e.Item.Cells[2].Text;
                string adcat = drpadcategory.SelectedValue.ToString();

               DataSet ds = new DataSet();
               if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
               {
                   NewAdbooking.Classes.CombinationMaster insert = new NewAdbooking.Classes.CombinationMaster();




                   if (adcat == "0")
                   {
                       ds = insert.getedition(edition, checkboxname);
                   }
                   else
                   {
                       ds = insert.geteditionbycat(edition, adcat, compcode, btnoptionbutton.SelectedValue);
                      
                   }
               }

               else
                   if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                   {
                       NewAdbooking.classesoracle.CombinationMaster insert = new NewAdbooking.classesoracle.CombinationMaster();




                       if (adcat == "0")
                       {
                           ds = insert.getedition(edition, checkboxname);
                       }
                       else
                       {
                           string procedureName = "editionlikecatmaster.editionlikecatmaster_p";
                           string[] parameterValueArray = { edition, adcat, compcode, btnoptionbutton.SelectedValue };
                           NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                           ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                          // ds = insert.geteditionbycat(edition, adcat, compcode, btnoptionbutton.SelectedValue);

                       }
                   }
               else
               {

                   NewAdbooking.classmysql.CombinationMaster insert = new NewAdbooking.classmysql.CombinationMaster();




                   if (adcat == "0")
                   {
                       ds = insert.getedition(edition, checkboxname);
                   }
                   else
                   {
                       ds = insert.geteditionbycat(edition, adcat, compcode, btnoptionbutton.SelectedValue);

                   }
               }
           System.IO.StringWriter sw = new System.IO.StringWriter();
           if (ds.Tables.Count > 0)
           {
               DataGrid NewDg = new DataGrid();
            //   NewDg.ItemDataBound += new System.Web.UI.WebControls.DataGridItemEventHandler(NewDg_ItemDataBound1);
               NewDg.AutoGenerateColumns = true;
               NewDg.Width = Unit.Percentage(100.00);
               //NewDg.Height = Unit.Percentage(100.00);
               NewDg.DataSource = ds;
               NewDg.DataBind();
               SetProps(NewDg);
             

               System.Web.UI.HtmlTextWriter htw = new System.Web.UI.HtmlTextWriter(sw);
               NewDg.RenderControl(htw);
           }

                string DivStart = "<DIV id='uniquename" + e.Item.ItemIndex.ToString() + "' style='DISPLAY: none; HEIGHT: 50px;'>";
                string DivBody = sw.ToString();
                //edittext(DivBody);

                string DivEnd = "</DIV>";
                string FullDIV = DivStart + DivBody + DivEnd;

                int LastCellPosition = e.Item.Cells.Count - 1;
                int NewCellPosition = e.Item.Cells.Count - 2;

                e.Item.Cells[1].ID = "CellInfo" + e.Item.ItemIndex.ToString();

                if (ViewState["Mode"] != null && ViewState["Mode"].ToString() == "ShowDetails")
                {
                    if (this.txtExpandedFields.Value.IndexOf(e.Item.Cells[1].ClientID) != -1)
                    {
                        //make it expand.
                        FullDIV = FullDIV.Replace("DISPLAY: none", "DISPLAY: block");
                        //e.Item.Cells[0].Text = "<A>-</A>";
                    }
                }

                //match color
                if (e.Item.ItemType == ListItemType.Item)
                {
                    e.Item.Cells[LastCellPosition].Text = e.Item.Cells[LastCellPosition].Text + "</td><tr><td bgcolor='f5f5f5'></td><td colspan='" + NewCellPosition + "'>" + FullDIV;
                }
                else
                {
                    e.Item.Cells[LastCellPosition].Text = e.Item.Cells[LastCellPosition].Text + "</td><tr><td bgcolor='d3d3d3'></td><td colspan='" + NewCellPosition + "'>" + FullDIV;
                }
                //e.Item.Cells[0].Attributes["onclick"] = "HideShowPanel('uniquename" + e.Item.ItemIndex.ToString() + "'); ChangeHLText('" + e.Item.Cells[0].ClientID + "'); SetExpanded('" + e.Item.Cells[0].ClientID + "','" + txtExpandedFields.ClientID + "');";
                //e.Item.Cells[0].Attributes["onmouseover"] = "this.style.cursor='hand'";
                //e.Item.Cells[0].Attributes["onmouseout"] = "this.style.cursor='hand'";


                string imgname = "img" + j;
                e.Item.Cells[1].Text = "<img src='Images/plus.gif' id='" + imgname + "'  onClick=\"openGrid('" + data + "','" + imgname + "')\"/>";


                string str = "DataGrid1__ctl_CheckBox1" + j;
                if (e.Item.Cells[15].Text == "Y")
                {
                    e.Item.Cells[3].Text = "<input type='checkbox' enabled width='5px' id=" + str + " onClick=\"javascript:return columncheck('1','" + j + "','" + str + "');\"  value='" + e.Item.Cells[2].Text + "'  />";
                }
                else
                {
                    e.Item.Cells[3].Text = "<input type='checkbox' disabled width='5px' id=" + str + "  value='" + e.Item.Cells[2].Text + "'  />";
                }



                string str1 = "DataGrid1__ctl_CheckBox1a" + j;


                if (e.Item.Cells[16].Text == "Y")
                {
                    e.Item.Cells[4].Text = "<input type='checkbox' enabled width='5px' id=" + str1 + " onClick=\"javascript:return columncheck('1a','" + j + "','" + str1 + "');\"  value='" + e.Item.Cells[2].Text + "'  />";
                }
                else
                {
                    e.Item.Cells[4].Text = "<input type='checkbox' disabled width='5px' id=" + str1 + "  value='" + e.Item.Cells[2].Text + "'  />";
                }




                string str2 = "DataGrid1__ctl_CheckBox1b" + j;
                if (e.Item.Cells[17].Text == "Y")
                {
                    e.Item.Cells[5].Text = "<input type='checkbox'  enabled width='5px' id=" + str2 + "  onClick=\"javascript:return columncheck('1b','" + j + "','" + str2 + "');\"  value='" + e.Item.Cells[2].Text + "'  />";

                }
                else
                {
                    e.Item.Cells[5].Text = "<input type='checkbox' disabled  width='5px' id=" + str2 + "  value='" + e.Item.Cells[2].Text + "'  />";
                }


                string str3 = "DataGrid1__ctl_CheckBox1c" + j;

                if (e.Item.Cells[18].Text == "Y")
                {
                    e.Item.Cells[6].Text = "<input type='checkbox' enabled width='5px' id=" + str3 + " onClick=\"javascript:return columncheck('1c','" + j + "','" + str3 + "');\" value='" + e.Item.Cells[2].Text + "'  />";
                }
                else
                {
                    e.Item.Cells[6].Text = "<input type='checkbox' disabled  width='5px' id=" + str3 + "  value='" + e.Item.Cells[2].Text + "'  />";
                }


                string str4 = "DataGrid1__ctl_CheckBox1d" + j;
                if (e.Item.Cells[19].Text == "Y")
                {
                    e.Item.Cells[7].Text = "<input type='checkbox' enabled width='5px' id=" + str4 + "  onClick=\"javascript:return columncheck('1d','" + j + "','" + str4 + "');\"  value='" + e.Item.Cells[2].Text + "'  />";

                }
                else
                {
                    e.Item.Cells[7].Text = "<input type='checkbox' disabled width='5px' id=" + str4 + "   value='" + e.Item.Cells[2].Text + "'  />";
                }
                string str5 = "DataGrid1__ctl_CheckBox1e" + j;
                if (e.Item.Cells[20].Text == "Y")
                {
                    e.Item.Cells[8].Text = "<input type='checkbox' enabled width='5px' id=" + str5 + "  onClick=\"javascript:return columncheck('1e','" + j + "','" + str5 + "');\"  value='" + e.Item.Cells[2].Text + "'  />";

                }
                else
                {
                    e.Item.Cells[8].Text = "<input type='checkbox' disabled width='5px' id=" + str5 + "  value='" + e.Item.Cells[2].Text + "'  />";
                }



                string str6 = "DataGrid1__ctl_CheckBox1f" + j;
                if (e.Item.Cells[21].Text == "Y")
                {
                    e.Item.Cells[9].Text = "<input type='checkbox' enabled width='5px' id=" + str6 + "   onClick=\"javascript:return columncheck('1f','" + j + "','" + str6 + "');\"  value='" + e.Item.Cells[2].Text + "'  />";

                }
                else
                {
                    e.Item.Cells[9].Text = "<input type='checkbox' disabled width='5px' id=" + str6 + "  value='" + e.Item.Cells[2].Text + "'  />";
                }



                string str7 = "DataGrid1__ctl_CheckBox1g" + j;
                if (e.Item.Cells[15].Text != "Y" && e.Item.Cells[16].Text != "Y" && e.Item.Cells[17].Text != "Y" && e.Item.Cells[18].Text != "Y" && e.Item.Cells[19].Text != "Y" && e.Item.Cells[20].Text != "Y" && e.Item.Cells[21].Text != "Y")
                {
                    e.Item.Cells[10].Text = "<input type='checkbox' disabled width='5px' id=" + str7 + "    />";
                }
                else
                {
                    e.Item.Cells[10].Text = "<input type='checkbox' enabled  width='5px' id=" + str7 + "   onClick=\"javascript:return focusdaychk('1g','" + j + "','" + str7 + "');\"  value='" + e.Item.Cells[2].Text + "'  />";
                }


                string str8 = "DataGrid1__ctl_CheckBox1h" + j;
                
                   
                    e.Item.Cells[11].Text = "<input type='checkbox' enabled  width='5px' id=" + str8 + "  onClick=\"javascript:return anydaychk('1h','" + j + "','" + str8 + "');\" value='" + e.Item.Cells[2].Text + "'  />";
               





                string str9 = "DataGrid1__ctl_CheckBox1k" + j;
                if (e.Item.Cells[15].Text != "Y" && e.Item.Cells[16].Text != "Y" && e.Item.Cells[17].Text != "Y" && e.Item.Cells[18].Text != "Y" && e.Item.Cells[19].Text != "Y" && e.Item.Cells[20].Text != "Y" && e.Item.Cells[21].Text != "Y")
                {
                    e.Item.Cells[12].Text = "<input type='checkbox' disabled  width='5px' id=" + str9 + "  />";
                }
                else
                {
                    e.Item.Cells[12].Text = "<input type='checkbox' enabled  width='5px' id=" + str9 + "  value='" + e.Item.Cells[2].Text + "' onclick='javascript:return selectall(\"" + str9 + "\",\"" + j + "\");' />";
                }
                //				string pub=e.Item.Cells[11].Text;
                //				string city=e.Item.Cells[12].Text;



                //string data = "uniquename" + e.Item.ItemIndex.ToString();
                string imgnametrip = "imgtri" + j;
                string path = "Images/TripleStateCheckBox/UnChecked.gif";
                if (e.Item.Cells[15].Text != "Y" && e.Item.Cells[16].Text != "Y" && e.Item.Cells[17].Text != "Y" && e.Item.Cells[18].Text != "Y" && e.Item.Cells[19].Text != "Y" && e.Item.Cells[20].Text != "Y" && e.Item.Cells[21].Text != "Y")
                {
                    e.Item.Cells[0].Text = "<img src='Images/TripleStateCheckBox/UnChecked.gif' id='" + imgnametrip + "'/>";
                }
                else
                {
                    e.Item.Cells[0].Text = "<img src='Images/TripleStateCheckBox/UnChecked.gif' id='" + imgnametrip + "' value='" + e.Item.Cells[2].Text + "' title='" + e.Item.Cells[2].Text + "' onClick=\"changeimage('" + imgnametrip + "','" + path + "','" + j + "')\" />";
                }

                if (e.Item.Cells[15].Text != "Y" && e.Item.Cells[16].Text != "Y" && e.Item.Cells[17].Text != "Y" && e.Item.Cells[18].Text != "Y" && e.Item.Cells[19].Text != "Y" && e.Item.Cells[20].Text != "Y" && e.Item.Cells[21].Text != "Y")
                {
                }
               
                if (e.Item.Cells[15].Text != "Y" && e.Item.Cells[16].Text != "Y" && e.Item.Cells[17].Text != "Y" && e.Item.Cells[18].Text != "Y" && e.Item.Cells[19].Text != "Y" && e.Item.Cells[20].Text != "Y" && e.Item.Cells[21].Text != "Y")
                {
                }
              


                z = 0;
                j++;
            }
        
    }
    protected void drpadcategory_SelectedIndexChanged(object sender, EventArgs e)
    {
        j = 0;
        string adcat = drpadcategory.SelectedItem.Value;



        DataSet da = new DataSet();
        if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.CombinationMaster cls_comb = new NewAdbooking.Classes.CombinationMaster();
        
        da = cls_comb.advdatasubcatcat(compcode, adcat);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster cls_comb = new NewAdbooking.classesoracle.CombinationMaster();

                da = cls_comb.advdatasubcatcat(compcode, adcat);

            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster cls_comb = new NewAdbooking.classmysql.CombinationMaster();

            da = cls_comb.advdatasubcatcat(compcode, adcat);

        }


        int i;
        ListItem li1;

        li1 = new ListItem();
        drpsubcategory.Items.Clear();
        li1.Text = "Select Sub Category";
        li1.Value = "0";
        li1.Selected = true;
        drpsubcategory.Items.Add(li1);

        for (i = 0; i < da.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = da.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = da.Tables[0].Rows[i].ItemArray[1].ToString();
            drpsubcategory.Items.Add(li);


        }

        DataSet ds = new DataSet();
        if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
        {
         NewAdbooking.Classes.CombinationMaster insert = new NewAdbooking.Classes.CombinationMaster();
     
        ds = insert.getedivalbycat(adcat, compcode, btnoptionbutton.SelectedValue,drppubcenter.SelectedValue,drpadtype.SelectedValue);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster insert = new NewAdbooking.classesoracle.CombinationMaster();

                ds = insert.getedivalbycat(adcat, compcode, btnoptionbutton.SelectedValue, drppubcenter.SelectedValue, drpadtype.SelectedValue);

            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "getedibyvat_getedibyvat_p";
                string[] parameterValueArray = { compcode, adcat, btnoptionbutton.SelectedValue, drppubcenter.SelectedValue, drpadtype.SelectedValue };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
        //else
        //{
        //    NewAdbooking.classmysql.CombinationMaster insert = new NewAdbooking.classmysql.CombinationMaster();

        //    ds = insert.getedivalbycat(adcat, compcode, btnoptionbutton.SelectedValue);

        //}
       // addatagrid(checkboxname);

        DataGrid1.DataSource = ds;
        DataGrid1.DataBind();
        ScriptManager1.SetFocus(drpadcategory);
        ScriptManager.RegisterClientScriptBlock(this, typeof(CombinationMaster), "aa", "focusadcat();", true);
    }

    protected void btnNew_Click(object sender, EventArgs e)
    {

        /////////////for searching
        j = 0;
        z = 0;
        gcombinationcode = hiddengcomcode.Value = "";
        gadtype = hiddengadtype.Value = "0";
        gpaccode = hiddengpackcode.Value = "";
        gcombincode = hiddengcombncode.Value = "";
        galias = hiddengalias.Value = "";
        geditiontype = hiddengeditiontype.Value = "1";
        ////////////////////////
        txtnoofinserts.Text = "";
        txtnoofinserts.Enabled = true;

        txtvalidityfrom.Text = "";
        txtvalidityfrom.Enabled = false;

        txtvalidto.Text = "";
        txtvalidto.Enabled = false;

        btnNew.Enabled = false;

        btnSave.Enabled = true;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = false;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        DataGrid1.Enabled = true;

        btnoptionbutton.Enabled = true;
        btnsubmit.Enabled = true;
        btncancelgrid.Enabled = true;

        hidenvarupdate.Value = "0";
        drpadtype.Enabled = true;
        drppubcenter.Enabled = true;
        drpadcategory.Enabled = true;
        drpsubcategory.Enabled = true;
        drpsplit.Enabled = true;
        txtconsum.Enabled = true;
        txtoldcode.Enabled = true;
        if (hiddenauto.Value == "1")
        {
            btntextcomcode.Enabled = false;
        }
        else
        {
            btntextcomcode.Enabled = true;
        }
           noofedi.Enabled = true;
        btextalias.Enabled = true;
        btnpackname.Enabled = true;
        //btncomname.Enabled = true;
        drpshare.Enabled = true;


        txtvalidityfrom.Enabled = true;
        txtvalidto.Enabled = true;

        drpadtype.SelectedValue = "0";
        //if (drppubcenter.Items.FindByValue(Session["center"].ToString()) != null)
        //{
        //    drppubcenter.SelectedValue = Session["center"].ToString();
        //}
        //else
        //{
            drppubcenter.SelectedValue = "0";
        //}
            drpsplit.SelectedValue = "0";
        drpadcategory.SelectedValue = "0";
        drpsubcategory.SelectedValue = "0";
        btntextcomcode.Text = "";
        noofedi.Text = "";
        btextalias.Text = "";
        btnpackname.Text = "";
        btncomname.Text = "";
        drpshare.Text = "0";
        opendivsign = "1";
        hiddenplussign.Value = "1";
        saveormodify = "0";
        txtconsum.Text = "";
        txtoldcode.Text = "";
        fpnl = 0;
        addatagrid(btnoptionbutton.SelectedValue);
        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnNew.Enabled = false;
        btnQuery.Enabled = false;
        btnimage();
        //ScriptManager.RegisterClientScriptBlock(this, typeof(CombinationMaster), "aa", "getthefocus();", true);
        ScriptManager1.SetFocus(drpadtype);
    }

    protected void btnQuery_Click(object sender, EventArgs e)
    {
        drpadtype.Enabled = true;
        drppubcenter.Enabled = true;
        drpadcategory.Enabled = false;
        drpsubcategory.Enabled = false;
        btntextcomcode.Enabled = true;
        //noofedi.Enabled = true;
        btextalias.Enabled = true;
        btnpackname.Enabled = true;
       // btncomname.Enabled = true;

        btnsubmit.Enabled = false;
        btncancelgrid.Enabled = false;
        btnoptionbutton.Enabled = true;
        drpsplit.Enabled = true;
        txtoldcode.Enabled = true;

        drpadtype.SelectedValue = "0";
        drpadcategory.SelectedValue = "0";
        drpsubcategory.SelectedValue = "0";
        btntextcomcode.Text = "";
        noofedi.Text = "";
        btextalias.Text = "";
        btnpackname.Text = "";
        btncomname.Text = "";
        drpshare.Text = "0";    
        chkquery = "1";
        txtoldcode.Text = "";

        txtvalidityfrom.Text = "";


        txtvalidto.Text = "";
        drpsplit.SelectedValue = "0";
        /////////////for searching

        gcombinationcode = hiddengcomcode.Value="";
        gadtype = hiddengadtype.Value="0";
        gpaccode = hiddengpackcode.Value="";
        gcombincode = hiddengcombncode.Value="";
        galias = hiddengalias.Value="";
        geditiontype = hiddengeditiontype.Value = "1";
////////////////////////

        drppubcenter.SelectedValue = "0";


        j = 0;
        hidenvarupdate.Value = "2";
        chkstatus(FlagStatus);

        btnQuery.Enabled = false;
        btnExecute.Enabled = true;
        btnSave.Enabled = false;
        btnimage();
        ScriptManager1.SetFocus(btnExecute);

    }
    protected void btnCancel_Click(object sender, EventArgs e)
    {
        /////////////for searching
        j = 0;
        z = 0;
        gcombinationcode = hiddengcomcode.Value = "";
        gadtype = hiddengadtype.Value = "0";
        gpaccode = hiddengpackcode.Value = "";
        gcombincode = hiddengcombncode.Value = "";
        galias = hiddengalias.Value = "";
        geditiontype = hiddengeditiontype.Value = "1";
        txtconsum.Text = "";

        txtnoofinserts.Text = "";

        txtvalidityfrom.Text = "";
       

        txtvalidto.Text = "";
   
        ////////////////////////
        hiddencodedesc.Value = "";
        hiddenplussign.Value = "0";
        hidenvarupdate.Value = "0";
        opendivsign = "0";
        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        DataGrid1.Enabled = false;
        drpshare.Enabled = false;
        txtconsum.Enabled = false;

        drpadtype.Enabled = false;
        drppubcenter.Enabled = false;
        drpadcategory.Enabled = false;
        drpsubcategory.Enabled = false;
        btntextcomcode.Enabled = false;
        noofedi.Enabled = false;
        btextalias.Enabled = false;
        btnpackname.Enabled = false;
        btncomname.Enabled = false;
        drpsplit.Enabled = false;
        txtoldcode.Enabled = true;

        drpsplit.SelectedValue = "0";
        drpadtype.SelectedValue = "0";
        drpadcategory.SelectedValue = "0";
        drpsubcategory.SelectedValue = "0";
        txtoldcode.Text = "";
        drpsubcategory.Items.Clear();
        ListItem li = new ListItem();
        li.Text = "Select Ad Sub Cat.";
        li.Value = "0";
        drpsubcategory.Items.Add(li);
        drpsubcategory.SelectedValue = "0";
        btntextcomcode.Text = "";
        noofedi.Text = "";
        btextalias.Text = "";
        btnpackname.Text = "";
        btncomname.Text = "";
        drpshare.Text = "0";
        saveormodify = "0";

        drppubcenter.SelectedValue = "0";

        btnsubmit.Enabled = false;
        btncancelgrid.Enabled = false;
        btnoptionbutton.Enabled = false;



        fpnl = 0;
        getbuttoncheck(formname);
        btnimage();
        ScriptManager1.SetFocus(btnNew);
    }


    //protected void btnModify_Click(object sender, EventArgs e)
    //{


    //    drpadtype.Enabled = false;
    //    drpadcategory.Enabled = false;
    //    drpsubcategory.Enabled = false;
    //    btntextcomcode.Enabled = false;
    //    noofedi.Enabled = true;
    //    btextalias.Enabled = true;
    //    btnpackname.Enabled = true;
    //    btncomname.Enabled = false;
    //    DataGrid1.Enabled = true;
    //    hidenvarupdate.Value = "1";
    //    check = "1";
    //    saveormodify = "1";
    //    //addatagrid(btnoptionbutton.SelectedValue);

    //    chkstatus(FlagStatus);
    //    btnSave.Enabled = true;
    //    btnQuery.Enabled = false;
    //    return;
    //}
    protected void btnModify_Click(object sender, EventArgs e)
    {

        ////drpadcategory_SelectedIndexChanged(sender, e);
        //if (!this.IsClientScriptBlockRegistered("clientScript"))
        //{
        //    ScriptManager.RegisterStartupScript(this, typeof(CombinationMaster), "ss", "modifyclick()", true);
        //}

    }
    protected void btnExecute_Click(object sender, EventArgs e)
    {
        drppubcenter.Enabled = false; 
        alpha = 0; 
        string alias = btextalias.Text;
        string comcode= btntextcomcode.Text;
        string editiontype = btnoptionbutton.SelectedValue;
        string packagename = btnpackname.Text;
        string adtype = drpadtype.SelectedValue;
        string pubcenter = drppubcenter.SelectedValue;
        string split = drpsplit.SelectedValue;
        string oldcode = txtoldcode.Text;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CombinationMaster execute = new NewAdbooking.Classes.CombinationMaster();
            btnsubmit.Enabled = false;

            globda = execute.executecommmdetail(comcode, alias, packagename, compcode, userid, editiontype, adtype, pubcenter, split, oldcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CombinationMaster execute = new NewAdbooking.classesoracle.CombinationMaster();
            btnsubmit.Enabled = false;

            globda = execute.executecommmdetail(comcode, alias, packagename, compcode, userid, editiontype, adtype, pubcenter, split, oldcode);

        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "executecommdetail_executecommdetail_p";
            string[] parameterValueArray = { compcode, userid, comcode, alias, packagename, editiontype, adtype, pubcenter, split, oldcode };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            globda = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
           

        }
       
        if (globda.Tables[0].Rows.Count != 0)
        {

            sau = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();
            btnoptionbutton.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[13].ToString();
        }
        else
        {
            sau = null;
        }
        
       /* bindcategory(Session["compcode"].ToString(), globda.Tables[0].Rows[alpha].ItemArray[11].ToString(), "0");
        if ((globda.Tables[0].Rows.Count != 0) && (sau!=null) && (sau!=""))
        {
            drpadcategory.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();
        }
        else if ((sau == null) || (sau == ""))
        {
            drpadcategory.SelectedValue = "0";
        }

        */

        //addatagrid(globda.Tables[0].Rows[alpha].ItemArray[13].ToString());

      //  drpadcategory_SelectedIndexChanged(sender, e);
        //ScriptManager1.SetFocus(btnModify);
        ScriptManager.RegisterStartupScript(this, typeof(CombinationMaster), "ss", "executeclick();", true);
        getbuttoncheck(formname);
        chkstatus(FlagStatus);
        
        btnsubmit.Enabled = false;
        btnoptionbutton.Enabled = false;
        
    }

    protected void btnfirst_Click(object sender, EventArgs e)
    {
        opendivsign = "1";
        hiddenplussign.Value = "1";
        alpha=0;
        //saurabh
        string sau = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();
//        drpadcategory.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();

       /* if ((globda.Tables[0].Rows.Count != 0) && (sau!=null) && (sau!=""))
        {
            drpadcategory.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();
        }
        else if ((sau == null) || (sau == ""))
        {
            drpadcategory.SelectedValue = "0";
        }*/
        btnoptionbutton.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[13].ToString();
        //drpadcategory_SelectedIndexChanged(sender, e);
        ScriptManager.RegisterStartupScript(this, typeof(CombinationMaster), "ss", "firstclick();", true);

         updateStatus();

         btnfirst.Enabled = false;
         btnprevious.Enabled = false;
         btnsubmit.Enabled = false;
         btncancelgrid.Enabled = false;
         btnoptionbutton.Enabled = false;

    }
     

   
    protected void btnprevious_Click(object sender, EventArgs e)
    {
        opendivsign = "1";
        hiddenplussign.Value = "1";
        alpha--;
        if (alpha == -1)
            return;
        string abd = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();

       /* if (abd == "" || abd == null)
        {
            drpadcategory.SelectedValue = "0";
        }
        else
        {
            drpadcategory.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();
        }*/

        btnoptionbutton.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[13].ToString();

      //  drpadcategory_SelectedIndexChanged(sender, e);

        btnsubmit.Enabled = false;
        btncancelgrid.Enabled = false;
        btnoptionbutton.Enabled = false;


        ScriptManager.RegisterStartupScript(this, typeof(CombinationMaster), "ss", "previousclick();", true);

    }
    protected void btnnext_Click(object sender, EventArgs e)
    {
        opendivsign = "1";
        hiddenplussign.Value = "1";
        alpha++;
        if (alpha + 1 == globda.Tables[0].Rows.Count)
            btnlast.Enabled = false;
       

        string abd = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();

       /* if (abd == "" || abd == null)
        {
            drpadcategory.SelectedValue = "0";
        }
        else
        {
            drpadcategory.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();
        }*/

        btnoptionbutton.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[13].ToString();

       // drpadcategory_SelectedIndexChanged(sender, e);

        btnsubmit.Enabled = false;
        btncancelgrid.Enabled = false;
        btnoptionbutton.Enabled = false;


        ScriptManager.RegisterStartupScript(this, typeof(CombinationMaster), "ss", "nextclick();", true);


    }
    protected void btnlast_Click(object sender, EventArgs e)
    {
        opendivsign = "1";
        hiddenplussign.Value = "1";
        alpha = globda.Tables[0].Rows.Count-1;
        string abd = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();

       /* if (abd == "" || abd == null)
        {
            drpadcategory.SelectedValue = "0";
        }
        else
        {
            drpadcategory.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[8].ToString();
        }*/

        btnoptionbutton.SelectedValue = globda.Tables[0].Rows[alpha].ItemArray[13].ToString();

       // drpadcategory_SelectedIndexChanged(sender, e);
        btnsubmit.Enabled = false;
        btncancelgrid.Enabled = false;
        btnoptionbutton.Enabled = false;

        ScriptManager.RegisterStartupScript(this, typeof(CombinationMaster), "ss", "lastclick();", true);
    }


    [Ajax.AjaxMethod]
    public DataSet chkstatcodename(string str, string adtype, string pubcenter)
    {
        DataSet ds = new DataSet();
        if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.CombinationMaster chk = new NewAdbooking.Classes.CombinationMaster();
        
        ds = chk.countstatecode(str,adtype);
        return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster chk = new NewAdbooking.classesoracle.CombinationMaster();

                ds = chk.countstatecode(str, adtype,pubcenter);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster chk = new NewAdbooking.classmysql.CombinationMaster();

            ds = chk.countstatecode(str, adtype, pubcenter);
            return ds;
        }

    }
    protected void btnSave_Click(object sender, EventArgs e)
    {

    }
    protected void btnModify_Click1(object sender, EventArgs e)
    {

    }
    protected void btnDelete_Click(object sender, EventArgs e)
    {

    }

    [Ajax.AjaxMethod]
    public DataSet chkpackagename(string package, string compcode,string adtype)
    {
        DataSet dp = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CombinationMaster chkpac = new NewAdbooking.Classes.CombinationMaster();
            
            dp = chkpac.checkpackage(package, compcode,adtype);
            return dp;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {

                NewAdbooking.classesoracle.CombinationMaster chkpac = new NewAdbooking.classesoracle.CombinationMaster();

                dp = chkpac.checkpackage(package, compcode,adtype);
                return dp;
            }
        else
        {
            NewAdbooking.classmysql.CombinationMaster chkpac = new NewAdbooking.classmysql.CombinationMaster();

            dp = chkpac.checkpackage(package, compcode);
            return dp;
        
        }

    }

    public void getbuttoncheck(string formname)
    {
        DataSet butt = new DataSet();
        if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.classlibraryforbutton getpermission = new NewAdbooking.Classes.classlibraryforbutton();
        
        butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.classlibraryforbutton getpermission = new NewAdbooking.classesoracle.classlibraryforbutton();

                butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);

            }
        else
        {
            NewAdbooking.classmysql.classlibraryforbutton getpermission = new NewAdbooking.classmysql.classlibraryforbutton();

            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
 
        }

        string id = butt.Tables[0].Rows[0].ItemArray[0].ToString();


        if (id != "0")
        {
            //var id = ds.Tables[0].Rows[0].button_id;



            if (id == "0" || id == "8")
            {

                FlagStatus = 0;

                btnNew.Enabled = false;
                btnQuery.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = false;
                btnExit.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;



                //window.location.href = 'EnterPage.aspx';
                //alert("You Are Not Authorised To See This Form");
                //FlagStatus = 0;
                //

            }
            if (id == "1" || id == "9")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnExecute.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 1;

            }
            if (id == "2" || id == "10")
            {

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnModify.Enabled = true;

                btnSave.Enabled = false;
                btnfirst.Enabled = true;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;
                FlagStatus = 2;


            }
            if (id == "3" || id == "11")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;


                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;

                FlagStatus = 3;



            }
            if (id == "4" || id == "12")
            {
                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;


                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 4;



            }
            if (id == "5" || id == "13")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                btnModify.Enabled = false;
                FlagStatus = 5;


            }
            if (id == "6" || id == "14")
            {
                btnNew.Enabled = false;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                FlagStatus = 6;
            }
            if (id == "7" || id == "15")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                FlagStatus = 7;

            }
        }




    }

    public void chkstatus(int FlagStatus)
    {
        if (FlagStatus == 0 || FlagStatus == 8)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = false;



        }
        if (FlagStatus == 1 || FlagStatus == 9)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;

        }
        if (FlagStatus == 2 || FlagStatus == 10)
        {
            btnExecute.Enabled = true;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnNew.Enabled = false;
            btnCancel.Enabled = true;
            btnExecute.Enabled = false;
            btnModify.Enabled = false;
            btnExit.Enabled = true;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;


        }

        if (FlagStatus == 3 || FlagStatus == 11)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

        if (FlagStatus == 4 || FlagStatus == 12)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 5 || FlagStatus == 13)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 6 || FlagStatus == 14)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 7 || FlagStatus == 15)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }


    }

    public void updateStatus()
    {
        chkstatus(FlagStatus);
        if (FlagStatus == 2 || FlagStatus == 3)
        {
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;
            btnDelete.Enabled = false;
        }
        if (FlagStatus == 4)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 5)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 6 || FlagStatus == 7)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
    }


    
    protected void btnpackname_TextChanged(object sender, EventArgs e)
    {

    }

    private void fillPubCenter()
    {
        DataSet ds;
        drppubcenter.Items.Clear();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.login logindetail = new NewAdbooking.Classes.login();

            ds = logindetail.getPubCenter();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.login logindetail = new NewAdbooking.classesoracle.login();

            ds = logindetail.getPubCenter();

        }
        else
        {
            NewAdbooking.classmysql.login logindetail = new NewAdbooking.classmysql.login();
            ds = logindetail.getPubCenter();
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Center";
        li1.Value = "0";
        li1.Selected = true;
        drppubcenter.Items.Add(li1);
        string[] drptext;
        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            if (ds.Tables[0].Rows[i].ItemArray[1].ToString().IndexOf("(") > 0)
            {
                drptext = ds.Tables[0].Rows[i].ItemArray[1].ToString().Split('(');
                li.Text = drptext[0];
            }
            else
            {
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            }
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drppubcenter.Items.Add(li);
        }

    }

    [Ajax.AjaxMethod]
    public void savedays1(string compcode, string combincode, string edicombincode, string sun, string mon, string tue, string wed, string thu, string fri, string sat, string focusday, string allday, int cnt)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CombinationMaster savedays = new NewAdbooking.Classes.CombinationMaster();
            savedays.savecombindays(compcode, combincode, edicombincode, sun, mon, tue, wed, thu, fri, sat, focusday, allday, cnt);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CombinationMaster savedays = new NewAdbooking.classesoracle.CombinationMaster();
            savedays.savecombindays(compcode, combincode, edicombincode, sun, mon, tue, wed, thu, fri, sat, focusday, allday, cnt);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            //string procedureName = "SAVE_COMBIN_DAYS_SAVE_COMBIN_DAYS_P";
            string[] parameterValueArray = { compcode, combincode, edicombincode, sun, mon, tue, wed, thu, fri, sat, focusday, allday, cnt.ToString() };
            //NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            //obj.DynamicBindProcedure(procedureName, parameterValueArray);
            NewAdbooking.classmysql.CombinationMaster obj = new NewAdbooking.classmysql.CombinationMaster();
            obj.savecomdays(compcode, combincode, edicombincode, sun, mon, tue, wed, thu, fri, sat, focusday, allday, cnt.ToString());

        }

    }
    protected void drppubcenter_SelectedIndexChanged(object sender, EventArgs e)
    {
        drpadtype.SelectedValue = "0";
        drpadcategory.SelectedValue = "0";
        drpsubcategory.SelectedValue = "0";
        btntextcomcode.Text = "";
        noofedi.Text = "";
        btextalias.Text = "";
        btnpackname.Text = "";
        btncomname.Text = "";
        drpshare.Text = "0";
        //saveormodify = "0";
        for (int j = 0; j < btnoptionbutton.Items.Count; j++)
        {
            if (btnoptionbutton.Items[j].Selected == true)
            {
                checkboxname = btnoptionbutton.SelectedValue.ToString();
            }


        }
        addatagrid(checkboxname);
    }
    protected void drpadtype_SelectedIndexChanged(object sender, EventArgs e)
    {
        bindcategory(Session["compcode"].ToString(),drpadtype.SelectedValue,"0");
        for (int j = 0; j < btnoptionbutton.Items.Count; j++)
        {
            if (btnoptionbutton.Items[j].Selected == true)
            {
                checkboxname = btnoptionbutton.SelectedValue.ToString();
            }


        }
        addatagrid(checkboxname);
    }

    public void bindcategory(string compcode, string adtype, string center)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bind = new NewAdbooking.Classes.BookingMaster();
            ds = bind.advdatacategoryRate(compcode, adtype, center);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.RateMaster bind = new NewAdbooking.classesoracle.RateMaster();
            ds = bind.advdatacategory(compcode, adtype, center);

        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bind = new NewAdbooking.classmysql.BookingMaster();
            ds = bind.advdatacategory(compcode, adtype);
        }
       // return ds;

        int i;
        ListItem li1;
        
        li1 = new ListItem();
        drpadcategory.Items.Clear();
        li1.Text = "Select Category";
        li1.Value = "0";
        li1.Selected = true;
        drpadcategory.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpadcategory.Items.Add(li);


        }
        ScriptManager1.SetFocus(drpadcategory);
        ScriptManager.RegisterClientScriptBlock(this, typeof(CombinationMaster), "aa", "focusadcat();", true);
    }
    public void btnimage()
    {
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        else
            btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        else
            btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        else
            btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        else
            btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        else
            btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        else
            btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        else
            btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        else
            btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        else
            btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        else
            btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        else
            btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        else
            btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();
    }





    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void insertcombinadonsession(string PCOMBIN_CODE)
    {
        if ((Session["combinadoninsert"] == "") || (Session["combinadoninsert"] == null))
        {

        }
        else
        {
            DataSet db1 = (DataSet)Session["combinadoninsert"];
            int er1 = db1.Tables[0].Rows.Count;
            int gf1 = db1.Tables.Count;
            for (int b = 0; b <= gf1 - 1; b++)
            {
                string PADON_CODE = "1";
                string PPACKAGE_CODE = db1.Tables[b].Rows[0].ItemArray[2].ToString();
                string PPUBLICATION = db1.Tables[b].Rows[0].ItemArray[0].ToString();
                string PPACKAGE_NAME = db1.Tables[b].Rows[0].ItemArray[3].ToString();
                string PNO_OF_INSERT = db1.Tables[b].Rows[0].ItemArray[4].ToString();

                DataSet ds = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.CombinationMaster rtmst = new NewAdbooking.Classes.CombinationMaster();
                    ds = rtmst.INSUPDDELADON(Session["compcode"].ToString(), PCOMBIN_CODE, PADON_CODE, PPACKAGE_CODE, PPUBLICATION, PNO_OF_INSERT, Session["userid"].ToString(), "I", PPACKAGE_NAME);
                }

                else
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.CombinationMaster rtmst = new NewAdbooking.classesoracle.CombinationMaster();
                        ds = rtmst.INSUPDDELADON(Session["compcode"].ToString(), PCOMBIN_CODE, PADON_CODE, PPACKAGE_CODE, PPUBLICATION, PNO_OF_INSERT, Session["userid"].ToString(), "I", PPACKAGE_NAME);

                    }
                    else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
                    {
                        string procedureName = "COMBINADON_INS_UPD_DEL";
                        string[] parameterValueArray = { Session["compcode"].ToString(), PCOMBIN_CODE, PADON_CODE, PPACKAGE_CODE, PPUBLICATION, PNO_OF_INSERT, Session["userid"].ToString(), "I", PPACKAGE_NAME, "", "", "", "" };
                        NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                    }
                    else
                    {
                        //NewAdbooking.classmysql.RetainerMaster rtmst = new NewAdbooking.classmysql.RetainerMaster();
                        //ds = rtmst.Ret_GetSlabupdate(retcode, compcode, userid, common, commrate, todays, fromdays, code);
                    }
            }
            Session["combinadoninsert"]=null;
        }
    }




    [Ajax.AjaxMethod]
    public DataSet chkag(string edition1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CombinationMaster editionchk = new NewAdbooking.Classes.CombinationMaster();

            ds = editionchk.chk(edition1);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster editionchk = new NewAdbooking.classesoracle.CombinationMaster();

                ds = editionchk.chk(edition1);
                return ds;
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "websp_combinemastcheck_websp_combinemastcheck_p";
                string[] parameterValueArray = { edition1 };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else
            {
               // NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
              //  ds = firstAgency.chk(agencode);

            }
        return ds;

    }


}

