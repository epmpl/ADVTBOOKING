using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class NoIssueMaster : System.Web.UI.Page
{
    string grd = "";
    string compcode, userid, dateformat, noissuecode;




    protected void Page_Load(object sender, System.EventArgs e)
    {

        // document.getElementById('table1').style.display = 'none';








        if (Session["compcode"] != null)
        {

            compcode = Session["compcode"].ToString();
            hiddencompcode.Value = compcode;

            userid = Session["userid"].ToString();
            hiddenuserid.Value = userid;

            dateformat = Session["dateformat"].ToString();
            hiddenDateFormat.Value = dateformat;
            hdndateformat.Value = Session["dateformat"].ToString();
            hiddenusername.Value = Session["Username"].ToString();

        }

        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }

        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/noissuemaster.xml"));
        lblnoissuecode.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        lbledition.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();


        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));

        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();





        hiddenusername.Value = Session["Username"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();





        // Put user code to initialize the page here
        Response.Expires = -1;



        Ajax.Utility.RegisterTypeForAjax(typeof(NoIssueMaster));
        // Ajax.Utility.RegisterTypeForAjax(typeof(noissuedate));




        //noissueday(compcode,userid);
        //bindgrid(compcode,userid, noisscode="%%");

        // Put user code to initialize the page here
        if (!Page.IsPostBack)
        {
            Page.ClientScript.RegisterStartupScript(this.GetType(), "Script", "clear();", true);
            pagedef();
            txtnoissuecode.Attributes.Add("OnChange", "javascript:return uppercase1();");
            addedition123(compcode, userid);

            // dpdedition.Attributes.Add("OnChange", "javascript:return autoornot();");

            btnNew.Attributes.Add("OnClick", "javascript:return newissue();");
            btnSave.Attributes.Add("OnClick", "javascript:return saveissue();");
            btnQuery.Attributes.Add("OnClick", "javascript:return queryissue();");
            btnExecute.Attributes.Add("OnClick", "javascript:return exeissue();");

            view.Attributes.Add("OnClick", "javascript:return grid(" + "'" + hdndateformat.Value + "'" + ");");
            Noissuelink.Attributes.Add("OnClick", "javascript:return popupnoissue();");
            btnnext.Attributes.Add("OnClick", "javascript:return nextissue();");
            btnfirst.Attributes.Add("OnClick", "javascript:return firstissue();");
            btnprevious.Attributes.Add("OnClick", "javascript:return preissue();");
            btnlast.Attributes.Add("OnClick", "javascript:return lastissue();");
            btnModify.Attributes.Add("OnClick", "javascript:return modifyissue();");
            btnExit.Attributes.Add("OnClick", "javascript:return exitissue();");
            btnCancel.Attributes.Add("OnClick", "javascript:return cancelissue('NoIssueMaster');");
            btnDelete.Attributes.Add("OnClick", "javascript:return deleteissue();");

            Session["issuesave"] = null;
            Session["date1"] = null;
            Session["drop"] = null;
            if (btnNew.Enabled == false)
                btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
            if (btnSave.Enabled == false)
                btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
            if (btnModify.Enabled == false)
                btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
            if (btnQuery.Enabled == false)
                btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
            if (btnExecute.Enabled == false)
                btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
            if (btnCancel.Enabled == false)
                btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
            if (btnfirst.Enabled == false)
                btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
            if (btnprevious.Enabled == false)
                btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
            if (btnnext.Enabled == false)
                btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
            if (btnlast.Enabled == false)
                btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
            if (btnDelete.Enabled == false)
                btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
            if (btnExit.Enabled == false)
                btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
            btnNew.Focus();

        }
    }


    // Put user code to initialize the page here

    #region Web Form Designer generated code
    protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    //		public void	pagedef()
    public void pagedef()
    {
        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnnext.Enabled = false;
        btnprevious.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        btnNew.Focus();
        dpdedition.Enabled = false;
        txtnoissuecode.Enabled = false;
        Noissuelink.Enabled = false;

    }


    //		public void addedition(string compcode,string userid)
    public void addedition123(string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster bindedition = new NewAdbooking.Classes.NoIssueMaster();
            ds = bindedition.editionname(compcode, userid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster bindedition = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = bindedition.editionname(compcode, userid);
        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster bindedition = new NewAdbooking.classmysql.NoIssueMaster();
            ds = bindedition.editionname(compcode, userid);
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Edition-----";
        li1.Value = "0";
        li1.Selected = true;
        dpdedition.Items.Add(li1);
        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString() + "~" + ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            dpdedition.Items.Add(li);
        }


    }

    [Ajax.AjaxMethod]
    //		public DataSet chk(string issuecode ,string compcode,string userid)
    public DataSet addeditionsupp(string compcode, string userid, string editioncode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();

            ds = chk.editionsuppname(compcode, userid, editioncode);
            //return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = chk.editionsuppname(compcode, userid, editioncode);

        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "editionnamebind_supp";
            string[] parameterValueArray = { compcode,editioncode,userid };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;

    }


    [Ajax.AjaxMethod]
    //		public DataSet chk(string issuecode ,string compcode,string userid)
    public DataSet chk(string issuecode, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();

            ds = chk.chkcode(issuecode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = chk.chkcode(issuecode, compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster chk = new NewAdbooking.classmysql.NoIssueMaster();
            ds = chk.chkcode(issuecode, compcode, userid);
            return ds;
        }
    }


    [Ajax.AjaxMethod]
    //		public DataSet insert(string edition, string issuecode ,string compcode,string userid)
    public DataSet insert(string edition, string issuecode, string compcode, string userid, string alias)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();

            ds = chk.insertcode(edition, issuecode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = chk.insertcode(edition, issuecode, compcode, userid, alias);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster chk = new NewAdbooking.classmysql.NoIssueMaster();
            ds = chk.insertcode(edition, compcode, userid, issuecode);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
    //		public DataSet deletecode(string edition,string issuecode ,string compcode,string userid)
    public DataSet deletecode(string edition, string issuecode, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster del = new NewAdbooking.Classes.NoIssueMaster();

            ds = del.deletecode(edition, issuecode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster del = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = del.deletecode(edition, issuecode, compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster del = new NewAdbooking.classmysql.NoIssueMaster();
            ds = del.deletecode(edition, issuecode, compcode, userid);
            return ds;
        }
    }

     [Ajax.AjaxMethod]
    //		public void submit(string date,string noissueday,string issuecode, string compcode,string userid )
    public void submit(string date, string noissueday, string issuecode, string compcode, string userid ,string datefrmt,string edition_alias)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster submit = new NewAdbooking.Classes.NoIssueMaster();

            ds = submit.insertdate(date, noissueday, issuecode, compcode, userid, datefrmt);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster submit = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = submit.insertdate(date, noissueday, issuecode, compcode, userid, datefrmt, edition_alias);
        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster submit = new NewAdbooking.classmysql.NoIssueMaster();
            ds = submit.insertdate(date, noissueday, issuecode, compcode, userid, datefrmt);
        }
    }




    [Ajax.AjaxMethod]
    //		public DataSet modify(string edition, string issuecode ,string compcode,string userid)
    public DataSet modify(string edition, string issuecode, string compcode, string userid, string alias)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();

            ds = chk.modifycode(edition, issuecode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = chk.modifycode(edition, issuecode, compcode, userid, alias);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster chk = new NewAdbooking.classmysql.NoIssueMaster();

            ds = chk.modifycode(edition, issuecode, compcode, userid);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
    //		public DataSet exe(string edition, string issuecode ,string compcode,string userid)
    public DataSet exe(string edition, string editionalias, string issuecode, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();
            ds = chk.execode(edition, issuecode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = chk.execode(edition, editionalias, issuecode, compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster chk = new NewAdbooking.classmysql.NoIssueMaster();
            ds = chk.execode(edition, issuecode, compcode, userid);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
    //		public DataSet fnpl(string compcode,string userid)
    public DataSet fnpl(string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();

            ds = chk.fnplcode(compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();

            ds = chk.fnplcode(compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster chk = new NewAdbooking.classmysql.NoIssueMaster();
            ds = chk.fnplcode(compcode, userid);
            return ds;
        }
    }

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }

    [Ajax.AjaxMethod]
    public DataSet issuecode_auto(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();
            ds = chk.noissuecode(str);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = chk.noissuecode(str);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "issuecode_auto_issuecode_auto_p";
            string[] parameterValueArray = { str, str.Substring(0, 2),"" };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }



    [Ajax.AjaxMethod]
    public DataSet grid(string str, string editioname, string editionalias)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();
            ds = chk.gridview(str, editioname, editionalias);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = chk.gridview(str, editioname, editionalias);

        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "executenoissuedate";
            string[] parameterValueArray = { str, editioname, editionalias };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }











    [Ajax.AjaxMethod]
    public DataSet chkpubcatcode(string str, string editioname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();
            ds = chk.pubcodechk(str, editioname);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
            ds = chk.pubcodechk(str, editioname);

        }
        else
        {
            NewAdbooking.classmysql.NoIssueMaster chk = new NewAdbooking.classmysql.NoIssueMaster();
            ds = chk.pubcodechk(str, editioname);
        }
        return ds;
    }


    //protected void view_Click(object sender, EventArgs e)
    //{



    //        DataSet ds = new DataSet();dpdedition
    //        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //        {
    //            //NewAdbooking.Classes.NoIssueMaster chk = new NewAdbooking.Classes.NoIssueMaster();
    //            //ds = chk.pubcodechk(str, editioname);

    //        }
    //        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //        {
    //            NewAdbooking.classesoracle.NoIssueMaster chk = new NewAdbooking.classesoracle.NoIssueMaster();
    //            ds = chk.gridview(hiddencompcode.Value, "");

    //        }
    //        else
    //        {
    //            //NewAdbooking.classmysql.NoIssueMaster chk = new NewAdbooking.classmysql.NoIssueMaster();
    //            //ds = chk.pubcodechk(str, editioname);
    //        }
    //        string grd = "";
    //        if (ds.Tables[0].Rows.Count > 0)
    //        {

    //            grd += "<table width='100%'><tr><td width='200px' style='font-family:Verdana;font-size:13px;background-color:#7DAAE3;'>ISSUE DAY</td><td width='200px' style='font-family:Verdana;font-size:13px;background-color:#7DAAE3;'> ISSUE DATE</td></tr>";
    //            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
    //            {

    //                grd += "<tr><td class='gridview'>" + ds.Tables[0].Rows[i]["No_Iss_day"].ToString() + "</td><td class='gridview'>" + ds.Tables[0].Rows[i]["no_issue_date"].ToString() + "</td></tr>";

    //            }

    //            grd += "</table>";
    //            grid1123.InnerHtml = grd;

    //        }






    //}
}