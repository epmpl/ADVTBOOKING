using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
public partial class ZoneMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        if (Session["userid"] == null)
        {
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenDateFormat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();

        Ajax.Utility.RegisterTypeForAjax(typeof(ZoneMaster));
        DataSet objDataSetbu = new DataSet();
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/zone.xml"));
        lbZoneCode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lbZonename.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        Lbalias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        DataSet comm_nam = new DataSet();
        // Read in the XML file
        comm_nam.ReadXml(Server.MapPath("XML/Comm_detail.xml"));
        lblinc.Text = comm_nam.Tables[0].Rows[0].ItemArray[12].ToString();
        

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        txtzonecode.Enabled = false;
        txtzonename.Enabled = false;
        txtzonealias.Enabled = false;
        txtinc.Enabled = false;
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
        if (!Page.IsPostBack)
        {
            txtzonename.Attributes.Add("OnChange", "javascript:return autoornot();");
            btnNew.Attributes.Add("OnClick", "javascript:return ZoneNewclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return ZoneSaveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return ZoneModifyclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return ZoneDeleteclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return ZoneQueryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return ZoneExecuteclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return ZoneCancelclick('ZoneMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return Zonefirstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return Zonepreviousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return Zonenextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return Zonelastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return ZoneExitclick();");

        }
     }
    #region Web Form Designer generated code
     protected void OnInit(EventArgs e)
    {
         InitializeComponent();
         base.OnInit(e);
    }
    private void InitializeComponent()
    {

    }
    #endregion
    [Ajax.AjaxMethod]
     public DataSet Advsave1(string companycode, string zonecode, string zonename, string alias, string UserId,string int_id)
     {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { companycode, zonecode, zonename, alias, UserId, int_id};
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "ZONE_SAVE";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "ZONE_SAVE.ZONE_SAVE_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "ZONE_SAVE_ZONE_SAVE_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet Advmodify1(string companycode, string zonecode, string zonename, string alias, string int_id)
     {  
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { companycode, zonecode, zonename, alias, int_id };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "ZONE_MODIFY";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "ZONE_MODIFY.ZONE_MODIFY_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "ZONE_MODIFY_ZONE_MODIFY_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
     public void Advdelete(string companycode, string zonecode, string zonename, string alias,string Incid, string UserId)
     {
         
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { companycode, zonecode, zonename, alias };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Zone_Delete";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Zone_Delete.Zone_Delete_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "Zone_Delete_Zone_Delete_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
      
    }
    [Ajax.AjaxMethod]
     public DataSet Advexecute1(string companycode, string zonecode, string zonename, string alias, string UserId)
     {
         DataSet ds = new DataSet();
         string[] parameterValueArray = new string[] { companycode, zonecode, zonename, alias };
         if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
         {
             string procedureName = "Zone_Execute";
             NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             string procedureName = "Zone_Execute.Zone_Execute_p";
             NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         else
         {
             string procedureName = "Zone_Execute_Zone_Execute_p";
             NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet Advexecute2(string companycode, string zonecode, string zonename, string alias, string UserId)
     {   
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { companycode, zonecode, zonename, alias };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Zone_Execute";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Zone_Execute.Zone_Execute_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "Zone_Execute_Zone_Execute_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    
    [Ajax.AjaxMethod]
     public DataSet Zonefpnl()
     {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Zonefpnl";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Zonefpnl.Zonefpnl_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "Zonefpnl_Zonefpnl_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet chkzonecode(string companycode, string UserId, string zonecode, string zonename, string int_id)
     {
         DataSet ds = new DataSet();
         string[] parameterValueArray = new string[] { zonecode, companycode, zonename, UserId, int_id };
         if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
         {
             string procedureName = "zonechk";
             NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             string procedureName = "zonechk.zonechk_p";
             NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         else
         {
             string procedureName = "zonechk_zonechk_p";
             NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }

         return ds;
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet chkzonecodename(string str)
    {
        string code = "";
        string compcode = Session["compcode"].ToString();
        if (str.Length > 2)
        {
            code = str.Substring(0, 2);
        }
        else
        {
            code = str;
        }

        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { str, code, compcode};
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "chkzonecodename";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "chkzonecodename.chkzonecodename_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "CHKZONECODENAME_CHKZONECODENAME_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;

    }
 
}

