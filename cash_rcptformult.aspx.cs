using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;

public partial class cash_rcptformult : System.Web.UI.Page
{
    int i = 0;
    int j = 0;
    string compcode = "";
    string ciobookid123 = "", idofbutton = "";
    protected void Page_Load(object sender, EventArgs e)
    {





        Response.Expires = -1;
        DataGrid1.Visible = true;
        if (Session["compcode"] == null)
        {
            Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        hiddencomcode.Value = Session["compcode"].ToString();
        if (Request.QueryString["ciobookid123"] != null)
        {
            ciobookid123 = Request.QueryString["ciobookid123"].ToString();
        }


        if (Request.QueryString["idofbutton"] != null)
        {
            idofbutton = Request.QueryString["idofbutton"].ToString();
            idofbutton = "btnsavepay";/////add anuja
            hdnbutton.Value = idofbutton;
        }

        else
        {
            idofbutton = "";
        }


        if (idofbutton == "btnsavepay" || idofbutton == "btnSave")
        {


            g1.Attributes.Add("style", "display:block");

            g1.Visible = true;
            g1.Disabled = false;

            DataSet ds123 = new DataSet();

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.cash_recipt abc = new NewAdbooking.classesoracle.cash_recipt();
                ds123 = abc.mulcashrcpt1234(Session["dateformat"].ToString(), "", "", "", "", "", Session["compcode"].ToString(), "", ciobookid123, "2");
            }
            hdnlength.Value = ds123.Tables[0].Rows.Count.ToString();
            DataGrid1.DataSource = ds123;
            DataGrid1.DataBind();


        }



        compcode = hiddencomcode.Value;
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddendateformat.Value = Session["dateformat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();

        hiddenbk_audit.Value = Session["audit"].ToString();


        hiddenserverip.Value = Request.ServerVariables["REMOTE_ADDR"].ToString();

        Ajax.Utility.RegisterTypeForAjax(typeof(cash_rcptformult));
        DataSet objDatagetlabname = new DataSet();
        objDatagetlabname.ReadXml(Server.MapPath("XML/bookingmaster.xml"));

        //lbbillstatus.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[9].ToString();
        lblcashrecieved.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[119].ToString();
        lbcardname.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[95].ToString();
        lbtype.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[96].ToString();
        lbexdate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[97].ToString();
        lbcardno.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[98].ToString();
        lbchqno.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[111].ToString();
        lbchqamt.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[112].ToString();
        lbchqdate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[113].ToString();
        lbbankname.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[114].ToString();
        lbtobil1.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[139].ToString();
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/Booking_Audit1.xml"));

        lblagency.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        lbluom.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lblagreedrate.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lblclient.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        //lbladdress1.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        lblpackage.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        //lbladdress2.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        lblagreedamount.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        //lblstatus.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        lblpaymode.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        lblpublichdate.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        //lblcredit.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lbldiscount.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lblrono.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();
        lblnoofinsertion.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
        lblpositionpremium.Text = ds.Tables[0].Rows[0].ItemArray[13].ToString();
        lblrostatus.Text = ds.Tables[0].Rows[0].ItemArray[14].ToString();
        //lblkeyno.Text = ds.Tables[0].Rows[0].ItemArray[15].ToString();
        lblpaid.Text = ds.Tables[0].Rows[0].ItemArray[15].ToString();
        lblspecialdiscount.Text = ds.Tables[0].Rows[0].ItemArray[16].ToString();
        //lblexezone.Text = ds.Tables[0].Rows[0].ItemArray[17].ToString();
        lblexecutivename.Text = ds.Tables[0].Rows[0].ItemArray[17].ToString();
        lblcontractname.Text = ds.Tables[0].Rows[0].ItemArray[18].ToString();
        lblspacediscount.Text = ds.Tables[0].Rows[0].ItemArray[19].ToString();
        lbloutstanding.Text = ds.Tables[0].Rows[0].ItemArray[20].ToString();
        //lblbrand.Text = ds.Tables[0].Rows[0].ItemArray[21].ToString();
        lblheight.Text = ds.Tables[0].Rows[0].ItemArray[21].ToString();
        //lblproduct.Text = ds.Tables[0].Rows[0].ItemArray[22].ToString();
        lblspecialcharge.Text = ds.Tables[0].Rows[0].ItemArray[22].ToString();
        lblretainername.Text = ds.Tables[0].Rows[0].ItemArray[23].ToString();
        lbllines.Text = ds.Tables[0].Rows[0].ItemArray[24].ToString();
        lbladdagecomm.Text = ds.Tables[0].Rows[0].ItemArray[25].ToString();
        //lblnocolumns.Text = ds.Tables[0].Rows[0].ItemArray[26].ToString();
        lblbookingtype.Text = ds.Tables[0].Rows[0].ItemArray[26].ToString();
        lblpageposition.Text = ds.Tables[0].Rows[0].ItemArray[27].ToString();
        lblgrossamt.Text = ds.Tables[0].Rows[0].ItemArray[28].ToString();
        //lblcurrency.Text = ds.Tables[0].Rows[0].ItemArray[29].ToString();
        lblcolourtype.Text = ds.Tables[0].Rows[0].ItemArray[29].ToString();
        lblpositionpre.Text = ds.Tables[0].Rows[0].ItemArray[30].ToString();
        lblretainercommission.Text = ds.Tables[0].Rows[0].ItemArray[31].ToString();
        lbladcategory.Text = ds.Tables[0].Rows[0].ItemArray[32].ToString();
        lblarea.Text = ds.Tables[0].Rows[0].ItemArray[33].ToString();
        lblagtradediscount.Text = ds.Tables[0].Rows[0].ItemArray[34].ToString();
        lbladsubcat1.Text = ds.Tables[0].Rows[0].ItemArray[35].ToString();
        lblschemetype.Text = ds.Tables[0].Rows[0].ItemArray[36].ToString();
        lblbillamount.Text = ds.Tables[0].Rows[0].ItemArray[37].ToString();
        lbladsubcat2.Text = ds.Tables[0].Rows[0].ItemArray[38].ToString();
        lblratecode.Text = ds.Tables[0].Rows[0].ItemArray[39].ToString();
        lbladsubcat3.Text = ds.Tables[0].Rows[0].ItemArray[40].ToString();
        lblcardrate.Text = ds.Tables[0].Rows[0].ItemArray[41].ToString();
        lbladsubcat4.Text = ds.Tables[0].Rows[0].ItemArray[42].ToString();
        lblcardamount.Text = ds.Tables[0].Rows[0].ItemArray[43].ToString();
        //lblremarks.Text = ds.Tables[0].Rows[0].ItemArray[44].ToString();
        lblSumAmt.Text = ds.Tables[0].Rows[0].ItemArray[45].ToString();
        lblPagePrem.Text = ds.Tables[0].Rows[0].ItemArray[46].ToString();
      
        
        if (!Page.IsPostBack)
        {
            //  bindOurBank();
            bindcardtype();
            btnsubmit.Attributes.Add("OnClick", "javascript:return ShowDiv();");
            btnclear.Attributes.Add("OnClick", "javascript:return cleardata();");
            btnmodify.Attributes.Add("OnClick", "javascript:return insertcashdetail1();");
            btnreprint.Attributes.Add("OnClick", "javascript:return rePrint();");
            txtagency12.Attributes.Add("onkeydown", "javascript:return F2fillagencycr_allagency(event);");
            txtagency12.Attributes.Add("onkeypress", "javascript:return F2fillagencycr_allagency(event);");
            lstagency.Attributes.Add("onclick", "javascript:return ClickAgaency1(event);");
            lstagency.Attributes.Add("onkeydown", "javascript:return ClickAgaency1(event);");

            ttextchqdate.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            txtvalidityfrom.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            txttilldate.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            drppaymode.Attributes.Add("onchange", "javascript:return showcreditdetail();");

            txtexecutive.Attributes.Add("onkeydown", "javascript:return fillexecutive(event);");
            txtexecutive.Attributes.Add("onkeypress", "javascript:return fillexecutive(event);");
            lstexecutive.Attributes.Add("onclick", "javascript:return clickexecutive(event);");
            lstexecutive.Attributes.Add("onkeydown", "javascript:return clickexecutive(event);");

            paymode();
            if (Request.QueryString["paymode"] != null && Request.QueryString["paymode"].ToString() != "" && Request.QueryString["paymode"].ToString() != "0")
            {
                drppaymode.SelectedValue = Request.QueryString["paymode"].ToString();
                drppaymode.Enabled = false;
            }
            bindadvtype();
        }
    }

    public void bindadvtype()
    {
        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.Report.classesoracle.Class1 advname = new NewAdbooking.Report.classesoracle.Class1();
            ds = advname.adname(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Report.Classes.Class1 advname = new NewAdbooking.Report.Classes.Class1();
            ds = advname.adname(Session["compcode"].ToString());
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpadtype.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpadtype.Items.Add(li);


        }
    }
    [Ajax.AjaxMethod]
    public DataSet getcioid(string recptno)
    {
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindclient = new NewAdbooking.classesoracle.BookingMaster();
            dx = bindclient.clsGetBookingID(recptno);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindclient = new NewAdbooking.Classes.BookingMaster();
            dx = bindclient.clsGetBookingID(recptno);

        }
        return dx;
    }
    [Ajax.AjaxMethod]
    public DataSet insertcashdetail(string cioid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.cash_recipt objpkg = new NewAdbooking.Classes.cash_recipt();
            ds = objpkg.InsertCashDetail(cioid);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.cash_recipt objpkg = new NewAdbooking.classesoracle.cash_recipt();
            ds = objpkg.InsertCashDetailmulti(cioid);
        }
        return ds;
    }



    [Ajax.AjaxMethod]
    public DataSet fillF2_CreditAgency(string compcol, string agen)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.Report.classesoracle.Class1 adagency = new NewAdbooking.Report.classesoracle.Class1();
            ds = adagency.agencyxls(compcol, agen);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Report.Classes.Class1 adagency = new NewAdbooking.Report.Classes.Class1();
            ds = adagency.agencyxls(compcol, agen);
        }

        return ds;
    }



    public void bindcardtype()
    {
        DataSet cardtyp = new DataSet();
        cardtyp.ReadXml(Server.MapPath("XML/billcycle.xml"));
        drptype.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Card Type";
        li1.Value = "0";
        //li1.Selected = true;
        drptype.Items.Add(li1);

        for (i = 0; i < cardtyp.Tables[5].Columns.Count - 1; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = cardtyp.Tables[5].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li.Value = cardtyp.Tables[5].Rows[0].ItemArray[i].ToString();

            drptype.Items.Add(li);

        }

    }


    [Ajax.AjaxMethod]
    public DataSet checkreci(string cioid, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.cash_recipt objpkg = new NewAdbooking.Classes.cash_recipt();
            ds = objpkg.chkreci(cioid, compcode, userid);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.cash_recipt objpkg = new NewAdbooking.classesoracle.cash_recipt();
            ds = objpkg.chkreci(cioid, compcode, userid);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet execute(string bookingid, string compcode, string adtype, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.cash_recipt executebullet = new NewAdbooking.Classes.cash_recipt();
            ds = executebullet.executeauditmast1(bookingid, compcode, adtype, dateformat);
        }
        else
        {
            NewAdbooking.classesoracle.cash_recipt executebullet = new NewAdbooking.classesoracle.cash_recipt();
            ds = executebullet.executeauditmast1(bookingid, compcode, adtype, dateformat);
            //NewAdbooking.classesoracle.adsubcat executebullet = new NewAdbooking.classesoracle.adsubcat();
            //ds = executebullet.addcategoryname();
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet getPackageName(string compcode, string pkg_code)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.BillingClass.Classes.publish_audit objpkg = new NewAdbooking.BillingClass.Classes.publish_audit();
            ds = objpkg.clsPackageName(compcode, pkg_code);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Booking_Audit1 objpkg = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = objpkg.clsPackageName(compcode, pkg_code);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet bindExec(string compcode, string execname, string value, string center, string adtype)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.getExecbooking(compcode, execname, "0", "DI0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.getExecbooking(compcode, execname, value, center, adtype);
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.getExec(compcode, execname, "0", "0");
        }
        return ds;

    }


    [Ajax.AjaxMethod]
    public string updatero(string compcode, string paymode, string booking_id, string rcptno, string cardmonth, string cardyear, string cardname, string cardtype, string cardnumber, string chkno, string chkdate, string chkamt, string chkbankname)
    {
        string ds = "";
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
              NewAdbooking.Classes.cash_recipt clsbooking = new NewAdbooking.Classes.cash_recipt();
            ds = clsbooking.updaterostatus(compcode, paymode, booking_id, rcptno, cardmonth, cardyear, cardname, cardtype, cardnumber, chkno, chkdate, chkamt, chkbankname);
        }

           
     
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.cash_recipt clsbooking = new NewAdbooking.classesoracle.cash_recipt();
            ds = clsbooking.updaterostatus(compcode, paymode, booking_id, rcptno, cardmonth, cardyear, cardname, cardtype, cardnumber, chkno, chkdate, chkamt, chkbankname);
        }
        else
        {
            //NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            //ds = clsbooking.getExec(compcode, execname, "0", "0");
        }
        return "true";

    }











    protected void btnsubmit_Click1(object sender, EventArgs e)
    {
        // ScriptManager.RegisterClientScriptBlock(this, typeof(cash_rcptformult), "aa", " ShowDiv();", true);

        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {



            NewAdbooking.classesoracle.cash_recipt abc = new NewAdbooking.classesoracle.cash_recipt();

            if (idofbutton == "btnsavepay" || idofbutton == "btnSave")
            {
                ds = abc.mulcashrcpt1234(Session["dateformat"].ToString(), "", "", "", "", "", Session["compcode"].ToString(), "", ciobookid123, "2");

                //ds = abc.mulcashrcpt123(Session["dateformat"].ToString(), txtvalidityfrom.Text, txttilldate.Text, txtbookingid.Text, hdnagencytxt.Value, hdnexecutive.Value, compcode, drpadtype.Text, txtbookingid.Text, "2");
            }
            else
            {
                ds = abc.mulcashrcpt123(Session["dateformat"].ToString(), txtvalidityfrom.Text, txttilldate.Text, txtbookingid.Text, hdnagencytxt.Value, hdnexecutive.Value, compcode, drpadtype.Text, txtbookingid.Text, drpadjusted.Text);
            }
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.cash_recipt abc = new NewAdbooking.Classes.cash_recipt();
            ds = abc.mulcashrcpt123(Session["dateformat"].ToString(), txtvalidityfrom.Text, txttilldate.Text, txtbookingid.Text, hdnagencytxt.Value, hdnexecutive.Value, compcode, drpadtype.Text, txtbookingid.Text, drpadjusted.Text);
        }
        hdnlength.Value = ds.Tables[0].Rows.Count.ToString();

        g1.Attributes.Add("style", "display:block");

        g1.Visible = true;
        g1.Disabled = false;

        DataGrid1.DataSource = ds;
        DataGrid1.DataBind();

    }

    protected void DataGrid1_ItemDataBound(object sender, DataGridItemEventArgs e)
    {
        if (e.Item.ItemType == ListItemType.Header)
        {
            e.Item.Cells[0].Text = "<input type='checkbox' enabled=true id='checkall' onclick=\"javascript:return selectAll();\" />";
        }
        if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
        {
            string bookingid = e.Item.Cells[4].Text;
            string str = "chk" + j;
            string strnew = "chkN" + j;

            if (e.Item.Cells[14].Text == "1")
            {
                e.Item.Cells[0].Text = "<input type='checkbox' id=" + str + " disabled   value=" + e.Item.Cells[4].Text + " onclick=\"javascript:return booking(this.id,'" + e.Item.Cells[8].Text + "');\" />";
                e.Item.Cells[16].Text = "<input type='checkbox' id=" + strnew + " enabled   value=" + e.Item.Cells[4].Text + " />";
            }
            else
            {
                e.Item.Cells[0].Text = "<input type='checkbox' id=" + str + " enabled   value=" + e.Item.Cells[4].Text + " onclick=\"javascript:return booking(this.id,'" + e.Item.Cells[8].Text + "');\" />";
                e.Item.Cells[16].Text = "<input type='checkbox' id=" + strnew + " disabled   value=" + e.Item.Cells[4].Text + " />";
            }
            e.Item.Cells[4].Text = "<a id='cio" + i + "' style=\"cursor:hand;color:blue\" onClick=\"executeclick('" + e.Item.Cells[4].Text + "')\">" + e.Item.Cells[4].Text + "</a>";
            i = i + 1;
            e.Item.Cells[1].Text = i.ToString();
            j++;
        }
    }




    public void paymode()
    {

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pop radiobind = new NewAdbooking.classesoracle.pop();
            ds = radiobind.filldatapay(hiddencompcode.Value, hiddenuserid.Value);
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.pop radiobind = new NewAdbooking.Classes.pop();

                ds = radiobind.filldatapay(hiddencompcode.Value, hiddenuserid.Value);
            }



            else
            {
                NewAdbooking.classmysql.CityMaster retainername = new NewAdbooking.classmysql.CityMaster();
                ds = retainername.retainer();
            }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Paymode-";
        li1.Value = "0";
        li1.Selected = true;
        drppaymode.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();


            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drppaymode.Items.Add(li);

        }




    }




    [Ajax.AjaxMethod]
    public DataSet GETCASH_PAY(string compcode, string paymode)
    {
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
            dx = bindrate.GETCASH_PAY(compcode, paymode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
            dx = bindrate.GETCASH_PAY(compcode, paymode);
        }
        else
        {
            //  NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
            //  dx = bindrate.ratebind(adcat, compcode);
        }
        return dx;

    }








    protected void btnmodify_Click(object sender, EventArgs e)
    {
        btnsubmit_Click1(sender, e);
    }


    /////////add by anuja for paymenttype
    [Ajax.AjaxMethod]
    public DataSet insertcashdetail1(string cioid, string idofbutton, string paymode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.cash_recipt objpkg = new NewAdbooking.Classes.cash_recipt();
            ds = objpkg.InsertCashDetail(cioid);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.cash_recipt objpkg = new NewAdbooking.classesoracle.cash_recipt();
            ds = objpkg.InsertCashDetailmulti1(cioid, idofbutton, paymode);
        }
        return ds;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public string updatero1(string compcode, string paymode, string booking_id, string rcptno, string cardmonth, string cardyear, string cardname, string cardtype, string cardnumber, string chkno, string chkdate, string chkamt, string chkbankname, string buttontype)
    {
        string ds = "";
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.cash_recipt clsbooking = new NewAdbooking.Classes.cash_recipt();
            ds = clsbooking.updaterostatus(compcode, paymode, booking_id, rcptno, cardmonth, cardyear, cardname, cardtype, cardnumber, chkno, chkdate, chkamt, chkbankname);
        }



        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.cash_recipt clsbooking = new NewAdbooking.classesoracle.cash_recipt();
            ds = clsbooking.updaterostatus1(compcode, paymode, booking_id, rcptno, cardmonth, cardyear, cardname, cardtype, cardnumber, chkno, chkdate, chkamt, chkbankname, buttontype, Session["Username"].ToString());
        }
        else
        {
            //NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            //ds = clsbooking.getExec(compcode, execname, "0", "0");
        }
        return "true";

    }

}
