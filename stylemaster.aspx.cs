using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;

public partial class stylemaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

        Ajax.Utility.RegisterTypeForAjax(typeof(stylemaster));

        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();

        }
        else
        {
            Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }



        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();




        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/stylemaster.xml"));

        PositionTypeCode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        PositonType.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        Alias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        //lblamount.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        premium.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        // Pageno.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        ValidFrom.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        ValidTill.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        lbldesigndes.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
      //  lbcommdetail.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();


        if (!Page.IsPostBack)
        {
            txtPosTypCode.Enabled = false;
            txtPosType.Enabled = false;
            txtAlias.Enabled = false;
            txtvalid.Enabled = false;
            txtvalidtill.Enabled = false;
            drpremium.Enabled = false;
            txtamount.Enabled = false;
            txtdessigndesc.Enabled = false;
            lbcommdetail.Enabled = false;
          
            btnNew.Focus();

            txtvalid.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            txtvalidtill.Attributes.Add("OnChange", "javascript:return checkdate(this);");


            btnNew.Attributes.Add("OnClick", "javascript:return NewClick2();");
            lbcommdetail.Attributes.Add("OnClick", "javascript:return commission();");
            btnExit.Attributes.Add("OnClick", "javascript:return Exit();");
            btnCancel.Attributes.Add("OnClick", "javascript:return CancelClick2();");
            btnQuery.Attributes.Add("OnClick", "javascript:return QueryClick2();");
            btnSave.Attributes.Add("OnClick", "javascript:return SaveClick2(" + "'" + hiddencompcode.Value + "'" + ");");
            txtPosType.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtPosType');");
            txtPosType.Attributes.Add("OnBlur", "javascript:return autoornot();");

            btnfirst.Attributes.Add("OnClick", "javascript:return FirstClick2();");
            btnprevious.Attributes.Add("OnClick", "javascript:return PreviousClick2();");
            btnnext.Attributes.Add("OnClick", "javascript:return NextClick2();");
            btnlast.Attributes.Add("OnClick", "javascript:return LastClick2();");
            btnModify.Attributes.Add("OnClick", "javascript:return ModifyClick2();");
            btnDelete.Attributes.Add("OnClick", "javascript:return DeleteClick2(" + "'" + hiddencompcode.Value + "'" + ");");
            btnExecute.Attributes.Add("OnClick", "javascript:return ExecuteClick2(" + "'" + hiddencompcode.Value + "'" + ");");

            txtAlias.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtAlias');");
            txtPosTypCode.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtPosTypCode');");
            txtPosType.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtPosType');");
            txtPosType.Attributes.Add("OnBlur", "javascript:return autoornot();");
            txtamount.Attributes.Add("OnChange", "javascript:return checkamount();");
            drpremium.Attributes.Add("OnChange", "javascript:return Cleartext();");           

        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet Select(string PosTypCode,string PosType,string Alias,string compcode,string userid)
    // public DataSet Select(string PosTypCode, string PosType, string Alias,int amount,string compcode, string userid)
    public DataSet Selectpage(string compcode, string PosTypCode, string PosType, string Alias, string Amount, string premium, string userid, string dateformat)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compcode, PosTypCode, PosType, Alias, Amount, premium, userid, dateformat };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.stylemaster select = new NewAdbooking.Classes.stylemaster();
            ds = select.SelectValue(PosTypCode, PosType, Alias, Amount, premium, compcode, userid, Session["dateformat"].ToString());
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.stylemster select = new NewAdbooking.classesoracle.stylemster();
            ds = select.SelectValue(PosTypCode, PosType, Alias, Amount, premium, compcode, userid, Session["dateformat"].ToString());
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "ADVSTYTYPESELECT_ADVSTYTYPESELECT_P_new";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPositionTypMst select = new NewAdbooking.classmysql.AdvPositionTypMst();
            ds = select.SelectValue(compcode, PosTypCode, PosType, Alias, Amount, premium, userid, Session["dateformat"].ToString());
            return ds;
        }       
        return ds;
    }



    [Ajax.AjaxMethod]
    //		public void delete1(string PosTypCode,string compcode,string userid)
    public void delete1(string PosTypCode, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.stylemaster delete1 = new NewAdbooking.Classes.stylemaster();

            ds = delete1.delete1(PosTypCode, compcode, userid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.stylemster delete1 = new NewAdbooking.classesoracle.stylemster();
            ds = delete1.delete1(PosTypCode, compcode, userid);
        }
        else
        {
            //NewAdbooking.classmysql.AdvPositionTypMst delete1 = new NewAdbooking.classmysql.AdvPositionTypMst();
            //ds = delete1.delete1(PosTypCode, compcode, userid);
        }
        //return ds;
    }






    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet modify(string PosTypCode,string PosType,string Alias,string compcode,string userid)
    public DataSet modify(string compcode, string PosTypCode, string PosType, string Alias, string Amount, string premium, string userid, string fdate, string tdate, string description, string pub_code, string edit_code, string adcat_code)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compcode, PosTypCode, PosType, Alias, Amount, premium, userid, fdate, tdate, description, pub_code, edit_code, adcat_code };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.stylemaster modify = new NewAdbooking.Classes.stylemaster();

            ds = modify.ModifyValue(PosTypCode, PosType, Alias, Amount, premium, compcode, userid, fdate, tdate, Session["dateformat"].ToString(), description);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.stylemster modify = new NewAdbooking.classesoracle.stylemster();
            ds = modify.ModifyValue(PosTypCode, PosType, Alias, Amount, premium, compcode, userid, fdate, tdate, Session["dateformat"].ToString(), description);
            return ds;
        }
        else
           
        {
            string procedureName = "STYLETypeMstModify_STYLETypeMstModify_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //{
        //    //NewAdbooking.classmysql.AdvPositionTypMst modify = new NewAdbooking.classmysql.AdvPositionTypMst();
        //    //ds = modify.ModifyValue(PosTypCode, PosType, Alias, amount, premium, compcode, userid);
        //    //return ds;
        //}

        return ds;
    }



    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet insert(string PosTypCode,string PosType,string Alias,string compcode,string userid)
    public DataSet insert(string compcode, string PosTypCode, string PosType, string Alias, string Amount, string premium, string userid, string fdate, string tdate, string description, string pub_code, string edit_code, string adcat_code)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compcode, PosTypCode, PosType, Alias, Amount, premium, userid, fdate, tdate, description, pub_code, edit_code, adcat_code };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.stylemaster insert = new NewAdbooking.Classes.stylemaster();

            ds = insert.InsertValue(PosTypCode, PosType, Alias, Amount, premium, compcode, userid, fdate, tdate, Session["dateformat"].ToString());
            return ds;
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.stylemster insert = new NewAdbooking.classesoracle.stylemster();
            ds = insert.InsertValue(PosTypCode, PosType, Alias, Amount, premium, compcode, userid, fdate, tdate, Session["dateformat"].ToString(), description);
            return ds;
        }
        else
        {
            string procedureName = "styleTypeMstInsert_styleTypeMstInsert_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

            //    NewAdbooking.classmysql.AdvPositionTypMst insert = new NewAdbooking.classmysql.AdvPositionTypMst();
            //    ds = insert.InsertValue(PosTypCode, PosType, Alias, amount, premium, compcode, userid);
            //    return ds;
        }

        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet chksave(string compcode, string PosTypCode, string userid)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] {compcode, PosTypCode, userid };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.stylemaster modify = new NewAdbooking.Classes.stylemaster();

            ds = modify.chksave(PosTypCode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.stylemster modify = new NewAdbooking.classesoracle.stylemster();
            ds = modify.chksave(PosTypCode, compcode, userid);
            return ds;
        }
        else
        {

            string procedureName = "styleTypechk_styleTypechk_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }




    [Ajax.AjaxMethod]
    public DataSet chkadvposition(string str)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { str, str.Substring(0, 2) };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.stylemaster chk = new NewAdbooking.Classes.stylemaster();
            ds = chk.chkadvposition1(str);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.stylemster chk = new NewAdbooking.classesoracle.stylemster();
            ds = chk.chkadvposition1(str);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "chkadvstytyp_chkadvstytyp_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            return ds;
        }
        else
        {
            //NewAdbooking.classmysql.AdvPositionTypMst select = new NewAdbooking.classmysql.AdvPositionTypMst();
            //ds = chk.chkadvposition1(str);
            //return ds;
        }
        return ds;
        //return ds;

    }
  
    [Ajax.AjaxMethod]
    public DataSet chkpastypename(string PosTypCode, string PosTypName, string compcode, string userid, string flag, string fdate, string tdate)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { PosTypCode, PosTypName, compcode, userid, flag, fdate, tdate };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.stylemaster modify = new NewAdbooking.Classes.stylemaster();

            ds = modify.chkpastypename1(PosTypCode, PosTypName, compcode, userid, fdate, tdate, flag);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.stylemster modify = new NewAdbooking.classesoracle.stylemster();
            ds = modify.chkpastypename1(PosTypCode, PosTypName, compcode, userid, fdate, tdate, flag);
        }
        else
        {
            string procedureName = "styleTypechkname";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;

    }

}
