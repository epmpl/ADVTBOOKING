using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class AgencyRoleMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {


        
			Response.Expires=-1;

			if(Session["compcode"]==null)
			{
				Response.Write("<script>window.parent.location=\"login.aspx\";window.close();</script>");
				return;
				
			}






            DataSet ds = new DataSet();
        // Read in the XML file
               ds.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();



			//This code reads the label name from the xml file
			DataSet objDataSet = new DataSet();
			// Read in the XML file
			objDataSet.ReadXml(Server.MapPath("XML/Agency_Role_Master.xml"));
			Code.Text=objDataSet.Tables[0].Rows[0].ItemArray[0].ToString() ;
			Nameoftherole.Text=objDataSet.Tables[0].Rows[0].ItemArray[1].ToString() ;
			Agencycode.Text=objDataSet.Tables[0].Rows[0].ItemArray[2].ToString() ;
			Agencysubcode.Text=objDataSet.Tables[0].Rows[0].ItemArray[3].ToString() ;

			Ajax.Utility.RegisterTypeForAjax(typeof(AgencyRoleMaster));
				//Ajax.Utility.RegisterTypeForAjax(typeof(ClientMaster));


            hiddenauto.Value = Session["autogenerated"].ToString();
			hiddencompcode.Value=Session["compcode"].ToString();
			hiddenuserid.Value=Session["userid"].ToString();

			if(!Page.IsPostBack)
			{
                pagedefinition();
           //     addagencycode();
			//	addsubsgencycode();
                txtcode.Attributes.Add("OnBlur", "javascript:return uppercase1('txtcode');");
				btnNew.Attributes.Add("OnClick","javascript:return agencynew();");
				btnCancel.Attributes.Add("OnClick","javascript:return agencycancel('AgencyRoleMaster');");
				btnModify.Attributes.Add("OnClick","javascript:return agencymodify();");
				btnSave.Attributes.Add("OnClick","javascript:return agencysave();");
				btnQuery.Attributes.Add("OnClick","javascript:return agencyquery();");
				btnExecute.Attributes.Add("OnClick","javascript:return agencyexecute();");
				btnfirst.Attributes.Add("OnClick","javascript:return agencyfirst();");
				btnprevious.Attributes.Add("OnClick","javascript:return agencyprevious();");
				btnnext.Attributes.Add("OnClick","javascript:return agencynext();");
				btnlast.Attributes.Add("OnClick","javascript:return agencylast();");
				btnExit.Attributes.Add("OnClick","javascript:return agroleexit();");
				btnDelete.Attributes.Add("OnClick","javascript:return deteagrol();");
                txtnameofrole.Attributes.Add("OnBlur","javascript:return autoornot();");

			}
            if (btnNew.Enabled == false)
                btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
            if (btnSave.Enabled == false)
                btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
            if (btnModify.Enabled == false)
                btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
            if (btnQuery.Enabled == false)
                btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
            if (btnExecute.Enabled == false)
                btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
            if (btnCancel.Enabled == false)
                btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
            if (btnfirst.Enabled == false)
                btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
            if (btnprevious.Enabled == false)
                btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
            if (btnnext.Enabled == false)
                btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
            if (btnlast.Enabled == false)
                btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
            if (btnDelete.Enabled == false)
                btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
            if (btnExit.Enabled == false)
                btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
            btnNew.Focus();
		}

		public void addagencycode()
		{
            drpagencycode.Items.Clear();
            DataSet ds = new DataSet();
            if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
            {
			NewAdbooking.Classes.Agencyrolemaster bind=new NewAdbooking.Classes.Agencyrolemaster();
			
			ds=bind.bindagencycode(Session["compcode"].ToString(),Session["userid"].ToString());
            }
            else
                if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="orcl")
                {
                    NewAdbooking.classesoracle.Agencyrolemaster bind = new NewAdbooking.classesoracle.Agencyrolemaster();

                    ds = bind.bindagencycode(Session["compcode"].ToString(), Session["userid"].ToString());

                }


            else
            {
                NewAdbooking.classmysql.Agencyrolemaster bind = new NewAdbooking.classmysql.Agencyrolemaster();

                ds = bind.bindagencycode(Session["compcode"].ToString(), Session["userid"].ToString());

            }
		
			int i;
			ListItem li1;
			li1=new ListItem();
			li1.Text="--Select Code--";
			li1.Value="0";
			li1.Selected =true;
			drpagencycode.Items.Add(li1);

			if(ds.Tables.Count > 0)
			{
				for(i=0;i<ds.Tables[0].Rows.Count ;i++)
				{
					ListItem li;
					li=new ListItem();
					li.Text=ds.Tables[0].Rows[i].ItemArray[0].ToString();
					li.Value=ds.Tables[0].Rows[i].ItemArray[0].ToString();
					
					drpagencycode.Items.Add(li);
				}

			}

		}

		public void addsubsgencycode()
		{
            drpsubcode.Items.Clear();
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {


                NewAdbooking.Classes.Agencyrolemaster bind = new NewAdbooking.Classes.Agencyrolemaster();
            
                ds = bind.bindagencycode(Session["compcode"].ToString(), Session["userid"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Agencyrolemaster bind = new NewAdbooking.classesoracle.Agencyrolemaster();

                    ds = bind.bindagencycode(Session["compcode"].ToString(), Session["userid"].ToString());

                }
            else
            {

                NewAdbooking.classmysql.Agencyrolemaster bind = new NewAdbooking.classmysql.Agencyrolemaster();

                ds = bind.bindagencycode(Session["compcode"].ToString(), Session["userid"].ToString());

            }
			int i;
			ListItem li1;
			li1=new ListItem();
			li1.Text="--Select Code--";
			li1.Value="0";
			li1.Selected =true;
			drpsubcode.Items.Add(li1);

			if(ds.Tables.Count > 0)
			{
				for(i=0;i<ds.Tables[0].Rows.Count ;i++)
				{
					ListItem li;
					li=new ListItem();
					li.Text=ds.Tables[0].Rows[i].ItemArray[1].ToString();
					li.Value=ds.Tables[0].Rows[i].ItemArray[1].ToString();
					
					drpsubcode.Items.Add(li);
				}

			}

		}



    public void pagedefinition()
    {
        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        txtcode.Enabled = false;
        txtnameofrole.Enabled = false;
        drpagencycode.Enabled = false;
        drpsubcode.Enabled = false;
        
    }
		

		[Ajax.AjaxMethod]

		public void saveinsert(string code,string nameofrole,string agencycode ,string subcode,string compcode,string userid)
        {
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.Agencyrolemaster insert = new NewAdbooking.Classes.Agencyrolemaster();
                
                da = insert.insertrole(code, nameofrole, agencycode, subcode, compcode, userid);
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Agencyrolemaster insert = new NewAdbooking.classesoracle.Agencyrolemaster();

                    da = insert.insertrole(code, nameofrole, agencycode, subcode, compcode, userid);

                }
                else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
                {
                    string procedureName = "insertintorole_insertintorole_p";
                    string[] parameterValueArray = { compcode, userid, code, nameofrole, agencycode, subcode, "" };
                    NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                    da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
            //else
            //{
            //    NewAdbooking.classmysql.Agencyrolemaster insert = new NewAdbooking.classmysql.Agencyrolemaster();

            //    da = insert.insertrole(code, nameofrole, agencycode, subcode, compcode, userid);

            //}


		}

		[Ajax.AjaxMethod]

		public void modifyrole(string code,string nameofrole,string agencycode ,string subcode,string compcode,string userid)
        {
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.Agencyrolemaster modify = new NewAdbooking.Classes.Agencyrolemaster();
              
                da = modify.modifyrole(code, nameofrole, agencycode, subcode, compcode, userid);
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Agencyrolemaster modify = new NewAdbooking.classesoracle.Agencyrolemaster();

                    da = modify.modifyrole(code, nameofrole, agencycode, subcode, compcode, userid);

                }
                else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
                {
                    string procedureName = "modifyintorole_modifyintorole_p";
                    string[] parameterValueArray = { agencycode, subcode, nameofrole, compcode, userid, code, "" };
                    NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                    da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
            //else
            //{
            //    NewAdbooking.classmysql.Agencyrolemaster modify = new NewAdbooking.classmysql.Agencyrolemaster();

            //    da = modify.modifyrole(code, nameofrole, agencycode, subcode, compcode, userid);
            //}


		}

		[Ajax.AjaxMethod]

		public DataSet agencyexecute(string code,string nameofrole,string agencycode ,string subcode,string compcode,string userid)
        {
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.Agencyrolemaster exe = new NewAdbooking.Classes.Agencyrolemaster();
              
                da = exe.execute(code, nameofrole, agencycode, subcode, compcode, userid);

                return da;

            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {

                    NewAdbooking.classesoracle.Agencyrolemaster exe = new NewAdbooking.classesoracle.Agencyrolemaster();

                    da = exe.execute(code, nameofrole, agencycode, subcode, compcode, userid);

                    return da;
                }
                else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
                {
                    string procedureName = "executerole_executerole_p";
                    string[] parameterValueArray = { compcode, userid, code, nameofrole, agencycode, subcode, "" };
                    NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                    da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                    return da;
                }
            //else
            //{
            //    NewAdbooking.classmysql.Agencyrolemaster exe = new NewAdbooking.classmysql.Agencyrolemaster();

            //    da = exe.execute(code, nameofrole, agencycode, subcode, compcode, userid);

            //    return da;
            //}

            return da;
		}

		[Ajax.AjaxMethod]

		public DataSet chkrole(string code,string compcode,string userid, string nameofrole)
		{
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.Agencyrolemaster chk = new NewAdbooking.Classes.Agencyrolemaster();

                da = chk.chkroleage(code, compcode, userid, nameofrole);

                return da;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Agencyrolemaster chk = new NewAdbooking.classesoracle.Agencyrolemaster();

                    da = chk.chkroleage(code, compcode, userid, nameofrole);

                    return da;
                }
            else
            {
                NewAdbooking.classmysql.Agencyrolemaster chk = new NewAdbooking.classmysql.Agencyrolemaster();

                da = chk.chkroleage(code, compcode, userid, nameofrole);

                return da;
            }


		}

		[Ajax.AjaxMethod]

		public DataSet first(string compcode,string userid)
        {
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.Agencyrolemaster firstag = new NewAdbooking.Classes.Agencyrolemaster();
            
                da = firstag.firstdata(compcode, userid);
                return da;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Agencyrolemaster firstag = new NewAdbooking.classesoracle.Agencyrolemaster();

                    da = firstag.firstdata(compcode, userid);
                    return da;
                }
            else
            {

                NewAdbooking.classmysql.Agencyrolemaster firstag = new NewAdbooking.classmysql.Agencyrolemaster();

                da = firstag.firstdata(compcode, userid);
                return da;
            }

		}


		[Ajax.AjaxMethod]

		public DataSet del(string compcode,string userid,string doccode)
        {
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.Agencyrolemaster firstag = new NewAdbooking.Classes.Agencyrolemaster();
             
                da = firstag.deldata(compcode, userid, doccode);
                return da;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Agencyrolemaster firstag = new NewAdbooking.classesoracle.Agencyrolemaster();

                    da = firstag.deldata(compcode, userid, doccode);
                    return da;
                }
            else
            {
                NewAdbooking.classmysql.Agencyrolemaster firstag = new NewAdbooking.classmysql.Agencyrolemaster();

                da = firstag.deldata(compcode, userid, doccode);
                return da;
            }
		}




    [Ajax.AjaxMethod]
    public DataSet chksrolecode(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.Agencyrolemaster chk = new NewAdbooking.Classes.Agencyrolemaster();
        
            ds = chk.chksrolecode1(str);
            return ds;

        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Agencyrolemaster chk = new NewAdbooking.classesoracle.Agencyrolemaster();

                ds = chk.chksrolecode1(str);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.Agencyrolemaster chk = new NewAdbooking.classmysql.Agencyrolemaster();

            ds = chk.chksrolecode1(str);
            return ds;
        }

    }







		
		private void hiddenusername_ServerChange(object sender, System.EventArgs e)
		{
		
		}

		private void hiddenuserid_ServerChange(object sender, System.EventArgs e)
		{
		
		}

		private void hiddencompcode_ServerChange(object sender, System.EventArgs e)
		{
		
		}















    }

