using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class ColorRateGroupMast : System.Web.UI.Page
{
    string formname = "ColorRateGroupMast";
    static int FlagStatus,fpnl=0;
 
    static string saveormodify;
    string dateformat;
     string dd, mm, yyyy, dd1, mm1, yyyy1;
    string validfromdate, validtill,message;
    static DataSet crexecute = new DataSet();
    static string execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, exetill, exeform,execolor, exeadtype;
    string compcode, userid;
    NewAdbooking.Classes.ColorRateGroupMast execute = new NewAdbooking.Classes.ColorRateGroupMast();
    NewAdbooking.classmysql.ColorRateGroupMast execute1 = new NewAdbooking.classmysql.ColorRateGroupMast();
    NewAdbooking.classesoracle.ColorRateGroupMast execute2 = new NewAdbooking.classesoracle.ColorRateGroupMast();
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;

        if (Session["compcode"] == null)
        {
            d2.Text = "<script>alert('session Expired');window.close();</script>";
            //Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        else
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            compcode = hiddencompcode.Value;
            userid = hiddenuserid.Value;
        
        }

        formname = "ColorRateGroupMast";

        hiddenauto.Value = Session["autogenerated"].ToString();

        if (Session["autogenerated"].ToString() == "1")
        {

            txtcode .Enabled = false;

        }

        Ajax.Utility.RegisterTypeForAjax(typeof(ColorRateGroupMast));

        DataSet objDataSet = new DataSet();
        // Read in the XML file
        objDataSet.ReadXml(Server.MapPath("XML/ColorRateGroupMast.xml"));
        lbpackagecode.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        lbpackagename .Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        lbpublication .Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        lbedition .Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        lbsuplement .Text = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        lbcolor .Text = objDataSet.Tables[0].Rows[0].ItemArray[5].ToString();
        lbpremium.Text = objDataSet.Tables[0].Rows[0].ItemArray[6].ToString();
        lbover.Text = objDataSet.Tables[0].Rows[0].ItemArray[7].ToString();
        lbform.Text = objDataSet.Tables[0].Rows[0].ItemArray[8].ToString();
        lbtodate .Text = objDataSet.Tables[0].Rows[0].ItemArray[9].ToString();
        lbcolorcode.Text = objDataSet.Tables[0].Rows[0].ItemArray[10].ToString();
        lbladtyp.Text = objDataSet.Tables[0].Rows[0].ItemArray[11].ToString();
        lblrate.Text = objDataSet.Tables[0].Rows[0].ItemArray[12].ToString();

        //This code reads the label name from the xml file
        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        btnNew.Focus();

        if (!Page.IsPostBack)
        {
            txtpackagecode.Enabled = false;
            txtpackagename.Enabled = false;
            drppublication.Enabled = false;
            drpcolorname.Enabled = false;
            txtover.Enabled = false;
            txtfromdate.Enabled = false;
            txttilldate.Enabled = false;
            txtcode.Enabled = false;
            drpcolor.Enabled = false;
            drpadtyp.Enabled = false;
            drprategroupcode.Enabled = false;
            bindadtype();
            bindrategroupcode();
           // BindPackage();
            BindPublication();
            bindcolor();
            getbuttoncheck(formname);

            btnSave.Attributes.Add("onclick", "javascript:return saveclick();");
            //btnNew.Attributes.Add("OnClick", "javascript:return newclick();");
            btnDelete.Attributes.Add("onclick", "return confirm('Are you sure you want to delete?');");
            btnExit.Attributes.Add("onclick", "javascript:return exitclick();");
            //txtpackagename.Attributes.Add("OnChange", "javascript:return autoornot();");
            //btnQuery.Attributes.Add("OnClick", "javascript:return chkquery1();");
            txtover.Attributes.Add("OnChange", "javascript:return chkpercent();");
            //txtpackagecode.Attributes.Add("OnChange", "javascript:return packname()");
           // txtfromdate.Attributes.Add("onBlur", "javascript:return validateform('ColorRateGroupMast'); ");


            txttilldate.Attributes.Add("onBlur", "javascript:return checkdate1(this);");
            txtfromdate.Attributes.Add("onBlur", "javascript:return checkdate1(this);");

        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
    }
    ///////////////bind rate group code
    private void bindrategroupcode()
    {
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.pop bindrate = new NewAdbooking.Classes.pop();
            dx = bindrate.ratebind(Session["compcode"].ToString());
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.pop bindrate = new NewAdbooking.classesoracle.pop();
                dx = bindrate.ratebind(Session["compcode"].ToString());

            }
            else
            {
                NewAdbooking.classmysql.pop bindrate = new NewAdbooking.classmysql.pop();
                dx = bindrate.ratebind(Session["compcode"].ToString());
            }


        drprategroupcode.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Rate Group Code-";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drprategroupcode.Items.Add(li1);

        if (dx.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < dx.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = dx.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = dx.Tables[0].Rows[i].ItemArray[1].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drprategroupcode.Items.Add(li);
            }

        }
        //hiddenrategroupcode.Value = Session["ratecode"].ToString();
        //drprategroupcode.SelectedValue = Session["ratecode"].ToString();
    }

    public void bindadtype()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CombinationMaster bind = new NewAdbooking.Classes.CombinationMaster();

            ds = bind.adtypbind(Session["compcode"].ToString());
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CombinationMaster bind = new NewAdbooking.classesoracle.CombinationMaster();

            ds = bind.adtypbind(Session["compcode"].ToString());

        }
        else
        {
            NewAdbooking.classmysql.CombinationMaster bind = new NewAdbooking.classmysql.CombinationMaster();

            ds = bind.adtypbind(Session["compcode"].ToString());

        }

        int i;
        ListItem li1;

        li1 = new ListItem();
        drpadtyp.Items.Clear();
        li1.Text = "-Select Ad Type-";
        li1.Value = "0";
        li1.Selected = true;
        drpadtyp.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpadtyp.Items.Add(li);


        }

    }
    public void BindPublication()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorRateGroupMast publication = new NewAdbooking.Classes.ColorRateGroupMast();
            ds = publication.pubmast(hiddencompcode.Value);
        }
        else if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ColorRateGroupMast publication = new NewAdbooking.classesoracle.ColorRateGroupMast();
            ds = publication.pubmast(hiddencompcode.Value);
        }
        else
        {
            NewAdbooking.classmysql.ColorRateGroupMast publication = new NewAdbooking.classmysql.ColorRateGroupMast();
            ds = publication.pubmast(hiddencompcode.Value);
        }
        
        
        drppublication.Items.Clear();
        ListItem li = new ListItem();
        li.Text = "--Select Publication--";
        li.Value = "0";
        li.Selected = true;
        drppublication.Items.Add(li);

        int a;

        for (a = 0; a < ds.Tables[0].Rows.Count; a++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[a].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[a].ItemArray[0].ToString();
            drppublication.Items.Add(li1);
        
        }    
    }

    public void bindcolor()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorRateGroupMast color = new NewAdbooking.Classes.ColorRateGroupMast();

            ds = color.fillcolor(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ColorRateGroupMast color = new NewAdbooking.classesoracle.ColorRateGroupMast();

            ds = color.fillcolor(hiddencompcode.Value);
        }
        else
        {
            NewAdbooking.classmysql.ColorRateGroupMast color = new NewAdbooking.classmysql.ColorRateGroupMast();

            ds = color.fillcolor(hiddencompcode.Value);
        }

        ListItem li = new ListItem();
        li.Text = "--Select Color--";
        li.Value = "0";
        li.Selected = true;
        drpcolorname .Items.Clear();
        drpcolorname.Items.Add(li);
        int z;

        for (z = 0; z < ds.Tables[0].Rows.Count; z++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[z].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[z].ItemArray[0].ToString();
            drpcolorname.Items.Add(li1);
        
        }
    }

    /*public void BindPackage()
    {
        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorRateGroupMast package = new NewAdbooking.Classes.ColorRateGroupMast();

            ds = package.selpackage(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ColorRateGroupMast package = new NewAdbooking.classesoracle.ColorRateGroupMast();
            ds = package.selpackage(hiddencompcode.Value);
        }
        else
        {
            NewAdbooking.classmysql.ColorRateGroupMast package = new NewAdbooking.classmysql.ColorRateGroupMast();
            ds = package.selpackage(hiddencompcode.Value);
        }

        ListItem li = new ListItem();
        li.Text = "--Select Package--";
        li.Value = "0";
        li.Selected = true;
        txtpackagecode.Items.Clear();
        txtpackagecode.Items.Add(li);

        int p;
        for (p = 0; p < ds.Tables[0].Rows.Count; p++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[p].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[p].ItemArray[0].ToString();
            txtpackagecode.Items.Add(li1);
        
        }
    
    }*/

    protected void btnNew_Click1(object sender, EventArgs e)
    {
        txtpackagecode.SelectedValue = "0";
        txtpackagename.Text = "";
        drppublication.SelectedValue = "0";
        drpedition.SelectedValue = "0";
        drpsupplement.SelectedValue = "0";
        drpcolor.SelectedValue = "0";
        drpcolorname.SelectedValue = "0";
        txtover.Text = "";
        txttilldate.Text = "";
        txtfromdate.Text = "";
        txtcode.Text = "";
        drpadtyp.SelectedValue = "0";
        drprategroupcode.SelectedValue = "0";
        saveormodify = "0";

        if (hiddenauto.Value == "1")
        {
           txtcode.Enabled = false;
        }
        else
        {
            txtcode.Enabled = true;
        }

        txtpackagecode.Enabled = true;
        txtpackagename.Enabled = true;
        drppublication.Enabled = true;
        drpedition.Enabled = true;
        drpsupplement.Enabled = true;
        drpcolor.Enabled = true;
        drpcolorname.Enabled = true;
        txtover.Enabled = true;
        txtfromdate.Enabled = true;
        drprategroupcode.Enabled = true;
        txttilldate.Enabled = true;
        drpadtyp.Enabled = true;
        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnQuery.Enabled = false;
        btnNew.Enabled = false;

        ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "ss", "autoornot()", true);
        btnimage();
    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "abc", "alert('session Expired');window.close();", true);

            return;
        }

        string crgcode = txtpackagecode.SelectedValue ;
        string crgname = txtpackagename.Text;
        string drppub = drppublication.SelectedValue;
        string drpedi = drpedition.SelectedValue;
        string drpsupp = drpsupplement.SelectedValue;
        string drpcolrate = drpcolor.SelectedValue;
        string drpcolname = drpcolorname.SelectedValue;
        string crgover = txtover.Text;
        string tilldate= txttilldate.Text;
        string fromdate = txtfromdate.Text;
        string colorcode = (txtcode.Text).Trim();
        string adtype = drpadtyp.SelectedValue;
        char[] splitterfrom = { '/' };
        char[] splittertill = { '/' };
        string[] myarrayfrom;
        string[] myarraytill;
        string rategpcode = drprategroupcode.SelectedValue;

        string dateformat = Session["dateformat"].ToString();

        myarrayfrom = fromdate.Split(splitterfrom);
        myarraytill = tilldate.Split(splittertill);
        //splitting of date
        if (fromdate != null && fromdate != "")
        {

            myarrayfrom = fromdate.Split(splitterfrom);
        }
        if (tilldate != null && tilldate != "")
        {

          myarraytill = tilldate.Split(splittertill);
        }

        if (dateformat == "dd/mm/yyyy")
        {
            //for from date
            if (fromdate != null && fromdate != "")
            {
                dd1 = myarrayfrom[0];
                mm1 = myarrayfrom[1];
                yyyy1 = myarrayfrom[2];

                validfromdate = mm1 + "/" + dd1 + "/" + yyyy1;
            }
            else
            {
                validfromdate = "";
            }

            //for till date
            if (tilldate != null && tilldate != "")
            {
                dd1 = myarraytill[0];
                mm1 = myarraytill[1];
                yyyy1 = myarraytill[2];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
            }
            else
            {
                validtill = "";
            }
        }

        if (dateformat == "yyyy/mm/dd")
        {
            //for from date
            if (fromdate != null && fromdate != "")
            {
                yyyy = myarrayfrom[0];
                mm = myarrayfrom[1];
                dd = myarrayfrom[2];

                validfromdate = mm + "/" + dd + "/" + yyyy;
            }
            else
            {
                validfromdate = "";
            }
            //for till date
            if (tilldate != null && tilldate != "")
            {
                yyyy1 = myarraytill[0];
                mm1 = myarraytill[1];
                dd1 = myarraytill[2];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
            }
            else
            {
                validtill = "";
            }

        }

        if (dateformat == "mm/dd/yyyy")
        {
            if (fromdate != null && fromdate != "")
            {
                yyyy = myarrayfrom[2];
                mm = myarrayfrom[0];
                dd = myarrayfrom[1];

                validfromdate = mm + "/" + dd + "/" + yyyy;
                txtfromdate.Text= validfromdate ;
            }
            else
            {
                validfromdate = "";
            }
            if (tilldate != null && tilldate != "")
            {
                yyyy1 = myarraytill[2];
                mm1 = myarraytill[0];
                dd1 = myarraytill[1];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
                txttilldate.Text= validtill;
            }
            else
            {
                validtill = "";
            }

            //if (fromdate < tilldate)
            //{
            //    message = "Till Date is greter Then Form date";
            //    AspNetMessageBox(message);
            //    return;
                       
            //}



        }


        //try
        //{
        //    string sess = Session["compcode"].ToString();
        //}
        //catch (Exception ex)
        //{
        //    ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "abc", "alert('session Expired');window.close();", true);

        //    return;
        //}

        if (saveormodify == "0")
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.ColorRateGroupMast getcode = new NewAdbooking.Classes.ColorRateGroupMast();

                ds = getcode.chkcode(colorcode, Session["compcode"].ToString());
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.ColorRateGroupMast getcode = new NewAdbooking.classesoracle.ColorRateGroupMast();
                ds = getcode.chkcode(colorcode, Session["compcode"].ToString());
            }

            else
            {
                NewAdbooking.classmysql.ColorRateGroupMast getcode = new NewAdbooking.classmysql.ColorRateGroupMast();

                ds = getcode.chkcode(colorcode, Session["compcode"].ToString());
            }

            if (ds.Tables[0].Rows.Count > 0)
            {

                message = "This Color Code Is Already Defined";
                AspNetMessageBox(message);
                ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "ss", "a1()", true);

                return;
                //message = "Please Enter The Product Code of ";
                //AspNetMessageBox(message);
                //return;

            }

            //else
           // {
               /* DataSet dc = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.ColorRateGroupMast ckcolor = new NewAdbooking.Classes.ColorRateGroupMast();

                    dc = ckcolor.chkcolor(drpcolname, Session["compcode"].ToString(), drppublication.SelectedValue);
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.ColorRateGroupMast ckcolor = new NewAdbooking.classesoracle.ColorRateGroupMast();

                    dc = ckcolor.chkcolor(drpcolname, Session["compcode"].ToString(), drppublication.SelectedValue);
                }
                else
                {
                    NewAdbooking.classmysql.ColorRateGroupMast ckcolor = new NewAdbooking.classmysql.ColorRateGroupMast();

                    dc = ckcolor.chkcolor(drpcolname, Session["compcode"].ToString());
                }

                if (dc.Tables[0].Rows.Count > 0)
                {

                    message = "This Color Code Is Already Defined";
                    AspNetMessageBox(message);
                    ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "ss", "a2()", true);

                    return;

                }*/

                else
                {
                    DataSet di = new DataSet();
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                        NewAdbooking.Classes.ColorRateGroupMast insert = new NewAdbooking.Classes.ColorRateGroupMast();
                        di = insert.insertedvalue(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), Session["userid"].ToString(), validfromdate, validtill, colorcode, adtype, rategpcode);
                    }
                    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.ColorRateGroupMast insert = new NewAdbooking.classesoracle.ColorRateGroupMast();
                        di = insert.insertedvalue(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), Session["userid"].ToString(), validfromdate, validtill, colorcode, adtype, rategpcode);
                   
                    }
                    else
                    {
                        NewAdbooking.classmysql.ColorRateGroupMast insert = new NewAdbooking.classmysql.ColorRateGroupMast();

                        di = insert.insertedvalue(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), Session["userid"].ToString(), validfromdate, validtill, colorcode,adtype);
                    }

                    getbuttoncheck(formname);
                    // message = "Data Saved Sucessfully ";
                    DataSet ds1 = new DataSet();
                    ds1.ReadXml(Server.MapPath("XML/errormessage.xml"));
                    message = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
                    AspNetMessageBox(message);

                    txtpackagecode.SelectedValue = "0";
                    txtpackagename.Text = "";
                    drppublication.SelectedValue = "0";
                    drpedition.SelectedValue = "0";
                    drpsupplement.SelectedValue = "0";
                    drpcolor.SelectedValue = "0";
                    drpcolorname.SelectedValue = "0";
                    txtover.Text = "";
                    txtfromdate.Text = "";
                    txttilldate.Text = "";
                    txtcode.Text = "";
                    drpadtyp.SelectedValue = "0";

                    txtcode.Enabled = false;
                    txtpackagecode.Enabled = false;
                    txtpackagename.Enabled = false;
                    drppublication.Enabled = false;
                    drpedition.Enabled = false;
                    drpsupplement.Enabled = false;
                    drpcolor.Enabled = false;
                    drpcolorname.Enabled = false;
                    txtover.Enabled = false;
                    txtfromdate.Enabled = false;
                    txttilldate.Enabled = false;
                    drpadtyp.Enabled = false;
                    drprategroupcode.Enabled = false;
                    btnimage();
                    return;


                }
          //  }

        }
        //for modify
         else
        {
            string codevalue = txtcode.Text;

            //DataSet dscol = new DataSet();
            //if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            //{
            //    NewAdbooking.Classes.ColorRateGroupMast ckcolor1 = new NewAdbooking.Classes.ColorRateGroupMast();

            //    dscol = ckcolor1.checkcolor(codevalue, Session["compcode"].ToString());
            //}
            //else
            //{
            //    NewAdbooking.classmysql.ColorRateGroupMast ckcolor1 = new NewAdbooking.classmysql.ColorRateGroupMast();

            //    dscol = ckcolor1.checkcolor(codevalue, Session["compcode"].ToString());
            //}
            //if (dscol.Tables[0].Rows.Count > 0)
            //{
            //    for (int l = 0; l <= dscol.Tables[0].Rows.Count - 1; l++)
            //    {
            //        if (drpcolorname.SelectedValue == dscol.Tables[0].Rows[l].ItemArray[0].ToString())
            //        {
            //            message = "This Color Code Is Already Defined";
            //            AspNetMessageBox(message);
            //            ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "ss", "a2()", true);

            //            return;

            //        }

            //    }
            //}


            //else
            {
                DataSet du = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.ColorRateGroupMast upadte1 = new NewAdbooking.Classes.ColorRateGroupMast();

                    du = upadte1.updatecrg(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), validfromdate, validtill, colorcode, adtype, rategpcode);//, Session["userid"].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.ColorRateGroupMast upadte1 = new NewAdbooking.classesoracle.ColorRateGroupMast();
                    du = upadte1.updatecrg(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), validfromdate, validtill, colorcode, adtype, rategpcode);//, Session["userid"].ToString());
               
                }
                else
                {
                    NewAdbooking.classmysql.ColorRateGroupMast upadte1 = new NewAdbooking.classmysql.ColorRateGroupMast();

                    du = upadte1.updatecrg(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), validfromdate, validtill, colorcode, adtype);//, Session["userid"].ToString());
                }

                txtcode.Enabled = false; ;
                txtpackagecode.Enabled = false;
                txtpackagename.Enabled = false;
                drppublication.Enabled = false;
                drpedition.Enabled = false;
                drpsupplement.Enabled = false;
                drpcolor.Enabled = false;
                drpcolorname.Enabled = false;
                txtover.Enabled = false;
                txtfromdate.Enabled = false;
                txttilldate.Enabled = false;
                drpadtyp.Enabled = false;
                drprategroupcode.Enabled = false;
                //////////////crexecute.Tables[0].Rows[fpnl].ItemArray[0] = txtpackagecode.SelectedValue;
                //////////////crexecute.Tables[0].Rows[fpnl].ItemArray[1] = txtpackagename.Text;
                //////////////crexecute.Tables[0].Rows[fpnl].ItemArray[2] = drppublication.SelectedValue;
                //////////////crexecute.Tables[0].Rows[fpnl].ItemArray[3] = drpedition .SelectedValue;
                //////////////crexecute.Tables[0].Rows[fpnl].ItemArray[4] = drpsupplement.SelectedValue;

                //crexecute.Tables[0].Rows[fpnl].ItemArray[0] = drpcolor.SelectedValue;
                //crexecute.Tables[0].Rows[fpnl].ItemArray[1] = drpcolorname.SelectedValue;
                //crexecute.Tables[0].Rows[fpnl].ItemArray[2] = txtover.Text;
                //crexecute.Tables[0].Rows[fpnl].ItemArray[3] = txtfromdate.Text;
                //crexecute.Tables[0].Rows[fpnl].ItemArray[4] = txttilldate.Text;
                //crexecute.Tables[0].Rows[fpnl].ItemArray[5] = txtcode.Text;

                //if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                //{
                //    NewAdbooking.Classes.ColorRateGroupMast execute = new NewAdbooking.Classes.ColorRateGroupMast();
                //    crexecute = execute.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor);//, Session["userid"].ToString());
                //}
                //else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                //{
                //    NewAdbooking.classesoracle.ColorRateGroupMast execute = new NewAdbooking.classesoracle.ColorRateGroupMast();
                //    crexecute = execute.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor);//, Session["userid"].ToString());
           
                //}
                //else
                //{
                //    NewAdbooking.classmysql.ColorRateGroupMast execute = new NewAdbooking.classmysql.ColorRateGroupMast();
                //    crexecute = execute.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor);//, Session["userid"].ToString());
                //}
                ////DataSet ds = new DataSet();
                ////ds = crexecute;

                ////hiddencompcode.Value = crexecute.Tables[0].Rows[0].ItemArray[0].ToString();
                ////hiddenuserid.Value = crexecute.Tables[0].Rows[0].ItemArray[1].ToString();
                ////txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[2].ToString();
                ////txtpackagename.Text = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
                ////drppublication.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();
                ////drpedition.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[5].ToString();
                ////drpsupplement.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[6].ToString();
                ////drpcolor.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[7].ToString();
                ////drpcolorname.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[8].ToString();
                ////txtover.Text = crexecute.Tables[0].Rows[0].ItemArray[9].ToString();
                ////hiddendateformat.Value = crexecute.Tables[0].Rows[fpnl].ItemArray[10].ToString();
                ////txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[11].ToString();
                ////txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[12].ToString();
                ////string fromdat = crexecute.Tables[0].Rows[fpnl].ItemArray[11].ToString();
                ////string tdat = crexecute.Tables[0].Rows[fpnl].ItemArray[12].ToString();
                ////txtcode.Text = crexecute.Tables[0].Rows[0].ItemArray[13].ToString();

                ////txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[0].ToString();
                ////txtpackagecode_SelectedIndexChanged(sender, e);
                ////txtpackagename.Text = crexecute.Tables[0].Rows[0].ItemArray[1].ToString();
                ////drpcolor.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[2].ToString();
                ////drpcolorname.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
                ////txtover.Text = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();
                ////txtfromdate.Text = crexecute.Tables[0].Rows[0].ItemArray[5].ToString();
                ////txttilldate.Text = crexecute.Tables[0].Rows[0].ItemArray[6].ToString();
                ////txtcode.Text = crexecute.Tables[0].Rows[0].ItemArray[7].ToString();
                ////string fromdat = crexecute.Tables[0].Rows[0].ItemArray[5].ToString();
                ////string tdat = crexecute.Tables[0].Rows[0].ItemArray[6].ToString();

                //drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                //drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                //txtover.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                //txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                //txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                //txtcode.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[5].ToString();
                //string fromdat = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                //string tdat = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();



                //splitting of date
                //char[] splitterfromz = { '/' };
                //string[] myarrayfromz = fromdat.Split(splitterfromz);

                //char[] splittertillz = { '/' };
                //string[] myarraytillz = tdat.Split(splittertillz);

                //if (dateformat == "dd/mm/yyyy")
                //{
                //    //for from date
                //    mm = myarrayfromz[0];
                //    dd = myarrayfromz[1];
                //    yyyy = myarrayfromz[2];

                //    txtfromdate.Text = dd + "/" + mm + "/" + yyyy;

                //    //for till date
                //    mm1 = myarraytillz[0];
                //    dd1 = myarraytillz[1];
                //    yyyy1 = myarraytillz[2];

                //    txttilldate.Text = dd1 + "/" + mm1 + "/" + yyyy1;

                //}

                //if (dateformat == "yyyy/mm/dd")
                //{
                //    //for from date
                //    mm = myarrayfromz[0];
                //    dd = myarrayfromz[1];
                //    yyyy = myarrayfromz[2];

                //    txtfromdate.Text = yyyy + "/" + mm + "/" + dd;

                //    //for till date
                //    mm1 = myarraytillz[0];
                //    dd1 = myarraytillz[1];
                //    yyyy1 = myarraytillz[2];

                //    txttilldate.Text = yyyy1 + "/" + mm1 + "/" + dd1;


                //}

                //if (dateformat == "mm/dd/yyyy")
                //{
                //    txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                //    txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();

                //}

            }
            updateStatus();
            if (crexecute.Tables[0].Rows.Count == 1)
            {
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;
                btnnext.Enabled = false;
                btnlast.Enabled = false;
            }
            if (fpnl == 0)
            {
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;
            }
            else if (fpnl == crexecute.Tables[0].Rows.Count)
            {
                btnnext.Enabled = false;
                btnlast.Enabled = false;
            }
            DataSet ds2 = new DataSet();
            ds2.ReadXml(Server.MapPath("XML/errormessage.xml"));
            message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
            AspNetMessageBox(message);
            //message = "Data Update Sucessfully ";
            //AspNetMessageBox(message);
            btnimage();
            return;
         }

    }
    protected void btnModify_Click(object sender, EventArgs e)
    {
        txtpackagecode.Enabled = true;
        txtpackagename.Enabled = true;
        drppublication.Enabled = false;
        drpedition.Enabled = true;
        drpsupplement.Enabled = true;
        drpcolor.Enabled = true;
        drpcolorname.Enabled = false;
        txtover.Enabled = true;
        txtfromdate.Enabled = true;
        txttilldate.Enabled = true;
        txtcode.Enabled = false;
        drpadtyp.Enabled = true;
        drprategroupcode.Enabled = true;

        saveormodify = "1";

        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnQuery.Enabled = false;
        btnimage();

    }
    protected void btnQuery_Click1(object sender, EventArgs e)
    {

        txtpackagecode.SelectedValue  = "0";
        txtpackagename.Text = "";
        drppublication.SelectedValue = "0";
        drpedition.SelectedValue = "0";
        drpsupplement.SelectedValue = "0";
        drpcolor.SelectedValue = "0";
        drpcolorname.SelectedValue = "0";
        drprategroupcode.SelectedValue = "0";
        txtover.Text = "";
        txttilldate.Text = "";
        txtfromdate.Text = "";
        txtcode.Text = "";
        drpadtyp.SelectedValue = "0";

        txtpackagecode.Enabled = true;
        txtpackagename.Enabled = true;
        drppublication.Enabled = true;
        drpedition.Enabled = true;
        drpsupplement.Enabled = true;
        drpcolor.Enabled = true;
        drpcolorname.Enabled = true;
        txtover.Enabled = true;
        drprategroupcode.Enabled = false;
        txtfromdate.Enabled = true;
        txttilldate.Enabled = true;
        txtcode.Enabled = true;
        drpadtyp.Enabled = true;


        chkstatus(FlagStatus);


        btnQuery.Enabled = false;
        btnExecute.Enabled = true;
        btnSave.Enabled = false;
        btnimage();
    }
    protected void btnExecute_Click(object sender, EventArgs e)
    {

        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "abc", "alert('session Expired');window.close();", true);

            return;
        }
       
        string crgcode = txtpackagecode.SelectedValue ;
        execrgcode = crgcode;
        string crgname = txtpackagename.Text;
        execrgname = crgname;
        string drppub = drppublication.SelectedValue;
        exepub = drppub;
        string drpedi = drpedition.SelectedValue;
        exeedition = drpedi;
        string drpsupp = drpsupplement.SelectedValue;
        exesupp = drpsupp;
        string drpcolrate = drpcolor.SelectedValue;
        execolrate = drpcolrate;
        string drpcolname = drpcolorname.SelectedValue;
        execolname = drpcolname;
        string crgover = txtover.Text;
        execrgover = crgover;
        string tilldate = txttilldate.Text;
        exetill = tilldate;
        string fromdate = txtfromdate.Text;
        exeform = fromdate;
        string colorcode = txtcode.Text ;
        execolor = colorcode;

        string adtype = drpadtyp.SelectedValue;
        exeadtype = adtype;
        //************ for date format**************

        char[] splitterfrom = { '/' };
        char[] splittertill = { '/' };
        string[] myarrayfrom;
        string[] myarraytill;

        string dateformat = Session["dateformat"].ToString();

        myarrayfrom = fromdate.Split(splitterfrom);
        myarraytill = tilldate.Split(splittertill);
        //splitting of date
        if (fromdate != null && fromdate != "")
        {

            myarrayfrom = fromdate.Split(splitterfrom);
        }
        if (tilldate != null && tilldate != "")
        {

            myarraytill = tilldate.Split(splittertill);
        }

        if (dateformat == "dd/mm/yyyy")
        {
            //for from date
            if (fromdate != null && fromdate != "")
            {
                dd = myarrayfrom[0];
                mm = myarrayfrom[1];
                yyyy = myarrayfrom[2];

                validfromdate = mm + "/" + dd + "/" + yyyy;
            }
            else
            {
                validfromdate = "";
            }

            //for till date
            if (tilldate != null && tilldate != "")
            {
                dd1 = myarraytill[0];
                mm1 = myarraytill[1];
                yyyy1 = myarraytill[2];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
            }
            else
            {
                validtill = "";
            }
        }

        if (dateformat == "yyyy/mm/dd")
        {
            //for from date
            if (fromdate != null && fromdate != "")
            {
                yyyy = myarrayfrom[0];
                mm = myarrayfrom[1];
                dd = myarrayfrom[2];

                validfromdate = mm + "/" + dd + "/" + yyyy;
            }
            else
            {
                validfromdate = "";
            }
            //for till date
            if (tilldate != null && tilldate != "")
            {
                yyyy1 = myarraytill[0];
                mm1 = myarraytill[1];
                dd1 = myarraytill[2];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
            }
            else
            {
                validtill = "";
            }

        }

        if (dateformat == "mm/dd/yyyy")
        {
            if (fromdate != null && fromdate != "")
            {
                yyyy = myarrayfrom[0];
                mm = myarrayfrom[1];
                dd = myarrayfrom[2];

                validfromdate = mm + "/" + dd + "/" + yyyy;
                txtfromdate.Text = validfromdate;
            }
            else
            {
                validfromdate = "";
            }
            if (tilldate != null && tilldate != "")
            {
                yyyy1 = myarraytill[0];
                mm1 = myarraytill[1];
                dd1 = myarraytill[2];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
                txttilldate.Text = validtill;
            }
            else
            {
                validtill = "";
            }



        }
        //try
        //{
        //    string sess = Session["compcode"].ToString();
        //}
        //catch (Exception ex)
        //{
        //    ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "abc", "alert('session Expired');window.close();", true);

        //    return;
        //}
       

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.ColorRateGroupMast execute = new NewAdbooking.Classes.ColorRateGroupMast();
                crexecute = execute.CR_Execute(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), fromdate, tilldate, colorcode, adtype);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.ColorRateGroupMast execute = new NewAdbooking.classesoracle.ColorRateGroupMast();
                crexecute = execute.CR_Execute(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), fromdate, tilldate, colorcode,adtype);

            }
            else
            {
                NewAdbooking.classmysql.ColorRateGroupMast execute = new NewAdbooking.classmysql.ColorRateGroupMast();
                crexecute = execute.CR_Execute(crgcode, crgname, drppub, drpedi, drpsupp, drpcolrate, drpcolname, crgover, Session["compcode"].ToString(), fromdate, tilldate, colorcode, adtype);
            }

            if (crexecute.Tables[0].Rows.Count == 0)
            {
                message = "Your Search Criteria Does Not Exit";
                AspNetMessageBox(message);

                //chkstatus(FlagStatus);
                updateStatus();
                getbuttoncheck(formname);

                txtpackagecode.SelectedValue = "0";
                txtpackagename.Text = "";
                drppublication.SelectedValue = "0";
                drpedition.SelectedValue = "0";
                drpsupplement.SelectedValue = "0";
                drpcolor.SelectedValue = "0";
                drpcolorname.SelectedValue = "0";
                txtcode.Text = "";
                btnimage();
                return;


            }

            else
            {
                if (drpcolor.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[0].ToString()) != null)
                {
                    drpcolor.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[0].ToString();
                }
                else
                {
                    drpcolor.SelectedValue = "0";
                }

                if (drpcolorname.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[1].ToString()) != null)
                {
                    drpcolorname.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[1].ToString();
                }
                else
                {
                    drpcolorname.SelectedValue = "0";
                }

                
                txtover.Text = crexecute.Tables[0].Rows[0].ItemArray[2].ToString();
                txtfromdate.Text = dateCorrect(dateformat, crexecute.Tables[0].Rows[0].ItemArray[3].ToString());
                txttilldate.Text = dateCorrect(dateformat, crexecute.Tables[0].Rows[0].ItemArray[4].ToString());
                txtcode.Text = crexecute.Tables[0].Rows[0].ItemArray[5].ToString();
             
                if (drppublication.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[6].ToString()) != null)
                {
                    drppublication.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[6].ToString();
                }
                else
                {
                    drppublication.SelectedValue = "0";
                }

                if (drpadtyp.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[9].ToString()) != null)
                {
                    drpadtyp.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[9].ToString();
                }
                else
                {
                    drpadtyp.SelectedValue = "0";
                }

                bindPackage();
                if (txtpackagecode.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[7].ToString()) != null)
                {
                    txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[7].ToString();
                }
                else
                {
                    txtpackagecode.SelectedValue = "0";
                }
                txtpackagename.Text = crexecute.Tables[0].Rows[0].ItemArray[8].ToString();
                if (drprategroupcode.Items.FindByValue(crexecute.Tables[0].Rows[0]["COLORRATEGP_CODE"].ToString()) != null)
                {
                    drprategroupcode.SelectedValue = crexecute.Tables[0].Rows[0]["COLORRATEGP_CODE"].ToString();
                }
                else
                {
                    drprategroupcode.SelectedValue = "0";
                }
                //----show date 
                //string fromdat = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
                //string tdat = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();

                txtcode.Enabled = false;
                txtpackagecode.Enabled = false;
                txtpackagename.Enabled = false;
                drppublication.Enabled = false;
                drpedition.Enabled = false;
                drpsupplement.Enabled = false;
                drpcolor.Enabled = false;
                drpcolorname.Enabled = false;
                txtover.Enabled = false;
                txtfromdate.Enabled = false;
                txttilldate.Enabled = false;
                drpadtyp.Enabled = false;
                drprategroupcode.Enabled = false;

                //message = "Your Search Criteria Does Not Exit";
                //AspNetMessageBox(message);
            }

            updateStatus();
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;

            if (crexecute.Tables[0].Rows.Count == 1)
            {
                btnfirst.Enabled = false;
                btnlast.Enabled = false;
                btnprevious.Enabled = false;
                btnnext.Enabled = false;
            }
            else
            {
                btnnext.Enabled = true;
                btnlast.Enabled = true;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;
            }
            btnimage();
        }
        
    protected void btnCancel_Click1(object sender, EventArgs e)
    {
        txtpackagecode.SelectedValue  = "0";
        txtpackagename.Text = "";
        drppublication.SelectedValue = "0";
        drpedition.SelectedValue = "0";
        drpsupplement.SelectedValue = "0";
        drpcolor.SelectedValue = "0";
        drpcolorname.SelectedValue = "0";
        txtover.Text = "";
        txttilldate.Text = "";
        txtfromdate.Text = "";
        txtcode.Text = "";
        drpadtyp.SelectedValue = "0";
        drprategroupcode.SelectedValue = "0";

        chkstatus(FlagStatus);

        getbuttoncheck(formname);
        //btnNew.Enabled = false;
        //btnQuery.Enabled = true;
        //btnCancel.Enabled = true;
        //btnExit.Enabled = true;

        btnSave.Enabled = false;
        txtcode.Enabled = false;
        txtpackagecode.Enabled = false;
        txtpackagename.Enabled = false;
        drppublication.Enabled = false;
        drpedition.Enabled = false;
        drpsupplement.Enabled = false;
        drpcolor.Enabled = false;
        drpcolorname.Enabled = false;
        txtover.Enabled = false;
        txtfromdate.Enabled = false;
        txttilldate.Enabled = false;
        drprategroupcode.Enabled = false;
        //txtalias.Enabled = false;
        drpadtyp.Enabled = false;
        btnimage();
    }
    protected void btnfirst_Click(object sender, EventArgs e)
    {
        fpnl = 0;

       
        if (drpcolor.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[0].ToString()) != null)
        {
            drpcolor.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[0].ToString();
        }
        else
        {
            drpcolor.SelectedValue = "0";
        }

       // drpcolorname.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[1].ToString();

        if (drpcolorname.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[1].ToString()) != null)
        {
            drpcolorname.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[1].ToString();
        }
        else
        {
            drpcolorname.SelectedValue = "0";
        }


        txtover.Text = crexecute.Tables[0].Rows[0].ItemArray[2].ToString();
        txtfromdate.Text = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
        txttilldate.Text = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();
        txtcode.Text = crexecute.Tables[0].Rows[0].ItemArray[5].ToString();

        if (drpadtyp.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[9].ToString()) != null)
        {
            drpadtyp.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[9].ToString();
        }
        else
        {
            drpadtyp.SelectedValue = "0";
        }

        bindPackage();
       // txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[7].ToString();
        if (txtpackagecode.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[7].ToString()) != null)
        {
            txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[7].ToString();
        }
        else
        {
            txtpackagecode.SelectedValue = "0";
        }
        txtpackagename.Text = crexecute.Tables[0].Rows[0].ItemArray[8].ToString();

        if (drprategroupcode.Items.FindByValue(crexecute.Tables[0].Rows[0]["COLORRATEGP_CODE"].ToString()) != null)
        {
            drprategroupcode.SelectedValue = crexecute.Tables[0].Rows[0]["COLORRATEGP_CODE"].ToString();
        }
        else
        {
            drprategroupcode.SelectedValue = "0";
        }
      //  drpadtyp.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[9].ToString();
        


        string fromdat = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
        string tdat = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();
        string dateformat = Session["dateformat"].ToString();
        //splitting of date
        char[] splitterfrom = { '/' };
        string[] myarrayfrom = fromdat.Split(splitterfrom);

        char[] splittertill = { '/' };
        string[] myarraytill = tdat.Split(splittertill);

        if (dateformat == "dd/mm/yyyy")
        {
            //for from date
            mm = myarrayfrom[0];
            dd = myarrayfrom[1];
            yyyy = myarrayfrom[2];

            txtfromdate.Text = dd + "/" + mm + "/" + yyyy;

            //for till date
            mm1 = myarraytill[0];
            dd1 = myarraytill[1];
            yyyy1 = myarraytill[2];

            txttilldate.Text = dd1 + "/" + mm1 + "/" + yyyy1;

        }

        if (dateformat == "yyyy/mm/dd")
        {
            //for from date
            mm = myarrayfrom[0];
            dd = myarrayfrom[1];
            yyyy = myarrayfrom[2];

            txtfromdate.Text = yyyy + "/" + mm + "/" + dd;

            //for till date
            mm1 = myarraytill[0];
            dd1 = myarraytill[1];
            yyyy1 = myarraytill[2];

            txttilldate.Text = yyyy1 + "/" + mm1 + "/" + dd1;


        }

        if (dateformat == "mm/dd/yyyy")
        {
            txtfromdate.Text = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
            txttilldate.Text = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();
          
        }


        updateStatus();

        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = true;
        btnlast.Enabled = true;
        btnimage();
    }
    protected void btnprevious_Click(object sender, EventArgs e)
    {
        //DataSet ds = new DataSet();
        //ds = crexecute;

        // fpnl--;
        int count = crexecute.Tables[0].Rows.Count - 1;

        fpnl--;

        if (fpnl != -1)
        {
            if (fpnl >= 0 || fpnl <= count)
            {
              
                if (drpcolor.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
                {
                    drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                }
                else
                {
                    drpcolor.SelectedValue = "0";
                }


             //drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
             if (drpcolorname.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString()) != null)
             {
                 drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
             }
             else
             {
                 drpcolorname.SelectedValue = "0";
             }

                txtover.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                txtcode.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[5].ToString();
                if (drppublication.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString()) != null)
                {
                    drppublication.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString();
                }
                else
                {
                    drppublication.SelectedValue = "0";
                }

                if (drpadtyp.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString()) != null)
                {
                    drpadtyp.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString();
                }
                else
                {
                    drpadtyp.SelectedValue = "0";
                }
                bindPackage();
               // txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                if (txtpackagecode.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString()) != null)
                {
                    txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                }
                else
                {
                    txtpackagecode.SelectedValue = "0";
                }
                txtpackagename.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[8].ToString();

                if (drprategroupcode.Items.FindByValue(crexecute.Tables[0].Rows[fpnl]["COLORRATEGP_CODE"].ToString()) != null)
                {
                    drprategroupcode.SelectedValue = crexecute.Tables[0].Rows[fpnl]["COLORRATEGP_CODE"].ToString();
                }
                else
                {
                    drprategroupcode.SelectedValue = "0";
                }
               // drpadtyp.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString();
               




                string fromdat = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                string tdat = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                string dateformat = Session["dateformat"].ToString();
                //splitting of date
                char[] splitterfrom = { '/' };
                string[] myarrayfrom = fromdat.Split(splitterfrom);

                char[] splittertill = { '/' };
                string[] myarraytill = tdat.Split(splittertill);

                if (dateformat == "dd/mm/yyyy")
                {
                    //for from date
                    mm = myarrayfrom[0];
                    dd = myarrayfrom[1];
                    yyyy = myarrayfrom[2];

                    txtfromdate.Text = dd + "/" + mm + "/" + yyyy;

                    //for till date
                    mm1 = myarraytill[0];
                    dd1 = myarraytill[1];
                    yyyy1 = myarraytill[2];

                    txttilldate.Text = dd1 + "/" + mm1 + "/" + yyyy1;

                }

                if (dateformat == "yyyy/mm/dd")
                {
                    //for from date
                    mm = myarrayfrom[0];
                    dd = myarrayfrom[1];
                    yyyy = myarrayfrom[2];

                    txtfromdate.Text = yyyy + "/" + mm + "/" + dd;

                    //for till date
                    mm1 = myarraytill[0];
                    dd1 = myarraytill[1];
                    yyyy1 = myarraytill[2];

                    txttilldate.Text = yyyy1 + "/" + mm1 + "/" + dd1;


                }

                if (dateformat == "mm/dd/yyyy")
                {
                    txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                    txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
          
                }

                updateStatus();

                btnfirst.Enabled = true;
                btnlast.Enabled = true;
                btnprevious.Enabled = true;
                btnnext.Enabled = true;
            }
            else
            {
                btnnext.Enabled = true;
                btnlast.Enabled = true;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;

            }
        }
        else
        {
            btnnext.Enabled = true;
            btnlast.Enabled = true;
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;

        }
        if (fpnl == 0)
        {
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = true;
            btnlast.Enabled = true;

        }
        btnimage();
    }
    protected void btnnext_Click(object sender, EventArgs e)
    {
        //DataSet ds = new DataSet();
        //ds = crexecute;
       
        int count = crexecute.Tables[0].Rows.Count - 1;

        fpnl++;

        if (fpnl != -1 && fpnl >= 0)
        {
            if (fpnl <= count)
            {
                if (drpcolor.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
                {
                    drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                }
                else
                {
                    drpcolor.SelectedValue = "0";
                }

               if (drpcolorname.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString())!= null)
                {
                    drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                }
                else
                {
                    drpcolorname.SelectedValue = "0";
                }
                txtover.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                txtcode.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[5].ToString();
                if (drppublication.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString()) != null)
                {
                    drppublication.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString();
                }
                else
                {
                    drppublication.SelectedValue = "0";
                }
                if (drpadtyp.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString()) != null)
                {
                    drpadtyp.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString();
                }
                else
                {
                    drpadtyp.SelectedValue = "0";
                }
                bindPackage();
                if (txtpackagecode.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString()) != null)
                {
                    txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                }
                else
                {
                    txtpackagecode.SelectedValue = "0";
                }
                txtpackagename.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[8].ToString();

                if (drprategroupcode.Items.FindByValue(crexecute.Tables[0].Rows[fpnl]["COLORRATEGP_CODE"].ToString()) != null)
                {
                    drprategroupcode.SelectedValue = crexecute.Tables[0].Rows[fpnl]["COLORRATEGP_CODE"].ToString();
                }
                else
                {
                    drprategroupcode.SelectedValue = "0";
                }

                string fromdat = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                string tdat = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                string dateformat = Session["dateformat"].ToString();
                //splitting of date
                char[] splitterfrom = { '/' };
                string[] myarrayfrom = fromdat.Split(splitterfrom);

                char[] splittertill = { '/' };
                string[] myarraytill = tdat.Split(splittertill);

                if (dateformat == "dd/mm/yyyy")
                {
                    //for from date
                    mm = myarrayfrom[0];
                    dd = myarrayfrom[1];
                    yyyy = myarrayfrom[2];

                    txtfromdate.Text = dd + "/" + mm + "/" + yyyy;

                    //for till date
                    mm1 = myarraytill[0];
                    dd1 = myarraytill[1];
                    yyyy1 = myarraytill[2];

                    txttilldate.Text = dd1 + "/" + mm1 + "/" + yyyy1;

                }

                if (dateformat == "yyyy/mm/dd")
                {
                    //for from date
                    mm = myarrayfrom[0];
                    dd = myarrayfrom[1];
                    yyyy = myarrayfrom[2];

                    txtfromdate.Text = yyyy + "/" + mm + "/" + dd;

                    //for till date
                    mm1 = myarraytill[0];
                    dd1 = myarraytill[1];
                    yyyy1 = myarraytill[2];

                    txttilldate.Text = yyyy1 + "/" + mm1 + "/" + dd1;


                }

                if (dateformat == "mm/dd/yyyy")
                {
                    txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                    txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                }

                btnfirst.Enabled = true;
                btnprevious.Enabled = true;
                btnnext.Enabled = true;
                btnlast.Enabled = true;

            }

            else
            {
                btnnext.Enabled = false;
                btnlast.Enabled = false;
                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }
        }
        else
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        if (fpnl == count)
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        btnimage();
    }
    protected void btnlast_Click(object sender, EventArgs e)
    {
        //DataSet ds = new DataSet();
        //ds = crexecute;
        int count = crexecute.Tables[0].Rows.Count;
        fpnl = count - 1;

        if (drpcolor.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
        {
            drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
        }
        else
        {
            drpcolor.SelectedValue = "0";
        }

       // drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
        if (drpcolorname.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString()) != null)
        {
            drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
        }
        else
        {
            drpcolorname.SelectedValue = "0";
        }

        txtover.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[2].ToString();
        txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
        txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
        txtcode.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[5].ToString();
        if (drppublication.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString()) != null)
        {
            drppublication.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString();
        }
        else
        {
            drppublication.SelectedValue = "0";
        }

        if (drpadtyp.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString()) != null)
        {
            drpadtyp.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString();
        }
        else
        {
            drpadtyp.SelectedValue = "0";
        }


        bindPackage();
       // txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString();
        if (txtpackagecode.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString()) != null)
        {
            txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString();
        }
        else
        {
            txtpackagecode.SelectedValue = "0";
        }
        txtpackagename.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[8].ToString();

        if (drprategroupcode.Items.FindByValue(crexecute.Tables[0].Rows[fpnl]["COLORRATEGP_CODE"].ToString()) != null)
        {
            drprategroupcode.SelectedValue = crexecute.Tables[0].Rows[fpnl]["COLORRATEGP_CODE"].ToString();
        }
        else
        {
            drprategroupcode.SelectedValue = "0";
        }
       // drpadtyp.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString();
        



        string fromdat = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
        string tdat = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
        string dateformat = Session["dateformat"].ToString();

        //splitting of date
        char[] splitterfrom = { '/' };
        string[] myarrayfrom = fromdat.Split(splitterfrom);

        char[] splittertill = { '/' };
        string[] myarraytill = tdat.Split(splittertill);

        if (dateformat == "dd/mm/yyyy")
        {
            //for from date
            mm = myarrayfrom[0];
            dd = myarrayfrom[1];
            yyyy = myarrayfrom[2];

            txtfromdate.Text = dd + "/" + mm + "/" + yyyy;

            //for till date
            mm1 = myarraytill[0];
            dd1 = myarraytill[1];
            yyyy1 = myarraytill[2];

            txttilldate.Text = dd1 + "/" + mm1 + "/" + yyyy1;

        }

        if (dateformat == "yyyy/mm/dd")
        {
            //for from date
            mm = myarrayfrom[0];
            dd = myarrayfrom[1];
            yyyy = myarrayfrom[2];

            txtfromdate.Text = yyyy + "/" + mm + "/" + dd;

            //for till date
            mm1 = myarraytill[0];
            dd1 = myarraytill[1];
            yyyy1 = myarraytill[2];

            txttilldate.Text = yyyy1 + "/" + mm1 + "/" + dd1;


        }

        if (dateformat == "mm/dd/yyyy")
        {
            txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
        }

        updateStatus();

        btnfirst.Enabled = true;
        btnprevious.Enabled = true;
        btnlast.Enabled = false;
        btnnext.Enabled = false;
        btnimage();
    }
    protected void btnDelete_Click(object sender, EventArgs e)
    {
        string crgcode = txtcode.Text;
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "abc", "alert('session Expired');window.close();", true);

            return;
        }
        DataSet ds1 = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorRateGroupMast del = new NewAdbooking.Classes.ColorRateGroupMast();

            ds1 = del.CRDelete(crgcode, Session["compcode"].ToString());
           // crexecute = execute.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor);//, Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ColorRateGroupMast del = new NewAdbooking.classesoracle.ColorRateGroupMast();
            ds1 = del.CRDelete(crgcode, Session["compcode"].ToString());
           // crexecute = execute.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor);//, Session["userid"].ToString());
         }
        else
        {
            NewAdbooking.classmysql.ColorRateGroupMast del = new NewAdbooking.classmysql.ColorRateGroupMast();

            ds1 = del.CRDelete(crgcode, Session["compcode"].ToString());
           // crexecute = execute.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor);//, Session["userid"].ToString());
        }

        if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            crexecute = execute.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor, exeadtype);//, Session["userid"].ToString());
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                crexecute = execute2.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor, exeadtype);//, Session["userid"].ToString());
            }
            else
            {
                crexecute = execute1.CR_Execute(execrgcode, execrgname, exepub, exeedition, exesupp, execolrate, execolname, execrgover, Session["compcode"].ToString(), exetill, exeform, execolor, exeadtype);//, Session["userid"].ToString());
            }

        int a = crexecute.Tables[0].Rows.Count;
        if (a <= 0)
        {
            message = "There is no more data to be deleted";
            AspNetMessageBox(message);

            txtpackagecode.SelectedValue = "0";
            txtpackagename.Text = "";
            drppublication.SelectedValue = "0";
            drpedition.SelectedValue = "0";
            drpsupplement.SelectedValue = "0";
            drpcolor.SelectedValue = "0";
            drpcolorname.SelectedValue = "0";
            txtover.Text = "";
            txttilldate.Text = "";
            txtfromdate.Text = "";
            txtcode.Text = "";
            drpadtyp.SelectedValue = "0";
            drprategroupcode.SelectedValue = "0";
            btnimage();
            return;

        }
        else if (fpnl == -1 || fpnl >= a)
        {


            //drpcolor.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[0].ToString();

            if (drpcolor.Items.FindByValue(crexecute.Tables[0].Rows[0].ItemArray[0].ToString()) != null)
            {
                drpcolor.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[0].ToString();
            }
            else
            {
                drpcolor.SelectedValue = "0";
            }
           // drpcolorname.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[1].ToString();
            txtover.Text = crexecute.Tables[0].Rows[0].ItemArray[2].ToString();
            txtfromdate.Text = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
            txttilldate.Text = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();
            txtcode.Text = crexecute.Tables[0].Rows[0].ItemArray[5].ToString();
            drpadtyp.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[9].ToString();
            if (drprategroupcode.Items.FindByValue(crexecute.Tables[0].Rows[0]["COLORRATEGP_CODE"].ToString()) != null)
            {
                drprategroupcode.SelectedValue = crexecute.Tables[0].Rows[0]["COLORRATEGP_CODE"].ToString();
            }
            else
            {
                drprategroupcode.SelectedValue = "0";
            }
            //string fromdat = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
            //string tdat = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();
      


            //DataSet ds = new DataSet();

            //ds = crexecute;
            //hiddencompcode.Value = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
            //hiddenuserid.Value = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            //txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            //txtpackagename.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            //drppublication.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            //drpedition.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[5].ToString();
            //drpsupplement.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString();
            //drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString();
            //drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[8].ToString();
            //txtover.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString();
            //hiddendateformat.Value = crexecute.Tables[0].Rows[fpnl].ItemArray[10].ToString();
            //txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[11].ToString();
            //txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[12].ToString();
            //txtcode.Text=  crexecute.Tables[0].Rows[fpnl].ItemArray[13].ToString();
            //string fromdat = ds.Tables[0].Rows[fpnl].ItemArray[11].ToString();
            //string tdat = ds.Tables[0].Rows[fpnl].ItemArray[12].ToString();

            //txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[0].ToString();
            //txtpackagecode_SelectedIndexChanged(sender, e);
            //txtpackagename.Text = crexecute.Tables[0].Rows[0].ItemArray[1].ToString();
            //drpcolor.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[2].ToString();
            //drpcolorname.SelectedValue = crexecute.Tables[0].Rows[0].ItemArray[3].ToString();
            //txtover.Text = crexecute.Tables[0].Rows[0].ItemArray[4].ToString();
            //txtfromdate.Text = crexecute.Tables[0].Rows[0].ItemArray[5].ToString();
            //txttilldate.Text = crexecute.Tables[0].Rows[0].ItemArray[6].ToString();
            //txtcode.Text = crexecute.Tables[0].Rows[0].ItemArray[7].ToString();
           
        }

        else
        {

            if (drpcolor.Items.FindByValue(crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
            {
                drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
            }
            else
            {
                drpcolor.SelectedValue = "0";
            }
           // drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
           // drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            txtover.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            txtcode.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[5].ToString();
            drpadtyp.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString();
            if (drprategroupcode.Items.FindByValue(crexecute.Tables[0].Rows[fpnl]["COLORRATEGP_CODE"].ToString()) != null)
            {
                drprategroupcode.SelectedValue = crexecute.Tables[0].Rows[fpnl]["COLORRATEGP_CODE"].ToString();
            }
            else
            {
                drprategroupcode.SelectedValue = "0";
            }
            //string fromdat = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            //string tdat = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
      

            //txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
            //txtpackagecode_SelectedIndexChanged(sender, e);
            //txtpackagename.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            //drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            //drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            //txtover.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            //txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[5].ToString();
            //txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString();
            //txtcode.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString();
            

            //DataSet ds = new DataSet();
            //ds = crexecute;

            //hiddencompcode.Value = crexecute.Tables[0].Rows[fpnl].ItemArray[0].ToString();
            //hiddenuserid.Value = crexecute.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            //txtpackagecode.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            //txtpackagename.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            //drppublication.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            //drpedition.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[5].ToString();
            //drpsupplement.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[6].ToString();
            //drpcolor.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[7].ToString();
            //drpcolorname.SelectedValue = crexecute.Tables[0].Rows[fpnl].ItemArray[8].ToString();
            //txtover.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[9].ToString();
            //hiddendateformat.Value = crexecute.Tables[0].Rows[fpnl].ItemArray[10].ToString();
            //txtfromdate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[11].ToString();
            //txttilldate.Text = crexecute.Tables[0].Rows[fpnl].ItemArray[12].ToString();
            //txtcode.Text=  crexecute.Tables[0].Rows[fpnl].ItemArray[12].ToString();

            //string fromdat = ds.Tables[0].Rows[fpnl].ItemArray[11].ToString();
            //string tdat = ds.Tables[0].Rows[fpnl].ItemArray[12].ToString();

        }
        DataSet ds3 = new DataSet();
        ds3.ReadXml(Server.MapPath("XML/errormessage.xml"));
        message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
        AspNetMessageBox(message);
        btnimage();
    }
    protected void btnExit_Click(object sender, EventArgs e)
    {

    }

    protected void drppublication_SelectedIndexChanged(object sender, EventArgs e)
    {
        string pub = drppublication.SelectedValue;

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorRateGroupMast edition = new NewAdbooking.Classes.ColorRateGroupMast();
            ds = edition.seledition(hiddencompcode.Value, pub);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ColorRateGroupMast edition = new NewAdbooking.classesoracle.ColorRateGroupMast();
            ds = edition.seledition(hiddencompcode.Value, pub);
        }
        else
        {
            NewAdbooking.classmysql.ColorRateGroupMast edition = new NewAdbooking.classmysql.ColorRateGroupMast();

            ds = edition.seledition(hiddencompcode.Value, pub);
        }

        drpedition.Items.Clear();
        ListItem li = new ListItem();
        li.Text = "--Select Edition--";
        li.Value = "0";
        li.Selected = true;
        drpedition.Items.Add(li);

        int a;

        for (a = 0; a < ds.Tables[0].Rows.Count; a++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[a].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[a].ItemArray[0].ToString();
            drpedition.Items.Add(li1);

        }


    }
    ////protected void drpedition_SelectedIndexChanged(object sender, EventArgs e)
    ////{
    ////    string edition = drpedition.SelectedValue;

    ////    NewAdbooking.Classes.ColorRateGroupMast supple = new NewAdbooking.Classes.ColorRateGroupMast();
    ////    DataSet ds = new DataSet();
    ////    ds = supple.suppliment(hiddencompcode.Value, edition);
    ////    drpsupplement.Items.Clear();
    ////    ListItem li = new ListItem();
    ////    li.Text = "--Select Supplement--";
    ////    li.Value = "0";
    ////    li.Selected = true;
    ////    drpsupplement .Items.Add(li);

    ////    int x;

    ////    for (x = 0; x < ds.Tables[0].Rows.Count; x++)
    ////    {
    ////        ListItem li1 = new ListItem();
    ////        li1.Text = ds.Tables[0].Rows[x].ItemArray[1].ToString();
    ////        li1.Value = ds.Tables[0].Rows[x].ItemArray[0].ToString();
    ////        drpsupplement.Items.Add(li1);

    ////    }
    ////}

    protected void AspNetMessageBox(string strMessage)
    {
        //strMessage = adminResource.GetStringFromResource(strMessage);
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(ColorRateGroupMast), "ShowAlert", strAlert, true);
    }

    public void updateStatus()
    {
        chkstatus(FlagStatus);
        if (FlagStatus == 2 || FlagStatus == 3)
        {
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;
            btnDelete.Enabled = false;
        }
        if (FlagStatus == 4)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 5)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 6 || FlagStatus == 7)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }

        if (FlagStatus == 1 || FlagStatus == 0)
        {
            btnDelete.Enabled = false;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;

        }
    }

    public void chkstatus(int FlagStatus)
    {
        if (FlagStatus == 0 || FlagStatus == 8)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = false;



        }
        if (FlagStatus == 1 || FlagStatus == 9)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = true;
            btnDelete.Enabled = false;
            btnSave.Enabled = true;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;

        }
        if (FlagStatus == 2 || FlagStatus == 10)
        {
            btnExecute.Enabled = true;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnNew.Enabled = false;
            btnCancel.Enabled = true;
            btnExecute.Enabled = false;
            btnModify.Enabled = false;
            btnExit.Enabled = true;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;


        }

        if (FlagStatus == 3 || FlagStatus == 11)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

        if (FlagStatus == 4 || FlagStatus == 12)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 5 || FlagStatus == 13)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 6 || FlagStatus == 14)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 7 || FlagStatus == 15)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }


    }

    public void getbuttoncheck(string formname)
    {
        DataSet butt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.classlibraryforbutton getpermission = new NewAdbooking.Classes.classlibraryforbutton();

            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.classlibraryforbutton getpermission = new NewAdbooking.classesoracle.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        else
        {
            NewAdbooking.classmysql.classlibraryforbutton getpermission = new NewAdbooking.classmysql.classlibraryforbutton();

            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }

        string id = butt.Tables[0].Rows[0].ItemArray[0].ToString();


        if (id != "0")
        {
            //var id = ds.Tables[0].Rows[0].button_id;



            if (id == "0" || id == "8")
            {

                FlagStatus = 0;

                btnNew.Enabled = false;
                btnQuery.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = false;
                btnExit.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;



                //window.location.href = 'EnterPage.aspx';
                //alert("You Are Not Authorised To See This Form");
                //FlagStatus = 0;


            }
            if (id == "1" || id == "9")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnExecute.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 1;

            }
            if (id == "2" || id == "10")
            {

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                //a//btnModify.Enabled = true;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                //a// btnfirst.Enabled = true;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;
                FlagStatus = 2;


            }
            if (id == "3" || id == "11")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;


                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;

                FlagStatus = 3;



            }
            if (id == "4" || id == "12")
            {
                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;


                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 4;



            }
            if (id == "5" || id == "13")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                btnModify.Enabled = false;
                FlagStatus = 5;


            }
            if (id == "6" || id == "14")
            {
                btnNew.Enabled = false;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                FlagStatus = 6;
            }
            if (id == "7" || id == "15")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                FlagStatus = 7;

            }
        }




    }

    //Auto Generated Code//
    [Ajax.AjaxMethod]
    public DataSet autogeneratecode()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorRateGroupMast auto = new NewAdbooking.Classes.ColorRateGroupMast();
            ds = auto.autocode();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            NewAdbooking.classesoracle.ColorRateGroupMast auto = new NewAdbooking.classesoracle.ColorRateGroupMast();
            ds = auto.autocode();
        }
        else
        {
            NewAdbooking.classmysql.ColorRateGroupMast auto = new NewAdbooking.classmysql.ColorRateGroupMast();
            ds = auto.autocode();
        }

        return ds;
    }

    protected void txtpackagecode_SelectedIndexChanged(object sender, EventArgs e)
    {
        string pack_des = txtpackagecode.SelectedValue;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorRateGroupMast pack = new NewAdbooking.Classes.ColorRateGroupMast();
            ds = pack.packdes(hiddencompcode.Value, pack_des);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ColorRateGroupMast pack = new NewAdbooking.classesoracle.ColorRateGroupMast();
            ds = pack.packdes(hiddencompcode.Value, pack_des);
        }
        else
        {
            NewAdbooking.classmysql.ColorRateGroupMast pack = new NewAdbooking.classmysql.ColorRateGroupMast();
            ds = pack.packdes(hiddencompcode.Value, pack_des);
        }
        if (txtpackagecode.SelectedValue != "0")
        {
            txtpackagename.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        }
        else
        {
            txtpackagename.Text = "";
        }
    }
    protected void drpsupplement_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    public string dateCorrect(string dateformat, string dateValue)
    {
        //splitting of date
        string dateReturn = "";
        if (dateValue != "")
        {
            char[] splitterfrom = { '/' };
            string[] myarrayfrom = dateValue.Split(splitterfrom);
            string dd, mm, yyyy;
            if (dateformat == "dd/mm/yyyy")
            {
                //for from date
                dd = myarrayfrom[1];
                mm = myarrayfrom[0];
                yyyy = myarrayfrom[2];

                dateReturn = dd + "/" + mm + "/" + yyyy;


            }
            else if (dateformat == "yyyy/mm/dd")
            {
                yyyy = myarrayfrom[2];
                mm = myarrayfrom[0];
                dd = myarrayfrom[1];

                dateReturn = yyyy + "/" + mm + "/" + dd;
            }
            else
            {
                dateReturn = dateValue;
            }
        }
        return dateReturn;
    }
    private void bindPackage()
    {
        string pack_code = drpadtyp.SelectedValue;

        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorRateGroupMast package = new NewAdbooking.Classes.ColorRateGroupMast();

            ds = package.selpackage(hiddencompcode.Value, pack_code);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ColorRateGroupMast package = new NewAdbooking.classesoracle.ColorRateGroupMast();
            ds = package.selpackage(hiddencompcode.Value, pack_code);
        }
        else
        {
            NewAdbooking.classmysql.ColorRateGroupMast package = new NewAdbooking.classmysql.ColorRateGroupMast();
            ds = package.selpackage(hiddencompcode.Value);
        }

        ListItem li = new ListItem();
        li.Text = "--Select Package--";
        li.Value = "0";
        li.Selected = true;
        txtpackagecode.Items.Clear();
        txtpackagecode.Items.Add(li);
        txtpackagename.Text = "";

        int p;
        for (p = 0; p < ds.Tables[0].Rows.Count; p++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[p].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[p].ItemArray[0].ToString();
            txtpackagecode.Items.Add(li1);

        }
    }
    protected void drpadtyp_SelectedIndexChanged(object sender, EventArgs e)
    {
        bindPackage();
    
    }
    public void btnimage()
    {
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        else
            btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        else
            btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        else
            btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        else
            btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        else
            btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        else
            btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        else
            btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        else
            btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        else
            btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        else
            btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        else
            btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        else
            btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();
    }

}
  
