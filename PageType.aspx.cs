// In this document the statements like drppublication.SelectedValue = ds.Tables[0].Rows[0].ItemArray[1].ToString();
//are started with the index 1 while the index starts from 0(zero).The reason behind this is the fact that during design of the table of this form i have mentioned comp_code
//as the first column of the table while in all other tables it is always the last column.so we should take care of it in the future that this column should be the last column and also the user id column.



using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
//using System.Windows.Forms;

public partial class PageType : System.Web.UI.Page
{
    static DataSet executept = new DataSet();
    string formname = "PageType";
    
    static int FlagStatus, fpnl, flag;
    static string saveormodify;
    string message;
    string compcode, userid;
    static string exepublication, exepagetypecode, exepagename;
    static string exeheight, exewidth;
    static string execolumns;
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            compcode = hiddencompcode.Value;
            userid = hiddenuserid.Value;
        }
        else
        {
            //Response.Redirect("login.aspx");
            d1.Text = "<script>alert('session Expired');window.close();</script>";
            return;
        }

        string formname = "PageType";
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/PageType.xml"));
        lbpublication.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        lbpagetypecode.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
        lbpagename.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();
        lbheight.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
        lbwidth.Text = ds1.Tables[0].Rows[0].ItemArray[4].ToString();
        lbcolumns.Text = ds1.Tables[0].Rows[0].ItemArray[5].ToString();

        if (saveormodify == "0")
        {
            drppublication.Enabled = true;
            txtpagename.Enabled = true;
            txtpagetypecode.Enabled = true;
            txtheight.Enabled = true;
            txtwidth.Enabled = true;
            txtcolumns.Enabled = true;
        }
        else
        {
            drppublication.Enabled = false;
            txtpagename.Enabled = false;
            txtpagetypecode.Enabled = false;
            txtheight.Enabled = false;
            txtwidth.Enabled = false;
            txtcolumns.Enabled = false;
        }

        mandatory();


        hiddenauto.Value = Session["autogenerated"].ToString();

      

        if (Session["autogenerated"].ToString() == "1")
        {

            txtpagetypecode.Enabled = false;

        }

         Ajax.Utility.RegisterTypeForAjax(typeof(PageType));
         hiddenusername.Value = Session["Username"].ToString();

  

        
        if (!Page.IsPostBack)
        {
            drppublication.Enabled = false;
            txtpagetypecode.Enabled = false;
            txtpagename.Enabled = false;
            txtheight.Enabled = false;
            txtwidth.Enabled = false;
            txtcolumns.Enabled = false;

            bindpub();
            getbuttoncheck(formname);
            btnModify.Attributes.Add("OnClick", "javascript:modclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return exitclick();");
            txtpagename.Attributes.Add("OnBlur", "javascript:return autoornot();");
            btnQuery.Attributes.Add("OnClick", "javascript:return chkquery();");
            btnDelete.Attributes.Add("onclick", "return confirm ('Are you sure you wish to delete this?')");
            txtheight.Attributes.Add("OnChange", "javascript:return checkdecht();");// for decimal enteries
            txtwidth.Attributes.Add("OnChange", "javascript:return checkdecwt();");// for decimal enteries
            btnNew.Attributes.Add("onclick", "javascript:return newvalue();");
            btnCancel.Attributes.Add("onclick", "javascript:return cancel();");
            
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        ScriptManager1.SetFocus(btnNew);
    }

    public void bindpub()
    {
        DataSet ds = new DataSet();
        if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.PageType bind = new NewAdbooking.Classes.PageType();
        
        ds = bind.pagedes(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.PageType bind = new NewAdbooking.classesoracle.PageType();
            ds = bind.pagedes(hiddencompcode.Value);
        }
        else
        {
            NewAdbooking.classmysql.PageType bind = new NewAdbooking.classmysql.PageType();

            ds = bind.pagedes(hiddencompcode.Value);

        }

        ListItem li = new ListItem();
        li.Text = "--Select Publication--";
        li.Value = "0";
        li.Selected = true;
        drppublication.Items.Add(li);

        int x;

        for (x = 0; x < ds.Tables[0].Rows.Count; x++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[x].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[x].ItemArray[0].ToString();
            drppublication.Items.Add(li1);

        }

    }

    public void getbuttoncheck(string formname)
    {
        DataSet butt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {


            NewAdbooking.Classes.classlibraryforbutton getpermission = new NewAdbooking.Classes.classlibraryforbutton();
          
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.classlibraryforbutton getpermission = new NewAdbooking.classesoracle.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        else
        {
            NewAdbooking.classmysql.classlibraryforbutton getpermission = new NewAdbooking.classmysql.classlibraryforbutton();

            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }

        string id = butt.Tables[0].Rows[0].ItemArray[0].ToString();// Tables[0].Rows[0].ItemArray[0].ToString();
        if (id != "0")
        {



            if (id == "0" || id == "8")
            {

                FlagStatus = 0;

                btnNew.Enabled = false;
                btnQuery.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = false;
                btnExit.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
            }
            if (id == "1" || id == "9")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnExecute.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 1;

            }
            if (id == "2" || id == "10")
            {

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;
                FlagStatus = 2;


            }
            if (id == "3" || id == "11")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;


                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;

                FlagStatus = 3;
          }
            if (id == "4" || id == "12")
            {
                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;


                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 4;
            }
            if (id == "5" || id == "13")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                btnModify.Enabled = false;
                FlagStatus = 5;
            }
            if (id == "6" || id == "14")
            {
                btnNew.Enabled = false;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                FlagStatus = 6;
            }
            if (id == "7" || id == "15")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                FlagStatus = 7;

            }
        }
    }
    public void chkstatus(int FlagStatus)
    {
        if (FlagStatus == 0 || FlagStatus == 8)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = false;



        }
        if (FlagStatus == 1 || FlagStatus == 9)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = true;
            btnDelete.Enabled = false;
            btnSave.Enabled = true;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;

        }
        if (FlagStatus == 2 || FlagStatus == 10)
        {
            btnExecute.Enabled = true;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnNew.Enabled = false;
            btnCancel.Enabled = true;
            btnExecute.Enabled = false;
            btnModify.Enabled = false;
            btnExit.Enabled = true;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;
        }

        if (FlagStatus == 3 || FlagStatus == 11)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

        if (FlagStatus == 4 || FlagStatus == 12)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 5 || FlagStatus == 13)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 6 || FlagStatus == 14)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 7 || FlagStatus == 15)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }


    }

    public void updateStatus()
    {
        chkstatus(FlagStatus);
        if (FlagStatus == 2 || FlagStatus == 3)
        {
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;
            btnDelete.Enabled = false;
        }
        if (FlagStatus == 4)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 5)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 6 || FlagStatus == 7)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 1 || FlagStatus == 0)
        {
            btnDelete.Enabled = false;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;

        }
    }

    protected void AspNetMessageBox(string strMessage)
    {
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(PageType), "ShowAlert", strAlert, true);
    }

    private void mandatory()
    {
        if (lbpublication.Text.IndexOf("*") >= 0)
        {
            hiddendrppublication.Value = "1";
        }
        else
        {
            hiddendrppublication.Value = "0";
        }
        if (lbpagetypecode.Text.IndexOf("*") >= 0)
        {
            hiddenpagetypecode.Value = "1";
        }
        else
        {
            hiddenpagetypecode.Value = "0";
        }
        if (lbpagename.Text.IndexOf("*") >= 0)
        {
            hiddenpagename.Value = "1";
        }
        else
        {
            hiddenpagename.Value = "0";
        }
        if (lbheight.Text.IndexOf("*") >= 0)
        {
            hiddenheight.Value = "1";
        }
        else
        {
            hiddenheight.Value = "0";
        }
        if (lbwidth.Text.IndexOf("*") >= 0)
        {
            hiddenwidth.Value = "1";
        }
        else
        {
            hiddenwidth.Value = "0";
        }
        if (lbcolumns.Text.IndexOf("*") >= 0)
        {
            hiddencolumns.Value = "1";
        }
        else
        {
            hiddencolumns.Value = "0";
        }

    }

    [Ajax.AjaxMethod]

    public DataSet adchkadvcode(string str,string pubname)
    {
        DataSet ds = new DataSet();
        if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.PageType auto = new NewAdbooking.Classes.PageType();
        ds = auto.autocode(str, pubname);
        return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.PageType auto = new NewAdbooking.classesoracle.PageType();
            ds = auto.autocode(str,pubname);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.PageType auto = new NewAdbooking.classmysql.PageType();
            ds = auto.autocode(str);
            return ds;
        }


    }

    protected void btnNew_Click1(object sender, EventArgs e)
    {
        ScriptManager1.SetFocus(btnNew);
        pnew.Value = "1";

        drppublication.SelectedValue = "0";
        txtpagetypecode.Text = "";
        txtpagename.Text = "";
        txtheight.Text = "";
        txtwidth.Text = "";
        txtcolumns.Text = "";


       
        saveormodify = "0";

        if (hiddenauto.Value == "1")
        {
            txtpagetypecode.Enabled = false;

        }
        else
        {
            txtpagetypecode.Enabled = true;
        }
        drppublication.Enabled = true;
        txtheight.Enabled = true;
        txtpagename.Enabled = true;
        txtwidth.Enabled = true;
        txtcolumns.Enabled = true;


        ScriptManager.RegisterClientScriptBlock(this, typeof(PageType), "ss", "focus()", true);

        drppublication.Enabled = true;

        chkstatus(FlagStatus);          
        btnSave.Enabled = true;
        btnNew.Enabled = false;
        btnQuery.Enabled = false;
        txtwidth.Enabled = true;
        txtcolumns.Enabled = true;
        btnimage();
    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(PageType), "abc", "alert('session Expired');window.close();", true);

            return;
        }
        string pagetypecode = (txtpagetypecode.Text).Trim();
        string pagename = (txtpagename.Text).Trim();
        string height = txtheight.Text;
        string width = txtwidth.Text;
        string columns = txtcolumns.Text;
        string drppub = drppublication.SelectedValue;


        if (drppublication.SelectedIndex <= 0)
        {
            message = "Please Select Publication";
            AspNetMessageBox(message);
            drppublication.Enabled = true;
            txtpagename.Enabled = true;
            txtwidth.Enabled = true;
            txtcolumns.Enabled = true;
            txtheight.Enabled = true;
            ScriptManager1.SetFocus(drppublication);
            return;
        }
        if (hiddenauto.Value != "1")
        {
            if (pagetypecode == "")
            {
                message = "Please Enter Page code ";
                AspNetMessageBox(message);
                drppublication.Enabled = true;
                txtpagename.Enabled = true;
                txtwidth.Enabled = true;
                txtcolumns.Enabled = true;
                txtheight.Enabled = true;
                txtpagetypecode.Enabled = true;
                

                ScriptManager1.SetFocus(txtpagetypecode);
                return;
            }
        }

        if (pagename == "")
        {
            message = "Please Enter Page Name ";
            AspNetMessageBox(message);
            drppublication.Enabled = true;
            txtpagename.Enabled = true;
            txtwidth.Enabled = true;
            txtcolumns.Enabled = true;
            txtheight.Enabled = true;

            ScriptManager1.SetFocus(txtpagename);
            return;
        }
        if (txtheight.Text == "")
        {
            message = "Please Enter Height";
            AspNetMessageBox(message);
            drppublication.Enabled = true;
            txtpagename.Enabled = true;
            txtwidth.Enabled = true;
            txtcolumns.Enabled = true;
            txtheight.Enabled = true;
            ScriptManager1.SetFocus(txtheight);

            return;
        }
        if (txtwidth.Text == "")
        {
            message = "Please Enter Width ";
            AspNetMessageBox(message);
            drppublication.Enabled = true;
            txtpagename.Enabled = true;
            txtwidth.Enabled = true;
            txtcolumns.Enabled = true;
            txtheight.Enabled = true;
            //txtwidth.Focus();
            ScriptManager1.SetFocus(txtwidth);
            return;
        }
        if (txtcolumns.Text == "")
        {
            message = "Please Enter No. of Columns ";
            AspNetMessageBox(message);
            drppublication.Enabled = true;
            txtpagename.Enabled = true;
            txtwidth.Enabled = true;
            txtcolumns.Enabled = true;
            txtheight.Enabled = true;
            ScriptManager1.SetFocus(txtcolumns);
            return;
        }
        if ((columns == "0") || (columns == "00") || (columns == "000") || (columns == "0000") || (columns == "00000") || (columns == "000000"))
        {
            message = "No. of Columns Should Not Be Zero ";
            AspNetMessageBox(message);
            drppublication.Enabled = true;
            txtpagename.Enabled = true;
            txtwidth.Enabled = true;
            txtcolumns.Enabled = true;
            txtheight.Enabled = true;
            txtcolumns.Text = "";
            ScriptManager1.SetFocus(txtcolumns);
            return;
        }

        if (saveormodify == "0")
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.PageType getcode = new NewAdbooking.Classes.PageType();
               
                ds = getcode.chkcode(pagetypecode, Session["compcode"].ToString());
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.PageType getcode = new NewAdbooking.classesoracle.PageType();
                ds = getcode.chkcode(pagetypecode, Session["compcode"].ToString());
            }
            else
            {
                NewAdbooking.classmysql.PageType getcode = new NewAdbooking.classmysql.PageType();

                ds = getcode.chkcode(pagetypecode, Session["compcode"].ToString());

            }

            if (ds.Tables[0].Rows.Count> 0)
            {
                message = "This Page Type Code is already assigned";//of " + statusname + " ";
                AspNetMessageBox(message);
                txtpagetypecode.Text = "";
                ScriptManager1.SetFocus(txtpagetypecode);
                return;
            }
            else
            {
                DataSet di = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {

                    NewAdbooking.Classes.PageType insertthe = new NewAdbooking.Classes.PageType();
                   
                    di = insertthe.insertedvalue(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString(), Session["userid"].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.PageType insertthe = new NewAdbooking.classesoracle.PageType();
                    di = insertthe.insertedvalue(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString(), Session["userid"].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.PageType insertthe = new NewAdbooking.classmysql.PageType();

                    di = insertthe.insertedvalue(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString(), Session["userid"].ToString());

                }

                getbuttoncheck(formname);
                DataSet ds1 = new DataSet();
                ds1.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                message = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
                AspNetMessageBox(message);

                txtpagename.Text = "";
                txtpagetypecode.Text = "";
                txtheight.Text = "";
                txtwidth.Text = "";
                txtcolumns.Text = "";
                drppublication.SelectedValue = "0";


                txtpagetypecode.Enabled = false;
                txtpagename.Enabled = false;
                txtheight.Enabled = false;
                drppublication.Enabled = false;
                txtwidth.Enabled = false;
                txtcolumns.Enabled = false;

                btnimage();
                return;


            }

        }
        else
        {
            if (modifypagename.Value == txtpagename.Text)
           {
               DataSet du = new DataSet();
               if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
               {

                   NewAdbooking.Classes.PageType upadte1 = new NewAdbooking.Classes.PageType();

                   du = upadte1.ptupdate(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString());
               }
               else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
               {
                   NewAdbooking.classesoracle.PageType upadte1 = new NewAdbooking.classesoracle.PageType();
                   du = upadte1.ptupdate(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString());
               }
               else
               {
                   NewAdbooking.classmysql.PageType upadte1 = new NewAdbooking.classmysql.PageType();

                   du = upadte1.ptupdate(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString());

               }

               //txtpheight.Enabled = false;
               drppublication.Enabled = false;
               txtpagename.Enabled = false;
               txtpagetypecode.Enabled = false;
               txtwidth.Enabled = false;
               txtheight.Enabled = false;
               txtcolumns.Enabled = false;
               modifypagename.Value = "";

               executept.Tables[0].Rows[fpnl].ItemArray[1] = drppublication.SelectedValue;
               executept.Tables[0].Rows[fpnl].ItemArray[2] = txtpagetypecode.Text;
               executept.Tables[0].Rows[fpnl].ItemArray[3] = txtpagename.Text;
               executept.Tables[0].Rows[fpnl].ItemArray[4] = txtwidth.Text;
               executept.Tables[0].Rows[fpnl].ItemArray[5] = txtheight.Text;
               executept.Tables[0].Rows[fpnl].ItemArray[6] = txtcolumns.Text;

               if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
               {

                   NewAdbooking.Classes.PageType execute = new NewAdbooking.Classes.PageType();
                   executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());
               }
               else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
               {
                   NewAdbooking.classesoracle.PageType execute = new NewAdbooking.classesoracle.PageType();
                   executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());
               }
               else
               {
                   NewAdbooking.classmysql.PageType execute = new NewAdbooking.classmysql.PageType();
                   executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());

               }
               DataSet ds = new DataSet();
               ds = executept;
               if (drppublication.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
               {
                   drppublication.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
               }
               txtpagetypecode.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
               txtpagename.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
               txtheight.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
               txtwidth.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
               txtcolumns.Text = ds.Tables[0].Rows[fpnl].ItemArray[5].ToString();


               updateStatus();
               DataSet ds2 = new DataSet();
               ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
               message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
               AspNetMessageBox(message);

               if (fpnl == 0)
               {
                   btnfirst.Enabled = false;
                   btnprevious.Enabled = false;
               }
               if (fpnl == executept.Tables[0].Rows.Count - 1)
               {
                   btnlast.Enabled = false;
                   btnnext.Enabled = false;
               }
               btnimage();
               return;
           }
           else
           {
               DataSet ds1 = new DataSet();
               if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
               {
                   NewAdbooking.Classes.PageType auto = new NewAdbooking.Classes.PageType();
                   ds1 = auto.autocode(pagename, drppub);
                 //  return ds;
               }
               else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
               {
                   NewAdbooking.classesoracle.PageType auto = new NewAdbooking.classesoracle.PageType();
                   ds1 = auto.autocode(pagename, drppub);
                   //  return ds;
               }
               else
               {
                   NewAdbooking.classmysql.PageType auto = new NewAdbooking.classmysql.PageType();
                   ds1 = auto.autocode(pagename);
               }
               if (ds1.Tables[0].Rows.Count > 0)
               {
                   message = "This Page Type Name is already assigned";//of " + statusname + " ";
                   AspNetMessageBox(message);
                   txtpagename.Text = "";
                    return;
               }
               else
               {
                   DataSet du = new DataSet();
                   if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                   {

                       NewAdbooking.Classes.PageType upadte1 = new NewAdbooking.Classes.PageType();

                       du = upadte1.ptupdate(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString());
                   }
                   else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                   {
                       NewAdbooking.classesoracle.PageType upadte1 = new NewAdbooking.classesoracle.PageType();
                       du = upadte1.ptupdate(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString());
                   }
                   else
                   {
                       NewAdbooking.classmysql.PageType upadte1 = new NewAdbooking.classmysql.PageType();

                       du = upadte1.ptupdate(drppub, pagetypecode, pagename, height, width, columns, Session["compcode"].ToString());

                   }

                   //txtpheight.Enabled = false;
                   txtpagename.Enabled = false;
                   txtpagetypecode.Enabled = false;
                   txtwidth.Enabled = false;
                   txtheight.Enabled = false;
                   txtcolumns.Enabled = false;
                   drppublication.Enabled = false;


                   executept.Tables[0].Rows[fpnl].ItemArray[1] = drppublication.SelectedValue;
                   executept.Tables[0].Rows[fpnl].ItemArray[2] = txtpagetypecode.Text;
                   executept.Tables[0].Rows[fpnl].ItemArray[3] = txtpagename.Text;
                   executept.Tables[0].Rows[fpnl].ItemArray[4] = txtwidth.Text;
                   executept.Tables[0].Rows[fpnl].ItemArray[5] = txtheight.Text;
                   executept.Tables[0].Rows[fpnl].ItemArray[6] = txtcolumns.Text;

                   if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                   {

                       NewAdbooking.Classes.PageType execute = new NewAdbooking.Classes.PageType();
                       executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());
                   }
                   else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                   {
                       NewAdbooking.classesoracle.PageType execute = new NewAdbooking.classesoracle.PageType();
                       executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());
                   }
                   else
                   {
                       NewAdbooking.classmysql.PageType execute = new NewAdbooking.classmysql.PageType();
                       executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());

                   }
                   DataSet ds = new DataSet();
                   ds = executept;
                   if (drppublication.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
                   {
                       drppublication.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                   }
                   txtpagetypecode.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                   txtpagename.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                   txtheight.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                   txtwidth.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                   txtcolumns.Text = ds.Tables[0].Rows[fpnl].ItemArray[5].ToString();


                   updateStatus();
                   DataSet ds2 = new DataSet();
                   ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                   message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
                   AspNetMessageBox(message);

                   if (fpnl == 0)
                   {
                       btnfirst.Enabled = false;
                       btnprevious.Enabled = false;
                   }
                   if (fpnl == executept.Tables[0].Rows.Count - 1)
                   {
                       btnlast.Enabled = false;
                       btnnext.Enabled = false;
                   }
                   btnimage();
                   return;
               }
           }
           

        }
        return;
    }
    protected void btnModify_Click(object sender, EventArgs e)
    {
        pnew.Value = "0";
        txtpagetypecode.Enabled = false;
        txtpagename.Enabled = true;
        txtheight.Enabled = true;
        txtwidth.Enabled = true;
        txtcolumns.Enabled = true;

        drppublication.Enabled = true;
       
        saveormodify = "1";
        chkstatus(FlagStatus);
        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnQuery.Enabled = false;
        btnimage();
        ScriptManager1.SetFocus(btnSave);
    }
    protected void btnQuery_Click1(object sender, EventArgs e)
    {
        pnew.Value = "0";
        fpnl = 0;
        txtpagetypecode.Text = "";
        txtpagename.Text = "";
        txtheight.Text = "";
        txtwidth.Text = "";
        txtcolumns.Text = "";

        drppublication.SelectedValue = "0";

        txtpagename.Enabled = true;
        txtheight.Enabled = true;
        txtpagetypecode.Enabled = true;
        txtwidth.Enabled = true;
        txtcolumns.Enabled = true;

        drppublication.Enabled = true;


        chkstatus(FlagStatus);


        btnQuery.Enabled = false;
        btnExecute.Enabled = true;
        btnSave.Enabled = false;
        btnimage();
        ScriptManager1.SetFocus(btnExecute);

    }
    protected void btnExecute_Click(object sender, EventArgs e)
    {
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(PageType), "abc", "alert('session Expired');window.close();", true);

            return;
        }
        pnew.Value = "0";
        //hiddenauto.Value = Session["query"].ToString();
        string ptpagetypecode = txtpagetypecode.Text;
        exepagetypecode = ptpagetypecode;
        string ptpagename = txtpagename.Text;
        exepagename = ptpagename;
        string ptheight = txtheight.Text;
        exeheight = ptheight;

        string ptwidth = txtwidth.Text;
        exewidth = ptwidth;
        string ptcolumns = txtcolumns.Text;
        execolumns = ptcolumns;


        string ptdrppublication = drppublication.SelectedValue;
        exepublication = ptdrppublication;

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.PageType execute = new NewAdbooking.Classes.PageType();
            executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.PageType execute = new NewAdbooking.classesoracle.PageType();
            executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.PageType execute = new NewAdbooking.classmysql.PageType();
            executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());

        }

        if (executept.Tables[0].Rows.Count == 0)
        {
            message = "Your Search Criteria Does Not Exist";
            AspNetMessageBox(message);

            updateStatus();
            getbuttoncheck(formname);
            drppublication.SelectedValue = "0";
            txtpagetypecode.Text = "";
            txtpagename.Text = "";
            txtheight.Text = "";
            txtwidth.Text = "";
            txtcolumns.Text = "";


            btnimage();
            return;


        }

        else
        {
            if (drppublication.Items.FindByValue(executept.Tables[0].Rows[0].ItemArray[7].ToString()) != null)
            {
                drppublication.SelectedValue = executept.Tables[0].Rows[0].ItemArray[7].ToString();
            }
            //bindpub();
            //drppublication.SelectedValue = executept.Tables[0].Rows[0].ItemArray[1].ToString();
            txtpagetypecode.Text = executept.Tables[0].Rows[0].ItemArray[1].ToString();
            txtpagename.Text = executept.Tables[0].Rows[0].ItemArray[2].ToString();
            txtheight.Text = executept.Tables[0].Rows[0].ItemArray[3].ToString();
            txtwidth.Text = executept.Tables[0].Rows[0].ItemArray[4].ToString();
            txtcolumns.Text = executept.Tables[0].Rows[0].ItemArray[5].ToString();

            drppublication.Enabled = false;
            txtpagetypecode.Enabled = false;
            txtpagename.Enabled = false;
            txtheight.Enabled = false;
            txtwidth.Enabled = false;
            txtcolumns.Enabled = false;

        }

        updateStatus();
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        ScriptManager1.SetFocus(btnModify);
        btnfirst.Enabled = false;
        btnlast.Enabled = true;
        btnprevious.Enabled = false;
        btnnext.Enabled = true;
        if (executept.Tables[0].Rows.Count == 1)
        {
            btnfirst.Enabled = false;
            btnlast.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = false;
        }

        btnimage();

    }
    protected void btnCancel_Click1(object sender, EventArgs e)
    {
        pnew.Value = "0";
        txtpagetypecode.Text = "";
        txtpagename.Text = "";
        txtheight.Text = "";
        txtwidth.Text = "";
        txtcolumns.Text = "";
        drppublication.SelectedValue = "0";
        hiddenauto.Value = "";

        chkstatus(FlagStatus);

        getbuttoncheck(formname);

        btnSave.Enabled = false;
        txtpagetypecode.Enabled = false;
        txtpagename.Enabled = false;
        txtheight.Enabled = false;
        txtwidth.Enabled = false;
        txtcolumns.Enabled = false;
        drppublication.Enabled = false;
        btnimage();
        ScriptManager1.SetFocus(btnNew);
    }
    protected void btnfirst_Click(object sender, EventArgs e)
    {
        fpnl = 0;

        DataSet ds = new DataSet();
        ds = executept;
        if (drppublication.Items.FindByValue(ds.Tables[0].Rows[0].ItemArray[7].ToString()) != null)
        {
            drppublication.SelectedValue = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        }
        else
        {
            drppublication.SelectedValue = "0";
        }
        txtpagetypecode.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        txtpagename.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        txtheight.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        txtwidth.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        txtcolumns.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();

        updateStatus();
        btnnext.Enabled = true;
        btnlast.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        drppublication.Enabled = false;
        txtpagename.Enabled = false;
        txtpagetypecode.Enabled = false;
        txtheight.Enabled = false;
        txtwidth.Enabled = false;
        txtcolumns.Enabled = false;
        btnimage();
    }
    protected void btnlast_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = executept;
        int count = ds.Tables[0].Rows.Count;
        fpnl = count - 1;

        if (drppublication.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[7].ToString()) != null)
        {
            drppublication.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[7].ToString();
        }
        else
        {
            drppublication.SelectedValue = "0";
        }
        txtpagetypecode.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
        txtpagename.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
        txtheight.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
        txtwidth.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
        txtcolumns.Text = ds.Tables[0].Rows[fpnl].ItemArray[5].ToString();

        updateStatus();

        btnfirst.Enabled = true;
        btnprevious.Enabled = true;
        btnlast.Enabled = false;
        btnnext.Enabled = false;
        drppublication.Enabled = false;
        txtpagename.Enabled = false;
        txtpagetypecode.Enabled = false;
        txtheight.Enabled = false;
        txtwidth.Enabled = false;
        txtcolumns.Enabled = false;
        btnimage();
    }
    protected void btnprevious_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = executept;

        // fpnl--;
        int count = ds.Tables[0].Rows.Count - 1;

        fpnl--;

        if (fpnl != -1)
        {
            if (fpnl >= 0 || fpnl <= count)
            {
                if (drppublication.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[7].ToString()) != null)
                {
                    drppublication.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                }
                else
                {
                    drppublication.SelectedValue = "0";
                }
                txtpagetypecode.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtpagename.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtheight.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                txtwidth.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                txtcolumns.Text = ds.Tables[0].Rows[fpnl].ItemArray[5].ToString();

                updateStatus();

                btnfirst.Enabled = true;
                btnlast.Enabled = true;
                btnprevious.Enabled = true;
                btnnext.Enabled = true;
            }
            else
            {
                btnnext.Enabled = true;
                btnlast.Enabled = true;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;

            }
        }
        else
        {
            btnnext.Enabled = true;
            btnlast.Enabled = true;
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;

        }
        if (fpnl == 0)
        {
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = true;
            btnlast.Enabled = true;

        }
        drppublication.Enabled = false;
        txtpagename.Enabled = false;
        txtpagetypecode.Enabled = false;
        txtheight.Enabled = false;
        txtwidth.Enabled = false;
        txtcolumns.Enabled = false;
        btnimage();

    }
    protected void btnnext_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = executept;
        int count = ds.Tables[0].Rows.Count - 1;
        fpnl++;


        if (fpnl != -1 && fpnl >= 0)
        {
            if (fpnl <= count)
            {
                if (drppublication.Items.FindByValue(executept.Tables[0].Rows[fpnl].ItemArray[7].ToString()) != null)
                {
                    drppublication.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                }
                else
                {
                    drppublication.SelectedValue = "0";
                }
                txtpagetypecode.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtpagename.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtheight.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                txtwidth.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                txtcolumns.Text = ds.Tables[0].Rows[fpnl].ItemArray[5].ToString();


                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }

            else
            {
                btnnext.Enabled = false;
                btnlast.Enabled = false;
                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }
        }
        else
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        if (fpnl == count)
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        drppublication.Enabled = false;
        txtpagename.Enabled = false;
        txtpagetypecode.Enabled = false;
        txtheight.Enabled = false;
        txtwidth.Enabled = false;
        txtcolumns.Enabled = false;
        btnimage();

    }
    protected void btnDelete_Click(object sender, EventArgs e)
    {
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(PageType), "abc", "alert('session Expired');window.close();", true);

            return;
        }
        string pagetypecode = txtpagetypecode.Text;
        DataSet ds1 = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.PageType del = new NewAdbooking.Classes.PageType();
            

            ds1 = del.ptdelete(pagetypecode, Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.PageType del = new NewAdbooking.classesoracle.PageType();
            ds1 = del.ptdelete(pagetypecode, Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.PageType del = new NewAdbooking.classmysql.PageType();


            ds1 = del.ptdelete(pagetypecode, Session["compcode"].ToString());
        }
       



        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.PageType execute = new NewAdbooking.Classes.PageType();
            executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.PageType execute = new NewAdbooking.classesoracle.PageType();
            executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.PageType execute = new NewAdbooking.classmysql.PageType();
            executept = execute.ptexecute(exepublication, exepagetypecode, exepagename, exeheight, exewidth, execolumns, Session["compcode"].ToString());


        }


        int a = executept.Tables[0].Rows.Count;
        if (a <= 0)
        {
            message = "There is no data";
            AspNetMessageBox(message);
            updateStatus();
            getbuttoncheck(formname);
            drppublication.SelectedValue = "0";
            txtpagetypecode.Text = "";
            txtpagename.Text = "";
            txtheight.Text = "";
            txtwidth.Text = "";
            txtcolumns.Text = "";
            drppublication.Enabled = false;
            txtpagename.Enabled = false;
            txtpagetypecode.Enabled = false;
            txtheight.Enabled = false;
            txtwidth.Enabled = false;
            txtcolumns.Enabled = false;
            btnimage();
            return;

        }
        else if (fpnl == -1 || fpnl >= a)
        {
            DataSet ds = new DataSet();

            ds = executept;
            if (drppublication.Items.FindByValue(ds.Tables[0].Rows[0]["publication"].ToString()) != null)
            {
                drppublication.SelectedValue = ds.Tables[0].Rows[0]["publication"].ToString();
            }
            txtpagetypecode.Text = ds.Tables[0].Rows[0]["PageTypeCode"].ToString();
            txtpagename.Text = ds.Tables[0].Rows[0]["PageName"].ToString();
            txtheight.Text = ds.Tables[0].Rows[0]["Height"].ToString();
            txtwidth.Text = ds.Tables[0].Rows[0]["Width"].ToString();
            txtcolumns.Text = ds.Tables[0].Rows[0]["NoColumns"].ToString();
            DataSet ds3 = new DataSet();
            ds3.ReadXml(Server.MapPath("XML/errorMessage.xml"));
            message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
            AspNetMessageBox(message);

        }

        else
        {
            DataSet ds = new DataSet();
            ds = executept;
            if (drppublication.Items.FindByValue(ds.Tables[0].Rows[0]["publication"].ToString()) != null)
            {
                drppublication.SelectedValue = ds.Tables[0].Rows[0]["publication"].ToString();
            }
            txtpagetypecode.Text = ds.Tables[0].Rows[fpnl]["PageTypeCode"].ToString();
            txtpagename.Text = ds.Tables[0].Rows[fpnl]["PageName"].ToString();
            txtheight.Text = ds.Tables[0].Rows[fpnl]["Height"].ToString();
            txtwidth.Text = ds.Tables[0].Rows[fpnl]["Width"].ToString();
            txtcolumns.Text = ds.Tables[0].Rows[fpnl]["NoColumns"].ToString();
            DataSet ds3 = new DataSet();
            ds3.ReadXml(Server.MapPath("XML/errorMessage.xml"));
            message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
            AspNetMessageBox(message);
        }
        drppublication.Enabled = false;
        txtpagename.Enabled = false;
        txtpagetypecode.Enabled = false;
        txtheight.Enabled = false;
        txtwidth.Enabled = false;
        txtcolumns.Enabled = false;
        btnimage();
    }
    protected void btnExit_Click(object sender, EventArgs e)
    {

    }

    //protected void txtheight_TextChanged(object sender, EventArgs e)
    //{
    //    string height = txtheight.Text;

    //    double saurabhh = Convert.ToDouble(height);

    //    if (saurabhh == 0)
    //    {
    //        message = "Height Cannot Be Zero";
    //        AspNetMessageBox(message);
    //        txtheight.Focus();
    //    }
    //    else
    //    {
    //        txtheight.Text = Convert.ToString(saurabhh);
    //    }
    //}

    /*[Ajax.AjaxMethod]

    public void saurabh(string str)
    {
        double saurabhh = Convert.ToDouble(str);
        string sag = Convert.ToString(saurabhh);

        if (saurabhh == 0)
        {
            message = "Height Cannot Be Zero";
            AspNetMessageBox(message);
            txtheight.Text = "";
            txtheight.Focus();
            return;
            
        }
        else
        {
            txtheight.Text = sag;
        }


    }*/





    protected void txtheight_TextChanged(object sender, EventArgs e)
    {
        string height = txtheight.Text;

        double saurabhh = Convert.ToDouble(height);

        if (saurabhh == 0)
        {
            message = "Height Cannot Be Zero";
            AspNetMessageBox(message);
            txtheight.Focus();
        }
        else
        {
            txtheight.Text = Convert.ToString(saurabhh);
        }
    }

    public void btnimage()
    {
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        else
            btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        else
            btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        else
            btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        else
            btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        else
            btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        else
            btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        else
            btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        else
            btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        else
            btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        else
            btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        else
            btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        else
            btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();
    }
  
}
