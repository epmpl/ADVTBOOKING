using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class AgencyCategoryMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {

        Response.Expires = -1;
        if (Session["compcode"] == null)
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }

        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenDateFormat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();


        Ajax.Utility.RegisterTypeForAjax(typeof(AgencyCategoryMaster));
        


        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        txtacccode.Enabled = false;
        txtacnname.Enabled = false;
        txtalias.Enabled = false;
        drpagencytype.Enabled = false;
        btnNew.Focus();

        //****work done by shweta***********************************************************
        //******************************XML FOR BUTTON**************************************
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));

        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        //******************************XML for labels****************************************
        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/AgencyCategoryMaster.xml"));
        AgencyType.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        AgencyCategoryCode.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
        AgencyCategoryName.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();
        Alias.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
       

        if (!Page.IsPostBack)
        {
            agencytype();
            txtacccode.Attributes.Add("OnChange", "javascript:return uppercase1();");
            txtacnname.Attributes.Add("OnChange", "javascript:return autoornot();");

            txtalias.Attributes.Add("OnChange", "javascript:return uppercase2();");

            btnNew.Attributes.Add("OnClick", "javascript:return acmNewclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return acmSaveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return acmModifyclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return acmDeleteclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return acmQueryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return acmExecuteclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return acmCancelclick('AgencyCategoryMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return acmfirstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return acmpreviousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return acmnextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return acmlastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return acmexitclick();");
            Page.ClientScript.RegisterStartupScript(this.GetType(), "Test", "onload_fun();", true);
              }

        // Put user code to initialize the page here
    }

    #region Web Form Designer generated code
     protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    public void agencytype()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AgencyCategoryMaster name = new NewAdbooking.Classes.AgencyCategoryMaster();
            ds = name.addagencytype();

           
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.AgencyCategoryMaster name = new NewAdbooking.classesoracle.AgencyCategoryMaster();
                ds = name.addagencytype();
            }
        else
        {
            NewAdbooking.classmysql.AgencyCategoryMaster name = new NewAdbooking.classmysql.AgencyCategoryMaster();
            ds = name.addagencytype();

            
        }

    ListItem li1;
    li1 = new ListItem();
    li1.Text = "-Select Agency Type-";
    li1.Value = "0";
    li1.Selected = true;
    drpagencytype.Items.Add(li1);

    int i;
    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    {
        ListItem li;
        li = new ListItem();
        li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
        li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
        drpagencytype.Items.Add(li);
    }
    }

    [Ajax.AjaxMethod]
    //		public DataSet acmsave(string companycode,string code,string name,string alias,string UserId)
     public DataSet acmsave(string companycode, string code, string name, string alias,string agencytype,string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencyCategoryMaster sa = new NewAdbooking.Classes.AgencyCategoryMaster();

             ds = sa.acmsave(companycode, code, name, alias, agencytype, UserId);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.AgencyCategoryMaster sa = new NewAdbooking.classesoracle.AgencyCategoryMaster();

                 ds = sa.acmsave(companycode, code, name, alias, agencytype, UserId);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.AgencyCategoryMaster sa = new NewAdbooking.classmysql.AgencyCategoryMaster();
             ds = sa.acmsave(companycode, code, name, alias, agencytype, UserId);
             return ds;
         }
    }

    [Ajax.AjaxMethod]
    //		public DataSet acmmodify(string companycode,string code,string name,string alias,string UserId)
    public DataSet acmmodify(string companycode, string code, string name, string alias, string agencytype, string UserId)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AgencyCategoryMaster modi = new NewAdbooking.Classes.AgencyCategoryMaster();

            ds = modi.acmmodify(companycode, code, name, alias, agencytype, UserId);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.AgencyCategoryMaster modi = new NewAdbooking.classesoracle.AgencyCategoryMaster();

                ds = modi.acmmodify(companycode, code, name, alias, agencytype, UserId);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.AgencyCategoryMaster modi = new NewAdbooking.classmysql.AgencyCategoryMaster();
            ds = modi.acmmodify(companycode, code, name, alias, agencytype, UserId);
            return ds;
        }
    }
    [Ajax.AjaxMethod]
    //		public DataSet acmdelete(string companycode,string code,string name,string alias,string UserId)
    public void acmdelete(string companycode, string code, string name, string alias, string UserId)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AgencyCategoryMaster del = new NewAdbooking.Classes.AgencyCategoryMaster();

            ds = del.acmdelete(companycode, code, name, alias, UserId);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.AgencyCategoryMaster del = new NewAdbooking.classesoracle.AgencyCategoryMaster();

                ds = del.acmdelete(companycode, code, name, alias, UserId);
            }
        else
        {
            NewAdbooking.classmysql.AgencyCategoryMaster del = new NewAdbooking.classmysql.AgencyCategoryMaster();
            ds = del.acmdelete(companycode, code, name, alias, UserId);
        }
       // return ds;
    }
    [Ajax.AjaxMethod]
    //		public DataSet acmexecute(string companycode,string code,string name,string alias,string UserId)
    public DataSet acmexecute(string companycode, string code, string name, string alias, string agencytype, string UserId)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AgencyCategoryMaster exec = new NewAdbooking.Classes.AgencyCategoryMaster();

            ds = exec.acmexecute(companycode, code, name, alias, agencytype, UserId);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.AgencyCategoryMaster exec = new NewAdbooking.classesoracle.AgencyCategoryMaster();

                ds = exec.acmexecute(companycode, code, name, alias, agencytype, UserId);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.AgencyCategoryMaster exec = new NewAdbooking.classmysql.AgencyCategoryMaster();
            ds = exec.acmexecute(companycode, code, name, alias, agencytype, UserId);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
    //		public DataSet acmexecute1(string companycode,string code,string name,string alias,string UserId)
     public DataSet acmexecute1(string companycode, string code, string name, string alias,string agencytype, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencyCategoryMaster exec1 = new NewAdbooking.Classes.AgencyCategoryMaster();

             ds = exec1.acmexecute1(companycode, code, name, alias, agencytype, UserId);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.AgencyCategoryMaster exec1 = new NewAdbooking.classesoracle.AgencyCategoryMaster();

                 ds = exec1.acmexecute1(companycode, code, name, alias, agencytype, UserId);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.AgencyCategoryMaster exec1 = new NewAdbooking.classmysql.AgencyCategoryMaster();
             ds = exec1.acmexecute1(companycode, code, name, alias, agencytype, UserId);
             return ds;
         }
    }

  /*  [Ajax.AjaxMethod]
    //		public DataSet acmfirst(string companycode,string UserId)
     public DataSet acmfirst(string companycode, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencyCategoryMaster fst = new NewAdbooking.Classes.AgencyCategoryMaster();

             ds = fst.acmfirst(companycode, UserId);
             return ds;
         }
         else
         {
             NewAdbooking.classmysql.AgencyCategoryMaster fst = new NewAdbooking.classmysql.AgencyCategoryMaster();
             ds = fst.acmfirst(companycode, UserId);
             return ds;
         }
    }

    [Ajax.AjaxMethod]
    //		public DataSet acmprevious(string companycode,string UserId)
     public DataSet acmprevious(string companycode, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencyCategoryMaster pre1 = new NewAdbooking.Classes.AgencyCategoryMaster();

             ds = pre1.acmprevious(companycode, UserId);
             return ds;
         }
         else
         {
             NewAdbooking.classmysql.AgencyCategoryMaster pre1 = new NewAdbooking.classmysql.AgencyCategoryMaster();
               ds = pre1.acmprevious(companycode, UserId);
               return ds;
         }
    }
    [Ajax.AjaxMethod]
    //		public DataSet acmnext(string companycode,string UserId)
     public DataSet acmnext(string companycode, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencyCategoryMaster next = new NewAdbooking.Classes.AgencyCategoryMaster();

             ds = next.acmnext(companycode, UserId);
             return ds;
         }
         else
         {
             NewAdbooking.classmysql.AgencyCategoryMaster next = new NewAdbooking.classmysql.AgencyCategoryMaster();
             ds = next.acmnext(companycode, UserId);
             return ds;
         }
    }
    [Ajax.AjaxMethod]
    //		public DataSet acmlast(string companycode,string UserId)
     public DataSet acmlast(string companycode, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencyCategoryMaster lst = new NewAdbooking.Classes.AgencyCategoryMaster();

             ds = lst.acmlast(companycode, UserId);
             return ds;
         }
         else
         {
             NewAdbooking.classmysql.AgencyCategoryMaster lst = new NewAdbooking.classmysql.AgencyCategoryMaster();
             ds = lst.acmlast(companycode, UserId);
             return ds;
         }
    }*/

    [Ajax.AjaxMethod]
    //		public DataSet chkacmcode(string companycode,string UserId,string code)
     public DataSet chkacmcode(string companycode, string UserId, string code)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencyCategoryMaster checkacm = new NewAdbooking.Classes.AgencyCategoryMaster();

             ds = checkacm.chkacmcode(companycode, UserId, code);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.AgencyCategoryMaster checkacm = new NewAdbooking.classesoracle.AgencyCategoryMaster();

                 ds = checkacm.chkacmcode(companycode, UserId, code);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.AgencyCategoryMaster checkacm = new NewAdbooking.classmysql.AgencyCategoryMaster();
             ds = checkacm.chkacmcode(companycode, UserId, code);
             return ds;
         }
    }

    [Ajax.AjaxMethod]
    public DataSet chkacmcodename(string str, string agencytype)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AgencyCategoryMaster chk = new NewAdbooking.Classes.AgencyCategoryMaster();

            ds = chk.countacmcodename(str);
            return ds;
        }
        else
            if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="orcl")
            {
                NewAdbooking.classesoracle.AgencyCategoryMaster chk = new NewAdbooking.classesoracle.AgencyCategoryMaster();

                ds = chk.countacmcodename(str, agencytype);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.AgencyCategoryMaster chk = new NewAdbooking.classmysql.AgencyCategoryMaster();
            ds = chk.countacmcodename(str, agencytype);
            return ds;
        }

    }


    
}