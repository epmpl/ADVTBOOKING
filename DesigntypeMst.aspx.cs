using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;


public partial class DesigntypeMst : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

        Ajax.Utility.RegisterTypeForAjax(typeof(DesigntypeMst));

            
        //hiddenusername.Value = Session["Username"].ToString();
        //hiddenauto.Value = Session["autogenerated"].ToString();
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
        }
        else
        {
            Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }

        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();



        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/designtypemast.xml"));

        PositionTypeCode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        PositonType.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        Alias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        //lblamount.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        premium.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        // Pageno.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        ValidFrom.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        ValidTill.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        lbldesigndes.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        lbcommdetail.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lbladcat.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
      //  lblfontcolor.Text = ds.Tables[0].Rows[0].ItemArray[13].ToString();

        btnNew.Enabled = true;
        btnNew.Focus();
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnnext.Enabled = false;
        btnprevious.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        lbcommdetail.Enabled = false;

        drpadcategory.Enabled = false;
        if (!Page.IsPostBack)
        {
            txtPosTypCode.Enabled = false;
            txtPosType.Enabled = false;
            txtAlias.Enabled = false;
            //drpo.Enabled = false;
            txtamount.Enabled = false;
            drpremium.Enabled = false;
            txtvalid.Enabled = false;
            txtvalidtill.Enabled = false;


            txtvalid.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            txtvalidtill.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            btnNew.Attributes.Add("OnClick", "javascript:return NewClick2();");
            lbcommdetail.Attributes.Add("OnClick", "javascript:return commission();");
            btnExit.Attributes.Add("OnClick", "javascript:return Exit();");
            btnCancel.Attributes.Add("OnClick", "javascript:return CancelClick2();");
            btnQuery.Attributes.Add("OnClick", "javascript:return QueryClick2();");
            btnSave.Attributes.Add("OnClick", "javascript:return SaveClick2(" + "'" + hiddencompcode.Value + "'" + ");");
            txtPosType.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtPosType');");
            txtPosType.Attributes.Add("OnBlur", "javascript:return autoornot();");

            btnfirst.Attributes.Add("OnClick", "javascript:return FirstClick2();");
            btnprevious.Attributes.Add("OnClick", "javascript:return PreviousClick2();");
            btnnext.Attributes.Add("OnClick", "javascript:return NextClick2();");
            btnlast.Attributes.Add("OnClick", "javascript:return LastClick2();");
            btnModify.Attributes.Add("OnClick", "javascript:return ModifyClick2();");
            btnDelete.Attributes.Add("OnClick", "javascript:return DeleteClick2("+"'"+hiddencompcode.Value+"'"+");");
            btnExecute.Attributes.Add("OnClick", "javascript:return ExecuteClick2(" + "'" + hiddencompcode.Value + "'" + ");");

            txtAlias.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtAlias');");
            txtPosTypCode.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtPosTypCode');");
            txtPosType.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtPosType');");
            txtPosType.Attributes.Add("OnBlur", "javascript:return autoornot();");
            txtamount.Attributes.Add("OnChange", "javascript:return checkamount();");
            drpremium.Attributes.Add("OnChange", "javascript:return Cleartext();");


            advcat();

        }

        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
    }

    [Ajax.AjaxMethod]
   // PosTypCode, PosType, compcode, userid, flag, fdate, tdate
    public DataSet chkpastypename(string PosTypCode, string PosType, string compcode, string userid, string flag, string fdate, string tdate)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { PosTypCode, PosType, compcode, userid, flag, fdate, tdate };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.designtype modify = new NewAdbooking.Classes.designtype();
            ds = modify.chkpastypename1(PosTypCode, PosType, compcode, userid, fdate, tdate, flag);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvDispTypeMst modify = new NewAdbooking.classesoracle.AdvDispTypeMst();
            ds = modify.chkpastypename1(PosTypCode, PosType, compcode, userid, fdate, tdate, flag);
        }
        else
        {
            string procedureName = "DESIGNPOSITIONTYPECHKNAME";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;       
    }



    public void advcat()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bind = new NewAdbooking.Classes.BookingMaster();

            ds = bind.advdatacategory(Session["compcode"].ToString(), "CL0");
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bind = new NewAdbooking.classesoracle.BookingMaster();

                ds = bind.advdatacategory(Session["compcode"].ToString(), "CL0");
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster bind = new NewAdbooking.classmysql.BookingMaster();
                ds = bind.advdatacategory(Session["compcode"].ToString(), "CL0");
            }


        int i;
        ListItem li1;
        li1 = new ListItem();
        drpadcategory.Items.Clear();
        li1.Text = "Select Ad Category";
        li1.Value = "0";
        li1.Selected = true;
        drpadcategory.Items.Add(li1);

        if (ds.Tables.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drpadcategory.Items.Add(li);

            }
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet insert(string PosTypCode,string PosType,string Alias,string compcode,string userid)
    public DataSet insert(string PosTypCode, string PosType, string Alias, string amount, string premium, string compcode, string userid, string fdate, string tdate, string description, string adcat)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compcode, PosTypCode, PosType, Alias, amount, premium, userid, fdate, tdate, description, adcat };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.designtype insert = new NewAdbooking.Classes.designtype();

            ds = insert.InsertValue(PosTypCode, PosType, Alias, amount, premium, compcode, userid, fdate, tdate, Session["dateformat"].ToString());
            return ds;
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvDispTypeMst insert = new NewAdbooking.classesoracle.AdvDispTypeMst();
            ds = insert.InsertValue(PosTypCode, PosType, Alias, amount, premium, compcode, userid, fdate, tdate, Session["dateformat"].ToString(), description, adcat);
            return ds;
        }
        else
        {
            string procedureName = "displaytypemstinsert_displaytypemstinsert_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet chkadvposition(string str)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { str,str.Substring(0,2) };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

             NewAdbooking.Classes.designtype chk = new NewAdbooking.Classes.designtype();
            ds = chk.chkadvposition1(str);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvDispTypeMst chk = new NewAdbooking.classesoracle.AdvDispTypeMst();
            ds = chk.chkadvposition1(str);
           
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "chkadvlogtyp_chkadvlogtyp_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPositionTypMst chk = new NewAdbooking.classmysql.AdvPositionTypMst();
            ds = chk.chkadvposition1(str);
            return ds;
        }

        return ds;

    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet Selectpage(string PosTypCode, string PosType, string Alias, string amount, string premium, string compcode, string userid, string dateformat)
    {
        DataSet ds = new DataSet();
        //string[] parameterValueArray = new string[] { PosTypCode, PosType, Alias, amount, premium, compcode, userid, Session["dateformat"].ToString() };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.designtype select = new NewAdbooking.Classes.designtype();

            ds = select.SelectValue(PosTypCode, PosType, Alias, amount, premium, compcode, userid, Session["dateformat"].ToString());
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvDispTypeMst select = new NewAdbooking.classesoracle.AdvDispTypeMst();
            ds = select.SelectValue(PosTypCode, PosType, Alias, amount, premium, compcode, userid, Session["dateformat"].ToString());           
        }
        else
        {
            NewAdbooking.classmysql.AdvPositionTypMst select = new NewAdbooking.classmysql.AdvPositionTypMst();
            ds = select.SelectValue(PosTypCode, PosType, Alias, amount, premium, compcode, userid, Session["dateformat"].ToString());
            return ds;
        }
        return ds;
    }


    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
   
   // public DataSet modify(string PosTypCode, string PosType, string Alias, string amount, string premium, string compcode, string userid, string fdate, string tdate, string description, string adcat)  
    public DataSet modify(string compcode, string PosTypCode, string PosType, string Alias, string amount1, string premium, string userid, string fdate, string tdate, string description, string adcat)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] {compcode, PosTypCode, PosType, Alias, amount1, premium, userid, fdate, tdate, description, adcat };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.designtype modify = new NewAdbooking.Classes.designtype();

            //ds = modify.ModifyValue(PosTypCode, PosType, Alias, amount, premium, compcode, userid, fdate, tdate, Session["dateformat"].ToString());
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvDispTypeMst modify = new NewAdbooking.classesoracle.AdvDispTypeMst();
            ds = modify.ModifyValue(PosTypCode, PosType, Alias, amount1, premium, compcode, userid, fdate, tdate, Session["dateformat"].ToString(), description, adcat);
            return ds;
        }
        else
        {
            string procedureName = "disptypemstmodify_disptypemstmodify_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
           
        }

        return ds;
    }

    [Ajax.AjaxMethod]
    //		public void delete1(string PosTypCode,string compcode,string userid)
    public void delete1(string PosTypCode, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { PosTypCode, compcode, userid };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.designtype delete1 = new NewAdbooking.Classes.designtype();

            ds = delete1.delete1(PosTypCode, compcode, userid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvDispTypeMst delete1 = new NewAdbooking.classesoracle.AdvDispTypeMst();
            ds = delete1.delete1(PosTypCode, compcode, userid);
        }
        else
        {
            NewAdbooking.classmysql.AdvPositionTypMst delete1 = new NewAdbooking.classmysql.AdvPositionTypMst();
            ds = delete1.delete1(PosTypCode, compcode, userid);
        }
        //return ds;
    }



    [Ajax.AjaxMethod]
    //		public DataSet chksave(string PosTypCode,string compcode,string userid)
    public DataSet chksave(string PosTypCode, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { PosTypCode, compcode, userid };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.designtype modify = new NewAdbooking.Classes.designtype();
            ds = modify.chksave(PosTypCode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvDispTypeMst modify = new NewAdbooking.classesoracle.AdvDispTypeMst();
            ds = modify.chksave(PosTypCode, compcode, userid);
            return ds;
        }
        else
        {
            string procedureName = "DisplayTypechk_DisplayTypechk_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);           
        }
        return ds;
    }
}


