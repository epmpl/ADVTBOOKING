using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class adsubcat1 : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {

        Response.Expires = -1;
        if (Session["compcode"] == null)
        //if  ;
        {


            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenDateFormat.Value = Session["dateformat"].ToString();

        hiddenauto.Value = Session["autogenerated"].ToString();

        /*========*/
        hiddencatcode.Value = drpadvcatcode.SelectedValue.ToString();

        hiddenusername.Value = Session["Username"].ToString();
        DataSet dz = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();
            
            dz = checkform.formpermission(hiddencomcode.Value, hiddenuserid.Value, "adsubcat1");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master checkform = new NewAdbooking.classesoracle.Master();
            dz = checkform.formpermission(hiddencomcode.Value, hiddenuserid.Value, "adsubcat1");
        }
        else
        {
            NewAdbooking.classmysql.Master checkform = new NewAdbooking.classmysql.Master();

            dz = checkform.formpermission(hiddencomcode.Value, hiddenuserid.Value, "adsubcat1");

        }

          if (dz.Tables[0].Rows[0].ItemArray[0].ToString() == "0" || dz.Tables[0].Rows[0].ItemArray[0].ToString() == "8")
        {
            Response.Write("<script>alert('You Are Not Authorised To See This Form');</script>");
            Server.Transfer("EnterPage.aspx");
        }
        else
        {
            string id = dz.Tables[0].Rows[0].ItemArray[0].ToString();
            if (id == "1" || id == "9")
            {

                btnNew.Enabled = true;
                btnQuery.Enabled = false;
                btnDelete.Enabled = false;
                btnSave.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = true;
                btnModify.Enabled = false;

                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;


            }
            if (id == "2" || id == "10")
            {

                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnDelete.Enabled = false;
                btnSave.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = true;
                btnModify.Enabled = false;

                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;


            }
            if (id == "3" || id == "11")
            {

                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnDelete.Enabled = false;
                btnSave.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = true;
                btnModify.Enabled = false;

                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;

            }
            if (id == "4" || id == "12")
            {

                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnDelete.Enabled = false;
                btnSave.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = true;
                btnModify.Enabled = false;

                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;


            }
            if (id == "5" || id == "13")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnDelete.Enabled = false;
                btnSave.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = true;
                btnModify.Enabled = false;

                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;

            }
            if (id == "6" || id == "14")
            {
                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnDelete.Enabled = false;
                btnSave.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = true;
                btnModify.Enabled = false;

                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;

            }
            if (id == "7" || id == "15")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnDelete.Enabled = false;
                btnSave.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = true;
                btnModify.Enabled = false;

                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;

            }

        }





        Ajax.Utility.RegisterTypeForAjax(typeof(adsubcat1));



        //////////////////////
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();



        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/adsubcat1.xml"));

        AdvCategoryName.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        AdvSubCategoryCode.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        AdvSubCategoryName.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        Alias.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lbimagename.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lbxml.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        Status.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        lblstatewise.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
       
        if (ds.Tables.Count > 1)
        {
            if (ds.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
            {
                lbimagename.Attributes.Add("style", "display:none");
                txtimagename.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[1].ToString() == "hide")
            {
                
                lbxml.Attributes.Add("style", "display:none");
                txtxml.Attributes.Add("style", "display:none");
         
            }
             if (ds.Tables[1].Rows[0].ItemArray[2].ToString() == "hide")
            {

                Label1.Attributes.Add("style", "display:none");
                txtpri.Attributes.Add("style", "display:none");
         
            }
             //if (ds.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
             //{
             //    lblsapcode.Attributes.Add("style", "display:none");
             //    txtsapcode.Attributes.Add("style", "display:none");
             //}
            

        }




        pagedef();
        category();
        State();

        if (!Page.IsPostBack)
        {
            btnNew.Attributes.Add("OnClick", "javascript:return subcatinsert();");
            btnSave.Attributes.Add("onClick", "javascript:return saveadsubcat();");
            btnModify.Attributes.Add("onClick", "javascript:return modifyadsubcat();");
            btnQuery.Attributes.Add("onClick", "javascript:return queryadsubcat();");
            btnExecute.Attributes.Add("onClick", "javascript:return executeadsubcat();");
            btnCancel.Attributes.Add("onClick", "javascript:return canceladsubcat('adsubcat1');");

            //drpadvcatcode.Attributes.Add("onBlur","javascript:return codecat();");

            btnDelete.Attributes.Add("onClick", "javascript:return deleteadsubcat();");
            btnfirst.Attributes.Add("onClick", "javascript:return firstadsubcat();");
            btnprevious.Attributes.Add("onClick", "javascript:return previousadsubcat();");
            btnnext.Attributes.Add("onClick", "javascript:return nextadsubcat();");
            btnlast.Attributes.Add("onClick", "javascript:return lastadsubcat();");
            btnExit.Attributes.Add("onClick", "javascript:return exitadsubcat();");
           txtsubcatcode.Attributes.Add("OnBlur", "javascript:return UpperCase('txtsubcatcode')");
           txtalias.Attributes.Add("OnBlur", "javascript:return UpperCaseAlias()");
           txtadsubcatname.Attributes.Add("OnBlur", "javascript:return UpperCase('txtadsubcatname')");
            //txteditionname.Attributes.Add("OnBlur","javascript:return UpperCase('txteditionname')");
            txtadsubcatname.Attributes.Add("OnChange", "javascript:return autoornot();");
            drpadvcatcode.Attributes.Add("OnChange", "javascript:return refreshf();");
            txtpri.Attributes.Add("onpaste","javascript:return false;");

        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();


        // Put user code to initialize the page here
    }

    #region Web Form Designer generated code
    override protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion


    public void pagedef()
    {
        btnNew.Enabled = true;
        btnNew.Focus();
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        txtsubcatcode.Enabled = false;
        txtalias.Enabled = false;
        txtadsubcatname.Enabled = false;
        drpadvcatcode.Enabled = false;
        drpstatus.Enabled = false;
        drpadvcatcode.Enabled = true;


    }
    public void category()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.adsubcat category = new NewAdbooking.Classes.adsubcat();
            
            ds = category.addcategoryname(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat category = new NewAdbooking.classesoracle.adsubcat();
            ds = category.addcategoryname(Session["compcode"].ToString());
        }
        else
        {

            NewAdbooking.classmysql.adsubcat category = new NewAdbooking.classmysql.adsubcat();

            ds = category.addcategoryname(Session["compcode"].ToString());
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Add Category-";
        li1.Value = "0";
        li1.Selected = true;
        drpadvcatcode.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpadvcatcode.Items.Add(li);


        }



    }


    public void State()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster StateName = new NewAdbooking.Classes.CityMaster();
            ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CityMaster StateName = new NewAdbooking.classesoracle.CityMaster();
            ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.CityMaster StateName = new NewAdbooking.classmysql.CityMaster();
            ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select";
        li1.Value = "0";
        //li1.Selected =true;
        drpstatewise.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpstatewise.Items.Add(li);
        }
    }

    /*[Ajax.AjaxMethod]
    public DataSet catcod(string catname)
    {
        NewAdbooking.Classes.adsubcat code=new NewAdbooking.Classes.adsubcat();
        DataSet ds=new DataSet();
        ds= code.getcode(catname);
        return ds;
		
    }*/



    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]

    public void subcatsave(string compcode, string catcode, string subcatcode, string subcatname, string subcatalias, string userid, string imagename, string txtxml, string pri, string ip, string status1, string sapcode, string statecode, string eddiscflag)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.adsubcat save = new NewAdbooking.Classes.adsubcat();
                // compcode,  catcode,  subcatcode,  subcatname,  subcatalias, userid, imagename, txtxml, pri, status1, sapcode, statecode
                ds = save.savesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid, imagename, txtxml, pri, status1, sapcode, statecode, eddiscflag);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.adsubcat save = new NewAdbooking.classesoracle.adsubcat();
                ds = save.savesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid, imagename, txtxml, pri, status1, sapcode, statecode, eddiscflag);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "SUBCATSAVE_SUBCATSAVE_P";
                string[] parameterValueArray = { compcode, catcode, subcatcode, subcatname, subcatalias, userid, imagename, txtxml, pri, status1, sapcode, statecode, "", "", "", "", "", "", "", eddiscflag, "" };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }

            //else
            //{
            //    NewAdbooking.classmysql.adsubcat save = new NewAdbooking.classmysql.adsubcat();

            //    ds = save.savesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid, imagename, txtxml, pri, status1, sapcode, statecode, eddiscflag);

            //}

        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string subcatcode1 = "Inserted Ad SubCategory  " + subcatcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Ad SubCategory ','" + err.Replace("'", "''") + "','Ad SubCategory Created','" + subcatcode1;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        //return ds;

    }


    [Ajax.AjaxMethod]

    public DataSet subcatexe12(string compcode, string catcode, string subcatcode, string subcatname, string subcatalias, string userid, string statecode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {



            NewAdbooking.Classes.adsubcat exe = new NewAdbooking.Classes.adsubcat();

            ds = exe.exesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid, statecode);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat exe = new NewAdbooking.classesoracle.adsubcat();
            ds = exe.exesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid, statecode);
            return ds;
        }

        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "SUBCATEXE_SUBCATEXE_P";
            string[] parameterValueArray = { compcode, catcode, subcatcode, subcatname, subcatalias, userid, statecode ,"", "" };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //else
        //{

        //    NewAdbooking.classmysql.adsubcat exe = new NewAdbooking.classmysql.adsubcat();

        //    ds = exe.exesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid);
        //    return ds;
        //}
        return ds;
    }





    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]

    public void subcatupdate(string compcode, string catcode, string subcatcode, string subcatname, string subcatalias, string userid, string imagename, string txtxml, string pri, string ip, string status1, string sapcode, string statecode, string eddiscflag)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.adsubcat update = new NewAdbooking.Classes.adsubcat();
                ds = update.updatesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid, imagename, txtxml, pri, status1, sapcode, statecode, eddiscflag);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.adsubcat update = new NewAdbooking.classesoracle.adsubcat();
                ds = update.updatesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid, imagename, txtxml, pri, status1, sapcode, statecode, eddiscflag );
            }

            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "subcatupdate_subcatupdate_p";
                string[] parameterValueArray = { compcode, catcode, subcatcode, subcatname, subcatalias, userid, imagename, txtxml, pri, status1, sapcode, statecode, eddiscflag, "", "", "", "", "", "", "", "" ,"" };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }

            //else
            //{
            //    NewAdbooking.classmysql.adsubcat update = new NewAdbooking.classmysql.adsubcat();
            //    ds = update.updatesubcat(compcode, catcode, subcatcode, subcatname, subcatalias, userid, imagename, txtxml, pri);

            //}

        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string subcatcode2 = "Modified Ad SubCategory  " + subcatcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Ad SubCategory ','" + err.Replace("'", "''") + "','Ad SubCategory Updated','" + subcatcode2;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);

    }


    [Ajax.AjaxMethod]

    public DataSet subcatfirst(string compcode, string catcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.adsubcat first = new NewAdbooking.Classes.adsubcat();
         
            ds = first.firstsubcat(compcode, catcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat first = new NewAdbooking.classesoracle.adsubcat();

            ds = first.firstsubcat(compcode, catcode, userid);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "subcatfnpl_subcatfnpl_p";
            string[] parameterValueArray = { compcode, catcode, userid };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        //else
        //{
        //    NewAdbooking.classmysql.adsubcat first = new NewAdbooking.classmysql.adsubcat();

         // ds = first.firstsubcat(compcode, catcode, userid);
        //    return ds;
        //}
        return ds;

    }

    [Ajax.AjaxMethod]
    public DataSet subcatchk(string compcode, string subcatcode, string subcatname, string catcode, string userid, string statecode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.adsubcat first = new NewAdbooking.Classes.adsubcat();

            ds = first.chksubcat(compcode, subcatcode, subcatname, catcode, userid, statecode);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat first = new NewAdbooking.classesoracle.adsubcat();
            ds = first.chksubcat(compcode, subcatcode, subcatname, catcode, userid, statecode);
            return ds;
        }
       
       else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
       {
           string procedureName = "SUBCATCHK_SUBCATCHK_P";
           string[] parameterValueArray = { compcode, subcatcode, subcatname, catcode, userid, statecode };
           NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
           ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
       }
            return ds;
        

    }



    [Ajax.AjaxMethod]

    public DataSet subcatpre(string compcode, string catcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.adsubcat pre = new NewAdbooking.Classes.adsubcat();
          
            ds = pre.presubcat(compcode, catcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat pre = new NewAdbooking.classesoracle.adsubcat();
            ds = pre.presubcat(compcode, catcode, userid);
            return ds;
        }

        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "SUBCATFNPL_SUBCATFNPL_P";
            string[] parameterValueArray = { compcode, catcode, userid };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //else
        //{
        //    NewAdbooking.classmysql.adsubcat pre = new NewAdbooking.classmysql.adsubcat();

        //    ds = pre.presubcat(compcode, catcode, userid);
        //    return ds;
        //}
        return ds;

    }



    [Ajax.AjaxMethod]

    public DataSet subcatnext(string compcode, string catcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.adsubcat next = new NewAdbooking.Classes.adsubcat();
           
            ds = next.nextsubcat(compcode, catcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat next = new NewAdbooking.classesoracle.adsubcat();
            ds = next.nextsubcat(compcode, catcode, userid);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "SUBCATFNPL_SUBCATFNPL_P";
            string[] parameterValueArray = { compcode, catcode, userid };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //else
        //{
        //    NewAdbooking.classmysql.adsubcat next = new NewAdbooking.classmysql.adsubcat();

        //    ds = next.nextsubcat(compcode, catcode, userid);
        //    return ds;
        //}
        return ds;

    }



    [Ajax.AjaxMethod]

    public DataSet subcatlast(string compcode, string catcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.adsubcat last = new NewAdbooking.Classes.adsubcat();
           
            ds = last.lastsubcat(compcode, catcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat last = new NewAdbooking.classesoracle.adsubcat();

            ds = last.lastsubcat(compcode, catcode, userid);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "SUBCATFNPL_SUBCATFNPL_P";
            string[] parameterValueArray = { compcode, catcode, userid };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //else
        //{
        //    NewAdbooking.classmysql.adsubcat last = new NewAdbooking.classmysql.adsubcat();

        //    ds = last.lastsubcat(compcode, catcode, userid);
        //    return ds;
        //}

        return ds;
    }


    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]

    public void subcatdel(string compcode, string catcode, string userid, string subcatcode, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.adsubcat delete = new NewAdbooking.Classes.adsubcat();

                ds = delete.delsubcat(compcode, catcode, userid, subcatcode);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.adsubcat delete = new NewAdbooking.classesoracle.adsubcat();

                ds = delete.delsubcat(compcode, catcode, userid, subcatcode);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "SUBCATDEL_SSUBCATDEL_P";
                string[] parameterValueArray = { compcode, catcode, userid, subcatcode};
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            //else
            //{
            //    NewAdbooking.classmysql.adsubcat delete = new NewAdbooking.classmysql.adsubcat();

            //    ds = delete.delsubcat(compcode, catcode, userid, subcatcode);

            //}
        }
        catch (Exception e)
        {
            err = e.Message;
        }

        string subcatcode3 = "Deleted Ad SubCategory  " + subcatcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Ad SubCategory ','" + err.Replace("'", "''") + "','Ad SubCategory Deleted','" + subcatcode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);

    }



     [Ajax.AjaxMethod]
    public DataSet chksubcatcode(string str, string catcode, string statecode)
    {
        DataSet ds = new DataSet();
         if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
         {
        NewAdbooking.Classes.adsubcat chk = new NewAdbooking.Classes.adsubcat();

        ds = chk.chksubcatcode1(str, catcode, statecode);
        return ds;
         }
         else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             NewAdbooking.classesoracle.adsubcat chk = new NewAdbooking.classesoracle.adsubcat();
             ds = chk.chksubcatcode1(str, catcode, statecode);
             return ds;
         }
         else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
         {
             string procedureName = "CHKADSUBCATNAME_CHKADSUBCATNAME_P";
             string[] parameterValueArray = { str, catcode, statecode };
             NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }

         //else
         //{
         //    NewAdbooking.classmysql.adsubcat chk = new NewAdbooking.classmysql.adsubcat();

         //    ds = chk.chksubcatcode1(str, catcode, statecode);
         //    return ds;

         //}
         return ds;
    }







    protected void hiddencompcode_ServerChange(object sender, System.EventArgs e)
    {

    }

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }
}