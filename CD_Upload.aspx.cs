using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Diagnostics;
using System.IO;
using System.Drawing;

public partial class CD_Upload : System.Web.UI.Page
{
    string username, userid;
    string dateformat, id;
    int j = 0;
    string pubdate1 = "";
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";

        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenusername.Value = Session["username"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
        }
        else
        {
            li.Text = "<script>window.parent.location=\"login.aspx\";</script>";
            return;
        }

        DataSet objDataSet = new DataSet();
        // Read in the XML file
        objDataSet.ReadXml(Server.MapPath("XML/BookingUnit.xml"));
        lblPublicationDate.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        lblPublication.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        lblCenter.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        lblEdition.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        lblSupplement.Text = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        lblpageno.Text = objDataSet.Tables[0].Rows[0].ItemArray[11].ToString();
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();
        btnView.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[12].ToString();

        string ss = hiddenpermission.Value;
        hiddenpermission.Value = "";
        Ajax.Utility.RegisterTypeForAjax(typeof(CD_Upload));

        hiddenusername.Value = Session["Username"].ToString();
        if (Session["Username"] == null)
        {
            //Response.Redirect("login.aspx");

            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        else
        {
            username = Session["Username"].ToString();
            userid = Session["userid"].ToString();
        }

        if (!Page.IsPostBack)
        {
            btnExit.Attributes.Add("OnClick", "javascript:return exitclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return cancelClick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return queryclick();");
            btnAdView.Attributes.Add("OnClick", "javascript:return ViewClick();");
            
            PubDate.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            ddlPublication.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            ddlCenter.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            ddlCenter.Attributes.Add("OnChange", "javascript:return cd_filledition();");
            ddlEdition.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            ddlEdition.Attributes.Add("OnChange", "javascript:return cd_fillsupplement();");
            ddlSupplement.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
           // btnSend.Attributes.Add("onclick", "javascript:return sendtocenters();");

            PubDate.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            disable();
            addpubcode();
            addcentercode();
            addeditioncode();
            addsecpubcode();

            pubdate1 = DateTime.Today.AddDays(1).ToShortDateString();

            string dateformat = Session["dateformat"].ToString();

            string month;
            string day;
            DateTime dt = DateTime.Now.AddDays(1);
            int year = Convert.ToInt32(dt.Year);
            if (Convert.ToString(dt.Month).Length == 1)
                month = "0" + Convert.ToString(dt.Month);
            else
                month = Convert.ToString(dt.Month);
            if (Convert.ToString(dt.Day).Length == 1)
                day = "0" + Convert.ToString(dt.Day);
            else
                day = Convert.ToString(dt.Day);

            if (Session["dateformat"].ToString() == "dd/mm/yyyy")
            {
                PubDate.Text = day + "/" + month + "/" + year;
            }
            else if (Session["dateformat"].ToString() == "yyyy/mm/dd")
            {
                PubDate.Text = year + "/" + month + "/" + day;
            }
            else
            {
                PubDate.Text = month + "/" + day + "/" + year;
            }

            //ddlPublication.SelectedIndex = 1;
            //ddlCenter.SelectedIndex = 1;            
            if (btnExit.Enabled == false)
                btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
            if (btnQuery.Enabled == false)
                btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
            if (btnCancel.Enabled == false)
                btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        }

        Label1.Text = "";

        //***************bind centers************************
       /* DataSet ds_center = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            Layoutx.OrclClass.MaterialRename objcenters = new Layoutx.OrclClass.MaterialRename();
            ds_center = objcenters.clsBindCenters();
        }
        if (ds_center.Tables[0].Rows.Count > 0)
        {
            SendGridView.DataSource = ds_center;
            SendGridView.DataBind();
        }*/
        //****************************************************
        DateTime da = DateTime.Now;
        string formname = "ShowBookingDetails";
        DataSet dz = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();
            dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, formname);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload checkform = new NewAdbooking.classesoracle.CD_Upload();
            dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, formname);
        }
        else
        {
            NewAdbooking.classmysql.CD_Upload checkform = new NewAdbooking.classmysql.CD_Upload();
            dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, formname);
        }

        if (dz.Tables[0].Rows.Count > 0)
        {
            id = dz.Tables[0].Rows[0].ItemArray[0].ToString();
            if (id == "0" || id == "8")
            {
                hiddenpermission.Value = "zero";
                Response.Write("<script>alert('You are not authorised to see this form');</script>");
                return;
            }
        }
    }


    public void disable()
    {
        ddlPublication.Enabled = false;
        ddlCenter.Enabled = false;
        ddlEdition.Enabled = false;
        ddlSupplement.Enabled = false;
        PubDate.Enabled = false;
        txtPage.Enabled = false;
        btnAdView.Enabled = false;
    }

    //  Display booking Ad 
    public DataSet ViewAdBooking(string compcode, string pubdate, string pubcode, string centercode, string editioncode, string suppcode, string dateformat, string pageno)
    {
        //agenname=drpparent.Text.ToString();

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CD_Upload bindAdBooking = new NewAdbooking.Classes.CD_Upload();
           ds = bindAdBooking.clsViewBooking_CD(compcode, pubdate, pubcode, centercode, editioncode, suppcode, dateformat, pageno);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload bindAdBooking = new NewAdbooking.classesoracle.CD_Upload();
            ds = bindAdBooking.clsViewBooking_CD(compcode, pubdate, pubcode, centercode, editioncode, suppcode, dateformat, pageno);
        }
        else
        {

        }
        return ds;

    }

    //  Display client name 
    public DataSet getClientName(string compcode, string pubdate, string iidnum, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
           // Layoutx.Classes.MaterialRename objAdBooking = new Layoutx.Classes.MaterialRename();
           // ds = objAdBooking.clsgetClientname(compcode, pubdate, iidnum, hiddendateformat.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload objAdBooking = new NewAdbooking.classesoracle.CD_Upload();
            ds = objAdBooking.clsgetClientname(compcode, pubdate, iidnum, hiddendateformat.Value);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet bind_editioncode(string centercode, string userid, string pubcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CD_Upload addEdition = new NewAdbooking.Classes.CD_Upload();
            ds = addEdition.editioncodes(centercode, userid, pubcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload addEdition = new NewAdbooking.classesoracle.CD_Upload();
            ds = addEdition.editioncodes(centercode, userid, pubcode);
        }
        else
        {
            NewAdbooking.classmysql.CD_Upload addEdition = new NewAdbooking.classmysql.CD_Upload();
            ds = addEdition.editioncodes(centercode, userid, pubcode);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet bind_secpubcode(string compcode, string userid, string editioncode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CD_Upload addSecpub = new NewAdbooking.Classes.CD_Upload();
            ds = addSecpub.secpubcodes(compcode, userid, editioncode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload addSecpub = new NewAdbooking.classesoracle.CD_Upload();
            ds = addSecpub.secpubcodes(compcode, userid, editioncode);
        }
        else
        {
            NewAdbooking.classmysql.CD_Upload addSecpub = new NewAdbooking.classmysql.CD_Upload();
            ds = addSecpub.secpubcodes(compcode, userid, editioncode);
        }
        return ds;
    }

    public void addpubcode()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master Pripubl = new NewAdbooking.Classes.Master();
            ds = Pripubl.Pripubcode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload Pripubl = new NewAdbooking.classesoracle.CD_Upload();
            ds = Pripubl.Pripubcode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.CD_Upload Pripubl = new NewAdbooking.classmysql.CD_Upload();
            ds = Pripubl.Pripubcode(Session["compcode"].ToString(), Session["userid"].ToString());

        }
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Publ Code--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;

        ddlPublication.Items.Add(li1);

        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                ddlPublication.Items.Add(li);
            }
        } ddlPublication.SelectedIndex = 2;

    }

    public void addcentercode()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master addCenter = new NewAdbooking.Classes.Master();
            ddlCenter.Items.Clear();
            ds = addCenter.centercode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload addCenter = new NewAdbooking.classesoracle.CD_Upload();
            ddlCenter.Items.Clear();
            ds = addCenter.centercode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.CD_Upload addCenter = new NewAdbooking.classmysql.CD_Upload();
            ddlCenter.Items.Clear();
            ds = addCenter.centercode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Center--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;

        ddlCenter.Items.Add(li1);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                ddlCenter.Items.Add(li);
            }
            ddlCenter.SelectedIndex = 1;
        }
    }


    public void addeditioncode()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master addEdition = new NewAdbooking.Classes.Master();
            ddlEdition.Items.Clear();
            ds = addEdition.editioncode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload addEdition = new NewAdbooking.classesoracle.CD_Upload();
            ddlEdition.Items.Clear();
            ds = addEdition.editioncode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.CD_Upload addEdition = new NewAdbooking.classmysql.CD_Upload();
            ddlEdition.Items.Clear();
            ds = addEdition.editioncode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Edition--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        ddlEdition.Items.Clear();
        ddlEdition.Items.Add(li1);

        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                ddlEdition.Items.Add(li);
            }
        }
    }

    public void addsecpubcode()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CD_Upload addSecpub = new NewAdbooking.Classes.CD_Upload();
            ddlSupplement.Items.Clear();
            ds = addSecpub.secpubcode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload addSecpub = new NewAdbooking.classesoracle.CD_Upload();
            ddlSupplement.Items.Clear();
            ds = addSecpub.secpubcode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.CD_Upload addSecpub = new NewAdbooking.classmysql.CD_Upload();
            ddlSupplement.Items.Clear();
            ds = addSecpub.secpubcode(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Supplement--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        ddlSupplement.Items.Clear();
        ddlSupplement.Items.Add(li1);
        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                ddlSupplement.Items.Add(li);
            }
        }
    }

    protected void btnAdView_Click(object sender, EventArgs e)
    {
        if (PubDate.Text == "")
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Date');", true);
            // ScriptManager.SetFocus(PubDate);
            PubDate.Focus();
            return;
        }

        if (ddlPublication.SelectedIndex == 0)
        {
            //  ScriptManager.RegisterStartupScript(this, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Publication');" + Page.ClientScript.GetPostBackEventReference(this, "") + ";", true);
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Publication');", true);
            ddlPublication.Focus();
            btnAdView.Enabled = true;
            return;
        }

        if (ddlCenter.SelectedIndex == 0)
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Center');", true);
            ddlCenter.Focus();
            btnAdView.Enabled = true;
            return;
        }
        if (ddlEdition.SelectedIndex == 0)
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Edition');", true);
            ddlEdition.Focus();
            btnAdView.Enabled = true;
            return;
        }

        if (ddlSupplement.SelectedIndex == 0)
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Supplement');", true);
            ddlEdition.Focus();
            btnAdView.Enabled = true;
            return;
        }

        String publication = ddlPublication.Text;
        String center = ddlCenter.Text;
        String edition = ddlEdition.Text;
        String supplement = ddlSupplement.Text;
        hiddendateformat.Value = Session["dateformat"].ToString();
        DataSet ds = ViewAdBooking(hiddencompcode.Value, PubDate.Text, publication, center, edition, supplement, hiddendateformat.Value, txtPage.Text);
        if (txtgridSize.Text == "" || txtgridSize.Text == "0")
            GridView1.PageSize = 10;
        else
            GridView1.PageSize = Convert.ToInt16(txtgridSize.Text);

        GridView1.DataSource = ds;
        GridView1.DataBind();

        if (GridView1.Rows.Count == 0)
        {
            // Response.Write("<Script>alert('The data is not available as per your selection');</Script>");
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('The data is not available as per your selection');", true);
            // ddlEdition.Focus();
            btnAdView.Enabled = true;
            PubDate.Focus();
            return;
        }
        else
        {
            for (int i = 0; i < GridView1.Rows.Count; i++)
            {
                if (GridView1.Rows[i].Cells[8].Text == "&nbsp;")
                {
                    ds = getClientName(hiddencompcode.Value, PubDate.Text, GridView1.Rows[i].Cells[1].Text, hiddendateformat.Value);
                    if (ds.Tables[0].Rows.Count != 0)
                        GridView1.Rows[i].Cells[8].Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                }
                if (GridView1.Rows[i].Cells[12].Text == "&nbsp;")
                {
                    DataSet dsf = new DataSet();
                    string fname = GridView1.Rows[i].Cells[1].Text + "-" + GridView1.Rows[i].Cells[11].Text; // +"-" + ddlEdition.Text;
                    string idnum = GridView1.Rows[i].Cells[1].Text;
                    string insnum = GridView1.Rows[i].Cells[11].Text;
                    string insertid = GridView1.Rows[i].Cells[14].Text;
                    dsf = UpdateFilename(hiddencompcode.Value, fname, idnum, insnum, insertid, ddlEdition.Text, hiddendateformat.Value);
                    if (dsf.Tables[0].Rows.Count != 0)
                        GridView1.Rows[i].Cells[12].Text = dsf.Tables[0].Rows[0].ItemArray[0].ToString();//fname;                  
                    //break;
                }

                if (System.IO.File.Exists(Server.MapPath("jpgpreview/") + GridView1.Rows[i].Cells[12].Text + ".jpg"))
                {
                    GridView1.Rows[i].BackColor = System.Drawing.Color.Yellow;
                }
                //GridView1.Rows[i].Cells[14].Visible = false;
                //GridView1.Rows[i].Cells[13].Visible = false;
                // GridView1.Columns(14).Visible = false;
            }
            btnAdView.Enabled = true;
        }
    }

    protected void GridView1_databound(object sender, GridViewRowEventArgs e)
    {
        //if (e.Row.RowIndex != -1)
        //{
        //    e.Row.Cells[7].Text = "<input size=5 maxlength=3 id=\"d" + j + "\" value=" + e.Row.Cells[7].Text + " >";
        //    j++;
        //}
        /* for (int i = 0; i < GridView1.Rows.Count; i++)
         {
             if (GridView1.Rows[i].Cells[12].Text == "&nbsp;")
             {
                 e.Row.BackColor = System.Drawing.Color.Red;
             }
         }*/
    }


    protected void GridView1_PageIndexChange(object sender, GridViewPageEventArgs e)
    {
        GridView1.PageIndex = e.NewPageIndex;
        btnAdView_Click(sender, e);
    }

/*
    public DataSet get_center_ip(string p_centercode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            Layoutx.Classes.getVolume obj_ip = new Layoutx.Classes.getVolume();
            ds = obj_ip.clscenter_ip(p_centercode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            Layoutx.OrclClass.getVolume obj_ip = new Layoutx.OrclClass.getVolume();
            ds = obj_ip.clscenter_ip(p_centercode);
        }
        return ds;
    }*/

    public DataSet UpdateFilename(string compcode, string fname, string idnum, string insnum, string insertid, string editioncode, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CD_Upload bindAdBooking = new NewAdbooking.Classes.CD_Upload();
            ds = bindAdBooking.UpdateFilename_CD(compcode, fname, idnum, insnum, insertid, editioncode,dateformat);            
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CD_Upload bindAdBooking = new NewAdbooking.classesoracle.CD_Upload();

            ds = bindAdBooking.UpdateFilename_CD(compcode, fname, idnum, insnum, insertid, editioncode, dateformat);
        }
        else
        {
            NewAdbooking.classmysql.CD_Upload bindAdBooking = new NewAdbooking.classmysql.CD_Upload();

            ds = bindAdBooking.UpdateFilename_CD(compcode, fname, idnum, insnum, insertid, editioncode, dateformat);

        }
        return ds;
    }

    protected void btnUpload_Click(object sender, EventArgs e)
    {
        ProcessStartInfo ProcessInfo;
        Process Process;
        // string serverpath;
        string fname = Request.Form["RadioButton1"];
        // string fname1;
        //***************************************************
        string month;
        string day;
        string year;
        string curdate;
        if (PubDate.Text == "")
            return;

        day = PubDate.Text.Split('/')[0];
        month = PubDate.Text.Split('/')[1];
        year = PubDate.Text.Split('/')[2];

        if (Session["dateformat"].ToString() == "dd/mm/yyyy")
        {
            curdate = day + month + year;
        }
        else if (Session["dateformat"].ToString() == "yyyy/mm/dd")
        {
            curdate = year + month + day;
        }
        else
        {
            curdate = month + day + year;
        }
        //*********************************************************************        

        string bookingid = fname.Split('-')[0];

        
        //string fname1 = bookingid + '-' + insertid;

        if (Checkbox4.Checked == true)
        {



            DataSet ds = new DataSet();
            NewAdbooking.classesoracle.CD_Upload bindAdBooking = new NewAdbooking.classesoracle.CD_Upload();

            ds = bindAdBooking.upload_for_all(bookingid);
            try
            {
                for (int i = 0; i < GridView1.Rows.Count; i++)
                {

                    if (fname == GridView1.Rows[i].Cells[12].Text)
                    {
                        string strFileName = myFile.PostedFile.FileName;


                        for (int j = 0; j < ds.Tables[0].Rows.Count; j++)
                        {
                            string insertid = ds.Tables[0].Rows[j].ItemArray[0].ToString();
                            string insertdate = ds.Tables[0].Rows[j].ItemArray[1].ToString();
                            // string insertdate1 = Convert.ToDateTime(i).ToString("dd-MMMM-yyyy");
                            string edition = ds.Tables[0].Rows[j].ItemArray[2].ToString();
                            string insertnum = ds.Tables[0].Rows[j].ItemArray[3].ToString();


                            if (strFileName == "")
                            {
                                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Click on Browse and select the file.');", true);
                                return;
                            }
                            if (System.IO.Path.GetExtension(strFileName) == "jpg" || System.IO.Path.GetExtension(strFileName) == "jpeg" || System.IO.Path.GetExtension(strFileName) == "pdf" || System.IO.Path.GetExtension(strFileName) == "tif" || System.IO.Path.GetExtension(strFileName) == "tiff" || System.IO.Path.GetExtension(strFileName) == "eps")
                            {
                                ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select tiff,pdf,eps and jpg file.');", true);
                                return;
                            }
                            string edi_code = ddlEdition.SelectedItem.Value;
                            //* DataSet ds = get_center_ip(edi_code);
                            //* serverpath = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                            // curdate = Convert.ToDateTime(dd).ToString("ddMMyyyy");                    
                            string p1 = Server.MapPath("./");
                            string p2 = Server.MapPath("Orignal/");

                            //* if (Directory.Exists(p2 + insertdate1) == false)
                            //*     Directory.CreateDirectory(p2 + curdate);


                            string StrAdPicturesPath = p2; // +curdate;      //serverpath +ConfigurationSettings.AppSettings["AdPicturesfilepath"].ToString();
                            string StrJPGPath = Server.MapPath("jpgpreview/");  //serverpath + ConfigurationSettings.AppSettings["JPGfilepath"].ToString();
                            string StrJPGPathtemp = Server.MapPath("temp/");  // serverpath + ConfigurationSettings.AppSettings["JPGfilepathtemp"].ToString();

                            strFileName = strFileName.Replace("tif.eps", "tif").Replace("eps.eps", "eps");
                            string strXtension = System.IO.Path.GetExtension(strFileName);
                            fname = Request.Form["RadioButton1"] + insertid + strXtension;


                            //*myFile.PostedFile.SaveAs(Path.Combine(p2 + curdate, fname));
                            if (File.Exists(p2 + fname))
                                File.Delete(p2 + fname);
                            if (File.Exists(StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg")))
                                File.Delete(StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg"));
                            if (File.Exists(StrJPGPath + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg")))
                                File.Delete(StrJPGPath + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg"));

                            myFile.PostedFile.SaveAs(Path.Combine(p2, fname));
                            if (Directory.Exists(StrJPGPath) == false)
                                Directory.CreateDirectory(StrJPGPath);

                            //*writefile(p1 + "abc.bat", "\"" + p1 + "convert.exe" + "\" " + "\"" + p2 + curdate + "\\" + fname + "\"" + " " + "\"" + StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg") + "\"");
                            writefile(p1 + "abc.bat", "\"" + p1 + "convert.exe" + "\" " + "\"" + p2 + "\\" + fname + "\"" + " " + "\"" + StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg") + "\"");

                            ProcessInfo = new ProcessStartInfo(p1 + "abc.bat");
                            ProcessInfo.CreateNoWindow = true;
                            ProcessInfo.UseShellExecute = true;
                            Process = Process.Start(ProcessInfo);
                            Process.WaitForExit(1200000);
                            int ExitCode = Process.ExitCode;
                            Process.Close();

                            
                                Bitmap bmp1 = new Bitmap(StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg"));
                                Double width;
                                Double height;
                                height = Math.Round(((bmp1.Height / bmp1.VerticalResolution) * 2.54), 1);
                                width = Math.Round(((bmp1.Width / bmp1.HorizontalResolution) * 2.54), 1);
                                System.Drawing.Image bmp2 = bmp1.GetThumbnailImage(Convert.ToInt32(bmp1.Width), Convert.ToInt32(bmp1.Height), null, IntPtr.Zero);

                                string iidnum = GridView1.Rows[i].Cells[1].Text;
                                string ffname = GridView1.Rows[i].Cells[12].Text;
                                string bheight = GridView1.Rows[i].Cells[3].Text;
                                string bwidth = GridView1.Rows[i].Cells[4].Text;
                                string bcolor = GridView1.Rows[i].Cells[2].Text;

                                if (Math.Abs(Convert.ToDouble(bheight) - height) <= .2 || Math.Abs(height - Convert.ToDouble(bheight)) <= .2)
                                    height = Convert.ToDouble(bheight);
                                if (Math.Abs(Convert.ToDouble(bwidth) - width) <= .2 || Math.Abs(width - Convert.ToDouble(bwidth)) <= .2)
                                    width = Convert.ToDouble(bwidth);

                                /*
                                if (System.IO.File.Exists(StrJPGPath + fname))
                                {
                                    InsertFileVersion(iidnum, ffname, PubDate.Text);
                                    DataSet ds1 = GetMaterialVersion(ffname);
                                    if ((ds1.Tables[0].Rows.Count != 0) && (ds1.Tables[0].Rows[0].ItemArray[0].ToString() != ""))
                                    {
                                        // version_no = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
                                        fname1 = Request.Form["RadioButton1"] + "_" + ds1.Tables[0].Rows[0].ItemArray[0].ToString() + ".jpg";
                                        System.IO.File.Move(StrJPGPath + fname, versionpath + fname1);
                                    }
                                }*/

                                bmp2.Save(StrJPGPath + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg"), System.Drawing.Imaging.ImageFormat.Jpeg);
                                bmp1.Dispose();
                                Label1.Text = "<script>window.open('Adpreview.aspx?comp_code=" + hiddencompcode.Value + "&pubdate=" + PubDate.Text + "&adtype=" + "CD" + "&pripub=" + ddlPublication.Text + "&pcenter=" + ddlCenter.Text + "&pedition=" + ddlEdition.Text + "&spub=" + ddlSupplement.Text + "&iidnum=" + iidnum + "&f_name=" + ffname + "&pheight=" + Convert.ToString(height) + "&pwidth=" + Convert.ToString(width) + "&bheight=" + bheight + "&bwidth=" + bwidth + "&bcolor=" + bcolor + "&postedfile=" + myFile.PostedFile.FileName.Replace("\\", "\\\\") + "&strLocalpath=" + StrAdPicturesPath.Replace("\\", "\\\\") + "','Preview','width=" + Convert.ToString(width + 400) + "px,height=" + Convert.ToString(height + 500) + ",resizable=0,scrollbars=no,left=100,top=0,toolbar=no,location=no,menubar=no ,normal');</script>";//


                                //string ffname1 = GridView1.Rows[i].Cells[1].Text + "-" + insertid;
                                //string idnum = GridView1.Rows[i].Cells[1].Text;
                                //string insnum = GridView1.Rows[i].Cells[11].Text;






                                //DataSet dsf = new DataSet();
                                //dsf = UpdateFilename(hiddencompcode.Value, ffname1, idnum, insertnum, insertid, edition, hiddendateformat.Value);
                                //if (dsf.Tables[0].Rows.Count != 0)
                                //{
                                //    GridView1.Rows[i].Cells[12].Text = dsf.Tables[0].Rows[0].ItemArray[0].ToString();//fname; 
                                //    Response.Write("<script>alert('Filename is updated.');</script>");
                                //}





                                //  ScriptManager.RegisterClientScriptBlock(this, typeof(MaterialRename), "aa", "printalert('" + hiddencompcode.Value + "','" + PubDate.Text + "','" + ddlPublication.Text + "','" + ddlCenter.Text + "','" + ddlEdition.Text + "','" + ddlSupplement.Text + "','" + iidnum + "','" + ffname + "','" + Convert.ToString(height) + "','" + Convert.ToString(width) + "','" + bheight + "','" + bwidth + "','" + bcolor + "','" + myFile.PostedFile.FileName.Replace("\\", "\\\\") + "','" + StrAdPicturesPath.Replace("\\", "\\\\") + "')", true); 
                                //break;
                                ////}
                                ////else
                                ////{
                                ////    count++;
                                ////    goto lablel1;
                                ////}
                              
                            
                        }



                    }
                }











            }
            catch (Exception ex)
            {
                // Process.Close();
            }

            return;
        }



        else
        {
            try
            {
                for (int i = 0; i < GridView1.Rows.Count; i++)
                {
                    if (fname == GridView1.Rows[i].Cells[12].Text)
                    {
                        string strFileName = myFile.PostedFile.FileName;
                        if (strFileName == "")
                        {
                            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Click on Browse and select the file.');", true);
                            return;
                        }
                        if (System.IO.Path.GetExtension(strFileName) == "jpg" || System.IO.Path.GetExtension(strFileName) == "jpeg" || System.IO.Path.GetExtension(strFileName) == "pdf" || System.IO.Path.GetExtension(strFileName) == "tif" || System.IO.Path.GetExtension(strFileName) == "tiff" || System.IO.Path.GetExtension(strFileName) == "eps")
                        {
                            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select tiff,pdf,eps and jpg file.');", true);
                            return;
                        }
                        string edi_code = ddlEdition.SelectedItem.Value;
                        //* DataSet ds = get_center_ip(edi_code);
                        //* serverpath = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                        // curdate = Convert.ToDateTime(dd).ToString("ddMMyyyy");                    
                        string p1 = Server.MapPath("./");
                        string p2 = Server.MapPath("Orignal/");

                        //* if (Directory.Exists(p2 + curdate) == false)
                        //*     Directory.CreateDirectory(p2 + curdate);


                        string StrAdPicturesPath = p2; // +curdate;      //serverpath +ConfigurationSettings.AppSettings["AdPicturesfilepath"].ToString();
                        string StrJPGPath = Server.MapPath("jpgpreview/");  //serverpath + ConfigurationSettings.AppSettings["JPGfilepath"].ToString();
                        string StrJPGPathtemp = Server.MapPath("temp/");  // serverpath + ConfigurationSettings.AppSettings["JPGfilepathtemp"].ToString();

                        strFileName = strFileName.Replace("tif.eps", "tif").Replace("eps.eps", "eps");
                        string strXtension = System.IO.Path.GetExtension(strFileName);
                        fname = Request.Form["RadioButton1"] + strXtension;
                        //*myFile.PostedFile.SaveAs(Path.Combine(p2 + curdate, fname));
                        if (File.Exists(p2 + fname))
                            File.Delete(p2 + fname);
                        if (File.Exists(StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg")))
                            File.Delete(StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg"));
                        if (File.Exists(StrJPGPath + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg")))
                            File.Delete(StrJPGPath + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg"));

                        myFile.PostedFile.SaveAs(Path.Combine(p2, fname));
                        if (Directory.Exists(StrJPGPath) == false)
                            Directory.CreateDirectory(StrJPGPath);

                        //*writefile(p1 + "abc.bat", "\"" + p1 + "convert.exe" + "\" " + "\"" + p2 + curdate + "\\" + fname + "\"" + " " + "\"" + StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg") + "\"");
                        writefile(p1 + "abc.bat", "\"" + p1 + "convert.exe" + "\" " + "\"" + p2 + "\\" + fname + "\"" + " " + "\"" + StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg") + "\"");

                        ProcessInfo = new ProcessStartInfo(p1 + "abc.bat");
                        ProcessInfo.CreateNoWindow = true;
                        ProcessInfo.UseShellExecute = true;
                        Process = Process.Start(ProcessInfo);
                        Process.WaitForExit(1200000);
                        int ExitCode = Process.ExitCode;
                        Process.Close();

                        if (System.IO.File.Exists(StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg")))
                        {
                            Bitmap bmp1 = new Bitmap(StrJPGPathtemp + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg"));
                            Double width;
                            Double height;
                            height = Math.Round(((bmp1.Height / bmp1.VerticalResolution) * 2.54), 1);
                            width = Math.Round(((bmp1.Width / bmp1.HorizontalResolution) * 2.54), 1);
                            System.Drawing.Image bmp2 = bmp1.GetThumbnailImage(Convert.ToInt32(bmp1.Width), Convert.ToInt32(bmp1.Height), null, IntPtr.Zero);

                            string iidnum = GridView1.Rows[i].Cells[1].Text;
                            string ffname = GridView1.Rows[i].Cells[12].Text;
                            string bheight = GridView1.Rows[i].Cells[3].Text;
                            string bwidth = GridView1.Rows[i].Cells[4].Text;
                            string bcolor = GridView1.Rows[i].Cells[2].Text;

                            if (Math.Abs(Convert.ToDouble(bheight) - height) <= .2 || Math.Abs(height - Convert.ToDouble(bheight)) <= .2)
                                height = Convert.ToDouble(bheight);
                            if (Math.Abs(Convert.ToDouble(bwidth) - width) <= .2 || Math.Abs(width - Convert.ToDouble(bwidth)) <= .2)
                                width = Convert.ToDouble(bwidth);

                            /*
                            if (System.IO.File.Exists(StrJPGPath + fname))
                            {
                                InsertFileVersion(iidnum, ffname, PubDate.Text);
                                DataSet ds1 = GetMaterialVersion(ffname);
                                if ((ds1.Tables[0].Rows.Count != 0) && (ds1.Tables[0].Rows[0].ItemArray[0].ToString() != ""))
                                {
                                    // version_no = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
                                    fname1 = Request.Form["RadioButton1"] + "_" + ds1.Tables[0].Rows[0].ItemArray[0].ToString() + ".jpg";
                                    System.IO.File.Move(StrJPGPath + fname, versionpath + fname1);
                                }
                            }*/

                            bmp2.Save(StrJPGPath + fname.Replace(".tiff", ".jpg").Replace(".eps", ".jpg").Replace(".pdf", ".jpg").Replace(".tif", ".jpg").Replace(".jpeg", ".jpg").Replace(".TIF", ".jpg"), System.Drawing.Imaging.ImageFormat.Jpeg);
                            bmp1.Dispose();
                            Label1.Text = "<script>window.open('Adpreview.aspx?comp_code=" + hiddencompcode.Value + "&pubdate=" + PubDate.Text + "&adtype=" + "CD" + "&pripub=" + ddlPublication.Text + "&pcenter=" + ddlCenter.Text + "&pedition=" + ddlEdition.Text + "&spub=" + ddlSupplement.Text + "&iidnum=" + iidnum + "&f_name=" + ffname + "&pheight=" + Convert.ToString(height) + "&pwidth=" + Convert.ToString(width) + "&bheight=" + bheight + "&bwidth=" + bwidth + "&bcolor=" + bcolor + "&postedfile=" + myFile.PostedFile.FileName.Replace("\\", "\\\\") + "&strLocalpath=" + StrAdPicturesPath.Replace("\\", "\\\\") + "','Preview','width=" + Convert.ToString(width + 400) + "px,height=" + Convert.ToString(height + 500) + ",resizable=0,scrollbars=no,left=100,top=0,toolbar=no,location=no,menubar=no ,normal');</script>";//
                            //  ScriptManager.RegisterClientScriptBlock(this, typeof(MaterialRename), "aa", "printalert('" + hiddencompcode.Value + "','" + PubDate.Text + "','" + ddlPublication.Text + "','" + ddlCenter.Text + "','" + ddlEdition.Text + "','" + ddlSupplement.Text + "','" + iidnum + "','" + ffname + "','" + Convert.ToString(height) + "','" + Convert.ToString(width) + "','" + bheight + "','" + bwidth + "','" + bcolor + "','" + myFile.PostedFile.FileName.Replace("\\", "\\\\") + "','" + StrAdPicturesPath.Replace("\\", "\\\\") + "')", true); 
                            break;
                            ////}
                            ////else
                            ////{
                            ////    count++;
                            ////    goto lablel1;
                            ////}
                        }
                        else
                        {
                            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Please Upload File Again.');", true);
                            return;
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                // Process.Close();
            }
        }
        Enable();
    }
    public void OpenNewWindow(string url)
    {
        ClientScript.RegisterStartupScript(this.GetType(), "newWindow", String.Format("<script>window.open('{0}');</script>", url));
    }

    public void Enable()
    {
        ddlPublication.Enabled = true;
        ddlCenter.Enabled = true;
        ddlEdition.Enabled = true;
        ddlSupplement.Enabled = true;
        PubDate.Enabled = true;
        btnAdView.Enabled = true;
        txtPage.Enabled = true;
        return;
    }

    //******************************************

    protected void writefile(string fname, string sdata)
    {
        StreamWriter myStreamWriter;

        myStreamWriter = File.CreateText(fname);
        myStreamWriter.Write(sdata);
        myStreamWriter.Flush();
        myStreamWriter.Close();
    }

    //**************for ftp transmission
/*
    public DataSet chkmaterial_transmit(string fname, string ftpcent, string pDate, string dateformat)
    {
        DataSet dscent = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            Layoutx.OrclClass.MaterialRename objtrans = new Layoutx.OrclClass.MaterialRename();
            dscent = objtrans.ChkTransmitCenters(fname, ftpcent, pDate, dateformat);
        }
        return dscent;
    }

    public void material_transmit(string fname, string ftpcent, string pDate, string dateformat)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            Layoutx.OrclClass.MaterialRename objtransmission = new Layoutx.OrclClass.MaterialRename();
            objtransmission.clsTransmitCenters(fname, ftpcent, pDate, dateformat);
        }
    }
    */
    protected void Btnremove_Click(object sender, EventArgs e)
    {
        string fname = Request.Form["RadioButton1"];
        string path = Server.MapPath("jpgpreview/");
        string temppath = Server.MapPath("temp/");
        string originalpath = Server.MapPath("Orignal/");
        //***************************************************
        string month;
        string day;
        string year;
        string cdate;
        if (PubDate.Text == "")
            return;

        day = PubDate.Text.Split('/')[0];
        month = PubDate.Text.Split('/')[1];
        year = PubDate.Text.Split('/')[2];

        if (Session["dateformat"].ToString() == "dd/mm/yyyy")
        {
            cdate = day + month + year;
        }
        else if (Session["dateformat"].ToString() == "yyyy/mm/dd")
        {
            cdate = year + month + day;
        }
        else
        {
            cdate = month + day + year;
        }
        //*********************************************************************
        
        //*if (Directory.Exists(originalpath + cdate) == false)
           //* Directory.CreateDirectory(originalpath + cdate);

        for (int i = 0; i < GridView1.Rows.Count; i++)
        {
            if (fname == GridView1.Rows[i].Cells[12].Text)
            {
                if (System.IO.File.Exists(path + fname + ".jpg"))
                    System.IO.File.Delete(path + fname + ".jpg");
                if (System.IO.File.Exists(temppath + fname + ".jpg"))
                    System.IO.File.Delete(temppath + fname + ".jpg");
                if (System.IO.File.Exists(originalpath + "\\" + fname + ".pdf"))
                    System.IO.File.Delete(originalpath + "\\" + fname + ".pdf");
                if (System.IO.File.Exists(originalpath + "\\" + fname + ".eps"))
                    System.IO.File.Delete(originalpath + "\\" + fname + ".eps");
                if (System.IO.File.Exists(originalpath + "\\" + fname + ".tif"))
                    System.IO.File.Delete(originalpath + "\\" + fname + ".tif");
                if (System.IO.File.Exists(originalpath + "\\" + fname + ".tiff"))
                    System.IO.File.Delete(originalpath + "\\" + fname + ".tiff");
                if (System.IO.File.Exists(originalpath + "\\" + fname + ".jpg"))
                    System.IO.File.Delete(originalpath + "\\" + fname + ".jpg");
                if (System.IO.File.Exists(originalpath + "\\" + fname + ".jpeg"))
                    System.IO.File.Delete(originalpath + "\\" + fname + ".jpeg");
            }
        }
        return;
    }

    protected void Preview_Click(object sender, EventArgs e)
    {
        string fname = Request.Form["RadioButton1"];
        string path = Server.MapPath("jpgpreview/");
        string pheight = "0";
        string pwidth = "0";
        //***************************************************
        for (int i = 0; i < GridView1.Rows.Count; i++)
        {
            if (fname == GridView1.Rows[i].Cells[12].Text)
            {
                pheight = GridView1.Rows[i].Cells[5].Text;
                if (pheight == "" || pheight == "0")
                {
                    pheight = "4";
                }
                pwidth = GridView1.Rows[i].Cells[6].Text;
                if (pwidth == "" || pwidth == "0")
                {
                    pwidth = "4";
                }
                if (System.IO.File.Exists(path + fname + ".jpg"))
                    Label1.Text = "<script>window.open('forPreview.aspx?f_name=" + fname + "&pheight=" + pheight + "&pwidth=" + pwidth + "','Preview','width=" + Convert.ToString(Convert.ToSingle(pwidth) + 400) + "px,height=" + Convert.ToString(Convert.ToSingle(pheight) + 450) + ",resizable=0,scrollbars=no,left=100,top=10,toolbar=no,location=no,menubar=no ,normal');</script>";//    
            }
        }
        return;
    }

    //*****************************************************************
    protected void btnUpdateFilename_Click(object sender, EventArgs e)
    {
        string fname = Request.Form["RadioButton1"];
        for (int i = 0; i < GridView1.Rows.Count; i++)
        {
            if (fname == GridView1.Rows[i].Cells[12].Text)
            {
                string ffname = GridView1.Rows[i].Cells[1].Text + "-" + GridView1.Rows[i].Cells[11].Text + "-" + ddlEdition.Text;
                string idnum = GridView1.Rows[i].Cells[1].Text;
                string insnum = GridView1.Rows[i].Cells[11].Text;
                string insertid = GridView1.Rows[i].Cells[14].Text;
                DataSet dsf = new DataSet();
                dsf = UpdateFilename(hiddencompcode.Value, ffname, idnum, insnum, insertid, ddlEdition.Text, hiddendateformat.Value);
                if (dsf.Tables[0].Rows.Count != 0)
                {
                    GridView1.Rows[i].Cells[12].Text = dsf.Tables[0].Rows[0].ItemArray[0].ToString();//fname; 
                    Response.Write("<script>alert('Filename is updated.');</script>");
                }
            }
        }
    }


    //*****************************************************************
  /*  protected void btnSend_Click(object sender, EventArgs e)
    {
        if (hiddenftpcenters.Value == "")
            return;
        string fname = Request.Form["RadioButton1"];
        string[] ftpcent = hiddenftpcenters.Value.Split('~');

        for (int i = 0; i < GridView1.Rows.Count; i++)
        {
            if (fname == GridView1.Rows[i].Cells[12].Text)
            {
                string idnum = GridView1.Rows[i].Cells[1].Text;
                string insnum = GridView1.Rows[i].Cells[11].Text;
                string insertid = GridView1.Rows[i].Cells[14].Text;
                // GridViewRow row = SendGridView.Rows[i];
                // bool isChecked = ((CheckBox)row.FindControl("CheckBox1")).Checked;
                for (int k = 0; k < ftpcent.Length; k++)
                {
                    DataSet ds_1 = new DataSet();
                    ds_1 = chkmaterial_transmit(fname, ftpcent[k], PubDate.Text, hiddendateformat.Value);
                    if (ds_1.Tables[0].Rows.Count == 0)
                        material_transmit(fname, ftpcent[k], PubDate.Text, hiddendateformat.Value);
                }
                Response.Write("<script>alert('File is submitted for FTP');</script>");
                return;
            }
        }
    }*/

}


