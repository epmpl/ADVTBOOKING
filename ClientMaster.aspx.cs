using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class ClientMaster : System.Web.UI.Page
{


    string client;
    NewAdbooking.Classes.ClientMaster ClMst = new NewAdbooking.Classes.ClientMaster();
    static int z = 0;
    protected void Page_Load(object sender, System.EventArgs e)
    {
        //Ajax Utility Registration
        hdnmobiledetail.Value = ConfigurationSettings.AppSettings["mobileformat"].ToString();
        ////anuja
        hdnagencyclientflag.Value = ConfigurationSettings.AppSettings["Agencyclientflag"].ToString();
        ////////////////////////////
        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";
	bindbranch();

        //Ajax.Utility.RegisterTypeForAjax(typeof(ClientMaster));

        if (Session["compcode"] == null)
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        else
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            hiddenagency.Value = Session["agency_name"].ToString();
            hiddencenter.Value = Session["center"].ToString();
        }
        /* if (Request.QueryString["index"].ToString() == "1")
         {
             client = Request.QueryString["formname"].ToString();
             submitpermission1();

         }*/
        //hiddenclientbook
        if (Session["agency_name"].ToString() != "0")
        {
            hiddenagency_uer.Value = Session["agency_name"].ToString();
            txtagencycode.Text = Session["agency_name"].ToString();
            lbagencycode.Attributes.Add("style", "display:block");
            txtagencycode.Attributes.Add("style", "display:block");
        }
            ////////////////////anuja
        else if (hdnagencyclientflag.Value == "Y")
        {
            lbagencycode.Attributes.Add("style", "display:block");
            txtagencycode.Attributes.Add("style", "display:block");
        }
        else
        {
            hiddenagency_uer.Value = "";
            lbagencycode.Attributes.Add("style", "display:none");
            txtagencycode.Attributes.Add("style", "display:none");
        }
        hiddenusername.Value = Session["Username"].ToString();
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        if (Request.QueryString["frombooking"] != null)
        {
            hiddenclientbook.Value = Request.QueryString["frombooking"].ToString();
            hiddenbookclientname1.Value = Request.QueryString["frombooking"].ToString();
            hiddenbookclientname.Value = Request.QueryString["clientname"].ToString();
            hiddenbookclientname.Value = hiddenbookclientname.Value.Replace("!", "&");
            txtalias.Attributes.Add("OnChange", "javascript:return autogen_client();");
        }
        else
        {
            hiddenclientbook.Value = "0";
        }

        Ajax.Utility.RegisterTypeForAjax(typeof(ClientMaster));

        hiddencompcode.Value = Session["compcode"].ToString();
        userid2.Value = Session["userid"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddendateformat.Value = Session["dateformat"].ToString();
        hiddencitycode.Value = drpcity.SelectedValue.ToString();
        string custcode = txtcustcode.Text;
        DataSet dz = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();
            dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, "ClientMaster");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master checkform = new NewAdbooking.classesoracle.Master();
            dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, "ClientMaster");
        }
        else
        {
            NewAdbooking.classmysql.Master checkform = new NewAdbooking.classmysql.Master();
            dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, "ClientMaster");
        }
        if (dz.Tables[0].Rows.Count == 0)
        //if (dz.Tables[0].Rows[0].ItemArray[0].ToString() == "0" || dz.Tables[0].Rows[0].ItemArray[0].ToString() == "8")
        {
            Response.Write("<script>alert('You Are Not Authorised To See This Form');</script>");
            Response.Write("<script>window.close();</script>");
            //Server.Transfer("EnterPage.aspx", true);

        }
        countryname();
        rate();
        Session["client_cont"] = null;
        Session["client_stat"] = null;
        Session["client_prod"] = null;
        Session["client_pay"] = null;
        Session["client_exec"] = null;
        Session["client_brand"] = null;
        //addzone();
        //addregion();
        //hiddencont.Value = Session["client"].ToString();
        DataSet objDataSet = new DataSet();
        // Read in the XML file
        objDataSet.ReadXml(Server.MapPath("XML/ClientMaster.xml"));

        CustomerCode.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        CustomerName.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        Alias.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        Address1.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        Street.Text = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        Country.Text = objDataSet.Tables[0].Rows[0].ItemArray[5].ToString();
        City.Text = objDataSet.Tables[0].Rows[0].ItemArray[6].ToString();
        District.Text = objDataSet.Tables[0].Rows[0].ItemArray[7].ToString();
        Phone.Text = objDataSet.Tables[0].Rows[0].ItemArray[8].ToString();
        Fax.Text = objDataSet.Tables[0].Rows[0].ItemArray[9].ToString();
        URL.Text = objDataSet.Tables[0].Rows[0].ItemArray[10].ToString();
        PAN.Text = objDataSet.Tables[0].Rows[0].ItemArray[11].ToString();
        CreditDays.Text = objDataSet.Tables[0].Rows[0].ItemArray[12].ToString();
        Status.Text = objDataSet.Tables[0].Rows[0].ItemArray[13].ToString();
        StatusReason.Text = objDataSet.Tables[0].Rows[0].ItemArray[14].ToString();
        Alert.Text = objDataSet.Tables[0].Rows[0].ItemArray[15].ToString();
        state.Text = objDataSet.Tables[0].Rows[0].ItemArray[16].ToString();
        PinCode.Text = objDataSet.Tables[0].Rows[0].ItemArray[17].ToString();
        Region.Text = objDataSet.Tables[0].Rows[0].ItemArray[18].ToString();
        Zone.Text = objDataSet.Tables[0].Rows[0].ItemArray[19].ToString();
        EmailId.Text = objDataSet.Tables[0].Rows[0].ItemArray[20].ToString();
        NoofVTS.Text = objDataSet.Tables[0].Rows[0].ItemArray[21].ToString();
        ServiceTaxAcNo.Text = objDataSet.Tables[0].Rows[0].ItemArray[22].ToString();
        Creditlimit.Text = objDataSet.Tables[0].Rows[0].ItemArray[23].ToString();
        StatusDate.Text = objDataSet.Tables[0].Rows[0].ItemArray[24].ToString();
        lbClientProductDetail.Text = objDataSet.Tables[0].Rows[0].ItemArray[25].ToString();
        lbClientContactDetail.Text = objDataSet.Tables[0].Rows[0].ItemArray[26].ToString();
        lbStatusDetail.Text = objDataSet.Tables[0].Rows[0].ItemArray[27].ToString();
        lbtnClientPaymode.Text = objDataSet.Tables[0].Rows[0].ItemArray[28].ToString();
        RateGroup.Text = objDataSet.Tables[0].Rows[0].ItemArray[29].ToString();
        lbcliencat.Text = objDataSet.Tables[0].Rows[0].ItemArray[30].ToString();
        lbltaluka.Text = objDataSet.Tables[0].Rows[0].ItemArray[31].ToString();
        lbclinttype.Text = objDataSet.Tables[0].Rows[0].ItemArray[32].ToString();
        lbagencycode.Text = objDataSet.Tables[0].Rows[0].ItemArray[33].ToString();
        lbtype.Text = objDataSet.Tables[0].Rows[0].ItemArray[34].ToString();
        lbparent.Text = objDataSet.Tables[0].Rows[0].ItemArray[35].ToString();
        btnshowremark.Text = objDataSet.Tables[0].Rows[0].ItemArray[36].ToString();
        lboldclientcode.Text = objDataSet.Tables[0].Rows[0].ItemArray[37].ToString();
        agdesig.Text = objDataSet.Tables[0].Rows[0].ItemArray[38].ToString();
        lblgstus.Text = objDataSet.Tables[0].Rows[0].ItemArray[39].ToString();
        lblgstdt.Text = objDataSet.Tables[0].Rows[0].ItemArray[40].ToString();
        lblgst.Text = objDataSet.Tables[0].Rows[0].ItemArray[41].ToString();
        lblgstclty.Text = objDataSet.Tables[0].Rows[0].ItemArray[42].ToString();
        lblarnno.Text = objDataSet.Tables[0].Rows[0].ItemArray[43].ToString();
        lblgstprovid.Text = objDataSet.Tables[0].Rows[0].ItemArray[44].ToString();
        lblgsteftvdt.Text = objDataSet.Tables[0].Rows[0].ItemArray[45].ToString();
        if (objDataSet.Tables.Count > 1)
        {
            if (objDataSet.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
            {
                RateGroup.Attributes.Add("style", "display:none");
                drprategroup.Attributes.Add("style", "display:none");
            }
            if (objDataSet.Tables[1].Rows[0].ItemArray[1].ToString() == "hide")
            {
                lbcliencat.Attributes.Add("style", "display:none");
                drpclientcat.Attributes.Add("style", "display:none");
            }
            if (objDataSet.Tables[1].Rows[0].ItemArray[2].ToString() == "hide")
            {
                lbClientProductDetail.Attributes.Add("style", "display:none");
            }
            if (objDataSet.Tables[1].Rows[0].ItemArray[3].ToString() == "hide")
            {
                lbtnClientPaymode.Attributes.Add("style", "display:none");
            }
            if (objDataSet.Tables[1].Rows[0].ItemArray[4].ToString() == "hide")
            {
                lbClientExecDetail.Attributes.Add("style", "display:none");
            }
            if (objDataSet.Tables[1].Rows[0].ItemArray[5].ToString() == "hide")
            {
                lbClientBrandDetail.Attributes.Add("style", "display:none");
            }
        }
        //		******************************************************************************************
        //      **********************************XML FOR BUTTON******************************************
        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/button.xml"));

        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();
        //hiddenformname.Value = dz.Tables[0].Rows[0].ItemArray[0].ToString();
        txtcustcode.Enabled = false;
        txtcustomername.Enabled = false;
        txtalias.Enabled = false;
        txtadd1.Enabled = false;
        txtstreet.Enabled = false;
        drpcity.Enabled = false;
        txtdistrict.Enabled = false;
        txtcountry.Enabled = false;
        txtphone1.Enabled = false;
        txtphone2.Enabled = false;
        txtemailid.Enabled = false;
        txtUrl.Enabled = false;
        txtvts.Enabled = false;
        txtservicetax.Enabled = false;
        txtPan.Enabled = false;
        txtcreditdays.Enabled = false;
        txtcrlimit.Enabled = false;
        txtstatusreason.Enabled = false;
        txtstatus1.Enabled = true;
        txtalert.Enabled = false;
        txtpincode.Enabled = false;
        txtstate.Enabled = false;
        drpzone.Enabled = false;
        drptaluka.Enabled = false;
        drpregion.Enabled = false;
        txtfax.Enabled = false;
        txtstatusdate.Enabled = false;
        drprategroup.Enabled = false;
        drptaluka.Enabled = false;
        lbClientProductDetail.Enabled = false;
        lbStatusDetail.Enabled = false;
        lbtnClientPaymode.Enabled = false;
        lbClientExecDetail.Enabled = false;
        lbClientContactDetail.Enabled = false;
        lbClientBrandDetail.Enabled = false;
        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        /////////anuja
        if (hdnagencyclientflag.Value == "Y")
        {
            txtagencycode.Enabled = true;
        }
        else
        {
            txtagencycode.Enabled = false;
        }
        drpclinttype.Enabled = false;
        drptype.Enabled = false;
        btnagencyname.Enabled = false;
	drpbranch.Enabled = false; //30sep15
        if (!Page.IsPostBack)
        {
            hiddenrate.Value = Session["ratecode"].ToString();
            //txtUrl.Attributes.Add("OnBlur", "javascript:return ClientUrlCheck('txtUrl')");

            btnshowremark.Attributes.Add("OnClick", "javascript:return openremarkpopup();");
            btnNew.Attributes.Add("OnClick", "javascript:return NewClick_client('ClientMaster');");


            btnSave.Attributes.Add("OnClick", "javascript:return ClientSave_client();");
            btnCancel.Attributes.Add("OnClick", "javascript:return CancelClick_client('ClientMaster');");
            btnModify.Attributes.Add("OnClick", "javascript:return Modify_client('ClientMaster');");
            btnQuery.Attributes.Add("OnClick", "javascript:return QueryClickclient_client('ClientMaster');");
            btnExecute.Attributes.Add("OnClick", "javascript:return clickexecuteclient_client('ClientMaster');");
            btnDelete.Attributes.Add("OnClick", "javascript:return ClientDelete_client();");

            btnfirst.Attributes.Add("OnClick", "javascript:return ClientFirst_client();");
            btnnext.Attributes.Add("OnClick", "javascript:return ClientNext_client();");
            btnprevious.Attributes.Add("OnClick", "javascript:return ClientPrevious_client();");
            btnlast.Attributes.Add("OnClick", "javascript:return ClientLast_client();");
            btnExit.Attributes.Add("OnClick", "javascript:return ClientExit_client('ClientMaster');");

            //Pop Up
            lbClientContactDetail.Attributes.Add("OnClick", "javascript:return ClientContactDetail_client();");
            lbtnClientPaymode.Attributes.Add("OnClick", "javascript:return ClientPay_client();");
            lbStatusDetail.Attributes.Add("OnClick", "javascript:return ClientStatusDetail_client();");
            lbClientProductDetail.Attributes.Add("OnClick", "javascript:return ClientProductDetail_client();");


            lbClientExecDetail.Attributes.Add("OnClick", "javascript:return ClientExecDetail_client();");
            lbClientBrandDetail.Attributes.Add("OnClick", "javascript:return ClientBrandDetail_client();");
            //Vaildations on Controls

            lstclient.Attributes.Add("onclick", "javascript:return insertclient(event);");
            lstclient.Attributes.Add("onkeypress", "return keySort(this);");
            txtparent.Attributes.Add("onkeydown", "return ttttt(event);");
            lstclien.Attributes.Add("onclick", "javascript:return insertclien(event);");
            btnagencyname.Attributes.Add("onclick", "javascript:return clintname();");
            Button1.Attributes.Add("onclick", "javascript:return close1();");
            lstclien.Attributes.Add("onkeydown", "javascript:return insertclien(event);");
            //Upper Case Validations
            //txtcustcode.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtcustcode');");
            //txtcustcode.Attributes.Add("onChange", "javascript:return userdefine_client();");
            //txtcustomername.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtcustomername');");
            txtcustomername.Attributes.Add("OnChange", "javascript:return autogen_client();");
            txtcustcode.Attributes.Add("OnChange", "javascript:chkdupcode_Modify();");
            txtalias.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtalias');");
            txtalias.Attributes.Add("OnChange", "javascript:return trimalias();");
            txtadd1.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtadd1');");
            txtstreet.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtstreet');");
            //txtservicetax.Attributes.Add("OnBlur", "javascript:return ClientSpecialchar();");
            //Email Validations
            //txtemailid.Attributes.Add("onkeypress", "javascript:return lowercase();");
            txtemailid.Attributes.Add("OnBlur", "javascript:return ClientEmailCheck('txtemailid');");

            //txtPan.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtpan');");
            txtstatusreason.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtstatusreason');");
            txtUrl.Attributes.Add("OnChange", "javascript:return ClientUpperCase('txtUrl');");
            // txtPan.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtPan');");
            txtalert.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtalert');");
            txtcountry.Attributes.Add("OnChange", "javascript:return addcount();");
            drpcity.Attributes.Add("OnChange", "javascript:addregcity_client('1');");
            drptype.Attributes.Add("OnChange", "javascript:return paretnt();");

            txtPan.Attributes.Add("OnChange", "javascript:checkduplicacy();");

           // txtphone2.Attributes.Add("OnChange", "javascript:mobileno(this.id);");
           // txtfax.Attributes.Add("OnChange", "javascript:mobileno(this.id);");
            //////////////////////anuja
            lstagency.Attributes.Add("onclick", "javascript:return insertagency(event);");
            lstagency.Attributes.Add("onkeydown", "javascript:return insertagency(event);");
            txtagencycode.Attributes.Add("onkeydown", "javascript:return agencyf2(event);");
            txtagencycode.Attributes.Add("onkeypress", "javascript:return agencyf2(event);");

            txtgstclty.Attributes.Add("onkeydown", "javascript:return fillgstclient(event);");
            lstgstclty.Attributes.Add("onkeydown", "javascript:return fillgst(event);");
            lstgstclty.Attributes.Add("onclick", "javascript:return fillgst(event);");
            drpgstatus.Attributes.Add("onChange", "javascript:return checkmandatory();");

            txtgstin.Attributes.Add("OnBlur", "javascript:return chkgstno();");
            txtgstdt.Attributes.Add("OnBlur", "javascript:return comparedate(this.value,this.id);");
            ///////////////////////////////////////////
            bindclientcat();
            bindclinttype();

            //Date Format Check Validations
            //txtstatusdate.Attributes.Add("OnClick", "javascript:return popUpCalendar(this,Form1.txtstatusdate,hiddenDateFormat.Value);");
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
    }

    #region Web Form Designer generated code
    override protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    [Ajax.AjaxMethod]
    public DataSet addcity(string city)
    {
        DataSet ds1 = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C1 = new NewAdbooking.Classes.ClientMaster();
            ds1 = C1.addpickdistname(city);
            return ds1;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster C1 = new NewAdbooking.classesoracle.ClientMaster();
            ds1 = C1.addpickdistname(city);
            return ds1;
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster C1 = new NewAdbooking.classmysql.ClientMaster();
            ds1 = C1.addpickdistname(city);
            return ds1;

        }
    }


    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void clientsave(string hiddencompcode, string txtcustcode, string txtcustomername, string txtalias, string txtadd1, string txtstreet, string drpcity, string txtpincode, string txtdistrict, string txtstate, string txtcountry, string txtphone1, string txtphone2, string txtfax, string txtemailid, string txtUrl, string txtvts, string txtservicetax, string txtPan, string txtcreditdays, string paymode, string txtstatus1, string txtstatusreason, string txtalert, string userid2, string zone, string region, string crdlimit, int i, string rategroup, string cliencat, string taluka, string agency_sav, string ip, string clinttype, string agencycode, string type, string parent, string oldclient, string designation, string discount, string discamt, string ffdiscount, string ffdiscamt, string cashdisc, string cashamt, string branch, string gstaus, string gstdate, string gstin, string gstapp, string gstcltyp,string gstarno,string gstprovid,string gsteftdt)
    {
        DataSet ds = new DataSet();
        paymode = "";
        string err = "";
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C2 = new NewAdbooking.Classes.ClientMaster();
            ds = C2.addclientsave(hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i, rategroup, cliencat, taluka, agency_sav, clinttype, agencycode, type, parent, oldclient, designation, discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, branch, gstaus, gstdate, gstin, gstapp, gstcltyp,gstarno,gstprovid, gsteftdt);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            try
            {
                NewAdbooking.classesoracle.ClientMaster C2 = new NewAdbooking.classesoracle.ClientMaster();
                //ds = C2.addclientsave(hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i, rategroup, cliencat, taluka, agency_sav, clinttype, agencycode, type, parent, oldclient, designation, discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, branch, gstaus, gstdate, gstin, gstapp, gstcltyp, gstarno, gstprovid, gsteftdt);
                ds = C2.addclientsave(hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i, rategroup, cliencat, taluka, agency_sav, clinttype, agencycode, type, parent, oldclient, designation, discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, branch, gstaus, gstdate, gstin, gstapp, gstcltyp, gstarno, gstprovid);
            }
            catch (Exception e)
            {
                err = e.Message;
            }
            clsconnection dconnect = new clsconnection();
            string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Client Master','" + err.Replace("'", "''") + "','New Registration','";
            if (agency_sav.ToString().Trim() == "")
                sqldd = sqldd + " KG " + txtcustcode + " " + txtcustomername + "',";
            else
            {
                sqldd = sqldd + " of " + dconnect.getagencyname(agency_sav) + " " + txtcustcode + " " + txtcustomername + "',";
            }
            sqldd = sqldd + "'" + ip + "')";
            dconnect.executenonquery1(sqldd);
        }

        else
        {
           
       
           string procedureName = "clientsave_clientsave_p";
           string[] parameterValueArray = { hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i.ToString(), rategroup, cliencat, taluka, agency_sav, clinttype, agencycode, type, parent, oldclient, designation, discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, branch, gstaus, gstdate, gstin, gstcltyp, gstapp,gstarno,gstprovid };
           NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
           ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

           /* NewAdbooking.classmysql.ClientMaster C2 = new NewAdbooking.classmysql.ClientMaster();
            ds = C2.addclientsave(hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i, rategroup, cliencat, taluka, agency_sav);*/
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet ClientDeletedetail_client(string compcode, string custcode, string userid, string agency_sav, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C3 = new NewAdbooking.Classes.ClientMaster();
            ds = C3.ClientDelete(compcode, custcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            try
            {
                NewAdbooking.classesoracle.ClientMaster C3 = new NewAdbooking.classesoracle.ClientMaster();
                ds = C3.ClientDelete(compcode, custcode, userid);
            }
            catch (Exception e)
            {
                err = e.Message;
            }
            clsconnection dconnect = new clsconnection();
            string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Client Master','" + err.Replace("'", "''") + "','Client Deletion','";
            if (agency_sav.ToString().Trim() == "")
                sqldd = sqldd + " KG " + custcode + " " + txtcustomername + "',";
            else
            {
                sqldd = sqldd + " of " + dconnect.getagencyname(agency_sav) + " " + custcode + " " + txtcustomername + "',";
            }
            sqldd = sqldd + "'" + ip + "')";
            dconnect.executenonquery1(sqldd);
            return ds;

        }
        else
        {
            NewAdbooking.classmysql.ClientMaster C3 = new NewAdbooking.classmysql.ClientMaster();
            ds = C3.ClientDelete(compcode, custcode, userid);
            return ds;
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void clientmodify(string hiddencompcode, string txtcustcode, string txtcustomername, string txtalias, string txtadd1, string txtstreet, string drpcity, string txtpincode, string txtdistrict, string txtstate, string txtcountry, string txtphone1, string txtphone2, string txtfax, string txtemailid, string txtUrl, string txtvts, string txtservicetax, string txtPan, string txtcreditdays, string paymode, string txtstatus1, string txtstatusreason, string txtalert, string userid2, string zone, string region, string crdlimit, int i, string rategroup, string clientcat, string taluka, string agency_sav, string ip, string clinttype, string agencycode, string type, string parent, string poldclient, string discount, string discamt, string ffdiscount, string ffdiscamt, string cashdisc, string cashamt, string branch, string gstaus, string gstdate, string gstin, string gstapp, string gstcltyp,string  gstarno,string  gstprovid,string gstefdt)
    {
        DataSet ds = new DataSet();
        paymode = "";
        string err = "";
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C4 = new NewAdbooking.Classes.ClientMaster();
            ds = C4.addclientsave(hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i, rategroup, clientcat, taluka, agency_sav, clinttype, agencycode, type, parent, poldclient, "", discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, branch, gstaus, gstdate, gstin, gstapp, gstcltyp, gstarno, gstprovid, gstefdt);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            try
            {
                NewAdbooking.classesoracle.ClientMaster C4 = new NewAdbooking.classesoracle.ClientMaster();
                //ds = C4.addclientsave(hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i, rategroup, clientcat, taluka, agency_sav, clinttype, agencycode, type, parent, poldclient, "", discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, branch, gstaus, gstdate, gstin, gstapp, gstcltyp, gstarno, gstprovid, gstefdt);
                ds = C4.addclientsave(hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i, rategroup, clientcat, taluka, agency_sav, clinttype, agencycode, type, parent, poldclient, "", discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, branch, gstaus, gstdate, gstin, gstapp, gstcltyp, gstarno, gstprovid);
            }
            catch (Exception e)
            {
                err = e.Message;
            }
            clsconnection dconnect = new clsconnection();
            string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Client Master','" + err.Replace("'", "''") + "','Client Modifaication','";
            if (agency_sav.ToString().Trim() == "")
                sqldd = sqldd + " KG " + txtcustcode + " " + txtcustomername + "',";
            else
            {
                sqldd = sqldd + " of " + dconnect.getagencyname(agency_sav) + " " + txtcustcode + " " + txtcustomername + "',";
            }
            sqldd = sqldd + "'" + ip + "')";
            dconnect.executenonquery1(sqldd);
        }
        else
        {
            string procedureName = "clientsave_clientsave_p";
            string[] parameterValueArray = { hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i.ToString(), rategroup, clientcat, taluka, agency_sav, clinttype, agencycode, type, parent, poldclient, "", discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, branch, gstaus, gstdate, gstin, gstapp, gstcltyp, gstarno, gstprovid };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            /*
            NewAdbooking.classmysql.ClientMaster C4 = new NewAdbooking.classmysql.ClientMaster();
            ds = C4.addclientsave(hiddencompcode, txtcustcode, txtcustomername, txtalias, txtadd1, txtstreet, drpcity, txtpincode, txtdistrict, txtstate, txtcountry, txtphone1, txtphone2, txtfax, txtemailid, txtUrl, txtvts, txtservicetax, txtPan, txtcreditdays, paymode, txtstatus1, txtstatusreason, txtalert, userid2, zone, region, crdlimit, i, rategroup, clientcat, taluka, agency_sav);
            */
        }
    }

    [Ajax.AjaxMethod]
    public DataSet clientexecute_client(string hiddencompcode, string txtcustcode, string txtcustomername, string txtalias, string drpcity, string txtstatus1, string userid2, string rategroup, string country, string agency_sav, string parent, string discount, string discamt, string ffdiscount, string ffdiscamt, string cashdisc, string cashamt)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C5 = new NewAdbooking.Classes.ClientMaster();
            ds = C5.addclientexecute(hiddencompcode, txtcustcode, txtcustomername, txtalias, drpcity, txtstatus1, userid2, rategroup, country, agency_sav, parent, discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster C5 = new NewAdbooking.classesoracle.ClientMaster();
            ds = C5.addclientexecute(hiddencompcode, txtcustcode, txtcustomername, txtalias, drpcity, txtstatus1, userid2, rategroup, country, agency_sav, parent, discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt);
            return ds;
        }
        else //if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "clientexecute_clientexecute_p";
            string[] parameterValueArray = { hiddencompcode, userid2, txtcustcode, txtcustomername, txtalias, drpcity, txtstatus1, rategroup, country, agency_sav, parent, discount, discamt, ffdiscount, ffdiscamt, cashdisc, cashamt, "", "", "", "" };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            return ds;
        }
        //else
        //{
        //    NewAdbooking.classmysql.ClientMaster C5 = new NewAdbooking.classmysql.ClientMaster();
        //    ds = C5.addclientexecute(hiddencompcode, txtcustcode, txtcustomername, txtalias, drpcity, txtstatus1, userid2, rategroup, country);
        //    return ds;
        //}
    }


    //First Data Fetching

    [Ajax.AjaxMethod]
    public DataSet first(string Comp_Code, string userid, string Client_Code)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C6 = new NewAdbooking.Classes.ClientMaster();
            ds = C6.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster C6 = new NewAdbooking.classesoracle.ClientMaster();
            ds = C6.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster C6 = new NewAdbooking.classmysql.ClientMaster();
            ds = C6.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
    }
    //Next Data Fetching

    [Ajax.AjaxMethod]
    public DataSet next(string Comp_Code, string userid, string Client_Code)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C7 = new NewAdbooking.Classes.ClientMaster();
            ds = C7.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster C7 = new NewAdbooking.classesoracle.ClientMaster();
            ds = C7.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster C7 = new NewAdbooking.classmysql.ClientMaster();
            ds = C7.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
    }
    //Previous Data Fetching

    [Ajax.AjaxMethod]
    public DataSet previous(string Comp_Code, string userid, string Client_Code)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C8 = new NewAdbooking.Classes.ClientMaster();
            ds = C8.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster C8 = new NewAdbooking.classesoracle.ClientMaster();
            ds = C8.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster C8 = new NewAdbooking.classmysql.ClientMaster();
            ds = C8.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
    }
    //Last Data Fetching

    [Ajax.AjaxMethod]
    public DataSet last(string Comp_Code, string userid, string Client_Code)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster C9 = new NewAdbooking.Classes.ClientMaster();
            ds = C9.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster C9 = new NewAdbooking.classesoracle.ClientMaster();
            ds = C9.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster C9 = new NewAdbooking.classmysql.ClientMaster();
            ds = C9.ClientQuery(Comp_Code, userid, Client_Code);
            z = 0;
            return ds;

        }
    }
    [Ajax.AjaxMethod]
    public DataSet submitpermission(string hiddencompcode, string hiddenuserid, string formname)
    {
        DataSet dz = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();
            dz = checkform.formpermission(hiddencompcode, hiddenuserid, formname);
            return dz;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master checkform = new NewAdbooking.classesoracle.Master();
            dz = checkform.formpermission(hiddencompcode, hiddenuserid, formname);
            return dz;
        }
        else
        {
            NewAdbooking.classmysql.Master checkform = new NewAdbooking.classmysql.Master();
            dz = checkform.formpermission(hiddencompcode, hiddenuserid, formname);
            return dz;
        }
    }
    [Ajax.AjaxMethod]
    public DataSet getdata1(string custcode, string userid, string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.pop CustCode1 = new NewAdbooking.Classes.pop();
            ds = CustCode1.getData(custcode, userid, compcode);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.Classes.pop CustCode1 = new NewAdbooking.Classes.pop();
            ds = CustCode1.getData(custcode, userid, compcode);
            return ds;

        }
        else
        {
            NewAdbooking.classmysql.pop CustCode1 = new NewAdbooking.classmysql.pop();
            ds = CustCode1.getData(custcode, userid, compcode);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
    public void chkuser(string compcode, string custcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.pop CustCode = new NewAdbooking.Classes.pop();
            ds = CustCode.getData(custcode, userid, compcode);
            CustCode.insertData(compcode, custcode, userid, 2);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pop CustCode = new NewAdbooking.classesoracle.pop();
            ds = CustCode.getData(custcode, userid, compcode);
            CustCode.insertData(compcode, custcode, userid, 2);
        }
        else
        {
            NewAdbooking.classmysql.pop CustCode = new NewAdbooking.classmysql.pop();
            ds = CustCode.getData(custcode, userid, compcode);
            CustCode.insertData(compcode, custcode, userid, 2);
        }
    }
    [Ajax.AjaxMethod]
    public DataSet CheckClientPopup(string compcode, string custcode, string custname, string userid, int flag)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.pop CustCode = new NewAdbooking.Classes.pop();
            ds = CustCode.CheckClientPopup(compcode, custcode, custname, userid, flag);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pop CustCode = new NewAdbooking.classesoracle.pop();
            ds = CustCode.CheckClientPopup(compcode, custcode, custname, userid, flag);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.pop CustCode = new NewAdbooking.classmysql.pop();
            ds = CustCode.CheckClientPopup(compcode, custcode, custname, userid, flag);
            return ds;
        }
    }

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }
    public void submitpermission1()
    {
        DataSet dz = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();
            dz = checkform.formpermissionall(Session["compcode"].ToString(), Session["userid"].ToString(), client);
            //return dz;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master checkform = new NewAdbooking.classesoracle.Master();
            dz = checkform.formpermissionall(Session["compcode"].ToString(), Session["userid"].ToString(), client);
        }
        else
        {
            NewAdbooking.classmysql.Master checkform = new NewAdbooking.classmysql.Master();
            dz = checkform.formpermissionall(Session["compcode"].ToString(), Session["userid"].ToString(), client);
            //return dz;
        }
    }
    protected void txtcountry_SelectedIndexChanged(object sender, EventArgs e)
    {

    }
    public void bindclientcat()
    {
        drpclientcat.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RateMaster client = new NewAdbooking.Classes.RateMaster();
            ds = client.bindclientcat(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.RateMaster client = new NewAdbooking.classesoracle.RateMaster();
            ds = client.bindclientcat(Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.RateMaster client = new NewAdbooking.classmysql.RateMaster();
            ds = client.bindclientcat(Session["compcode"].ToString());

        }
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpclientcat.Items.Add(li1);

        if (ds.Tables.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                drpclientcat.Items.Add(li);
            }

        }

    }

    public void countryname()
    {
        txtcountry.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master name = new NewAdbooking.Classes.Master();
            ds = name.adcountryname(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master name = new NewAdbooking.classesoracle.Master();
            ds = name.adcountryname(Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.Master name = new NewAdbooking.classmysql.Master();
            ds = name.adcountryname(Session["compcode"].ToString());
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Country-----";
        li1.Value = "0";
        li1.Selected = true;
        txtcountry.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            txtcountry.Items.Add(li);
        }
    }

    public void rate()
    {
        string userid = hiddenuserid.Value;
        string compcode = hiddencompcode.Value;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster add_rate = new NewAdbooking.Classes.ClientMaster();
            ds = add_rate.bind_rate(userid, compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster add_rate = new NewAdbooking.classesoracle.ClientMaster();
            ds = add_rate.bind_rate(userid, compcode);
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster add_rate = new NewAdbooking.classmysql.ClientMaster();
            ds = add_rate.bind_rate(userid, compcode);
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Rate Group--";
        li1.Value = "";
        li1.Selected = true;
        drprategroup.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drprategroup.Items.Add(li);
        }
    }

    [Ajax.AjaxMethod]
    public DataSet addcou(string txtcountry)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();
            ds = firstAgency.countcity(txtcountry);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();
            ds = firstAgency.countcity(txtcountry);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
            ds = firstAgency.countcity(txtcountry);
            return ds;
        }
    }

    [Ajax.AjaxMethod]

    public DataSet addreg(string values)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master region = new NewAdbooking.Classes.Master();
            ds = region.addregion(values);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master region = new NewAdbooking.classesoracle.Master();
            ds = region.addregion(values);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.Master region = new NewAdbooking.classmysql.Master();
            ds = region.addregion(values);
            return ds;
        }
    }
    [Ajax.AjaxMethod]

    public DataSet adchkadvcode(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            // NewAdbooking.Classes. auto = new NewAdbooking.Classes.productcategory();
            NewAdbooking.Classes.ClientMaster C12 = new NewAdbooking.Classes.ClientMaster();
            ds = C12.autocode(str);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster C12 = new NewAdbooking.classesoracle.ClientMaster();
            ds = C12.autocode(str);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster C12 = new NewAdbooking.classmysql.ClientMaster();
            ds = C12.autocode(str);
            return ds;
        }
    }

    //*************************** By Manish Verma*****************************************************
    [Ajax.AjaxMethod]
    public DataSet adchkudefine(string custCode, string custName)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster userdefine = new NewAdbooking.Classes.ClientMaster();
            ds = userdefine.chkDupUDefine(custCode, custName);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster userdefine = new NewAdbooking.classesoracle.ClientMaster();
            ds = userdefine.chkDupUDefine(custCode, custName);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster userdefine = new NewAdbooking.classmysql.ClientMaster();
            ds = userdefine.chkDupUDefine(custCode, custName);
            return ds;
        }
    }
    //***************************************************************************************************

    [Ajax.AjaxMethod]
    public DataSet bindclientname(string compcode, string client)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster clsbooking = new NewAdbooking.Classes.ClientMaster();

            ds = clsbooking.getClientName(compcode, client);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster clsbooking = new NewAdbooking.classesoracle.ClientMaster();
            ds = clsbooking.getClientName(compcode, client);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.ClientMaster clsbooking = new NewAdbooking.classmysql.ClientMaster();

            ds = clsbooking.getClientName(compcode, client);
            return ds;
        }
    }

    public void addzone()
    {
        drpzone.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master name = new NewAdbooking.Classes.Master();
            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master name = new NewAdbooking.classesoracle.Master();
            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.Master name = new NewAdbooking.classmysql.Master();
            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select zone-----";
        li1.Value = "";
        li1.Selected = true;
        drpzone.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpzone.Items.Add(li);
        }
    }


    public void addregion()
    {
        drpregion.Items.Clear();
        DataSet ds = new DataSet();
        //regionhidden=hiddenregion.Value;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master region = new NewAdbooking.Classes.Master();
            ds = region.add();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master region = new NewAdbooking.classesoracle.Master();
            ds = region.add();
        }
        else
        {
            NewAdbooking.classmysql.Master region = new NewAdbooking.classmysql.Master();
            ds = region.add();
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Region--";
        li1.Value = "";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpregion.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            //drpregion.SelectedValue=ds.Tables[0].Rows[i].ItemArray[1].ToString();
            //drpregion.SelectedItem.Text=ds.Tables[0].Rows[i].ItemArray[1].ToString();
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpregion.Items.Add(li);
        }
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void blankSession()
    {
        Session["client_cont"] = null;
        Session["client_prod"] = null;
        Session["client_stat"] = null;
        Session["client_exec"] = null;
        Session["client_brand"] = null;
    }


    //  (compcode,custcodestatus,userid)

    [Ajax.AjaxMethod]
    public DataSet clearclientchildtable(string compcode, string custcodestatus, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster clsbooking = new NewAdbooking.Classes.ClientMaster();

            ds = clsbooking.ClientDeleteclear(compcode, custcodestatus, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster clsbooking = new NewAdbooking.classesoracle.ClientMaster();
            ds = clsbooking.ClientDeleteclear(compcode, custcodestatus, userid);
            return ds;
        }
        else
        {
                NewAdbooking.classmysql.ClientMaster clsbooking = new NewAdbooking.classmysql.ClientMaster();

                ds = clsbooking.ClientDeleteclear(compcode, custcodestatus, userid);
            return ds;
        }
    }



    public void bindclinttype()
    {
        DataSet clint = new DataSet();
        clint.ReadXml(Server.MapPath("XML/ClientMaster.xml"));
        drpclinttype.Items.Clear();
        int i;
        if (Session["agency_name"].ToString() == "0" || Session["agency_name"].ToString() == "")
        {

            for (i = 0; i < clint.Tables[2].Columns.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = clint.Tables[2].Rows[0].ItemArray[i].ToString();
                i = i + 1;
                li.Value = clint.Tables[2].Rows[0].ItemArray[i].ToString();
                drpclinttype.Items.Add(li);

            }
        }
        else
        {

            for (i = 4; i < 6; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = clint.Tables[2].Rows[0].ItemArray[i].ToString();
                i = i + 1;
                li.Value = clint.Tables[2].Rows[0].ItemArray[i].ToString();
                drpclinttype.Items.Add(li);

            }
        }

    }

    [Ajax.AjaxMethod]
    public DataSet bindclient(string compcode, string client)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {


            NewAdbooking.Classes.ClientMaster clsbooking = new NewAdbooking.Classes.ClientMaster();

            ds = clsbooking.getClientNa(compcode, client);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster clsbooking = new NewAdbooking.classesoracle.ClientMaster();

            ds = clsbooking.getClientNa(compcode, client, "0");
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "Add_bindParentclient";
            string[] parameterValueArray = { compcode, client, "0" };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //else
        //{
        //    NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();

        //    ds = clsbooking.getClientName(compcode, client);
        //    return ds;
        //}
        return ds;
    }

    [Ajax.AjaxMethod]
    public string getclintna(string compcode, string catcode)
    {
        string fetchvalue = "";
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster supost = new NewAdbooking.classesoracle.ClientMaster();
            ds = supost.bind_clintname(compcode, catcode);
            if (ds.Tables[0].Rows.Count > 0)
            {
                fetchvalue = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                return fetchvalue;
            }
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "ADD_GET_CLIENT_NAME";
            string[] parameterValueArray = { compcode, catcode };
            NewAdbooking.classmysql.Master obj = new NewAdbooking.classmysql.Master();
            ds = obj.BindCommanFunction(procedureName, parameterValueArray);
            if (ds.Tables[0].Rows.Count > 0)
            {
                fetchvalue = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                return fetchvalue;
            }
        }
        else
        {
            NewAdbooking.Classes.ClientMaster supost = new NewAdbooking.Classes.ClientMaster();
            ds = supost.bind_clintname(compcode, catcode);
            if (ds.Tables[0].Rows.Count > 0)
            {
                fetchvalue = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                return fetchvalue;
            }
        }
        return fetchvalue;
    }
    [Ajax.AjaxMethod]
    public DataSet btnagencyname_Click(string compcode, string comname)
    {

        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ClientMaster databind = new NewAdbooking.Classes.ClientMaster();
            da = databind.cilntnamebind(compcode, comname);
            return da;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ClientMaster databind = new NewAdbooking.classesoracle.ClientMaster();
            da = databind.cilntnamebind(compcode, comname);
            return da;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "bindclient11new_bindclient11new_p";
            string[] parameterValueArray = { compcode, comname };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //Divgrid1.Attributes.Add("style", "display:block;");
        return da;
    }


    [Ajax.AjaxMethod]
    public DataSet Checkduplicay1(string compcode, string branchcode, string Agencyname, string panno)
    {

        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master databind = new NewAdbooking.Classes.Master();
            da = databind.Checkduplicay2(compcode, branchcode, Agencyname, panno);
            return da;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master databind = new NewAdbooking.classesoracle.Master();
            da = databind.Checkduplicay2(compcode, branchcode, Agencyname, panno);
            return da;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "chkpanclientagency";
            string[] parameterValueArray = { compcode, branchcode, Agencyname, panno };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //Divgrid1.Attributes.Add("style", "display:block;");
        return da;
    }

public void bindbranch()
    {

        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Booking_Audit1 bind = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = bind.bindbranch();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.BillingClass.Classes.session_billing bind = new NewAdbooking.BillingClass.Classes.session_billing();
            ds = bind.bindbranch(Session["compcode"].ToString());

        }
        else 
        {

            NewAdbooking.classmysql.Master bind = new NewAdbooking.classmysql.Master();
            ds = bind.bindbranch();
        }

        int i;
        ListItem li1;

        li1 = new ListItem();
        drpbranch.Items.Clear();
        li1.Text = "-Select Branch-";
        li1.Value = "0";
        li1.Selected = true;
        drpbranch.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpbranch.Items.Add(li);


        }

    }
    /////////////////////////////anuja///////////////
[Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
public DataSet bindagencyname(string compcode, string userid, string agency, string fla)
{
    DataSet ds = new DataSet();
    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    {
        NewAdbooking.Classes.BookingMaster bindagenname = new NewAdbooking.Classes.BookingMaster();
        ds = bindagenname.bind10agency(compcode, userid, agency, Session["revenue"].ToString());
        
    }
    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    {
        NewAdbooking.classesoracle.BookingMaster bindagenname = new NewAdbooking.classesoracle.BookingMaster();
        ds = bindagenname.bind10agency(compcode, userid, agency, Session["revenue"].ToString());
    }
    else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
    {
        string procedureName = "bind10agencyforbooking";
        string[] parameterValueArray = { compcode, userid, agency, Session["revenue"].ToString() };
        NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
    }
  
    return ds;
}

[Ajax.AjaxMethod]
public DataSet fill_gst(string compcode, string chargetypecode)
{
    DataSet ds = new DataSet();
    string[] parameterValueArray = new string[] { compcode, chargetypecode };
    string procedureName = "BindGstClientType";
    if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
    {
        NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
    }
    else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
    {
        NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
    }
    else
    {
        NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
    }
    return ds;
}


[Ajax.AjaxMethod]
public DataSet chkgstno(string comp_code, string unit_code, string gstin, string state_code, string pan_no, string type, string extra1, string extra2, string extra3, string extra4, string extra5)
{
    DataSet ds = new DataSet();
    string[] parameterValueArray = new string[] { comp_code, unit_code, gstin, state_code, pan_no, type, extra1, extra2, extra3, extra4, extra5 };
    if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
    {
        string procedureName = "gstinvalidate";
        NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
    }
    else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
    {
        string procedureName = "gstinvalidate";
        NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
    }
    else
    {
        /*string procedureName = "gstinvalidate";
        NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);*/
        NewAdbooking.classmysql.Master ms = new NewAdbooking.classmysql.Master();
        ds = ms.chkgstno(comp_code, unit_code, gstin, state_code, pan_no, type, extra1, extra2, extra3, extra4, extra5);
    }
    return ds;
}

}
