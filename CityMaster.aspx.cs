using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class CityMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {
        Response.Expires = -1;
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();

        }
        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        hiddenusername.Value = Session["Username"].ToString();

        Ajax.Utility.RegisterTypeForAjax(typeof(CityMaster));
        Response.Expires = -1;

        if (Session["Username"] == null)
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        else
        {
        }
        //******************************Pankaj Gupta*****************************

        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();



        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/citymaster.xml"));

        lblCitycode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString() + "<font color=red>*</font>";
        CityName.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString() + "<font color=red>*</font>";
        CityAlias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString() + "<font color=red>*</font>";
        CountryName.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString() + "<font color=red>*</font>";
        StateName.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString() + "<font color=red>*</font>";
        /*change ankur*/
        DistrictName.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        ZoneName.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        ///////////////////
        lbregion.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString() + "<font color=red>*</font>";
        CityStdCode.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString() + "<font color=red>*</font>";
        branchcode.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        /*new change ankur 10 feb*/
        hiddenHindustan.Value = ds.Tables[0].Rows[0].ItemArray[9].ToString();

        //***************************************************************************
        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnnext.Enabled = false;
        btnprevious.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        // Put user code to initialize the page here
        if (!Page.IsPostBack)
        {
            txtCityCode.Enabled = false;
            txtCityName.Enabled = false;
            txtAlias.Enabled = false;

            drpDistrictName.Enabled = false;
            drpStateName.Enabled = false;
            drpZoneName.Enabled = false;
            drpCountryName.Enabled = false;
            txtCitySTD.Enabled = false;
            drpRegion.Enabled = false;
            txtbranch.Enabled = false;

            drpCountryName.Attributes.Add("OnChange", "javascript:return fillcountry();");
            drpZoneName.Attributes.Add("OnChange", "javascript:return fillregion();");
            drpStateName.Attributes.Add("OnChange", "javascript:return fillstate();");

            btnNew.Attributes.Add("OnClick", "javascript:return Citynew();");
            btnSave.Attributes.Add("OnClick", "javascript:return Citysave();");
            btnModify.Attributes.Add("OnClick", "javascript:return Citymodify();");
            btnDelete.Attributes.Add("OnClick", "javascript:return Citydelete();");
            btnQuery.Attributes.Add("OnClick", "javascript:return Cityquery();");
            btnExecute.Attributes.Add("OnClick", "javascript:return Cityexecute();");
            btnCancel.Attributes.Add("OnClick", "javascript:return Citycancel('CityMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return Cityfirst();");
            btnprevious.Attributes.Add("OnClick", "javascript:return Cityprevious();");
            btnnext.Attributes.Add("OnClick", "javascript:return Citynext();");
            btnlast.Attributes.Add("OnClick", "javascript:return Citylast();");
            btnExit.Attributes.Add("OnClick", "javascript:return Cityexit();");

            txtCityCode.Attributes.Add("OnBlur", "javascript:return uppercase1('txtCityCode');");
            txtCityName.Attributes.Add("OnChange", "javascript:return autoornot();");
            txtCitySTD.Attributes.Add("OnPaste", "javascript:return false;");

            txtAlias.Attributes.Add("OnBlur", "javascript:return uppercase2('txtAlias');");
            //txtCityStd.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtCitySTD');");
            BindBranch();
           District();
           State();
            Zone();
            Country();
           Region();
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        // Put user code to initialize the page here
    }

    public void BindBranch()
    {

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CityMaster branchname = new NewAdbooking.classesoracle.CityMaster();
            ds = branchname.getbranch();
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.CityMaster retainername = new NewAdbooking.Classes.CityMaster();
                ds = retainername.retainer();
            }

            else
            {
                NewAdbooking.classmysql.CityMaster retainername = new NewAdbooking.classmysql.CityMaster();
                ds = retainername.retainer();
            }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Branch Name-";
        li1.Value = "0";
        li1.Selected = true;
        txtbranch.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            txtbranch.Items.Add(li);


        }

    }

    [Ajax.AjaxMethod]
    //		public DataSet distselect(string compcode,string userid,string statcode,string distcode)
    public DataSet distselect(string compcode, string userid, string statcode, string distcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CityMaster select = new NewAdbooking.Classes.CityMaster();

            ds = select.distselect(compcode, userid, statcode, distcode);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CityMaster select = new NewAdbooking.classesoracle.CityMaster();

                ds = select.distselect(compcode, userid, statcode, distcode);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster select = new NewAdbooking.classmysql.CityMaster();

                ds = select.distselect(compcode, userid, statcode, distcode);
                return ds;
            }
    }
    [Ajax.AjaxMethod]
    public DataSet chkcode(string str, string countrycode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster chk = new NewAdbooking.Classes.CityMaster();

            ds = chk.countcode(str, countrycode);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CityMaster chk = new NewAdbooking.classesoracle.CityMaster();

                ds = chk.countcode(str, countrycode);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster chk = new NewAdbooking.classmysql.CityMaster();

                ds = chk.countcode(str);
                return ds;
            }

    }


    [Ajax.AjaxMethod]
    //		public DataSet bindstate(string code,string compcode,string userid)
    public DataSet bindstate(string code, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster bind1 = new NewAdbooking.Classes.CityMaster();

            ds = bind1.bindstate(code, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {

                NewAdbooking.classesoracle.CityMaster bind1 = new NewAdbooking.classesoracle.CityMaster();

                ds = bind1.bindstate(code, compcode, userid);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster bind1 = new NewAdbooking.classmysql.CityMaster();

                ds = bind1.bindstate(code, compcode, userid);
                return ds;

            }
    }
    [Ajax.AjaxMethod]
    //		public DataSet bindstate(string code,string compcode,string userid)
    public DataSet bindregion(string code, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster bind1 = new NewAdbooking.Classes.CityMaster();

            ds = bind1.bindregion(code, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {

                NewAdbooking.classesoracle.CityMaster bind1 = new NewAdbooking.classesoracle.CityMaster();

                ds = bind1.bindregion(code, compcode, userid);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster bind1 = new NewAdbooking.classmysql.CityMaster();

                ds = bind1.bindregion(code, compcode, userid);
                return ds;

            }
    }
    [Ajax.AjaxMethod]
    //		public DataSet binddistrict(string code1,string compcode,string userid)
    public DataSet binddistrict(string code1, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster bind = new NewAdbooking.Classes.CityMaster();

            ds = bind.binddistrict(code1, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CityMaster bind = new NewAdbooking.classesoracle.CityMaster();

                ds = bind.binddistrict(code1, compcode, userid);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster bind = new NewAdbooking.classmysql.CityMaster();

                ds = bind.binddistrict(code1, compcode, userid);
                return ds;

            }

    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet modify(string CityCode,string CityName,string Alias,string DistrictName,string StateName,string ZoneName,string CountryName,string CitySTD,string Region,string compcode,string userid)
    public DataSet modify(string CityCode, string CityName, string Alias, string DistrictName, string StateName, string ZoneName, string CountryName, string CitySTD, string Region, string compcode, string userid, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.CityMaster modify = new NewAdbooking.Classes.CityMaster();

                ds = modify.ModifyValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                //   return ds;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.CityMaster modify = new NewAdbooking.classesoracle.CityMaster();

                    ds = modify.ModifyValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                    //     return ds;
                }
                else
                {
                    NewAdbooking.classmysql.CityMaster modify = new NewAdbooking.classmysql.CityMaster();

                    ds = modify.ModifyValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                    //return ds;
                }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string CityCode2 = "Modified City " + CityCode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','City','" + err.Replace("'", "''") + "','City Upated','" + CityCode2;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet updatebranch(string username, string branchcode, string compcode, string citycode, string userflag)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CityMaster save = new NewAdbooking.classesoracle.CityMaster();
            ds = save.userupdatebranch(username, branchcode, compcode, citycode, userflag);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.CityMaster save = new NewAdbooking.Classes.CityMaster();
                ds = save.userupdatebranch(username, branchcode, compcode, citycode, userflag);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster save = new NewAdbooking.classmysql.CityMaster();
                ds = save.userupdatebranch(username, branchcode, compcode, citycode, userflag);
                return ds;
            }

        //  return ds;

    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet insert(string CityCode,string CityName,string Alias,string DistrictName,string StateName,string ZoneName,string CountryName,string CitySTD,string Region,string compcode,string userid)
    public DataSet insert(string CityCode, string CityName, string Alias, string DistrictName, string StateName, string ZoneName, string CountryName, string CitySTD, string Region, string compcode, string userid, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.CityMaster insert = new NewAdbooking.Classes.CityMaster();

                ds = insert.InsertValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                // return ds;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.CityMaster insert = new NewAdbooking.classesoracle.CityMaster();

                    ds = insert.InsertValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                    // return ds;
                }
                else
                {
                    NewAdbooking.classmysql.CityMaster insert = new NewAdbooking.classmysql.CityMaster();

                    ds = insert.InsertValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                    // return ds;
                }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string CityCode1 = "Inserted City " + CityCode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','City','" + err.Replace("'", "''") + "','City Creation','" + CityCode1;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;
    }

    //--------------------save branch -----------------------------//
    [Ajax.AjaxMethod]
    public DataSet savebranch(string username, string branchcode, string compcode, string CityCode, string userflag)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CityMaster save = new NewAdbooking.classesoracle.CityMaster();
            ds = save.usersavebranch(username, branchcode, compcode, CityCode, userflag);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.CityMaster save = new NewAdbooking.Classes.CityMaster();
                ds = save.usersavebranch(username, branchcode, compcode, CityCode, userflag);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster save = new NewAdbooking.classmysql.CityMaster();
                ds = save.usersavebranch(username, branchcode, compcode, CityCode, userflag);
                return ds;
            }

    }

    [Ajax.AjaxMethod]
    //		public DataSet select(string CityCode,string CityName,string Alias,string DistrictName,string StateName,string ZoneName,string CountryName,string CitySTD,string Region,string compcode,string userid)
    public DataSet select(string compcode, string CityCode, string CityName, string Alias, string DistrictName, string StateName, string ZoneName, string CountryName, string CitySTD, string Region, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster select = new NewAdbooking.Classes.CityMaster();

            ds = select.SelectValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CityMaster select = new NewAdbooking.classesoracle.CityMaster();

                ds = select.SelectValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                return ds;
            }
            else
            {
               
                NewAdbooking.classmysql.CityMaster select = new NewAdbooking.classmysql.CityMaster();

                //ds = select.SelectValue(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, "", Region, compcode);
                ds = select.SelectValue(compcode, CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region);
                 //compcode, CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region
                return ds;
            }
    }


    [Ajax.AjaxMethod]
    public DataSet branchexecute(string compcode, string citycode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CityMaster catexe = new NewAdbooking.classesoracle.CityMaster();
            ds = catexe.executebranch(compcode, citycode);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.CityMaster catexe = new NewAdbooking.Classes.CityMaster();
                ds = catexe.executebranch(compcode, citycode);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster catexe = new NewAdbooking.classmysql.CityMaster();
                ds = catexe.executebranch(compcode, citycode);
                return ds;
            }
        // return ds;
    }

    [Ajax.AjaxMethod]
    //		public DataSet Selectfnpl(string CityCode,string CityName,string Alias,string DistrictName,string StateName,string ZoneName,string CountryName,string CitySTD,string Region,string compcode,string userid)
    public DataSet Selectfnpl(string CityCode, string CityName, string Alias, string DistrictName, string StateName, string ZoneName, string CountryName, string CitySTD, string Region, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster select = new NewAdbooking.Classes.CityMaster();

            ds = select.Selectfnpl(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CityMaster select = new NewAdbooking.classesoracle.CityMaster();

                ds = select.Selectfnpl(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CityMaster select = new NewAdbooking.classmysql.CityMaster();

                ds = select.Selectfnpl(CityCode, CityName, Alias, DistrictName, StateName, ZoneName, CountryName, CitySTD, Region, compcode, userid);
                return ds;
            }
    }

    public void District()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster DistrictName = new NewAdbooking.Classes.CityMaster();
            ds = DistrictName.district(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CityMaster DistrictName = new NewAdbooking.classesoracle.CityMaster();
            ds = DistrictName.district(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.CityMaster DistrictName = new NewAdbooking.classmysql.CityMaster();
            ds = DistrictName.district(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        /*ListItem li1;
        li1=new ListItem();
        li1.Text="Select";
        li1.Value="0";
        li1.Selected =true;
        drpDistrictName.Items.Add(li1);*/

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpDistrictName.Items.Add(li);
        }
    }

    public void State()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster StateName = new NewAdbooking.Classes.CityMaster();
            ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CityMaster StateName = new NewAdbooking.classesoracle.CityMaster();
            ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.CityMaster StateName = new NewAdbooking.classmysql.CityMaster();
            ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select";
        li1.Value = "0";
        //li1.Selected =true;
        drpStateName.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpStateName.Items.Add(li);
        }
    }

    //		public void Zone()
    public void Zone()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CityMaster ZoneName = new NewAdbooking.Classes.CityMaster();

            ds = ZoneName.zone(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CityMaster ZoneName = new NewAdbooking.classesoracle.CityMaster();

                ds = ZoneName.zone(Session["compcode"].ToString(), Session["userid"].ToString());
            }
            else
            {
                NewAdbooking.classmysql.CityMaster ZoneName = new NewAdbooking.classmysql.CityMaster();

                ds = ZoneName.zone(Session["compcode"].ToString(), Session["userid"].ToString());

            }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Zone-----";
        li1.Value = "0";
        li1.Selected = true;
        drpZoneName.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpZoneName.Items.Add(li);
        }
    }

    //		public void Country()
    public void Country()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CityMaster CountryName = new NewAdbooking.Classes.CityMaster();

            ds = CountryName.country(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CityMaster CountryName = new NewAdbooking.classesoracle.CityMaster();

                ds = CountryName.country(Session["compcode"].ToString(), Session["userid"].ToString());
            }
            else
            {
                NewAdbooking.classmysql.CityMaster CountryName = new NewAdbooking.classmysql.CityMaster();

                ds = CountryName.country(Session["compcode"].ToString(), Session["userid"].ToString());

            }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Country-----";
        li1.Value = "0";
        li1.Selected = true;
        drpCountryName.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpCountryName.Items.Add(li);
        }
    }

    //		public void Region()
    public void Region()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.CityMaster RegionName = new NewAdbooking.Classes.CityMaster();

            ds = RegionName.region(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CityMaster RegionName = new NewAdbooking.classesoracle.CityMaster();

                ds = RegionName.region(Session["compcode"].ToString(), Session["userid"].ToString());
            }
            else
            {
                NewAdbooking.classmysql.CityMaster RegionName = new NewAdbooking.classmysql.CityMaster();

                ds = RegionName.region(Session["compcode"].ToString(), Session["userid"].ToString());

            }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Region-----";
        li1.Value = "0";
        li1.Selected = true;
        drpRegion.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpRegion.Items.Add(li);
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet DeleteValue(string CityCode,string compcode,string userid)
    public DataSet DeleteValue(string CityCode, string compcode, string userid, string ip)
    {
        DataSet da = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.CityMaster check = new NewAdbooking.Classes.CityMaster();

                da = check.DeleteValue(CityCode, compcode, userid);
                //   return da;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.CityMaster check = new NewAdbooking.classesoracle.CityMaster();

                    da = check.DeleteValue(CityCode, compcode, userid);
                    //     return da;
                }
                else
                {

                    NewAdbooking.classmysql.CityMaster check = new NewAdbooking.classmysql.CityMaster();

                    da = check.DeleteValue(CityCode, compcode, userid);
                    //return da;
                }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string CityCode3 = "Deleted City " + CityCode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','City','" + err.Replace("'", "''") + "','City Deleted','" + CityCode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return da;
    }

    [Ajax.AjaxMethod]
    //		public DataSet citycheck(string CityCode,string compcode,string userid)
    public DataSet citycheck(string CityCode, string compcode, string name, string CountryName, string StateName, string DistrictName, string mode)
    {
        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster chk = new NewAdbooking.Classes.CityMaster();

            ds = chk.citycheck(CityCode, compcode, name, CountryName, StateName, DistrictName, mode);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {

                NewAdbooking.classesoracle.CityMaster chk = new NewAdbooking.classesoracle.CityMaster();

                ds = chk.citycheck(CityCode, compcode, name, CountryName, StateName, DistrictName, mode);
                return ds;
            }
            
       else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "mysql")
           {
               string procedureName = "citychkcode_citychkcode_p";
               NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
               string[] parameterValueArray = { CityCode, compcode, name, CountryName, StateName, DistrictName, mode};
               ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
           }
        return ds;
    }
    #region Web Form Designer generated code
    protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }

}