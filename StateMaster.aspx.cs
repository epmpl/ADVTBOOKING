using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class StateMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;

        if (Request.QueryString["userid"] != "" && Request.QueryString["userid"] != null)
        {

            Session["userid"] = Request.QueryString["userid"].ToString();
            Session["compcode"] = Request.QueryString["compcode"].ToString();
            Session["DateFormat"] = Request.QueryString["dateformat"].ToString();
            Session["autogenerated"] = Request.QueryString["autogenerated"].ToString();

        }
        if (Session["compcode"] != null)
        {

        }
        else
        {
            Response.Redirect("login.aspx");
            return;
        }

        if (Session["compcode"] != null)
        {
            ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
            hiddencomcode.Value = Session["compcode"].ToString();
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenDateFormat.Value = Session["DateFormat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();


        }
        else
        {

            Response.Redirect("login.aspx");
            return;
        }
        Ajax.Utility.RegisterTypeForAjax(typeof(StateMaster));
        DataSet objDataSetbu = new DataSet();
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        DataSet objDataSet = new DataSet();
        objDataSet.ReadXml(Server.MapPath("XML/statemaster.xml"));
        lbcountryname.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        lbstatecode.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        lbstatename.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        lbalias.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        lblgststcd.Text = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        DataSet comm_nam = new DataSet();
        // Read in the XML file
        comm_nam.ReadXml(Server.MapPath("XML/Comm_detail.xml"));
        lblincid.Text = comm_nam.Tables[0].Rows[0].ItemArray[12].ToString();

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        txtstatecode.Enabled = false;
        txtstatename.Enabled = false;
        txtstatealias.Enabled = false;
        txtincid.Enabled = false;
        drpcountryname.Enabled = false;

        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
        if (!Page.IsPostBack)
        {
            countryname();

            txtstatecode.Attributes.Add("OnBlur", "javascript:return uppercase1('txtstatecode');");
            btnNew.Attributes.Add("OnClick", "javascript:return StateNewclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return StateSaveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return StateModifyclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return StateDeleteclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return StateQueryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return StateExecuteclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return StateCancelclick('StateMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return Statefirstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return Statepreviousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return Statenextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return Statelastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return StateExitclick();");
            txtstatename.Attributes.Add("OnChange", "javascript:return autoornot();");
            txtstatealias.Attributes.Add("OnBlur", "javascript:return uppercase2('txtstatealias');");
        }
    }
    #region Web Form Designer generated code
    protected void OnInit(EventArgs e)
    {
        InitializeComponent();
        base.OnInit(e);
    }


    private void InitializeComponent()
    {

    }
    #endregion
    [Ajax.AjaxMethod]
    public void countryname()
    {
        DataSet ds = new DataSet();
        string comp_code = Session["compcode"].ToString();
        string[] parameterValueArray = new string[] { comp_code };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "adcountryname";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "adcountryname.adcountryname_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "adcountryname_adcountryname_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }


        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Country-----";
        li1.Value = "0";
        li1.Selected = true;
        drpcountryname.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpcountryname.Items.Add(li);
        }
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet Advsave1(string companycode, string statecode, string statename, string alias, string countryname, string UserId, string ip, string Incid, string gststcd)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            string[] parameterValueArray = new string[] { companycode, statecode, statename, alias, countryname, UserId, Incid, gststcd };
            if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
            {
                string procedureName = "Statemaster_Save";
                NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                string procedureName = "Statemaster_Save.Statemaster_Save_P";
                NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else
            {
                string procedureName = "STATEMASTER_SAVE_STATEMASTER_SAVE_P";
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                 ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            return ds;
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string statecode1 = "Inserted State " + statecode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','State','" + err.Replace("'", "''") + "','State Created','" + statecode1;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet Advmodify1(string companycode, string statecode, string statename, string alias, string countryname, string UserId, string ingration, string ip, string gststcd)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            DataSet dss = new DataSet();
            string[] parameterValueArray = new string[] { companycode, statecode, statename, alias, countryname, UserId, ingration, gststcd };
            if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
            {
                string procedureName = "Statemaster_Modify";
                NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                dss = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                string procedureName = "Statemaster_Modify.Statemaster_Modify_p";
                NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                dss = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else
            {
                string procedureName = "STATEMASTER_MODIFY_STATEMASTER_MODIFY_P";
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            return dss;
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string statecode3 = "Modified State " + statecode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','State','" + err.Replace("'", "''") + "','State Updated','" + statecode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;

    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void Advdelete(string companycode, string statecode, string statename, string alias, string countryname, string UserId, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            DataSet ds11 = new DataSet();
            string[] parameterValueArray = new string[] { companycode, statecode, statename, alias, countryname };
            if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
            {
                string procedureName = "Statemaster_Delete";
                NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                ds11 = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                string procedureName = "Statemaster_Delete.Statemaster_Delete_p";
                NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                ds11 = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else
            {
                string procedureName = "STATEMASTER_DELETE_STATEMASTER_DELETE_P";
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }

        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string statecode2 = "Deleted State " + statecode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','State','" + err.Replace("'", "''") + "','State Deleted','" + statecode2;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);

    }
    [Ajax.AjaxMethod]
    public DataSet Advexecute1(string companycode, string statecode, string statename, string alias, string countryname, string UserId)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { companycode, statecode, statename, alias, countryname };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Statemaster_Execute";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Statemaster_Execute.Statemaster_Execute_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "STATEMASTER_EXECUTE_STATEMASTER_EXECUTE_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet Advexecute2(string companycode, string statecode, string statename, string alias, string countryname, string UserId, string integration)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { companycode, statecode, statename, alias, countryname, integration };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Statemaster_Execute";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Statemaster_Execute.Statemaster_Execute_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "STATEMASTER_EXECUTE_STATEMASTER_EXECUTE_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet Statefirst()
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Statefpnl_p";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Statefpnl.Statefpnl_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "STATEFPNL_STATEFPNL_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet chkstatecode(string companycode, string UserId, string statecode)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { statecode, companycode, UserId };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "chkstate";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "chkstate.chkstate_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "CHKSTATE_CHKSTATE_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet chkstatename(string statename, string countryname, string companycode, string statecode)
    {

        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { statecode, statename, companycode };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "chkstatename_p";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "chkstatename.chkstatename_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "CHKSTATENAME_CHKSTATENAME_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet chkstatcodename(string str, string ssss, string statecode)
    {
        DataSet ds = new DataSet();
        string code = "";
        if (str.Length > 2)
        {
            code = str.Substring(0, 2);
        }
        else
        {
            code = str;
        }
        string[] parameterValueArray = new string[] { str, code, ssss, statecode };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "chkstatecodename";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "chkstatecodename.chkstatecodename_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "CHKSTATECODENAME_CHKSTATECODENAME_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


}