using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class Company_Master : System.Web.UI.Page
{
     
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            //dateformat = Session["dateformat"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
           UserLabel.Value = Session["Username"].ToString();
           string dateformat = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
        }
        else
        {
            Response.Write("<script>alert('Your session has been expired');window.close();</script>");
            return;
        }

        btnNew.Attributes.Add("OnClick", "javascript:return NewClick4();");
        drpcountry.Attributes.Add("OnChange", "javascript:return addcount(this);");
        btnSave.Attributes.Add("OnClick", "javascript:return saveclick();");
        btnQuery.Attributes.Add("OnClick", "javascript:return QueryClick4();");
        btnExecute.Attributes.Add("OnClick", "javascript:return ExecuteClick4();");
        btnModify.Attributes.Add("OnClick", "javascript:return ModifyClick4();");
        btnnext.Attributes.Add("OnClick", "javascript:return NextClick4();");
        btnfirst.Attributes.Add("OnClick", "javascript:return FirstClick4();");
        btnCancel.Attributes.Add("OnClick", "javascript:return CancelClick4('Company_Master');");
        btnlast.Attributes.Add("OnClick", "javascript:return LastClick4();");
        btnprevious.Attributes.Add("OnClick", "javascript:return PreviousClick4();");
        btnDelete.Attributes.Add("OnClick", "javascript:return deleteClick();");
        txtCompanyName.Attributes.Add("OnChange", "javascript:return userdefine();");
        txtCompanyCode.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtCompanyCode');");
        txtEmailid.Attributes.Add("OnBlur", "javascript:return ClientEmailCheck1('txtEmailid');");
        drpcity.Attributes.Add("OnChange", "javascript:return addregcity_client();");
        txtRegdate.Attributes.Add("OnChange", "javascript:return checkdate(this);");
        btnExit.Attributes.Add("OnClick", "javascript:return ExitClick4();");
        lbldes_details.Attributes.Add("onclick", "javascript:return checktab('Dirinform')");
        drpdircity.Attributes.Add("OnChange", "javascript:addregcity_client1();");
        txtdiremail.Attributes.Add("OnBlur", "javascript:return ClientEmailCheck_tab('txtdiremail');");
        drpdircountry.Attributes.Add("OnChange", "javascript:return addcount1(this);");
        countryname();
        countryname1();

        DataSet objDataSetbu = new DataSet();
        // Read in the XML file

        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        DataSet com = new DataSet();
        com.ReadXml(Server.MapPath("XML/CompanyMaster.xml"));
        lbCompanycode.Text = com.Tables[0].Rows[0].ItemArray[0].ToString();
        lbCompanyname.Text = com.Tables[0].Rows[0].ItemArray[1].ToString();
        lbCompanyalias.Text = com.Tables[0].Rows[0].ItemArray[2].ToString();
        lblCompanyadd.Text = com.Tables[0].Rows[0].ItemArray[3].ToString();
        lblStreet.Text = com.Tables[0].Rows[0].ItemArray[4].ToString();
        lbcity.Text = com.Tables[0].Rows[0].ItemArray[5].ToString();
        lblZip.Text = com.Tables[0].Rows[0].ItemArray[6].ToString();
        lblDistrict.Text = com.Tables[0].Rows[0].ItemArray[7].ToString();
        lbState.Text = com.Tables[0].Rows[0].ItemArray[8].ToString();
        lbCountry.Text = com.Tables[0].Rows[0].ItemArray[9].ToString();
        lblPhone1.Text = com.Tables[0].Rows[0].ItemArray[10].ToString();
        lblPhone2.Text = com.Tables[0].Rows[0].ItemArray[11].ToString();
        lblfax.Text = com.Tables[0].Rows[0].ItemArray[12].ToString();
        lblEmailid.Text = com.Tables[0].Rows[0].ItemArray[13].ToString();
        lblStAcNo.Text = com.Tables[0].Rows[0].ItemArray[14].ToString();
        lblPan.Text = com.Tables[0].Rows[0].ItemArray[15].ToString();
        lblTan.Text = com.Tables[0].Rows[0].ItemArray[16].ToString();
        lblRegno.Text = com.Tables[0].Rows[0].ItemArray[17].ToString();
        lblRegdate.Text = com.Tables[0].Rows[0].ItemArray[18].ToString();
        lblRemarks.Text = com.Tables[0].Rows[0].ItemArray[19].ToString();
        lblBoxAdd.Text = com.Tables[0].Rows[0].ItemArray[20].ToString();
        lblvatinno.Text = com.Tables[0].Rows[0].ItemArray[21].ToString();
        hdntblfields.Value = com.Tables[2].Rows[0].ItemArray[0].ToString();

        lbldirpername.Text = com.Tables[1].Rows[0].ItemArray[0].ToString();
        lbldiradd.Text = com.Tables[1].Rows[0].ItemArray[1].ToString();
        lbldirstreet.Text = com.Tables[1].Rows[0].ItemArray[2].ToString();
        lbldircity.Text = com.Tables[1].Rows[0].ItemArray[3].ToString();
        lbldirstate.Text = com.Tables[1].Rows[0].ItemArray[6].ToString();
        lbldircountry.Text = com.Tables[1].Rows[0].ItemArray[7].ToString();
        lbldirdistrict.Text = com.Tables[1].Rows[0].ItemArray[5].ToString();
        lbldirzip.Text = com.Tables[1].Rows[0].ItemArray[4].ToString();
        lbldirphone1.Text = com.Tables[1].Rows[0].ItemArray[8].ToString();
        lbldirphone2.Text = com.Tables[1].Rows[0].ItemArray[9].ToString();
        lbldirfax.Text = com.Tables[1].Rows[0].ItemArray[10].ToString();
        lbldiremail.Text = com.Tables[1].Rows[0].ItemArray[11].ToString();
        lblstatezip.Text = com.Tables[1].Rows[0].ItemArray[12].ToString();
        lblcountryzip.Text = com.Tables[1].Rows[0].ItemArray[13].ToString();

        DataSet comm_nam = new DataSet();
        // Read in the XML file
        comm_nam.ReadXml(Server.MapPath("XML/Comm_detail.xml"));
        lblintegration.Text = comm_nam.Tables[0].Rows[0].ItemArray[12].ToString();

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnCancel.Enabled = true;
        btnExit.Enabled = true;
        btnDelete.Enabled = false;
        //hiddenpermission.Value = "";

         txtCompanyCode.Enabled = false;
  	txtCompanyCode.Enabled = false;
  	 txtCompanyName.Enabled = false;
	txtCompanyalias.Enabled = false;
		  txtCompanyadd.Enabled = false;
	txtStreet.Enabled = false;
		drpcity.Enabled = false;
	txtZip.Enabled = false;
	txtDistrict.Enabled = false;
//		var pcity=trim(document.getElementById('drpcity').value);
	txtState.Enabled = false;
	drpcountry.Enabled = false;
	txtPhone1.Enabled = false;
	txtPhone2.Enabled = false;
	txtfax.Enabled = false;
	txtEmailid.Enabled = false;
	txtStAcNo.Enabled = false;
	txtPan.Enabled = false;
	txtTan.Enabled = false;
	txtRegno.Enabled = false;
	txtRegdate.Enabled = false;
    txtvatinno.Enabled = false;
		txtRemarks.Enabled = false;
		txtBoxAdd.Enabled = false;
        if (btnNew.Enabled == true)
            if (btnNew.Enabled == false)
                btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
         if (btnSave.Enabled == false)
             btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
         if (btnModify.Enabled == false)
             btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
         if (btnQuery.Enabled == false)
             btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
         if (btnExecute.Enabled == false)
             btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
         if (btnCancel.Enabled == false)
             btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
         if (btnfirst.Enabled == false)
             btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
         if (btnprevious.Enabled == false)
             btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
         if (btnnext.Enabled == false)
             btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
         if (btnlast.Enabled == false)
             btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
         if (btnDelete.Enabled == false)
             btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
         if (btnExit.Enabled == false)
             btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
            btnNew.Focus();


        Ajax.Utility.RegisterTypeForAjax(typeof(Company_Master));
    }
    public void countryname()
    {
        drpcountry.Items.Clear();
        
        DataSet ds = new DataSet();
        string compcode = Session["compcode"].ToString();
        string[] parameterValueArray = new string[] { compcode };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "adcountryname";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "adcountryname.adcountryname_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "ADCOUNTRYNAME_adcountryname_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Country-----";
        li1.Value = "0";
        li1.Selected = true;
        drpcountry.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpcountry.Items.Add(li);
        }
    }

    [Ajax.AjaxMethod]
    public DataSet addcou(string txtcountry)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { txtcountry};
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "fillcity";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "fillcity.fillcity_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "fillcity_fillcity_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
       
    }

    [Ajax.AjaxMethod]
    public DataSet chkCompany(string CompanyCode, string CompanyName, string Companyalias, string Companyadd, string Street, string City, string Zip, string District, string State, string Country, string Phone1, string Phone2, string Fax, string EmailId, string StAcNo, string Pan, string Tan, string Regno, string Regdate, string Remarks, string BoxAdd, string userid)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { userid, CompanyCode, CompanyName };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "chkcompanycode";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "chkcompanycode.chkcompanycode_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        else
        {
            string procedureName = "chkcompanycode_chkcompanycode_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet saveCompany(string CompanyCode, string CompanyName, string Companyalias, string Companyadd, string Street, string City, string Zip, string District, string State, string Country, string Phone1, string Phone2, string Fax, string EmailId, string StAcNo, string Pan, string Tan, string Regno, string Regdate, string Remarks, string BoxAdd, string userid, string dateformat,string vatinno,string integration)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { CompanyCode, CompanyName, Companyalias, Companyadd, Street, City, Zip, District, State, Country, Phone1, Phone2, Fax, EmailId, StAcNo, Pan, Tan, Regno, Regdate, Remarks, BoxAdd, userid, vatinno, integration };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "companyinsert";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "companyinsert.companyinsert_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "companyinsert_companyinsert_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet modifyCompany(string CompanyCode, string CompanyName, string Companyalias, string Companyadd, string Street, string City, string Zip, string District, string State, string Country, string Phone1, string Phone2, string Fax, string EmailId, string StAcNo, string Pan, string Tan, string Regno, string Regdate, string Remarks, string BoxAdd, string userid, string dateformat, string vatinno, string integration)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { CompanyCode, CompanyName, Companyalias, Companyadd, Street, City, Zip, District, State, Country, Phone1, Phone2, Fax, EmailId, StAcNo, Pan, Tan, Regno, Regdate, Remarks, BoxAdd, userid,vatinno, integration };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "CompanyMastModify";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "CompanyMastModify.CompanyMastModify_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "CompanyMastModify_CompanyMastModify_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet Select( string CompanyCode,string CompanyName,string Companyalias,string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CompanyMaster firstAgency = new NewAdbooking.Classes.CompanyMaster();

            ds = firstAgency.selectcompany(CompanyCode, CompanyName, Companyalias, userid);

            return ds;
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CompanyMaster firstAgency = new NewAdbooking.classesoracle.CompanyMaster();

                ds = firstAgency.selectcompany(CompanyCode, CompanyName, Companyalias, userid);
                return ds;
            }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "COMPANYMASTSELECT_companymastselect_p";
            string[] parameterValueArray = { CompanyCode, CompanyName, Companyalias, userid };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
       
        return ds;
    }



    [Ajax.AjaxMethod]
    public DataSet execute(string tablename, string ex_ficolname, string ex_finalval, string ex_pre, string date, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CompanyMaster zone = new NewAdbooking.classesoracle.CompanyMaster();
            ds = zone.execute_zone(tablename, ex_ficolname, ex_finalval, ex_pre, date, "", "");

            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CompanyMaster zone = new NewAdbooking.Classes.CompanyMaster();
            ds = zone.execute_zone(tablename, ex_ficolname, ex_finalval, ex_pre, date, "", "");

            return ds;
        }
        else
        {
            NewAdbooking.classmysql.CompanyMaster zone = new NewAdbooking.classmysql.CompanyMaster();
            ds = zone.execute_zone(tablename, ex_ficolname, ex_finalval, ex_pre, date, "", "");
            return ds;
        }
    }

    
        [Ajax.AjaxMethod]
    public DataSet chkcompanyname(string CompanyName)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CompanyMaster firstAgency = new NewAdbooking.Classes.CompanyMaster();

            ds = firstAgency.selectcompany(CompanyName);
            return ds;
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CompanyMaster firstAgency = new NewAdbooking.classesoracle.CompanyMaster();

                ds = firstAgency.selectcompany(CompanyName);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CompanyMaster firstAgency = new NewAdbooking.classmysql.CompanyMaster();
                ds = firstAgency.selectcompany(CompanyName);
                return ds;
            }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet Selectfnpl(string CompanyCode, string CompanyName, string Companyalias, string userid)
    {

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CompanyMaster firstAgency = new NewAdbooking.Classes.CompanyMaster();

            ds = firstAgency.next(CompanyCode, CompanyName, Companyalias, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CompanyMaster firstAgency = new NewAdbooking.classesoracle.CompanyMaster();

                ds = firstAgency.next(CompanyCode, CompanyName, Companyalias, userid);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.CompanyMaster firstAgency = new NewAdbooking.classmysql.CompanyMaster();
                ds = firstAgency.next(CompanyCode, CompanyName, Companyalias, userid);
                return ds;
            }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet deletecolor(string compcode)
    {
        DataSet ds = new DataSet();
       // string comp_code = Session["compcode"].ToString();
        string[] parameterValueArray = new string[] { compcode };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "CompanyMastDelete";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "CompanyMastDelete.CompanyMastDelete_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "COMPANYMASTDELETE_companymastdelete_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
        return ds;
    }

    [Ajax.AjaxMethod]

    public DataSet addreg(string values)
    {
       
        DataSet ds = new DataSet();
        //string comp_code = Session["compcode"].ToString();
        string[] parameterValueArray = new string[] { values };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "pcmaddregion";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "pcmaddregion.pcmaddregion_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "pcmaddregion_pcmaddregion_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
        return ds;
    }




    public void countryname1()
    {
        drpdircountry.Items.Clear();
        
        DataSet ds = new DataSet();
        string comp_code = Session["compcode"].ToString();
        string[] parameterValueArray = new string[] { comp_code };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "adcountryname";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "adcountryname.adcountryname_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "ADCOUNTRYNAME_adcountryname_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
   

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Country-----";
        li1.Value = "0";
        li1.Selected = true;
        drpdircountry.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpdircountry.Items.Add(li);
        }
    }



    [Ajax.AjaxMethod]
    public DataSet addcou1(string txtcountry)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { txtcountry };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "fillcity";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "fillcity.fillcity_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        else
        {
            string procedureName = "fillcity";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
        return ds;
    }




    [Ajax.AjaxMethod]
    public DataSet zone_delete(string del_tabname, string del_colname, string del_colval, string del_action, string date, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { del_tabname, del_colname, del_colval, del_action, date, extra1, extra2 };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "cir_dynamic_dml_variable_delete_stmt";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "cir_dynamic_dml.variable_delete_stmt";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        else
        {
            string procedureName = "inv_dynamic_dml_variable_delete_stmt";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet execute_detail(string tablename, string ex_ficolname, string ex_finalval, string ex_pre, string date, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { tablename, ex_ficolname, ex_finalval, ex_pre, "", "", "" };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "cir_dynamic_execute_stmt";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "cir_dynamic_dml.variable_execute_stmt";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "cir_dynamic_dml_variable_execute_stmt";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
        return ds;
    }



    [Ajax.AjaxMethod]
    public string savedata(string tablefields, string tablevalue, string tablename, string action, string date, string extra1, string extra2)
    {
        try
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CompanyMaster code = new NewAdbooking.classesoracle.CompanyMaster();
                string result = "";
                result = code.Save_misccode(tablefields, tablevalue, tablename, action, date, extra1, extra2);
                return result;
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.CompanyMaster code = new NewAdbooking.Classes.CompanyMaster();
                string result = "";
                result = code.Save_misccode(tablefields, tablevalue, tablename, action, date, extra1, extra2);
                return result;
            }
            else
            {
                NewAdbooking.classmysql.CompanyMaster code = new NewAdbooking.classmysql.CompanyMaster();
                string result = "";
                //result = code.Save_misccode(tablefields, tablevalue, tablename, action, date, extra1, extra2);
                return result;
            
            }
        }
        catch (Exception ex)
        {
            return ex.Message.ToString();
        }
    }



}
