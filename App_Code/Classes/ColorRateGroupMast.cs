using System;
using System.Data;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;

/// <summary>
/// Summary description for ColorRateGroupMast
/// </summary>
///
namespace NewAdbooking.Classes
{
    public class ColorRateGroupMast:connection 
    {
        public ColorRateGroupMast()
        {
            //
            // TODO: Add constructor logic here
            //
        }
        //Bind publication
        public DataSet pubmast(string compcode)
        {
            SqlCommand cmd;
            SqlConnection con;
            con = GetConnection();
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter();

            try
            {
                con.Open();
                cmd = GetCommand("CR_BindPublication", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                //cmd.Parameters.Add("@pubcode", SqlDbType.VarChar);
                //cmd.Parameters["@pubcode"].Value = pubcode;

                da.SelectCommand = cmd;

                da.Fill(ds);
                return ds;

            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }
        
        }
        //Bind Edition
        public DataSet seledition(string compcode, string pub)
        {
            SqlCommand cmd;
            SqlConnection con;
            con = GetConnection();
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter();

            try
            {
                con.Open();
                cmd = GetCommand("CR_BindEdition", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@pubcode", SqlDbType.VarChar);
                cmd.Parameters["@pubcode"].Value = pub;

                da.SelectCommand = cmd;

                da.Fill(ds);
                return ds;

            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }

        }

        //Bind Supplement
        public DataSet suppliment(string compcode, string edition)
        {
            SqlCommand cmd;
            SqlConnection con;
            con = GetConnection();
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter();

            try
            {
                con.Open();
                cmd = GetCommand("CR_BindSupplement", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@editioncode", SqlDbType.VarChar);
                cmd.Parameters["@editioncode"].Value = edition;

                da.SelectCommand = cmd;

                da.Fill(ds);
                return ds;

            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }

        }
        //Bind Color
        public DataSet fillcolor(string compcode)
        {
            SqlConnection con;
            SqlCommand cmd;
            con = GetConnection();
            SqlDataAdapter da = new SqlDataAdapter();
            DataSet ds = new DataSet();
            try
            {
                con.Open();
                cmd = GetCommand("CR_BindColor", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                da.SelectCommand = cmd;
                da.Fill(ds);
                return ds;

            }

            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }
        
        
        }
        //AutoGenerated Code
        public DataSet autocode()
        {
            SqlConnection con;
            SqlCommand cmd;
            con = GetConnection();
            SqlDataAdapter da = new SqlDataAdapter();
            DataSet ds = new DataSet();

            try
            {
                con.Open();
                cmd = GetCommand("CR_autocode", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                //cmd.Parameters.Add("@str", SqlDbType.VarChar);
                //cmd.Parameters["@str"].Value = str;

                //cmd.Parameters.Add("@code", SqlDbType.VarChar);
                //cmd.Parameters["@code"].Value = str;

                da.SelectCommand = cmd;
                da.Fill(ds);
                return ds;
            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }
        }
        
        //Select Package
        public DataSet selpackage(string compcode, string pack_code)
        {
            SqlConnection con;
            SqlCommand cmd;
            con = GetConnection();
            SqlDataAdapter da = new SqlDataAdapter();
            DataSet ds = new DataSet();
            try
            {
                con.Open();
                cmd = GetCommand("CR_BindPackage", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@adtype", SqlDbType.VarChar);
                cmd.Parameters["@adtype"].Value = pack_code;

                da.SelectCommand = cmd;
                da.Fill(ds);
                return ds;

            }

            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }
        }

        //Display On Selected
        public DataSet packdes(string compcode, string pack_des)
        {

            SqlConnection con;
            SqlCommand cmd;
            con = GetConnection();
            SqlDataAdapter da = new SqlDataAdapter();
            DataSet ds = new DataSet();
            try
            {
                con.Open();
                cmd = GetCommand("CR_BindPackdescr", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@packdes", SqlDbType.VarChar);
                cmd.Parameters["@packdes"].Value = pack_des;

                da.SelectCommand = cmd;
                da.Fill(ds);
                return ds;

            }

            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }
        
        }
        //Insert
        public DataSet insertedvalue(string crgcode, string crgname, string drppub, string drpedi, string drpsupp, string drpcolrate, string drpcolname, string crgover, string compcode, string userid, string fromdate, string tilldate, string colorcode, string adtype, string rategpcode)
        { 
            SqlCommand cmd;
            SqlConnection con;
            con = GetConnection();
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter();

            try
            {
                con.Open();
                cmd = GetCommand("CR_Insert", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@userid", SqlDbType.VarChar);
                cmd.Parameters["@userid"].Value = userid;

                cmd.Parameters.Add("@crgcode", SqlDbType.VarChar);
                cmd.Parameters["@crgcode"].Value = crgcode;

                cmd.Parameters.Add("@crgname", SqlDbType.VarChar);
                cmd.Parameters["@crgname"].Value = crgname;

                cmd.Parameters.Add("@publication", SqlDbType.VarChar);
                cmd.Parameters["@publication"].Value = drppub;

                cmd.Parameters.Add("@edition", SqlDbType.VarChar);
                cmd.Parameters["@edition"].Value = drpedi;

                cmd.Parameters.Add("@suppliment", SqlDbType.VarChar);
                cmd.Parameters["@suppliment"].Value = drpsupp;

                cmd.Parameters.Add("@colorrate", SqlDbType.VarChar);
                cmd.Parameters["@colorrate"].Value = drpcolrate;

                cmd.Parameters.Add("@colname", SqlDbType.VarChar);
                cmd.Parameters["@colname"].Value = drpcolname;

                cmd.Parameters.Add("@pecent", SqlDbType.VarChar);
                cmd.Parameters["@pecent"].Value = crgover;

                cmd.Parameters.Add("@fromdate", SqlDbType.DateTime);
                if (fromdate == null || fromdate == "")
                {
                    cmd.Parameters["@fromdate"].Value = System.DBNull.Value;
                }
                else
                {
                    cmd.Parameters["@fromdate"].Value = Convert.ToDateTime(fromdate);
                }

                

                cmd.Parameters.Add("@tilldate", SqlDbType.DateTime);
                if (tilldate == null || tilldate == "")
                {
                    cmd.Parameters["@tilldate"].Value = System.DBNull.Value;
                }
                else
                {
                    cmd.Parameters["@tilldate"].Value = Convert.ToDateTime(tilldate);
                }
                

                cmd.Parameters.Add("@colorcode", SqlDbType.VarChar);
                cmd.Parameters["@colorcode"].Value = colorcode;

                cmd.Parameters.Add("@adtype", SqlDbType.VarChar);
                cmd.Parameters["@adtype"].Value = adtype;

                cmd.Parameters.Add("@rategpcode", SqlDbType.VarChar);
                cmd.Parameters["@rategpcode"].Value = rategpcode;

                da.SelectCommand = cmd;
                da.Fill(ds);
                return ds;
            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }
        }
        
        //Chechk Code Before Insert
        public DataSet chkcode(string colorcode, string compcode)
        {
            SqlCommand cmd;
            SqlConnection con;
            con = GetConnection();
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter();

            try
            {
                con.Open();
                cmd = GetCommand("CR_checkcode", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                //cmd.Parameters.Add("@code", SqlDbType.VarChar);
                //cmd.Parameters["@code"].Value = crgcode;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@colorcode", SqlDbType.VarChar);
                cmd.Parameters["@colorcode"].Value = colorcode;

                //cmd.Parameters.Add("@colorname", SqlDbType.VarChar);
                //cmd.Parameters["@colorname"].Value = colorname;

                da.SelectCommand = cmd;

                da.Fill(ds);
                return ds;

            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }
        
        
        }

        //Check Color Before Insert
        public DataSet chkcolor(string drpcolname, string compcode, string pubcode)
        {
            SqlCommand cmd;
            SqlConnection con;
            con = GetConnection();
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter();

            try
            {
                con.Open();
                cmd = GetCommand("CR_checkcolor", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                //cmd.Parameters.Add("@code", SqlDbType.VarChar);
                //cmd.Parameters["@code"].Value = crgcode;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@colorname", SqlDbType.VarChar);
                cmd.Parameters["@colorname"].Value = drpcolname;

                cmd.Parameters.Add("@pubcode", SqlDbType.VarChar);
                cmd.Parameters["@pubcode"].Value = pubcode;

                da.SelectCommand = cmd;

                da.Fill(ds);
                return ds;

            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }


        }

        //Check Color Before Modify
        public DataSet checkcolor(string drpcolname, string compcode)
        {
            SqlCommand cmd;
            SqlConnection con;
            con = GetConnection();
            DataSet ds = new DataSet();
            SqlDataAdapter da = new SqlDataAdapter();

            try
            {
                con.Open();
                cmd = GetCommand("CR_checkcolormodify", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                //cmd.Parameters.Add("@code", SqlDbType.VarChar);
                //cmd.Parameters["@code"].Value = crgcode;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@colorname", SqlDbType.VarChar);
                cmd.Parameters["@colorname"].Value = drpcolname;

                da.SelectCommand = cmd;

                da.Fill(ds);
                return ds;

            }
            catch (Exception ex)
            {
                throw (ex);
            }
            finally
            {
                CloseConnection(ref con);
            }


        }

           
        //Modify The Value
        public DataSet updatecrg(string crgcode, string crgname, string drppub, string drpedi, string drpsupp, string drpcolrate, string drpcolname, string crgover, string compcode, string fromdate, string tilldate, string colorcode, string adtype, string rategpcode)
        {
            SqlConnection con;
            SqlCommand cmd;
            con = GetConnection();
            SqlDataAdapter da = new SqlDataAdapter();
            DataSet ds = new DataSet();

            try
            {
                con.Open();
                cmd = GetCommand("CR_Modify", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                //cmd.Parameters.Add("@userid", SqlDbType.VarChar);
                //cmd.Parameters["@userid"].Value = userid;

                cmd.Parameters.Add("@crgcode", SqlDbType.VarChar);
                cmd.Parameters["@crgcode"].Value = crgcode;

                cmd.Parameters.Add("@crgname", SqlDbType.VarChar);
                cmd.Parameters["@crgname"].Value = crgname;

                //cmd.Parameters.Add("@publication", SqlDbType.VarChar);
                //cmd.Parameters["@publication"].Value = drppub;

                //cmd.Parameters.Add("@edition", SqlDbType.VarChar);
                //cmd.Parameters["@edition"].Value = drpedi;

                //cmd.Parameters.Add("@suppliment", SqlDbType.VarChar);
                //cmd.Parameters["@suppliment"].Value = drpsupp;

                cmd.Parameters.Add("@colorrate", SqlDbType.VarChar);
                cmd.Parameters["@colorrate"].Value = drpcolrate;

                cmd.Parameters.Add("@colname", SqlDbType.VarChar);
                cmd.Parameters["@colname"].Value = drpcolname;

                cmd.Parameters.Add("@pecent", SqlDbType.VarChar);
                cmd.Parameters["@pecent"].Value = crgover;

                cmd.Parameters.Add("@fromdate", SqlDbType.DateTime);
                if (fromdate == null || fromdate == "")
                {
                    cmd.Parameters["@fromdate"].Value = System.DBNull.Value;
                }
                else
                {
                    cmd.Parameters["@fromdate"].Value = fromdate;// Convert.ToDateTime(fromdate);
                }

                cmd.Parameters.Add("@tilldate", SqlDbType.DateTime);
                if (tilldate == null || tilldate == "")
                {
                    cmd.Parameters["@tilldate"].Value = System.DBNull.Value;
                }
                else
                {
                    cmd.Parameters["@tilldate"].Value = tilldate;//Convert.ToDateTime(tilldate);
                }


                cmd.Parameters.Add("@colorcode", SqlDbType.VarChar);
                cmd.Parameters["@colorcode"].Value = colorcode;

                cmd.Parameters.Add("@adtype", SqlDbType.VarChar);
                cmd.Parameters["@adtype"].Value = adtype;

                cmd.Parameters.Add("@rategpcode", SqlDbType.VarChar);
                cmd.Parameters["@rategpcode"].Value = rategpcode;

                da.SelectCommand = cmd;
                da.Fill(ds);
                return ds;


            }
            catch (Exception ex)
            {
                throw (ex);

            }
            finally
            {
                CloseConnection(ref con);

            }
        }

        //Execute Value
        public DataSet CR_Execute(string crgcode, string crgname, string drppub, string drpedi, string drpsupp, string drpcolrate, string drpcolname, string crgover, string compcode, string fromdate, string tilldate, string colorcode, string adtype)
        {
            SqlConnection con;
            SqlCommand cmd;
            SqlDataAdapter da = new SqlDataAdapter();
            DataSet ds = new DataSet();
            con = GetConnection();

            try
            {
                con.Open();
                cmd = GetCommand("CR_Execute", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                

                //cmd.Parameters.Add("@userid", SqlDbType.VarChar);
                //cmd.Parameters["@userid"].Value = userid;

                cmd.Parameters.Add("@crgcode", SqlDbType.VarChar);
                if (crgcode == null || crgcode == "")
                {
                    cmd.Parameters["@crgcode"].Value = System.DBNull.Value;

                }
                else
                {
                    cmd.Parameters["@crgcode"].Value = crgcode;
                }

                

                cmd.Parameters.Add("@crgname", SqlDbType.VarChar);
                cmd.Parameters["@crgname"].Value = crgname;

                cmd.Parameters.Add("@pubcode", SqlDbType.VarChar);
                if (drppub == null || drppub == "")
                {
                    cmd.Parameters["@pubcode"].Value = System.DBNull.Value;

                }
                else
                {
                    cmd.Parameters["@pubcode"].Value = drppub;
                }
                

                //cmd.Parameters.Add("@edition", SqlDbType.VarChar);
                //cmd.Parameters["@edition"].Value = drpedi;

                //cmd.Parameters.Add("@suppliment", SqlDbType.VarChar);
                //cmd.Parameters["@suppliment"].Value = drpsupp;

                cmd.Parameters.Add("@colorrate", SqlDbType.VarChar);
                if (drpcolrate == null || drpcolrate == "")
                {
                    cmd.Parameters["@colorrate"].Value = System.DBNull.Value;

                }
                else
                {
                    cmd.Parameters["@colorrate"].Value = drpcolrate;
                }
                
               

                cmd.Parameters.Add("@colname", SqlDbType.VarChar);
                if (drpcolname == null || drpcolname == "")
                {
                    cmd.Parameters["@colname"].Value = System.DBNull.Value;

                }
                else
                {
                    cmd.Parameters["@colname"].Value = drpcolname;

                }
                
              
                cmd.Parameters.Add("@pecent", SqlDbType.VarChar);
                cmd.Parameters["@pecent"].Value = crgover;

                cmd.Parameters.Add("@fromdate", SqlDbType.DateTime);
               if (fromdate == null || fromdate == "")
                {
                    cmd.Parameters["@fromdate"].Value = System.DBNull.Value;
                }
                else
                {
                    cmd.Parameters["@fromdate"].Value = Convert.ToDateTime(fromdate).ToString("DD/MMMM/YYYY");
                }


                cmd.Parameters.Add("@tilldate", SqlDbType.DateTime);
               if (tilldate == null || tilldate == "")
                {
                    cmd.Parameters["@tilldate"].Value = System.DBNull.Value;
                }
                else
                {
                    cmd.Parameters["@tilldate"].Value = Convert.ToDateTime(tilldate).ToString("DD/MMMM/YYYY");
                }

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                cmd.Parameters.Add("@colorcode", SqlDbType.VarChar);
                cmd.Parameters["@colorcode"].Value = colorcode;

                cmd.Parameters.Add("@adtype", SqlDbType.VarChar);
                cmd.Parameters["@adtype"].Value = adtype;

                da.SelectCommand = cmd;
                da.Fill(ds);
                return ds;

            }
            catch (Exception ex)
            {
                throw (ex);

            }
            finally
            {
                CloseConnection(ref con);

            }
        }
        //Delete The Value
        public DataSet CRDelete(string colorcode, string compcode)
        {
            SqlConnection con;
            SqlCommand cmd;
            SqlDataAdapter da = new SqlDataAdapter();
            DataSet ds = new DataSet();
            con = GetConnection();
            try
            {


                con.Open();
                cmd = GetCommand("CR_Delete", ref con);
                cmd.CommandType = CommandType.StoredProcedure;

                cmd.Parameters.Add("@colorcode", SqlDbType.VarChar);
                cmd.Parameters["@colorcode"].Value = colorcode;

                cmd.Parameters.Add("@compcode", SqlDbType.VarChar);
                cmd.Parameters["@compcode"].Value = compcode;

                da.SelectCommand = cmd;
                da.Fill(ds);
                return ds;

            }

            catch (Exception ex)
            {
                throw (ex);

            }
            finally
            {
                CloseConnection(ref con);
            }
        }

    }
}
