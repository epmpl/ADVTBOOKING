using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class BrandMaster : System.Web.UI.Page
{
    string formname = "BrandMaster";
    static int FlagStatus,  flag,fpnl;
    static string saveormodify;
    string message;
    static DataSet executesubpro = new DataSet();
    static string exesubcode, exesubname, exesubalias, exeprosubdes, exeproductcat, exeproductsubcat;
    string compcode, userid;
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            compcode = hiddencompcode.Value;
            userid = hiddenuserid.Value;

        }

        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;

        }


        formname = "BrandMaster";

        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/BrandMaster.xml"));
        lbproductdescription.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        lbbrandcode.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
        lbbrandname.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();
        lbbrandalias.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
        lbproductcategory.Text = ds1.Tables[0].Rows[0].ItemArray[4].ToString();
        lbproductsubcategory.Text = ds1.Tables[0].Rows[0].ItemArray[5].ToString();

       

      


        hiddenauto.Value = Session["autogenerated"].ToString();

      

        Ajax.Utility.RegisterTypeForAjax(typeof(BrandMaster));
           
        hiddenusername.Value = Session["Username"].ToString();

        if (!Page.IsPostBack)
        {
            onpageload();
            bindproductcategory();
            getbuttoncheck(formname);

            btnSave.Attributes.Add("onclick", "javascript:return saveproductsubcode();");
            btnExit.Attributes.Add("ONClick", "javascript:return exitclick();");
            txtbrandname.Attributes.Add("OnChange", "javascript:return autoornot();");
            btnQuery.Attributes.Add("OnClick", "javascript:return chkquery();");
            btnDelete.Attributes.Add("onclick", "return confirm ('Are you sure you wish to delete this?')");

        
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();

    }

    public void bindproductcategory()
    {
        
        DataSet ds = new DataSet();
        if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.BrandMaster product = new NewAdbooking.Classes.BrandMaster();
       
        ds = product.prodcategory(hiddencompcode.Value);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BrandMaster product = new NewAdbooking.classesoracle.BrandMaster();

                ds = product.prodcategory(hiddencompcode.Value);

            }

        else
        {
            NewAdbooking.classmysql.BrandMaster product = new NewAdbooking.classmysql.BrandMaster();

            ds = product.prodcategory(hiddencompcode.Value,"");
           
        }
        ListItem li = new ListItem();
        li.Text = "--Select Category--";
        li.Value = "0";
        li.Selected = true;
        dpdproductcategory.Items.Add(li);
        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li1.Value  = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            dpdproductcategory.Items.Add(li1);
        }
    }

    public void bindproduct()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.BrandMaster bind = new NewAdbooking.Classes.BrandMaster();
            
            ds = bind.productdes(hiddencompcode.Value);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BrandMaster bind = new NewAdbooking.classesoracle.BrandMaster();

                ds = bind.productdes(hiddencompcode.Value);

            }
        else
        {
            NewAdbooking.classmysql.BrandMaster bind = new NewAdbooking.classmysql.BrandMaster();

            ds = bind.productdes(hiddencompcode.Value);
        }

        ListItem li = new ListItem();
        li.Text = "--Select Product Name--";
        li.Value = "0";
        li.Selected = true;
        drpproduct.Items.Add(li);

        int x;

        for (x = 0; x < ds.Tables[0].Rows.Count; x++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[x].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[x].ItemArray[0].ToString();
            drpproduct.Items.Add(li1);

        }
    
    }



    protected void btnNew_Click1(object sender, EventArgs e)
    {
        pnew.Value  = "1";

        txtbrandcode .Text = "";
        txtbrandname .Text = "";
        txtbrandalias .Text = "";
        drpproduct.SelectedValue = "0";

       // hiddenauto.Value = "1";

        saveormodify = "0";

        if (hiddenauto.Value == "1")
        {
            txtbrandcode .Enabled = false;
            
        }
        else
        {
            txtbrandcode.Enabled = true;
        }
        drpproduct.Enabled = true;
        txtbrandalias.Enabled = true;
        txtbrandname.Enabled = true;
        dpdproductsubcategory.Enabled = true;
        dpdproductcategory.Enabled = true;


        ScriptManager.RegisterClientScriptBlock(this, typeof(BrandMaster), "ss", "focus()", true);

        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnNew.Enabled = false;
        btnQuery.Enabled = false;
        btnimage();

    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        pnew.Value = "0";
        string brandcode = (txtbrandcode.Text).Trim();
        string brandname = (txtbrandname.Text).Trim();
        string brandalias = (txtbrandalias.Text).Trim();
        string drpprosub = drpproduct.SelectedValue;
        string productcat=dpdproductcategory.SelectedValue;
        string productsubcat = dpdproductsubcategory.SelectedValue;

        if (saveormodify == "0")
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.BrandMaster getcode = new NewAdbooking.Classes.BrandMaster();
             
                ds = getcode.chkcode(brandcode, Session["compcode"].ToString());
            }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BrandMaster getcode = new NewAdbooking.classesoracle.BrandMaster();
                    //ds = getcode.chkcode(brandcode, brandname, drpprosub, productcat, productsubcat, Session["compcode"].ToString());
                    ds = getcode.chkcode(brandcode,Session["compcode"].ToString());
  
                }


                else
                {
                    NewAdbooking.classmysql.BrandMaster getcode = new NewAdbooking.classmysql.BrandMaster();

                    ds = getcode.chkcode(brandcode, brandname, drpprosub, productcat, productsubcat, Session["compcode"].ToString());
                }
            //change
                if (ds.Tables[0].Rows.Count > 0)
                {
                    message = "This Brand Code Has Already Assigned";
                    AspNetMessageBox(message);
                    pnew.Value = "1";
                    return;
                }
            if (ds.Tables[0].Rows.Count > 0)
            {
               // message = "This Product Code has already assigned !! " + brandname + "";
                message = "This Brand Name Has Already Assigned";
                AspNetMessageBox(message);
                pnew.Value = "1";
                return;

             }
            else
            {

                DataSet di = new DataSet();
                string err = "";
                try
                {
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {

                        NewAdbooking.Classes.BrandMaster insertthe = new NewAdbooking.Classes.BrandMaster();

                        di = insertthe.insertedvalue(drpprosub, brandcode, brandname, brandalias, Session["compcode"].ToString(), Session["userid"].ToString(), productcat, productsubcat);
                    }
                    else
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                        {
                            NewAdbooking.classesoracle.BrandMaster insertthe = new NewAdbooking.classesoracle.BrandMaster();

                            di = insertthe.insertedvalue(drpprosub, brandcode, brandname, brandalias, Session["compcode"].ToString(), Session["userid"].ToString(), productcat, productsubcat);

                        }
                        else
                        {
                            NewAdbooking.classmysql.BrandMaster insertthe = new NewAdbooking.classmysql.BrandMaster();

                            di = insertthe.insertedvalue(drpprosub, brandcode, brandname, brandalias, Session["compcode"].ToString(), Session["userid"].ToString(), productcat, productsubcat);

                        }
                }
                catch (Exception k1)
                {
                    err = k1.Message;
                }
                string brandcode1 = "Inserted Brand  " + brandcode;
                clsconnection dconnect = new clsconnection();
                string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Brand ','" + err.Replace("'", "''") + "','Brand Created','" + brandcode1;
                sqldd = sqldd + "',";
                sqldd = sqldd + "'" + Request.ServerVariables["REMOTE_ADDR"] + "')";
                dconnect.executenonquery1(sqldd);

                getbuttoncheck(formname);
                //message = "Value Saved Sucessfully ";
                //AspNetMessageBox(message);
                DataSet ds1 = new DataSet();
                ds1.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                message = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
                AspNetMessageBox(message);

                txtbrandalias.Text = "";
                txtbrandname.Text = "";
                txtbrandcode.Text = "";
                drpproduct.SelectedValue= "0";
                dpdproductsubcategory.SelectedValue = "0";
                dpdproductcategory.SelectedValue = "0";


                txtbrandcode.Enabled = false;
                txtbrandname.Enabled = false;
                txtbrandalias.Enabled = false;
                drpproduct.Enabled = false;
                dpdproductcategory.Enabled = false;
                dpdproductsubcategory.Enabled = false;
                btnimage();
                return;


            }

        }
        //for modify
        else
        {

            DataSet du = new DataSet();
            string err = "";
            try
            {
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {

                    NewAdbooking.Classes.BrandMaster upadte1 = new NewAdbooking.Classes.BrandMaster();

                    du = upadte1.updatepro(drpprosub, brandcode, brandname, brandalias, Session["compcode"].ToString(), productcat, productsubcat);
                }
                else
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.BrandMaster upadte1 = new NewAdbooking.classesoracle.BrandMaster();

                        du = upadte1.updatepro(drpprosub, brandcode, brandname, brandalias, Session["compcode"].ToString(), productcat, productsubcat);

                    }
                    else
                    {
                        NewAdbooking.classmysql.BrandMaster upadte1 = new NewAdbooking.classmysql.BrandMaster();
                        du = upadte1.updatepro(drpprosub, brandcode, brandname, brandalias, Session["compcode"].ToString(), productcat, productsubcat);

                    }
            }
            catch (Exception k2)
            {
                err = k2.Message;
            }
            string brandcode2 = "Modified Brand  " + brandcode;
            clsconnection dconnect = new clsconnection();
            string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Brand ','" + err.Replace("'", "''") + "','Brand Updated','" + brandcode2;
            sqldd = sqldd + "',";
            sqldd = sqldd + "'" + Request.ServerVariables["REMOTE_ADDR"] + "')";
            dconnect.executenonquery1(sqldd);

            txtbrandalias.Enabled = false;
            txtbrandname.Enabled = false;
            txtbrandcode.Enabled = false;
            drpproduct.Enabled = false;
            dpdproductcategory.Enabled = false;
            dpdproductsubcategory.Enabled = false;

            executesubpro.Tables[0].Rows[fpnl].ItemArray[0] = drpproduct.SelectedValue;
            executesubpro.Tables[0].Rows[fpnl].ItemArray[1] = txtbrandcode.Text;
            executesubpro.Tables[0].Rows[fpnl].ItemArray[2] = txtbrandname.Text;
            executesubpro.Tables[0].Rows[fpnl].ItemArray[3] = txtbrandalias.Text;
            executesubpro.Tables[0].Rows[fpnl].ItemArray[4] = dpdproductcategory.SelectedValue;
            executesubpro.Tables[0].Rows[fpnl].ItemArray[5] = dpdproductsubcategory.SelectedValue;
/*
            if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
            {
            NewAdbooking.Classes.BrandMaster execute = new NewAdbooking.Classes.BrandMaster();
            executesubpro = execute.prosubexecute(exeprosubdes, exesubcode, exesubname, exesubalias, Session["compcode"].ToString(), exeproductcat, exeproductsubcat);
            }
            else
                if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="orcl")
                {
                    NewAdbooking.classesoracle .BrandMaster execute = new NewAdbooking.classesoracle.BrandMaster();
                    executesubpro = execute.prosubexecute(exeprosubdes, exesubcode, exesubname, exesubalias, Session["compcode"].ToString(), exeproductcat, exeproductsubcat);

                }
                else
                {
                    NewAdbooking.classmysql .BrandMaster execute = new NewAdbooking.classmysql.BrandMaster();
                    executesubpro = execute.prosubexecute(exeprosubdes, exesubcode, exesubname, exesubalias, Session["compcode"].ToString(), exeproductcat, exeproductsubcat);

                }
            DataSet ds = new DataSet();
            ds = executesubpro;
            if(ds.Tables[0].Rows.Count

            txtbrandcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            txtbrandname.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            txtbrandalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[0].ItemArray[4].ToString()) != null)
            {
                dpdproductcategory.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            }
            dpdproductcategory_SelectedIndexChanged(sender, e);
            dpdproductsubcategory.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[5].ToString();
            dpdproductsubcategory_SelectedIndexChanged(sender, e);
            drpproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();

            */
            updateStatus();
            if (fpnl == 0)
            {
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;
            }
            int count = executesubpro.Tables[0].Rows.Count;

            if (fpnl == count-1)
            {
                btnnext.Enabled=false;
                btnlast.Enabled=false;
            }
            btnimage();
            ScriptManager1.SetFocus(btnModify);
            //message = "Value Update Sucessfully ";
            //AspNetMessageBox(message);
            DataSet ds2 = new DataSet();
            ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
            message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
            AspNetMessageBox(message);
         
            return;

        }
    }
    protected void btnModify_Click(object sender, EventArgs e)
    {
        pnew.Value = "0";
       
        txtbrandcode.Enabled = false;
        txtbrandname .Enabled = true;
        txtbrandalias .Enabled = true;
        drpproduct.Enabled = true;
        dpdproductsubcategory.Enabled = true;
        dpdproductcategory.Enabled = true;

        saveormodify = "1";
        chkstatus(FlagStatus);
           btnSave.Enabled = true;
        btnQuery.Enabled = false;
        btnimage();

    }
    protected void btnQuery_Click1(object sender, EventArgs e)
    {
        pnew.Value="0";
        txtbrandcode .Text = "";
        txtbrandname .Text = "";
        txtbrandalias .Text = "";
        drpproduct.SelectedValue = "0";
        dpdproductcategory.SelectedValue = "0";
        dpdproductsubcategory.SelectedValue = "0";

        txtbrandalias.Enabled = true;
        txtbrandcode.Enabled = true;
        txtbrandname.Enabled = true;
        drpproduct.Enabled = true;
        dpdproductcategory.Enabled = true;
        dpdproductsubcategory.Enabled = true;


             
        chkstatus(FlagStatus);


        btnQuery.Enabled = false;
        btnExecute.Enabled = true;
        btnSave.Enabled = false;
        btnimage();
       ScriptManager1.SetFocus(btnExecute);
    }
    protected void btnExecute_Click(object sender, EventArgs e)
    {
        fpnl = 0;
        pnew.Value = "0";
        //hiddenauto.Value = Session["query"].ToString();
         string brandcode = txtbrandcode .Text;
         exesubcode = brandcode;
         string brandname = txtbrandname.Text;
         exesubname = brandname;
         string prosubalias = txtbrandalias.Text;
         exesubalias = prosubalias;
         string drpprosub = drpproduct.SelectedValue;
         exeprosubdes = drpprosub;
         string productcat = dpdproductcategory.SelectedValue;
         exeproductcat = productcat;
         string productsubcat = dpdproductsubcategory.SelectedValue;
         exeproductsubcat = productsubcat;
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {

             NewAdbooking.Classes.BrandMaster execute = new NewAdbooking.Classes.BrandMaster();
             executesubpro = execute.prosubexecute(drpprosub, brandcode, brandname, prosubalias, Session["compcode"].ToString(), productcat, productsubcat);
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.BrandMaster execute = new NewAdbooking.classesoracle.BrandMaster();
                 executesubpro = execute.prosubexecute(drpprosub, brandcode, brandname, prosubalias, Session["compcode"].ToString(), productcat, productsubcat);

             }
         else
         {
             NewAdbooking.classmysql.BrandMaster execute = new NewAdbooking.classmysql.BrandMaster();
             executesubpro = execute.prosubexecute(drpprosub, brandcode, brandname, prosubalias, Session["compcode"].ToString(), productcat, productsubcat);

         }

         //DataSet ds1 = new DataSet();
         //ds1 = executesubpro;

         if (executesubpro.Tables[0].Rows.Count == 0)
         {
             message = "Your Search Criteria Does Not Exist";
             AspNetMessageBox(message);
              
        //   chkstatus(FlagStatus);
             updateStatus();
             getbuttoncheck(formname);
             drpproduct.SelectedValue = "0";
             txtbrandalias.Text = "";
             txtbrandcode.Text = "";
             txtbrandname.Text = "";
             dpdproductsubcategory.SelectedValue = "0";
             dpdproductcategory.SelectedValue = "0";
             dpdproductsubcategory.Enabled = false;
             dpdproductcategory.Enabled = false;
             drpproduct.Enabled = false;
             btnimage();
            return;

            

         }

         else
         {
             
             txtbrandcode.Text = executesubpro.Tables[0].Rows[0].ItemArray[1].ToString();
             txtbrandname.Text = executesubpro.Tables[0].Rows[0].ItemArray[2].ToString();
             txtbrandalias.Text = executesubpro.Tables[0].Rows[0].ItemArray[3].ToString();
             if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[0].ItemArray[4].ToString()) != null)
             {
                 dpdproductcategory.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[4].ToString();
             }
             dpdproductcategory_SelectedIndexChanged(sender, e);
             if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[0].ItemArray[5].ToString()) != null)
                 dpdproductsubcategory.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[5].ToString();
             else
                 dpdproductsubcategory.SelectedValue = null;
             dpdproductsubcategory_SelectedIndexChanged(sender, e);
             if (drpproduct.Items.FindByValue(executesubpro.Tables[0].Rows[0].ItemArray[0].ToString()) != null)
                 drpproduct.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[0].ToString();
             else
                 drpproduct.SelectedValue = null;


             drpproduct.Enabled = false;
             txtbrandcode.Enabled = false;
             txtbrandname.Enabled = false;
             txtbrandalias.Enabled = false;
             dpdproductcategory.Enabled = false;
             dpdproductsubcategory.Enabled = false;

           
         }

         updateStatus();
         btnfirst.Enabled = false;
         btnprevious.Enabled = false;
         ScriptManager1.SetFocus(btnModify);
         if (executesubpro.Tables[0].Rows.Count == 1)
         {
             btnfirst.Enabled = false;
             btnlast.Enabled = false;
             btnprevious.Enabled = false;
             btnnext.Enabled = false;
         }

         btnimage();

       


    }
    protected void btnCancel_Click1(object sender, EventArgs e)
    {
        pnew.Value = "0";
        txtbrandalias.Text = "";
        txtbrandcode .Text = "";
        txtbrandname .Text = "";
        drpproduct.SelectedValue = "0";
        dpdproductsubcategory.SelectedValue = "0";
        dpdproductcategory.SelectedValue = "0";
        hiddenauto.Value = "";

        chkstatus(FlagStatus);

        getbuttoncheck(formname);
        

        btnSave.Enabled = false;
        txtbrandalias.Enabled = false;
        txtbrandname.Enabled = false;
        txtbrandcode.Enabled = false;
        drpproduct.Enabled = false;
        dpdproductcategory.Enabled = false;
        dpdproductsubcategory.Enabled = false;
        btnimage();
        ScriptManager1.SetFocus(btnNew);
    }
    protected void btnfirst_Click(object sender, EventArgs e)
    {
        fpnl = 0;

        txtbrandcode.Text = executesubpro.Tables[0].Rows[0].ItemArray[1].ToString();
        txtbrandname.Text = executesubpro.Tables[0].Rows[0].ItemArray[2].ToString();
        txtbrandalias.Text = executesubpro.Tables[0].Rows[0].ItemArray[3].ToString();
        if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[0].ItemArray[4].ToString()) != null)
        {
            dpdproductcategory.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[4].ToString();
        }
        else
        {
            dpdproductcategory.SelectedValue = "0";
        }
        dpdproductcategory_SelectedIndexChanged(sender, e);
        if (dpdproductsubcategory.Items.FindByValue(executesubpro.Tables[0].Rows[0].ItemArray[5].ToString()) != null)
            dpdproductsubcategory.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[5].ToString();
        else
            dpdproductsubcategory.SelectedValue = null;
        dpdproductsubcategory_SelectedIndexChanged(sender, e);
        if (drpproduct.Items.FindByValue(executesubpro.Tables[0].Rows[0].ItemArray[0].ToString()) != null)
            drpproduct.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[0].ToString();
        else
            drpproduct.SelectedValue = null;
        

        updateStatus();

        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnimage();
    }
    protected void btnprevious_Click(object sender, EventArgs e)
    {
        
        int count = executesubpro.Tables[0].Rows.Count - 1;

        fpnl--;

        if (fpnl != -1)
        {
            if (fpnl >= 0 && fpnl <= count)
            {
                txtbrandcode.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtbrandname.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtbrandalias.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[4].ToString()) != null)
                {
                    dpdproductcategory.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                }
                else
                {
                    dpdproductcategory.SelectedValue = "0";
                }
                dpdproductcategory_SelectedIndexChanged(sender, e);
                if (dpdproductsubcategory.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[5].ToString()) != null)
                    dpdproductsubcategory.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[5].ToString();
                else
                    dpdproductsubcategory.SelectedValue = null;
                dpdproductsubcategory_SelectedIndexChanged(sender, e);
                if (drpproduct.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
                    drpproduct.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                else
                    drpproduct.SelectedValue = null;

                updateStatus();

                btnfirst.Enabled = true;
                btnlast.Enabled = true;
                btnprevious.Enabled = true;
                btnnext.Enabled = true;
            }
            else
            {
                btnnext.Enabled = true;
                btnlast.Enabled = true;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;

            }
        }
        else
        {
            btnnext.Enabled = true;
            btnlast.Enabled = true;
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;

        }
        if (fpnl == 0)
        {
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = true;
            btnlast.Enabled = true;

        }
        btnimage();

    }
    protected void btnnext_Click(object sender, EventArgs e)
    {
        //DataSet ds = new DataSet();
        //ds = executesubpro;
        int count = executesubpro.Tables[0].Rows.Count - 1;
        fpnl++;


        if (fpnl != -1 && fpnl >= 0)
        {
            if (fpnl <= count)
            {
                //if (drpbillto.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString()) != null)
                //{
                //    drpbillto.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
                //}
                txtbrandcode.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtbrandname.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtbrandalias.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[4].ToString()) != null)
                {
                    dpdproductcategory.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                }
                else
                {
                    dpdproductcategory.SelectedValue = "0"; 
                }
                dpdproductcategory_SelectedIndexChanged(sender, e);
                if (dpdproductsubcategory.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[5].ToString()) != null)
                    dpdproductsubcategory.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[5].ToString();
                else
                    dpdproductsubcategory.SelectedValue = null;
                dpdproductsubcategory_SelectedIndexChanged(sender, e);
                if (drpproduct.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
                    drpproduct.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                else
                    drpproduct.SelectedValue = null;

                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }

            else
            {
                btnnext.Enabled = false;
                btnlast.Enabled = false;
                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }
        }
        else
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        if (fpnl == count)
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        btnimage();
    }
    protected void btnlast_Click(object sender, EventArgs e)
    {
        int count = executesubpro.Tables[0].Rows.Count;
        fpnl = count - 1;

        txtbrandcode.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[1].ToString();
        txtbrandname.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[2].ToString();
        txtbrandalias.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[3].ToString();
        if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[4].ToString()) != null)
        {
            dpdproductcategory.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[4].ToString();
        }
        else
        {
            dpdproductcategory.SelectedValue = "0";
        }
        dpdproductcategory_SelectedIndexChanged(sender, e);
        if (dpdproductsubcategory.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[5].ToString()) != null)
            dpdproductsubcategory.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[5].ToString();
        else
            dpdproductsubcategory.SelectedValue = null;
        dpdproductsubcategory_SelectedIndexChanged(sender, e);
        if (drpproduct.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
            drpproduct.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[0].ToString();
        else
            drpproduct.SelectedValue = null;


        updateStatus();

        btnfirst.Enabled = true;
        btnprevious.Enabled = true;
        btnlast.Enabled = false;
        btnnext.Enabled = false;
        btnimage();
    }
    protected void btnDelete_Click(object sender, EventArgs e)
    {
        string brandcode = txtbrandcode.Text;
        DataSet ds1 = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.BrandMaster del = new NewAdbooking.Classes.BrandMaster();


                ds1 = del.deleteproduct(brandcode, Session["compcode"].ToString());
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BrandMaster del = new NewAdbooking.classesoracle.BrandMaster();


                    ds1 = del.deleteproduct(brandcode, Session["compcode"].ToString());

                }
                else
                {
                    NewAdbooking.classmysql.BrandMaster del = new NewAdbooking.classmysql.BrandMaster();


                    ds1 = del.deleteproduct(brandcode, Session["compcode"].ToString());
                }
        }
        catch (Exception k3)
        {
            err = k3.Message;
        }

        DataSet ds3 = new DataSet();
        ds3.ReadXml(Server.MapPath("XML/errorMessage.xml"));
        message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
        AspNetMessageBox(message);
        string brandcode3 = "Deleted Brand  " + brandcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Brand ','" + err.Replace("'", "''") + "','Brand Deleted','" + brandcode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + Request.ServerVariables["REMOTE_ADDR"] + "')";
        dconnect.executenonquery1(sqldd);
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.BrandMaster execute = new NewAdbooking.Classes.BrandMaster();
            executesubpro = execute.prosubexecute(exeprosubdes, exesubcode, exesubname, exesubalias, Session["compcode"].ToString(), exeproductcat, exeproductsubcat);//, Session["userid"].ToString());
        }
            else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BrandMaster execute = new NewAdbooking.classesoracle.BrandMaster();
                executesubpro = execute.prosubexecute(exeprosubdes, exesubcode, exesubname, exesubalias, Session["compcode"].ToString(), exeproductcat, exeproductsubcat);//, Session["userid"].ToString());

            }
            else
            {
                NewAdbooking.classmysql.BrandMaster execute = new NewAdbooking.classmysql.BrandMaster();
                executesubpro = execute.prosubexecute(exeprosubdes, exesubcode, exesubname, exesubalias, Session["compcode"].ToString(), exeproductcat, exeproductsubcat);//, Session["userid"].ToString());

            }


        int a = executesubpro.Tables[0].Rows.Count;
        if (a <= 0)
        {
            message = "No more data is here to be deleted";
            //AspNetMessageBox(message);
            ScriptManager.RegisterClientScriptBlock(this, typeof(BrandMaster), "enable", "alert('" + message + "');", true);
            updateStatus();
            getbuttoncheck(formname);
            drpproduct.SelectedValue = "0";
            txtbrandalias.Text = "";
            txtbrandcode.Text = "";
            txtbrandname.Text = "";
            dpdproductsubcategory.SelectedValue = "0";
            dpdproductcategory.SelectedValue = "0";
            btnimage();
            return;

        }
        else if (fpnl == -1 || fpnl >= a)
        {
           

            txtbrandcode.Text = executesubpro.Tables[0].Rows[0].ItemArray[1].ToString();
            txtbrandname.Text = executesubpro.Tables[0].Rows[0].ItemArray[2].ToString();
            txtbrandalias.Text = executesubpro.Tables[0].Rows[0].ItemArray[3].ToString();
            if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[0].ItemArray[4].ToString()) != null)
            {
                dpdproductcategory.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[4].ToString();
            }
            dpdproductcategory_SelectedIndexChanged(sender, e);
            dpdproductsubcategory.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[5].ToString();
            dpdproductsubcategory_SelectedIndexChanged(sender, e);
            drpproduct.SelectedValue = executesubpro.Tables[0].Rows[0].ItemArray[0].ToString();

        }

        else
        {
            

            txtbrandcode.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            txtbrandname.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            txtbrandalias.Text = executesubpro.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            if (dpdproductcategory.Items.FindByValue(executesubpro.Tables[0].Rows[fpnl].ItemArray[4].ToString()) != null)
            {
                dpdproductcategory.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            }
            dpdproductcategory_SelectedIndexChanged(sender, e);
            dpdproductsubcategory.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[5].ToString();
            dpdproductsubcategory_SelectedIndexChanged(sender, e);
            drpproduct.SelectedValue = executesubpro.Tables[0].Rows[fpnl].ItemArray[0].ToString();


        }
       
       // ScriptManager.RegisterClientScriptBlock(this, typeof(BrandMaster), "enable", "alert('ddd');", true);
        btnimage();

      
    }
    protected void btnExit_Click(object sender, EventArgs e)
    {

    }
    public void getbuttoncheck(string formname)
    {
        DataSet butt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.classlibraryforbutton getpermission = new NewAdbooking.Classes.classlibraryforbutton();
          
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {

                NewAdbooking.classesoracle.classlibraryforbutton getpermission = new NewAdbooking.classesoracle.classlibraryforbutton();

                butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);

            }
        else
        {
            NewAdbooking.classmysql.classlibraryforbutton getpermission = new NewAdbooking.classmysql.classlibraryforbutton();

            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
 
        }

        string id = butt.Tables[0].Rows[0].ItemArray[0].ToString();


        if (id != "0")
        {



            if (id == "0" || id == "8")
            {

                FlagStatus = 0;

                btnNew.Enabled = false;
                btnQuery.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = false;
                btnExit.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;



                


            }
            if (id == "1" || id == "9")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnExecute.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 1;

            }
            if (id == "2" || id == "10")
            {

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                //a//btnModify.Enabled = true;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                //a// btnfirst.Enabled = true;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;
                FlagStatus = 2;


            }
            if (id == "3" || id == "11")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;


                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;

                FlagStatus = 3;



            }
            if (id == "4" || id == "12")
            {
                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;


                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 4;



            }
            if (id == "5" || id == "13")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                btnModify.Enabled = false;
                FlagStatus = 5;


            }
            if (id == "6" || id == "14")
            {
                btnNew.Enabled = false;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                FlagStatus = 6;
            }
            if (id == "7" || id == "15")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                FlagStatus = 7;

            }
        }




    }

    public void chkstatus(int FlagStatus)
    {
        if (FlagStatus == 0 || FlagStatus == 8)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = false;



        }
        if (FlagStatus == 1 || FlagStatus == 9)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = true;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;

        }
        if (FlagStatus == 2 || FlagStatus == 10)
        {
            btnExecute.Enabled = true;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnNew.Enabled = false;
            btnCancel.Enabled = true;
            btnExecute.Enabled = false;
            btnModify.Enabled = false;
            btnExit.Enabled = true;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;


        }

        if (FlagStatus == 3 || FlagStatus == 11)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

        if (FlagStatus == 4 || FlagStatus == 12)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 5 || FlagStatus == 13)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 6 || FlagStatus == 14)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 7 || FlagStatus == 15)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }


    }

    public void updateStatus()
    {
        chkstatus(FlagStatus);
        if (FlagStatus == 2 || FlagStatus == 3)
        {
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;
            btnDelete.Enabled = false;
        }
        if (FlagStatus == 4)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 5)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 6 || FlagStatus == 7)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
    }

    protected void AspNetMessageBox(string strMessage)
    {
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(BrandMaster), "ShowAlert", strAlert, true);
    }
        [Ajax.AjaxMethod]
    public DataSet adchkadvcode(string str, string productcategory, string productsubcategory, string product, string compcode)
        {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BrandMaster auto = new NewAdbooking.Classes.BrandMaster();
            ds = auto.autocode(str, productcategory);

        }
        else
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BrandMaster auto = new NewAdbooking.classesoracle.BrandMaster();
            ds = auto.autocode(str, productcategory, productsubcategory, product, compcode);
        }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
       {
           string procedureName = "brandautocode_brandautocode_p";
           string[] parameterValueArray = { str, str.Substring(0, 2), productcategory, productsubcategory, product, compcode };
           NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
           ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
       }


       
            return ds;
        }       

  


    public void onpageload()
    {
        drpproduct.Enabled = false;
        txtbrandcode.Enabled = false;
        txtbrandname.Enabled = false;
        txtbrandalias.Enabled = false;
        dpdproductcategory.Enabled = false;
        dpdproductsubcategory.Enabled = false;
    }

    protected void dpdproductsubcategory_SelectedIndexChanged(object sender, EventArgs e)
    {
        drpproduct.Items.Clear();
        string productcat = dpdproductcategory.SelectedValue;
        string productsubcat = dpdproductsubcategory.SelectedValue;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.BrandMaster bind = new NewAdbooking.Classes.BrandMaster();
           
            ds = bind.product(hiddencompcode.Value, productcat, productsubcat);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {

                NewAdbooking.classesoracle.BrandMaster bind = new NewAdbooking.classesoracle.BrandMaster();

                ds = bind.product(hiddencompcode.Value, productcat, productsubcat);

            }
        else
        {
            NewAdbooking.classmysql.BrandMaster bind = new NewAdbooking.classmysql.BrandMaster();

            ds = bind.product(hiddencompcode.Value, productcat, productsubcat);

        }

        ListItem li = new ListItem();
        li.Text = "--Select Product Name--";
        li.Value = "0";
        li.Selected = true;
        drpproduct.Items.Add(li);

        int x;

        for (x = 0; x < ds.Tables[0].Rows.Count; x++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[x].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[x].ItemArray[0].ToString();
            drpproduct.Items.Add(li1);

        }
    }
    protected void dpdproductcategory_SelectedIndexChanged(object sender, EventArgs e)
    {
        dpdproductsubcategory.Items.Clear();
        string product = dpdproductcategory.SelectedValue;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.BrandMaster prosub = new NewAdbooking.Classes.BrandMaster();
            
            ds = prosub.prodsubcategory(product, hiddencompcode.Value);
        }

        else
            if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="orcl")
            {
                NewAdbooking.classesoracle.BrandMaster prosub = new NewAdbooking.classesoracle.BrandMaster();

                ds = prosub.prodsubcategory(product, hiddencompcode.Value);
            }
        else
        {
            NewAdbooking.classmysql.BrandMaster prosub = new NewAdbooking.classmysql.BrandMaster();

            ds = prosub.prodsubcategory(product, hiddencompcode.Value);

        }
        ListItem li = new ListItem();
        li.Text = "-Select Sub Category-";
        li.Value = "0";
        li.Selected = true;
        dpdproductsubcategory.Items.Add(li);
        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            dpdproductsubcategory.Items.Add(li1);
        }
    }
    public void btnimage()
    {
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        else
            btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        else
            btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        else
            btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        else
            btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        else
            btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        else
            btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        else
            btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        else
            btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        else
            btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        else
            btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        else
            btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        else
            btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();
    }
   
}
