using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class RetainerMaster : System.Web.UI.Page
{ 
    NewAdbooking.Classes.RetainerMaster RtMst = new NewAdbooking.Classes.RetainerMaster();
    NewAdbooking.classmysql.RetainerMaster RtMst1 = new NewAdbooking.classmysql.RetainerMaster();
    NewAdbooking.classesoracle.RetainerMaster RtMst2 = new NewAdbooking.classesoracle.RetainerMaster();
    DataSet ds = new DataSet();
    protected void Page_Load(object sender, System.EventArgs e)
    {
        // Put user code to initialize the page here

        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";
        if (Session["compcode"] == null)
        {
            //Response.Redirect("login.aspx");
            //Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            Response.Write("<script>alert(\"Your Session Has Been Expired\");window.close();</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];

        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();

        hiddendateformat.Value = Session["dateformat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();



        hdn_cds_unit.Value = Session["revenue"].ToString();
        DataSet dz = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();
            
            dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, "RetainerMaster");
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master checkform = new NewAdbooking.classesoracle.Master();

                dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, "RetainerMaster");

            }
        else
        {
            NewAdbooking.classmysql.Master checkform = new NewAdbooking.classmysql.Master();
         
            dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, "RetainerMaster");
        }

        if (dz.Tables[0].Rows[0].ItemArray[0].ToString() == "0" || dz.Tables[0].Rows[0].ItemArray[0].ToString() == "8")
        {
            Response.Write("<script>alert('You Are not Authorised to view this form');</script>");
            //Server.Transfer("EnterPage.aspx",true);
            Response.Redirect("login.aspx");
        }

      
        //Ajax Class Variable Registeration
        Ajax.Utility.RegisterTypeForAjax(typeof(RetainerMaster));


        

        if (hiddencompcode.Value == "" && hiddenuserid.Value == "")
        {
            Response.Redirect("login.aspx");
            return;
            
        }





        //readind button name from Xml.....

        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        //Reading  labels name from Xml...

        DataSet dk = new DataSet();
        dk.ReadXml(Server.MapPath("XML/RetainerMaster.xml"));
        Label1.Text = dk.Tables[0].Rows[0].ItemArray[0].ToString();
        Label2.Text = dk.Tables[0].Rows[0].ItemArray[1].ToString();

        Label12.Text = dk.Tables[0].Rows[0].ItemArray[2].ToString();

        Label5.Text = dk.Tables[0].Rows[0].ItemArray[3].ToString();

        Label13.Text = dk.Tables[0].Rows[0].ItemArray[4].ToString();


        Label6.Text = dk.Tables[0].Rows[0].ItemArray[5].ToString();

        Label7.Text = dk.Tables[0].Rows[0].ItemArray[6].ToString();

        Label11.Text = dk.Tables[0].Rows[0].ItemArray[7].ToString();

        Label14.Text = dk.Tables[0].Rows[0].ItemArray[8].ToString();

        Label18.Text = dk.Tables[0].Rows[0].ItemArray[9].ToString();

        Label32.Text = dk.Tables[0].Rows[0].ItemArray[10].ToString();

        Label16.Text = dk.Tables[0].Rows[0].ItemArray[11].ToString();

        Label15.Text = dk.Tables[0].Rows[0].ItemArray[14].ToString();

        lblzone.Text = dk.Tables[0].Rows[0].ItemArray[12].ToString();

        lblregion.Text = dk.Tables[0].Rows[0].ItemArray[13].ToString();

        Label41.Text = dk.Tables[0].Rows[0].ItemArray[15].ToString();

        Label21.Text = dk.Tables[0].Rows[0].ItemArray[16].ToString();
        Label31.Text = dk.Tables[0].Rows[0].ItemArray[17].ToString();

        Label23.Text = dk.Tables[0].Rows[0].ItemArray[18].ToString();
        Label3.Text = dk.Tables[0].Rows[0].ItemArray[19].ToString();
        Label34.Text = dk.Tables[0].Rows[0].ItemArray[20].ToString();
        Label35.Text = dk.Tables[0].Rows[0].ItemArray[21].ToString();
        lbPName.Text = dk.Tables[0].Rows[0].ItemArray[22].ToString();
        lbEdition.Text = dk.Tables[0].Rows[0].ItemArray[23].ToString();
        lbSuppliment.Text = dk.Tables[0].Rows[0].ItemArray[24].ToString();
        lbltaluka.Text = dk.Tables[0].Rows[0].ItemArray[25].ToString();
        repname.Text = dk.Tables[0].Rows[0].ItemArray[26].ToString();
        lblbranch.Text = dk.Tables[0].Rows[0].ItemArray[27].ToString();
        mobile.Text = dk.Tables[0].Rows[0].ItemArray[28].ToString();
        lblsign.Text = dk.Tables[0].Rows[0].ItemArray[29].ToString();
        lbemcode.Text = dk.Tables[0].Rows[0].ItemArray[30].ToString();
        lbmaincdp.Text = dk.Tables[0].Rows[0].ItemArray[31].ToString();
        lblattachment.Text = dk.Tables[0].Rows[0].ItemArray[32].ToString();
        lbmaincds.Text = dk.Tables[0].Rows[0].ItemArray[33].ToString();
        lblcontact.Text = dk.Tables[0].Rows[0].ItemArray[34].ToString();
        lbloldcod.Text = dk.Tables[0].Rows[0].ItemArray[35].ToString();
        lblaccod.Text = dk.Tables[0].Rows[0].ItemArray[36].ToString();
        lblgstus.Text = dk.Tables[0].Rows[0].ItemArray[37].ToString();
        lblgstdt.Text = dk.Tables[0].Rows[0].ItemArray[38].ToString();
        lblgst.Text = dk.Tables[0].Rows[0].ItemArray[39].ToString();
        lblgstclty.Text = dk.Tables[0].Rows[0].ItemArray[40].ToString();

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        txtsign.Enabled = false;

        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();


        drppubcent.Enabled = false;
        txtretainercode.Enabled = false;
        txtretainername.Enabled = false;
        txtalias.Enabled = false;
        txtadd1.Enabled = false;
        txtstreet.Enabled = false;
        drpcity.Enabled = false;
        drptaluka.Enabled = false;
        txtdistrict.Enabled = false;
        txtcountry.Enabled = false;
        txtphone1.Enabled = false;
        txtphone2.Enabled = false;
        
        txtemailid.Enabled = false;
        txtPan.Enabled = false;
        txtcreditdays.Enabled = false;
        txtpincode.Enabled = false;
        txtstate.Enabled = false;
        drpzone.Enabled = false;
        txtfax.Enabled = false;
        txtremarks.Enabled = false;
        txtrepname.Enabled = false;
        drpbranch.Enabled = false;
        txtstatus1.Enabled = false;
        drpregion.Enabled = false;
        txtcreditlimit.Enabled = false;
        txtemcode.Enabled = false;
        txtmaincdp.Enabled = false;
        txtmaincds.Enabled = false;

        //pubcenterebind();

             
        btnNew.Focus();

        if (!Page.IsPostBack)
        {
            BindRepresentative();
            addbranch();
          //  pubcenterebind();
            btnNew.Attributes.Add("OnClick", "javascript:return RetNewClick();");
            // drpcity.Attributes.Add("OnChange", "javascript:return Retaddcity('RetainerMaster',document.getElementById('drpcity').value);");
            txtcountry.Attributes.Add("OnChange", "javascript:return addcount(this);");
            drpcity.Attributes.Add("OnChange", "javascript:return adddiststate(this);");
            btnSave.Attributes.Add("OnClick", "javascript:return RetSaveClick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return RetCancelClick('RetainerMaster');");
            btnModify.Attributes.Add("OnClick", "javascript:return RetModifyClick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return RetQueryClick('RetainerMaster');");
            btnExecute.Attributes.Add("OnClick", "javascript:return RetExecuteClick('RetainerMaster');");
            btnDelete.Attributes.Add("OnClick", "javascript:return RetDelete();");
            btnExit.Attributes.Add("OnClick", "javascript:return RetExit();");

            btnfirst.Attributes.Add("OnClick", "javascript:return RetFirst();");
            btnnext.Attributes.Add("OnClick", "javascript:return RetNext();");
            btnprevious.Attributes.Add("OnClick", "javascript:return RetPrevious();");
            btnlast.Attributes.Add("OnClick", "javascript:return RetLast();");
            
            //Pop Up
            lbtnStatusDetail.Attributes.Add("OnClick", "javascript:return RetainerStatusDetail();");
            lbtnClientPaymode.Attributes.Add("OnClick", "javascript:return RetainerPayMode();");
            lbcommdetail.Attributes.Add("OnClick", "javascript:return RetainerCommissionDetail();");
            lblretcomslab.Attributes.Add("OnClick", "javascript:return retcomslab();");
            //creaditslab.Attributes.Add("OnClick", "javascript:return retainer_slab();");
            //Vaildations on Controls

            //Upper Case Validations
            txtretainercode.Attributes.Add("OnBlur", "javascript:return UpperCase('txtretainercode');");
            txtretainername.Attributes.Add("OnBlur", "javascript:return UpperCase('txtretainername');");
            txtalias.Attributes.Add("OnBlur", "javascript:return UpperCase('txtalias');");
            txtadd1.Attributes.Add("OnBlur", "javascript:return UpperCase('txtadd1');");
            txtstreet.Attributes.Add("OnBlur", "javascript:return UpperCase('txtstreet');");
            txtremarks.Attributes.Add("OnBlur", "javascript:return UpperCase('txtremarks');");
            txtretainername.Attributes.Add("onkeydown", "javascript:return F2fillretainercr_ret();");
            //Email Validations
            //txtemailid.Attributes.Add("OnBlur", "javascript:return ClientEmailCheck('txtemailid');");

            //txtemailid.Attributes.Add("OnBlur", "javascript:return checkEmail('txtemailid');");
            txtemailid.Attributes.Add("OnBlur", "javascript:return ClientEmailCheck1('txtemailid');");
            txtemailid.Attributes.Add("OnKeypress", "javascript:return checkSpace(event);");

            txtmobile.Attributes.Add("OnBlur", "javascript:return chkmobile('txtmobile');");

            txtPan.Attributes.Add("OnBlur", "javascript:return UpperCase('txtpan');");
            txtretainername.Attributes.Add("OnChange", "javascript:return autoornot();");
            drpgstatus.Attributes.Add("onChange", "javascript:return checkmandatory();");
            drpPName.Attributes.Add("onChange", "javascript:return fillCenter_client()");
            //drppubcent.Attributes.Add("onChange", "javascript:return fillEdiName_client()");
            drpEdition.Attributes.Add("onChange", "javascript:return fillSuppliment_client()");
            txtPan.Attributes.Add("OnChange", "javascript:return panvalidate('txtPan')");
            lblsign.Attributes.Add("OnClick", "javascript:return signuploadclick();");
            lstretainer.Attributes.Add("onclick", "javascript:return Clickretainer_ret(event);");
            lstretainer.Attributes.Add("onkeydown", "javascript:return Clickretainer_ret(event);");
            txtemcode.Attributes.Add("onkeydown", "javascript:return F2fillempcode(event);");
            lstempcode.Attributes.Add("onkeydown", "javascript:return Clickrempcode_ret(event);");
            lstempcode.Attributes.Add("OnClick", "javascript:return Clickrempcode_ret(event);");

            txtmaincdp.Attributes.Add("onkeydown", "javascript:return F2fillmaincdp(event);");
            lstmaincdp.Attributes.Add("onkeydown", "javascript:return Clickrmaincdp_ret(event);");
            lstmaincdp.Attributes.Add("OnClick", "javascript:return Clickrmaincdp_ret(event);");

            txtmaincds.Attributes.Add("onkeydown", "javascript:return F2fillmaincds(event);");
            lstmaincds.Attributes.Add("onkeydown", "javascript:return Clickrmaincds_ret(event);");
            lstmaincds.Attributes.Add("OnClick", "javascript:return Clickrmaincds_ret(event);");

            txtoldcod.Attributes.Add("onkeydown", "javascript:return F2fillagcode(event);");
            lstagcode.Attributes.Add("onkeydown", "javascript:return Clickagcode(event);");
            lstagcode.Attributes.Add("OnClick", "javascript:return Clickagcode(event);");

            attachment1.Attributes.Add("OnClick", "javascript:return openattach1();");
            txtgstclty.Attributes.Add("onkeydown", "javascript:return fillgstclient(event);");
            lstgstclty.Attributes.Add("onkeydown", "javascript:return fillgst(event);");
            lstgstclty.Attributes.Add("onclick", "javascript:return fillgst(event);");
            pubcenterebind();
            countryname();
            fillPubName();

            Session["retainer_comm"] = null;
            Session["retainer_stat"] = null;
            Session["retainer_slab"] = null;
            Session["retainer_pay"] = null;

            lbtnStatusDetail.Enabled = false;
            lbtnClientPaymode.Enabled = false;
            lbcommdetail.Enabled = false;
            lblretcomslab.Enabled = false;
            //creaditslab.Enabled = false;
        }
    }

    #region Web Form Designer generated code
    protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    //************* bind branch********************//
    public void addbranch()
    {
        drpbranch.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvertisementMaster name = new NewAdbooking.Classes.AdvertisementMaster();

            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvertisementMaster name = new NewAdbooking.classesoracle.AdvertisementMaster();
            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.AdvertisementMaster name = new NewAdbooking.classmysql.AdvertisementMaster();

            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());

        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Branch-----";
        li1.Value = "0";
        li1.Selected = true;
        drpbranch.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpbranch.Items.Add(li);
        }
    }

    public void pubcenterebind()
    {
        drppubcent.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RetainerMaster ClMst = new NewAdbooking.Classes.RetainerMaster();

            ds = ClMst.addpubcent(Session["compcode"].ToString());
        }

        else
            if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="orcl")
            {
                NewAdbooking.classesoracle.RetainerMaster ClMst = new NewAdbooking.classesoracle.RetainerMaster();

                ds = ClMst.addpubcent(Session["compcode"].ToString());
 
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "Bind_PubCentName_Bind_PubCentName_p";
                string[] parameterValueArray = { Session["compcode"].ToString() };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Publication Centre--";
        li1.Value = "0";
        li1.Selected = true;
        drppubcent.Items.Add(li1);

        if (ds.Tables.Count > 0)
        {
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drppubcent.Items.Add(li);
            }

        }


    }

    [Ajax.AjaxMethod]
    public DataSet fill_gst(string compcode, string chargetypecode)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compcode, chargetypecode };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            string procedureName = "BindGstClientType";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "BindGstClientType";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


    public void BindRepresentative()
    {
        txtrepname.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RetainerMaster ClMst = new NewAdbooking.Classes.RetainerMaster();
            ds = ClMst.addrepname(Session["compcode"].ToString());
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.RetainerMaster ClMst = new NewAdbooking.classesoracle.RetainerMaster();

                ds = ClMst.addrepname(Session["compcode"].ToString());

            }
            else
            {
                NewAdbooking.classmysql.RetainerMaster ClMst = new NewAdbooking.classmysql.RetainerMaster();

                ds = ClMst.addrepname(Session["compcode"].ToString());
            }
       

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Representative Name--";
        li1.Value = "0";
        li1.Selected = true;
        txtrepname.Items.Add(li1);

        if (ds.Tables.Count > 0)
        {
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                txtrepname.Items.Add(li);
            }

        }


    }


    public void countryname()
    {DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        NewAdbooking.Classes.Master name = new NewAdbooking.Classes.Master();

        ds = name.adcountryname(Session["compcode"].ToString());
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.Master name = new NewAdbooking.classesoracle.Master();

                 ds = name.adcountryname(Session["compcode"].ToString());

             }
         else
         {
              NewAdbooking.classmysql.Master name = new NewAdbooking.classmysql.Master();

              ds = name.adcountryname(Session["compcode"].ToString());
         }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Country-----";
        li1.Value = "0";
        li1.Selected = true;
        txtcountry.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            txtcountry.Items.Add(li);
        }
    }



    [Ajax.AjaxMethod]
    public DataSet maincdp(string compcode, string unit, string cdp, string name, string userid, string extra1, string extra2)
    {
        //drpemcode.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.RetainerMaster obj = new NewAdbooking.Classes.RetainerMaster();

            ds = obj.bindmaincdp(compcode, cdp, extra1);
            return ds;
        }
        else
        {
            NewAdbooking.classesoracle.RetainerMaster rt1 = new NewAdbooking.classesoracle.RetainerMaster();
            ds = rt1.bindmaincdp(compcode, unit, cdp, name, userid, extra1, extra2);
            return ds;
        }

        return ds;

    }








    //Ajax Methods 

    [Ajax.AjaxMethod]
    //		public void RetainerStorageDetail(string compcode,string retcode,string retname,string retalias,string add1,string street,string citycode,string zip,string dist,string state,string country,string phone1,string phone2,string fax,string email,string pan,string creditdays,string remarks,string userid,int flag)
//    public void RetainerStorageDetail(string compcode, string retcode, string retname, string retalias, string add1, string street, string citycode, string pubcent, string zip, string dist, string state,string zone, string region, string country, string phone1, string phone2, string fax, string email, string pan, string creditdays, string remarks, string userid, int flag)
    public DataSet RetainerStorage(string compcode, string retcode, string userid , string retname, string retalias, string add1, string street, string citycode, string pubcent, string zip, string dist, string state, string zone, string region, string country, string phone1, string phone2, string fax, string email, string pan, string creditdays, string remarks, string flag, string Box, string publication, string edition, string supplement, string taluka, string repname, string branchcode, string creditlimit, string mobile, string signature, string empcode, string attachment, string maincdp, string name, string contactnam, string oldcode, string accode, string gstus, string gstdt, string gstin, string gstatus, string gstcltype, string dateformate)
    {
        string[] parameterValueArray = { compcode, retcode, userid, retname, retalias, add1, street, citycode, pubcent, zip, dist, state, zone, region, country, phone1, phone2, fax, email, pan, creditdays, remarks, flag, Box, publication, edition, supplement, taluka, repname, branchcode, creditlimit, mobile, signature, empcode, attachment, maincdp, name, contactnam, oldcode, accode, gstus, gstdt, gstin, gstatus, gstcltype, dateformate };
           DataSet da = new DataSet();
           if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.RetainerMaster RtMst1 = new NewAdbooking.Classes.RetainerMaster();
                da = RtMst1.RetainerStore(compcode, retcode, userid, retname, retalias, add1, street, citycode, pubcent, zip, dist, state, zone, region, country, phone1, phone2, fax, email, pan, creditdays, remarks, flag, Box, publication, edition, supplement, taluka, repname, branchcode, creditlimit, mobile, signature, empcode, attachment, maincdp, name, contactnam, oldcode, accode, gstus, gstdt, gstin, gstatus, gstcltype, dateformate);
             }
             else
             if(ConfigurationSettings .AppSettings["ConnectionType"].ToString ()=="orcl")
             {
                 //NewAdbooking.classesoracle.RetainerMaster RtMst1 = new NewAdbooking.classesoracle.RetainerMaster();
                 //da = RtMst1.RetainerStore(compcode, retcode, retname, retalias, add1, street, citycode, pubcent, zip, dist, state, zone, region, country, phone1, phone2, fax, email, pan, creditdays, remarks, userid, flag, Box, publication, edition, supplement, taluka, repname, branchcode, creditlimit, mobile, signature, empcode, attachment, maincdp, name, contactnam, oldcode, accode, gstus, gstdt, gstin, gstatus, gstcltype, pextra1);
                 string procedureName = "RETAINERINSERTDETAIL.RETAINERINSERTDETAIL_P";
                 NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                 da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
             }

         else
         {
                NewAdbooking.classmysql .RetainerMaster RtMst1 = new NewAdbooking.classmysql.RetainerMaster();
                //da = RtMst1.RetainerStore(compcode, retcode, retname, retalias, add1, street, citycode, pubcent, zip, dist, state, zone, region, country, phone1, phone2, fax, email, pan, creditdays, remarks, userid, flag, Box, publication, edition, supplement, taluka, repname, branchcode, mobile);

         }
     return da;
    }

    [Ajax.AjaxMethod]
    //		public DataSet RetainerExecute(string compcode,string Retcode,string Retname,string alias,string city,string userid)
    public DataSet RetainerExecute(string compcode, string Retcode, string Retname, string alias, string city, string pubcent, string country, string Box, string repname, string branchname, string oldcode, string accode, string gstus, string gstdt, string gstin, string gstatus, string gstcltype, string pextra1)
    {
            string[] parameterValueArray = { compcode, Retcode, Retname, alias, city, pubcent, country, Box, repname, branchname, gstus, gstdt, gstin, gstatus, gstcltype, pextra1 };
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
            NewAdbooking.Classes.RetainerMaster RtMst = new NewAdbooking.Classes.RetainerMaster();
            ds = RtMst.RetainerExecute(compcode, Retcode, Retname, alias, city, pubcent, country, Box, repname, branchname, oldcode, accode, gstus, gstdt, gstin, gstatus, gstcltype);
       
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {                 
            string procedureName = "RETAINEREXEC.RETAINEREXEC_P";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);                
            } 
            else
            {
            NewAdbooking.classmysql.RetainerMaster RtMst = new NewAdbooking.classmysql.RetainerMaster();
            ds = RtMst1.RetainerExecute(compcode, Retcode, Retname, alias, city, pubcent, country, Box, repname, branchname);
         
            }
            return ds;
    }
    [Ajax.AjaxMethod]
    //		public DataSet RetainerExecute(string compcode,string Retcode,string Retname,string alias,string city,string userid)
    public DataSet Retainerchkname(string compcode, string Retname)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RetainerMaster RtMst = new NewAdbooking.Classes.RetainerMaster();

            ds = RtMst.Retainerchkname(compcode, Retname);
            return ds;
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.RetainerMaster RtMst = new NewAdbooking.classesoracle.RetainerMaster();

                ds = RtMst.Retainerchkname(compcode, Retname);
                return ds;

            }


            else
            {
                NewAdbooking.classmysql.RetainerMaster RtMst = new NewAdbooking.classmysql.RetainerMaster();

                ds = RtMst.Retainerchkname(compcode, Retname);
                return ds;
            }
    }
    [Ajax.AjaxMethod]
    //		public DataSet RetNavigate(string compcode,string userid)
    public DataSet RetNavigate(string compcode, string userid)
    {
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        ds = RtMst.RetainerNavigate(compcode, userid);
        return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 ds = RtMst2.RetainerNavigate(compcode, userid);
                 return ds;
             }
         
         
         else
         {
             ds = RtMst1.RetainerNavigate(compcode, userid);
        return ds;
         }
    }
    [Ajax.AjaxMethod]
    //		public DataSet RetainerDelete(string compcode,string Retcode,string userid)
    public DataSet RetainerDelete(string compcode, string Retcode)
    {
           if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                ds = RtMst.RetDelete(compcode, Retcode);
               return ds;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    ds = RtMst2.RetDelete(compcode, Retcode);
                     return ds;
                }


                else
                {
                    ds = RtMst1.RetDelete(compcode, Retcode);
                   return ds;
                }
        

    }

    [Ajax.AjaxMethod]
    //		public DataSet checkretainerdata(string retainercode,string userid,string compcode)
    public DataSet checkretainerdata(string retainercode, string userid, string compcode)
    {
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        ds = RtMst.checkRetaineruser(retainercode, userid, compcode);
        return ds;
         }

         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 ds = RtMst2.checkRetaineruser(retainercode, userid, compcode);
                 return ds;
             }
         else
         {
             ds = RtMst1.checkRetaineruser(retainercode, userid, compcode);
        return ds;
         }

    }
    [Ajax.AjaxMethod]
    //		public DataSet checkpopup(string compcode,string Retcode,string userid)
    public DataSet checkpopup(string compcode, string Retcode, string userid)
    {
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        ds = RtMst.checkpopupdata(compcode, Retcode, userid);
        return ds;
         }

         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 ds = RtMst2.checkpopupdata(compcode, Retcode, userid);
        return ds;
             }
         else
         {
             ds = RtMst1.checkpopupdata(compcode, Retcode, userid);
        return ds;
         }
    }



    [Ajax.AjaxMethod]
    public DataSet chkretainercode(string str)
    {
        DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        
        ds = RtMst.chkretainercode(str);
        return ds;
         }

         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 ds = RtMst2.chkretainercode(str);
                 return ds;
             }

             else
         {
        ds = RtMst1.chkretainercode(str);
        return ds;
         }


    }



    [Ajax.AjaxMethod]
    public DataSet chkretainercodemod(string strcode, string strname)
    {
          DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

      
        ds = RtMst.chkretainercodemod(strcode, strname);
        return ds;
         }
         else
             if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            ds = RtMst2.chkretainercodemod(strcode, strname);
                 return ds;
        }
        else
         {
                ds = RtMst1.chkretainercodemod(strcode, strname);
        return ds;
         }

    }
    [Ajax.AjaxMethod]
    public DataSet chkretainerusercode(string strcode, string strname)
    {
            DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
    
        ds = RtMst.chkretainerusercode(strcode, strname);
        return ds;
         }

         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 ds = RtMst2.chkretainerusercode(strcode, strname);
                 return ds;
             }
         else
         {
             
        ds = RtMst1.chkretainerusercode(strcode, strname);
        return ds;
         }

    }

    //city on select country...

    [Ajax.AjaxMethod]
    public DataSet getfromc(string txtcountry)
    {
        
              DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();
  
        ds = firstAgency.countcity(txtcountry);
        return ds;
         }

        else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                ds = firstAgency.countcity(txtcountry);
                return ds;
 
            }
         else
         {
              NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
  
        ds = firstAgency.countcity(txtcountry);
        return ds;
         }

    }
    //[Ajax.AjaxMethod]
    //public void getfromc()
    //{
    //    string abc = "hello:";


    //}

    //[Ajax.AjaxMethod]
    //public DataSet submitpermission(string hiddencompcode, string hiddenuserid, string formname)
    //{

    //    NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();
    //    DataSet dz = new DataSet();
    //    dz = checkform.formpermission(hiddencompcode, hiddenuserid, formname);
    //    return dz;
    //}

    [Ajax.AjaxMethod]
    public DataSet fillF2cashback(string compcode, string unit, string cdp, string name, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.RetainerMaster recpt = new NewAdbooking.classesoracle.RetainerMaster();
            ds = recpt.cashback_cds(compcode, unit, cdp, name, extra1, extra2);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                //Collection.Classes.ReceiptEntry recpt = new Collection.Classes.ReceiptEntry();
                //ds = recpt.repbind(compcode, extra1);
            }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "ad_fa_subledger_bind";
            string[] parameterValueArray = { compcode, unit, cdp, name, extra1, extra2 };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet fillF2adcodeback(string compcode, string name, string unit, string cdp, string extra1, string extra2, string extra3, string extra4, string extra5)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.RetainerMaster recpt = new NewAdbooking.classesoracle.RetainerMaster();
            ds = recpt.agcode(compcode, name, unit, cdp, extra1, extra2, extra3, extra4, extra5);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
               NewAdbooking.Classes.RetainerMaster recpt = new NewAdbooking.Classes.RetainerMaster();
                ds = recpt.agcode(compcode, name, unit, cdp, extra1, extra2, extra3, extra4, extra5);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "ad_agency_bind_p";
                string[] parameterValueArray = { compcode, cdp, cdp, unit, extra1, extra2, extra3, extra4, extra5 };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
        return ds;
    }


    [Ajax.AjaxMethod]

    public DataSet addcitydist(string values, string pcompcode)
    { DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        NewAdbooking.Classes.RetainerMaster add = new NewAdbooking.Classes.RetainerMaster();

        ds = add.addcitydist(values,pcompcode);
        return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.RetainerMaster add = new NewAdbooking.classesoracle.RetainerMaster();

                ds = add.addcitydist(values);
                return ds;
            }
        else
        
        {
         NewAdbooking.classmysql .RetainerMaster add = new NewAdbooking.classmysql.RetainerMaster();       
        ds = add.addcitydist(values);
        return ds;
        }
    }

    /// <summary>
    /// //////////////////////////////////////////////////////////////////
    /// </summary>

    private void fillPubName()
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.addummydaypages pubNames = new NewAdbooking.Classes.addummydaypages();
            ds = pubNames.getPubName(hiddencompcode.Value);
            drpPName.Items.Clear();
            ListItem li1;
            li1 = new ListItem();
            li1.Text = "--Select Publication--";
            li1.Value = "0";
            li1.Selected = true;
            drpPName.Items.Add(li1);

            int i;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drpPName.Items.Add(li);
            }
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                //NewAdbooking.classesoracle.RetainerMaster add = new NewAdbooking.classesoracle.RetainerMaster();
                //ds = add.addcitydist(values);

                NewAdbooking.classesoracle.RetainerMaster pubNames = new NewAdbooking.classesoracle.RetainerMaster();
                ds = pubNames.getPubName(hiddencompcode.Value);
                drpPName.Items.Clear();
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "--Select Publication--";
                li1.Value = "0";
                li1.Selected = true;
                drpPName.Items.Add(li1);

                int i;
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                    li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                    drpPName.Items.Add(li);
                }
            }
            else
            {
                NewAdbooking.classmysql.addummydaypages pubNames = new NewAdbooking.classmysql.addummydaypages();
                ds = pubNames.getPubName(hiddencompcode.Value);
                drpPName.Items.Clear();
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "--Select Publication--";
                li1.Value = "0";
                li1.Selected = true;
                drpPName.Items.Add(li1);

                int i;
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                    li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                    drpPName.Items.Add(li);
                }
            }

    }

    //***This function is used to fill the Publication Center Name for this it calls the function getPubCName***

    //[Ajax.AjaxMethod]
    //public DataSet fillPCName()
    //{
    //    DataSet ds;
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
    //        ds = adDDP.getPubCName();
    //        return ds;
    //    }
    //    else
    //        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //        {
    //            NewAdbooking.classesoracle.RetainerMaster adDDP = new NewAdbooking.classesoracle.RetainerMaster();
    //            ds = adDDP.getPubCName();
    //            return ds;
    //        }
    //        else
    //        {
    //            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
    //            ds = adDDP.getPubCName();
    //            return ds;
    //        }
    //}

    //*********************************************************************************************************


    //***This function is used to fill the Edition for this it calls the function getEdiName***

    [Ajax.AjaxMethod]
    public DataSet fillEdiName(string pubCode)
    {
        DataSet ds=new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RetainerMaster chkv = new NewAdbooking.Classes.RetainerMaster();
            ds = chkv.addedition(pubCode);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                //NewAdbooking.classesoracle.RetainerMaster adDDP = new NewAdbooking.classesoracle.RetainerMaster();
                //ds = adDDP.getEdiName(pubCode, pubCenter);
                //NewAdbooking.classesoracle.RetainerMaster chkv = new NewAdbooking.classesoracle.RetainerMaster();
                //ds = chkv.chkedition(pubCode, compcode, userid);
                NewAdbooking.classesoracle.RetainerMaster chkv = new NewAdbooking.classesoracle.RetainerMaster();
                ds = chkv.addedition(pubCode);
            }
            else
            {
                NewAdbooking.classmysql.RetainerMaster chkv = new NewAdbooking.classmysql.RetainerMaster();
                ds = chkv.addedition(pubCode);
                //return ds;
            }
        return ds;
    }
    //*******************************************************************************************
    //*******************************************************************************************
    [Ajax.AjaxMethod]
    public DataSet fillsupplement(string pubeditsupp)
    {
        DataSet ds=new DataSet ();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RetainerMaster ediname = new NewAdbooking.Classes.RetainerMaster();
            ds = ediname.countedition(pubeditsupp);
            //return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.RetainerMaster ediname = new NewAdbooking.classesoracle.RetainerMaster();
                ds = ediname.countedition(pubeditsupp);
                //NewAdbooking.classesoracle.RetainerMaster adDDP = new NewAdbooking.classesoracle.RetainerMaster();
                //ds = adDDP.getSuppliment(pubCode, pubEdit);
                
            }
            else
            {
                NewAdbooking.classmysql.RetainerMaster ediname = new NewAdbooking.classmysql.RetainerMaster();
                ds = ediname.countedition(pubeditsupp);
                //return ds;
            }
        return ds;
    }
   [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void loginsertS(string userid, string ip)
    {
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Retainer Master','','Retainer Master Created','" + userid + ' ' + dconnect.getusername(userid);
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void loginsertM(string userid, string ip)
    {
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Retainer Master','','Retainer Master Updated','" + userid + ' ' + dconnect.getusername(userid);
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void loginsertD(string userid, string ip)
    {
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Retainer Master','','Retainer Master Deleted','" + userid + ' ' + dconnect.getusername(userid);
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
    }



    [Ajax.AjaxMethod]
    public DataSet fillF2_Creditretainer(string compcol, string ret)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.Report.classesoracle.SHACHIREPORT objregion = new NewAdbooking.Report.classesoracle.SHACHIREPORT();
            ds = objregion.retainerxls(compcol, ret);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Report.Classes.Class1 objregion = new NewAdbooking.Report.Classes.Class1();
            ds = objregion.retainerxls(compcol, ret);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "xlsRetainerbind_xlsRetainerbind_p";
            string[] parameterValueArray = { compcol, ret };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }


        return ds;
    }
    //************************************************************************************************

    [Ajax.AjaxMethod]
    public DataSet empcodebind(string compcode, string empname)
    {
        //drpemcode.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvertisementMaster name = new NewAdbooking.Classes.AdvertisementMaster();

            ds = name.bindempcode(compcode, empname);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "emp_code_bind";
            string[] parameterValueArray = { compcode, empname };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            return ds;
        }
        else
        {
            NewAdbooking.classesoracle.AdvertisementMaster name = new NewAdbooking.classesoracle.AdvertisementMaster();
            ds = name.bindempcode(compcode, empname);
            return ds;
        }



    }

    [Ajax.AjaxMethod]
    public DataSet fill_agname(string compcode, string empname, string agcode, string agsubcode, string extra1, string extra2)
    {
        //drpemcode.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.RetainerMaster name = new NewAdbooking.Classes.RetainerMaster();

            ds = name.bind_agname(compcode, empname, agcode, agsubcode, extra1, extra2);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "get_adagency_name_new";
            string[] parameterValueArray = { compcode, empname, agcode, agsubcode, extra1, extra2 };
            NewAdbooking.classmysql.Master obj = new NewAdbooking.classmysql.Master();
            ds = obj.BindCommanFunction(procedureName, parameterValueArray);
            return ds;
        }
        else
        {
            NewAdbooking.classesoracle.RetainerMaster name = new NewAdbooking.classesoracle.RetainerMaster();
            ds = name.bind_agname(compcode, empname,agcode,agsubcode,extra1,extra2);
            return ds;
        }



    }




    protected void btnExit_Click(object sender, System.EventArgs e)
    {
        Response.Redirect("EnterPage.aspx");
    }

    protected void txtadd1_TextChanged(object sender, System.EventArgs e)
    {

    }

    protected void lbtnStatusDetail_Click(object sender, System.EventArgs e)
    {

    }

    protected void lbcommdetail_Click(object sender, System.EventArgs e)
    {

    }

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }

    protected void Topbar1_Load(object sender, EventArgs e)
    {

    }
}