using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;


public partial class misupdation : System.Web.UI.Page
{
    int i = 0;
    int j = 0;

    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
          if (Session["compcode"] == null)
        {
            Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        //hiddendateformat.Value = Session["dateformat"].ToString();
        hiddenDateFormat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();
       // string userid = "";
        hiddenbk_audit.Value = Session["audit"].ToString();




        hiddenserverip.Value = Request.ServerVariables["REMOTE_ADDR"].ToString();



        Ajax.Utility.RegisterTypeForAjax(typeof(misupdation));
        if (!Page.IsPostBack)
        {


            drpadtype.Attributes.Add("OnChange", "javascript:return bindcategory_package();");
            btnExit.Attributes.Add("OnClick", "javascript:return catexitclick1();");
            btnUpdate.Attributes.Add("OnClick", "javascript:return update();");

            drprevenu.Attributes.Add("OnChange", "javascript:return bindQBC(event);");
            drpbranch.Attributes.Add("onkeydown", "javascript:return enter(event);");

            txtvalidityfrom.Attributes.Add("onkeydown", "javascript:return enterto(event);");
            txttilldate.Attributes.Add("onkeydown", "javascript:return enterid(event);");

            txtcioid.Attributes.Add("onkeydown", "javascript:return enterad(event);");
            drpadtype.Attributes.Add("onkeydown", "javascript:return entercat(event);");

            drpbasedon.Attributes.Add("onkeydown", "javascript:return enterpageno(event);");
            drprate.Attributes.Add("onkeydown", "javascript:return enterbooktype(event);");
            txtpageno.Attributes.Add("onkeydown", "javascript:return enterbuton(event);");
           

            txtagency.Attributes.Add("onkeydown", "javascript:return fillAgency(event);");
            lstagency.Attributes.Add("onkeydown", "javascript:return onclickagency(event);");
            lstagency.Attributes.Add("onclick", "javascript:return onclickagency(event);");

            txtclient.Attributes.Add("onkeydown", "javascript:return fillclient(event);");
            lstclient.Attributes.Add("onkeydown", "javascript:return onclickclient(event);");
            lstclient.Attributes.Add("onclick", "javascript:return onclickclient(event);");

            txtexecname.Attributes.Add("onkeydown", "javascript:return fillexcutive(event);");
            istexcutive.Attributes.Add("onkeydown", "javascript:return onclickexcutive(event);");
            istexcutive.Attributes.Add("onclick", "javascript:return onclickexcutive(event);");

            txtret.Attributes.Add("onkeydown", "javascript:return fillret(event);");
            istret.Attributes.Add("onkeydown", "javascript:return onclickret(event);");
            istret.Attributes.Add("onclick", "javascript:return onclickret(event);");

            istproduct.Attributes.Add("onkeydown", "javascript:return onclickproduct(event);");
            istproduct.Attributes.Add("onclick", "javascript:return onclickproduct(event);");

            istbrand.Attributes.Add("onkeydown", "javascript:return onclickproduct(event);");
            istbrand.Attributes.Add("onclick", "javascript:return onclickproduct(event);");
            txtvalidityfrom.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            txttilldate.Attributes.Add("OnChange", "javascript:return checkdate(this);");

            adtypedata(Session["compcode"].ToString());
            fillPubCenter(Session["compcode"].ToString());
          
        }
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/misupdation.xml"));

        lblfromdate.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lbltilldate.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        lblfilter.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        lbladtype.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lbladcat.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lblagency.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        lblclient.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        lblcioid.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        lblexec.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        lblret.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        lblbranch.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lblcenter.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();
        btnAdView.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
        btnExit.Text = ds.Tables[0].Rows[0].ItemArray[13].ToString();
        lblpage.Text = ds.Tables[0].Rows[0].ItemArray[14].ToString();
    }

         public void adtypedata(string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.misupdation bind = new NewAdbooking.Classes.misupdation();
            ds = bind.adtypbind(compcode);
        }
        else
        {
            NewAdbooking.classesoracle.misupdation bind = new NewAdbooking.classesoracle.misupdation();
            ds = bind.adtypbind(compcode);
        }
        
      

        int i;
        ListItem li1;

        li1 = new ListItem();
        drpadtype.Items.Clear();
        li1.Text = "-Select Ad Type-";
        li1.Value = "0";
        li1.Selected = true;
        drpadtype.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpadtype.Items.Add(li);


        }
        drpadtype.Focus();
     }
         [Ajax.AjaxMethod]
    public DataSet fillQBC(string userid)
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.misupdation logindetail = new NewAdbooking.Classes.misupdation();

            ds = logindetail.bindbranch_userwise(userid);

        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.misupdation bind = new NewAdbooking.classesoracle.misupdation();
                ds = bind.bindbranch_userwise(userid);

            }
            else
            {
            NewAdbooking.classmysql.login logindetail = new NewAdbooking.classmysql.login();

            ds = logindetail.getQBC(userid);


            }
        return ds;
    }

         private void fillPubCenter(string compcode)
         {
             DataSet ds;
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {

                 NewAdbooking.Classes.misupdation logindetail = new NewAdbooking.Classes.misupdation();
                 ds = logindetail.getPubCenter();
             }
             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.misupdation logindetail = new NewAdbooking.classesoracle.misupdation();

                 ds = logindetail.getPubCenter_company(compcode);

             }
             else
             {
                 NewAdbooking.classmysql.login logindetail = new NewAdbooking.classmysql.login();
                 ds = logindetail.getPubCenter();
             }



             drprevenu.Items.Clear();
             ListItem li1;



             li1 = new ListItem();
             li1.Text = "-Select Center-";
             li1.Value = "";
             li1.Selected = true;
             drprevenu.Items.Add(li1);
             int i;
             for (i = 0; i < ds.Tables[0].Rows.Count; i++)
             {
                 ListItem li;
                 li = new ListItem();
                 li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                 li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                 drprevenu.Items.Add(li);
             }

             drprevenu.Focus();
         }
         [Ajax.AjaxMethod]
         public DataSet getcategory(string compcode, string pkg_code)
         {
             DataSet ds = new DataSet();
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {

                 NewAdbooking.Classes.misupdation objpkg = new NewAdbooking.Classes.misupdation();
                 ds = objpkg.bind_category(compcode, pkg_code);

             }
             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.misupdation objpkg = new NewAdbooking.classesoracle.misupdation();
                 ds = objpkg.bind_category(compcode, pkg_code);
             }
             return ds;
         }
         [Ajax.AjaxMethod]
         public DataSet fill_agency(string compcode, string maingrcode, string dateformat, string extra1, string extra2)
         {
             DataSet ds = new DataSet();
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {

                 NewAdbooking.Classes.misupdation admast = new NewAdbooking.Classes.misupdation();
                 ds = admast.execute_maingrp(compcode, maingrcode, dateformat, extra1, extra2);
             }
             else
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.misupdation admast = new NewAdbooking.classesoracle.misupdation();
                     ds = admast.execute_maingrp(compcode, maingrcode, dateformat, extra1, extra2);
                 }
             return ds;
         }

         [Ajax.AjaxMethod]
         public DataSet fillF2_Creditclient(string compcol, string client)
         {
             DataSet ds = new DataSet();
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.misupdation adagencycli = new NewAdbooking.classesoracle.misupdation();
                 ds = adagencycli.clientxls(compcol, client);

             }
             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {
                 NewAdbooking.Classes.misupdation adagencycli = new NewAdbooking.Classes.misupdation();
                 ds = adagencycli.clientxls(compcol, client);
             }

             return ds;
         }


         [Ajax.AjaxMethod]
         public DataSet fillF2_Creditexecutive(string compcol, string exectv)
         {
             string tname = "", userid = "";

             DataSet ds = new DataSet();

             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {

                 NewAdbooking.Classes.misupdation logindetail = new NewAdbooking.Classes.misupdation ();
                 ds = logindetail.executivexls(compcol, userid, tname, exectv);
             }
             else
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                       NewAdbooking.classesoracle.misupdation logindetail = new   NewAdbooking.classesoracle.misupdation();
                     ds = logindetail.executivexls(compcol, userid, tname, exectv);
                 }

             return ds;
         }

    [Ajax.AjaxMethod]
    public DataSet fillF2_Creditretainer(string compcol, string ret)
    {
        DataSet ds = new DataSet();
           if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.misupdation logindetail = new NewAdbooking.Classes.misupdation ();
               
            ds = logindetail.retainerxls(compcol, ret);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.misupdation logindetail = new   NewAdbooking.classesoracle.misupdation();
              
                ds = logindetail.retainerxls(compcol, ret);
            }



        return ds;
    }
  protected void GridView1_PageIndexChange(object sender, GridViewPageEventArgs e)
    {
       GridView1.PageIndex = e.NewPageIndex;
       btnAdView_Click(sender, e);

  }

    protected void GridView1_databound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowIndex != -1)
        {
            string strpn = "txtp_"+j;
            string strpc = "txtpcod_"+j;
            string strbn = "txtbn_"+j;
            string strbc = "txtbc_"+j;
            string strvn = "txtvn_"+j;
            string strvc = "txtvc_" + j;
            string strind = "txtin_" + j;
            string strinc = "txtindco_" + j;
            e.Row.Cells[9].Text = "<input type='text' size='10'   id=" + strind + " onkeydown=\"javascript:return fillproduct(event);\" value=" + e.Row.Cells[9].Text + "  />";
            e.Row.Cells[13].Text = "<input type='text' size='2' disabled  id=" + strinc + "  value='" + e.Row.Cells[13].Text + "'  />";
         
            e.Row.Cells[10].Text = "<input type='text' size='10'  id=" + strpn + " onkeydown=\"javascript:return fillproduct(event);\" value=" + e.Row.Cells[10].Text + " />";
            e.Row.Cells[14].Text = "<input type='text' size='2' disabled  id=" + strpc + "  value='" + e.Row.Cells[14].Text + "'  />";
           
            e.Row.Cells[11].Text = "<input type='text' size='10'  id=" + strbn + " onkeydown=\"javascript:return fillproduct(event);\" value=" + e.Row.Cells[11].Text + " />";
            e.Row.Cells[15].Text = "<input type='text' size='2' disabled  id=" + strbc + "  value='" + e.Row.Cells[15].Text + "'  />";

            e.Row.Cells[12].Text = "<input type='text' size='10'  id=" + strvn + " onkeydown=\"javascript:return fillproduct(event);\"  value=" + e.Row.Cells[12].Text + " />";
            e.Row.Cells[16].Text = "<input type='text' size='2' disabled  id=" + strvc + "  value='" + e.Row.Cells[16].Text + "'  />";
            
            j++;
        }


    }
    protected void btnAdView_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        string agency = "";
        string executive = "";
        string pret_code = "";
        string client = "";
        string compcode = Session["compcode"].ToString();
        string fdate = txtvalidityfrom.Text;
        string tdate = txttilldate.Text;
        string pcenter = drprevenu.Text;
        string pbranch = drpbranch.Text;
        string padtype = drpadtype.Text;
        string padcatg = drprate.Text;
        string pfetch_on = drpbasedon.Text;
        string pbkid = txtcioid.Text;
        string pag_sub_code = "";
        string puserid = Session["userid"].ToString();
        string dateformat = Session["DateFormat"].ToString();
        string extra1 = txtpageno.Text;
        string extra2 = "";
        string extra3 = "";
        string extra4 = "";
        string extra5 = "";
        string extra6 = "";
        string extra7 = "";
        string extra8= "";
        string extra9 = "";
        string extra10 = "";


        if (txtvalidityfrom.Text == "")
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Date');", true);
            txtvalidityfrom.Focus();
            return;
        }


        if (txttilldate.Text == "")
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Date');", true);
            txttilldate.Focus();
            return;
        }
        if (drpadtype.SelectedIndex == 0)
        {
            ScriptManager.RegisterStartupScript(this.Page, this.GetType(), Guid.NewGuid().ToString(), "alert('Select Adtype');", true);
            drpadtype.Focus();
            return;
        }
        if (txtagency.Text != "" && txtagency.Text.LastIndexOf("(") >= 0)
        {
            agency = txtagency.Text.Substring(txtagency.Text.LastIndexOf("(") + 1, txtagency.Text.Length - txtagency.Text.LastIndexOf("(") - 2);

        }

        if (txtclient.Text != "" && txtclient.Text.LastIndexOf("(") >= 0)
        {
            client = txtclient.Text.Substring(txtclient.Text.LastIndexOf("(") + 1, txtclient.Text.Length - txtclient.Text.LastIndexOf("(") - 2);

        }
        if (txtexecname.Text != "" && txtexecname.Text.LastIndexOf("(") >= 0)
        {
            executive = txtexecname.Text.Substring(txtexecname.Text.LastIndexOf("(") + 1, txtexecname.Text.Length - txtexecname.Text.LastIndexOf("(") - 2);

        }
        if (txtret.Text != "" && txtret.Text.LastIndexOf("(") >= 0)
        {
            pret_code = txtret.Text.Substring(txtret.Text.LastIndexOf("(") + 1, txtret.Text.Length - txtret.Text.LastIndexOf("(") - 2);

        }
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.misupdation frec = new NewAdbooking.Classes.misupdation();
           ds = frec.findrecord(compcode, pcenter, pbranch, padtype, padcatg, agency, pag_sub_code, client, executive, pret_code, pbkid, fdate, tdate, pfetch_on, dateformat, puserid, extra1, extra2, extra3, extra4, extra5, extra6, extra7, extra8, extra9, extra10);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.misupdation frec = new NewAdbooking.classesoracle.misupdation();

            ds = frec.findrecord(compcode, pcenter, pbranch, padtype, padcatg, agency, pag_sub_code, client, executive, pret_code, pbkid, fdate, tdate, pfetch_on, dateformat, puserid, extra1, extra2, extra3, extra4, extra5, extra6, extra7, extra8, extra9, extra10);

        }
        Session["RowLen"] = ds.Tables[0].Rows.Count;
        GridView1.DataSource = ds;
        GridView1.DataBind();
    
    }
    [Ajax.AjaxMethod]
    public DataSet bindProduct(string compcode, string product,string ind_code)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
           NewAdbooking.Classes.misupdation clsbooking = new NewAdbooking.Classes.misupdation();
           ds = clsbooking.bindProduct(compcode, product.Trim(), ind_code);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.misupdation clsbooking = new NewAdbooking.classesoracle.misupdation();
            ds = clsbooking.bindProduct(compcode, product.Trim(), ind_code);
        }
        
        return ds;

    }

    [Ajax.AjaxMethod]
    public DataSet bindbrand(string compcode, string product)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.misupdation clsbooking = new NewAdbooking.Classes.misupdation();
            ds = clsbooking.bindBrand(compcode, product);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.misupdation clsbooking = new NewAdbooking.classesoracle.misupdation();
            ds = clsbooking.bindBrand(compcode, product.Trim());
        }

        return ds;

    }
    [Ajax.AjaxMethod]
    public DataSet bindvarant(string compcode, string product)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.misupdation clsbooking = new NewAdbooking.Classes.misupdation();
             ds = clsbooking.BRANDVARIENT(compcode, product);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.misupdation clsbooking = new NewAdbooking.classesoracle.misupdation();
            ds = clsbooking.BRANDVARIENT(compcode, product.Trim());
        }

        return ds;

    }
    [Ajax.AjaxMethod]
    public DataSet Update(string compcode,string idno, string product, string brand, string Varient)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.misupdation clsbooking = new NewAdbooking.Classes.misupdation();
            ds = clsbooking.Updatedata(compcode, idno, product.Trim(), brand.Trim(), Varient.Trim());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.misupdation clsbooking = new NewAdbooking.classesoracle.misupdation();
            ds = clsbooking.Updatedata(compcode, idno, product.Trim(), brand.Trim(), Varient.Trim());
        }

        return ds;

    }
    protected void btnUpdate_Click(object sender, EventArgs e)
    {
       // btnAdView_Click(sender, e);
    }
    [Ajax.AjaxMethod]
    public DataSet bindindustry(string compcode, string product)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.misupdation clsbooking = new NewAdbooking.Classes.misupdation();
            ds = clsbooking.bindindustry(compcode, product.Trim(), "0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.misupdation clsbooking = new NewAdbooking.classesoracle.misupdation();
            ds = clsbooking.bindindustry(compcode, product.Trim());
        }

        return ds;

    }
    
}



   

