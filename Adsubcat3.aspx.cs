using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Data.SqlClient;


public partial class Adsubcat3 : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
                 Response.Expires = -1;

                 if (Session["compcode"] == null)
                       {
                          Response.Redirect("login.aspx");
                           Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
                           return;
                       }
                       ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
                       hiddencomcode.Value = Session["compcode"].ToString();
                       hiddencompcode.Value = Session["compcode"].ToString();
                       hiddenuserid.Value = Session["userid"].ToString();
                       hiddenDateFormat.Value = Session["DateFormat"].ToString();
                       hiddenusername.Value = Session["Username"].ToString();
                       hiddenauto.Value = Session["autogenerated"].ToString();
                      
        Ajax.Utility.RegisterTypeForAjax(typeof(Adsubcat3));

      //  category();

        
        DataSet objDataSetbu = new DataSet();
        //***********************************************************************//
        //*****************Code For Read the data from xml File******************//
        //*******************************For The Button**************************//
        //***********************************************************************/
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();
        


        //********************************For Label****************************************/
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/adsubcat3.xml"));
        adcat1.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        AdCategory3Name.Text=ds.Tables[0].Rows[0].ItemArray[1].ToString();
        AdCategory3Code.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        AdCategoryName.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        Alias.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lblxml.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        lblpriority.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        Status.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        lbPublicationCenter.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        lblsapcode.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        lblstatewise.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();

        if (ds.Tables.Count > 1)
        {
            if (ds.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
            {

                lblxml.Attributes.Add("style", "display:none");
                txtxml.Attributes.Add("style", "display:none");
            }
        }
        State();

        btnNew.Enabled = true;
       // btnNew.Focus();
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        txtalias.Enabled = false;
        txtadcat3name.Enabled = false;
        txtadcat3code.Enabled = false;
        drpadvcatcode.Enabled = false;
        drpadcategory.Enabled = false;
        txtxml.Enabled = false;
        txtpriority.Enabled = false;
        if (!IsPostBack)
        {
            txtalias.Attributes.Add("OnBlur", "javascript:return uppercase2('txtalias');");
            txtadcat3code.Attributes.Add("OnBlur", "javascript:return uppercase1('txtadcat3code');");

            btnNew.Attributes.Add("OnClick", "javascript:return catnewclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return catsaveclick();");
            txtadcat3name.Attributes.Add("OnChange", "javascript:return autoornot();");
            btnModify.Attributes.Add("OnClick", "javascript:return catmodifyclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return catqueryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return catexecuteclick();");
            btnfirst.Attributes.Add("OnClick", "javascript:return catfirstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return catpreviousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return catnextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return catlastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return catexitclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return catdeleteclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return catcancelclick('Adsubcat3');");
            drpstatewise.Attributes.Add("OnChange", "javascript:return fillAdCat2();");
            drpadcategory.Attributes.Add("OnChange", "javascript:return fillAdCat99();");
            category1("0");
            publicationbind();
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        
        
        //State();

    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet fillCat1(string cat1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.adsubcat3 category = new NewAdbooking.Classes.adsubcat3();

            ds = category.getCat1(cat1,Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat3 category = new NewAdbooking.classesoracle.adsubcat3();

            ds = category.getCat1(cat1, Session["compcode"].ToString());
        }
        //else
        //{
        //    NewAdbooking.classmysql.adsubcat3 category = new NewAdbooking.classmysql.adsubcat3();
        //    ds = category.getCat1(cat1, Session["compcode"].ToString());
        //}

        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
       {
           string procedureName = "GETCAT1_GETCAT1_P";
           string[] parameterValueArray = { cat1, Session["compcode"].ToString() };
           NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
           ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
       }

        return ds;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet fillCat2(string cat1,string st)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCat4 category = new NewAdbooking.Classes.AdCat4();

            ds = category.addcategoryname2(cat1, Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCat4 category = new NewAdbooking.classesoracle.AdCat4();

            ds = category.addcategoryname21(cat1, Session["compcode"].ToString(),st);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "advsubcategory1_advsubcategory_p1";
            string[] parameterValueArray = { cat1, st, Session["compcode"].ToString() };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        //else
        //{
        //    NewAdbooking.classmysql.AdCat4 category = new NewAdbooking.classmysql.AdCat4();

        //    ds = category.addcategoryname2(cat1, Session["compcode"].ToString());
        //}
        return ds;
    }
    public void category1(string adtype)
    {
        DataSet ds = new DataSet();

        //adtype = "CL0".ToString();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdCat4 category = new NewAdbooking.Classes.AdCat4();

            ds = category.addcategoryname1("",Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCat4 category = new NewAdbooking.classesoracle.AdCat4();

            ds = category.addcategoryname1("", Session["compcode"].ToString());
        }

        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "ADCATEGORY_ADCATEGORY_P";
            string[] parameterValueArray = { "", Session["compcode"].ToString() };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
      //  return ds;
        //else
        //{
        //    NewAdbooking.classmysql.AdCat4 category = new NewAdbooking.classmysql.AdCat4();

        //    ds = category.addcategoryname1("", Session["compcode"].ToString());
        //}
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Add Category-";
        li1.Value = "0";
        li1.Selected = true;
        drpadcategory.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpadcategory.Items.Add(li);


        }



    }

    public void State()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CityMaster StateName = new NewAdbooking.Classes.CityMaster();
            ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.CityMaster StateName = new NewAdbooking.classesoracle.CityMaster();
            ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "CityMst_State_CityMst_State_p";
            string[] parameterValueArray = { Session["compcode"].ToString(), Session["userid"].ToString() };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
       // return ds;
        //else
        //{
        //    NewAdbooking.classmysql.CityMaster StateName = new NewAdbooking.classmysql.CityMaster();
        //    ds = StateName.state(Session["compcode"].ToString(), Session["userid"].ToString());
        //}

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select";
        li1.Value = "0";
        //li1.Selected =true;
        drpstatewise.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpstatewise.Items.Add(li);
        }
    }
    public void category()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.adsubcat3 category = new NewAdbooking.Classes.adsubcat3();

            ds = category.addcategory3name(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat3 category = new NewAdbooking.classesoracle.adsubcat3();

            ds = category.addcategory3name(Session["compcode"].ToString());
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "adsubcat_adsubcat_p";
            string[] parameterValueArray = { Session["compcode"].ToString() };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
       // return ds;
        //else
        //{
        //    NewAdbooking.classmysql.adsubcat3 category = new NewAdbooking.classmysql.adsubcat3();
        //    ds = category.addcategory3name(Session["compcode"].ToString());
        //}

            ListItem li1;
            li1 = new ListItem();
            li1.Text = "--Select Ad Category--";
            li1.Value = "0";
            li1.Selected = true;
            drpadvcatcode.Items.Add(li1);

            int i;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                drpadvcatcode.Items.Add(li);


            }
        }
       
    
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
  //  public DataSet savecat3(string compcode, string userid, string subcatname, string catname, string catcode, string catalias, string xml, string ip, string priority, string statusai, string ppubcenter, string sapcode, string statecode,string pub)
    public DataSet savecat3(string compcode, string subcatname, string catname, string catalias, string catcode, string userid, string xml, string ip2, string priority, string statusai, string ppubcenter, string sapcode, string statecode, string pub)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                //string procedureName = "cat3save_cat3save_p";
                string procedureName = "cat3save";
                string[] parameterValueArray = { compcode, subcatname, catname, catalias, catcode, userid, xml, priority, statusai, ppubcenter, sapcode, statecode, pub };
                NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                string procedureName = "cat3save.cat3save_p";
                string[] parameterValueArray = { compcode, subcatname, catname, catalias, catcode, userid, xml, priority, statusai, ppubcenter, sapcode, statecode, pub };
                NewAdbooking.classesoracle .CommonClass  obj = new NewAdbooking.classesoracle .CommonClass ();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "cat3save_cat3save_p";
                string[] parameterValueArray = { compcode, subcatname, catname, catcode, catalias, userid, xml, priority, statusai, ppubcenter, sapcode, statecode, pub };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            return ds;
           
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string catcode1 = "Inserted Ad Sub Category3  " + catcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Ad Sub Category3 ','" + err.Replace("'", "''") + "','Ad Sub Category3 Created','" + catcode1;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip1 + "')";
        dconnect.executenonquery1(sqldd);
        return ds;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet cat3modify(string compcode,  string subcatname, string catname,string catalias ,string catcode,string userid, string xml, string ip, string priority,string statusai,string ppubcenter,string sapcode,string statecode,string pub)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                string procedureName = "CAT3_MODIFY";
                string[] parameterValueArray = { compcode, subcatname, catname, catalias, catcode, userid, xml, priority, statusai, ppubcenter, sapcode, statecode, pub };
                NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                string procedureName = "cat3_modify.cat3_modify_p";
                string[] parameterValueArray = { compcode, subcatname, catname, catalias, catcode, userid, xml, priority, statusai, ppubcenter, sapcode, statecode, pub };
                NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "CAT3_MODIFY_CAT3_MODIFY_P";
                //string[] parameterValueArray = { compcode, userid, subcatname, catname, catcode, catalias, xml, ppubcenter, priority, statusai, sapcode, statecode, pub };
                string[] parameterValueArray = { compcode, subcatname, catname, catalias, catcode, userid, xml, priority, statusai, ppubcenter, sapcode, statecode, pub };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            return ds;
           
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string catcode2 = "Modified Ad Sub Category3  " + catcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Ad Sub Category3 ','" + err.Replace("'", "''") + "','Ad Sub Category3 Updated','" + catcode2;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;

    }
    [Ajax.AjaxMethod]
    public DataSet catexecute1(string compcode, string subcatname, string catname, string catcode, string catalias, string xml, string ppubcenter, string statecode)
    
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.adsubcat3 catexe = new NewAdbooking.Classes.adsubcat3();

            ds = catexe.catexecute1(compcode, subcatname, catname, catcode, catalias, xml, ppubcenter, statecode);
           // return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat3 catexe = new NewAdbooking.classesoracle.adsubcat3();
            ds = catexe.catexecute1(compcode, subcatname, catname, catcode, catalias, xml, ppubcenter, statecode);
          //  return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "CAT_EXE1_CAT_EXE1_p1";
            string[] parameterValueArray = { compcode, subcatname, catname, catcode, catalias, xml, ppubcenter, statecode };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
       
    }

    //[Ajax.AjaxMethod]
    //public DataSet catfpnl()
    //{
    //    DataSet ds = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.Classes.adsubcat3 first = new NewAdbooking.Classes.adsubcat3();

    //        ds = first.catfpnl();
    //        return ds;
    //    }
    //    else
    //    {
    //        NewAdbooking.classmysql.adsubcat3 first = new NewAdbooking.classmysql.adsubcat3();
    //        ds = first.catfpnl();
    //        return ds;
    //    }
    //}
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet catdelete(string compcode,string catcode, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.adsubcat3 catdel = new NewAdbooking.Classes.adsubcat3();

                ds = catdel.catdelete(compcode, catcode);
                //   return ds;
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.adsubcat3 catdel = new NewAdbooking.classesoracle.adsubcat3();

                ds = catdel.catdelete(compcode, catcode);
                // return ds;
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "CAT_DELETE_CAT_DELETE_p";
                string[] parameterValueArray = { compcode, catcode };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            //else
            //{
            //    NewAdbooking.classmysql.adsubcat3 catdel = new NewAdbooking.classmysql.adsubcat3();
            //    ds = catdel.catdelete(compcode, catcode);
            //    //return ds;
            //}
            return ds;
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string catcode3 = "Deleted Ad Sub Category3  " + catcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Ad Sub Category3 ','" + err.Replace("'", "''") + "','Ad Sub Category3 Deleted','" + catcode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]

    public DataSet chkcatcod(string catcode, string subcatname, string catname, string statecode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.adsubcat3 Chkcatcod = new NewAdbooking.Classes.adsubcat3();

            ds = Chkcatcod.chkcatcod(catcode,subcatname, catname,Session["compcode"].ToString());
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat3 Chkcatcod = new NewAdbooking.classesoracle.adsubcat3();
            ds = Chkcatcod.chkcatcod(catcode, subcatname, Session["compcode"].ToString(), statecode);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "CATCHK_CATCHK_p";
            string[] parameterValueArray = { catcode, subcatname, Session["compcode"].ToString(), statecode };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        
        return ds;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet catdauto(string str, string subcatname,string statecode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.adsubcat3 chk = new NewAdbooking.Classes.adsubcat3();

            ds = chk.catdauto(str, subcatname, Session["compcode"].ToString());
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat3 chk = new NewAdbooking.classesoracle.adsubcat3();
            ds = chk.catdauto(str, subcatname, Session["compcode"].ToString(), statecode);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "Cat_Auto_new1";
            string[] parameterValueArray = { str,str.Substring(0, 2), subcatname, Session["compcode"].ToString(), statecode };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //else
        //{
        //    NewAdbooking.classmysql.adsubcat3 chk = new NewAdbooking.classmysql.adsubcat3();
        //    ds = chk.catdauto(str, subcatname);
        //    return ds;
        //}
        return ds;
}
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet chkcatname(string str, string subcatname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.adsubcat3 chk = new NewAdbooking.Classes.adsubcat3();

            ds = chk.catnamechk(str, subcatname, Session["compcode"].ToString());
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.adsubcat3 chk = new NewAdbooking.classesoracle.adsubcat3();
            ds = chk.catnamechk(str, subcatname, Session["compcode"].ToString());
            return ds;
        }
             {
            string procedureName = "cat_namechk_cat_namechk_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { str, subcatname, Session["compcode"].ToString() };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
             return ds;
        //else
        //{
        //    NewAdbooking.classmysql.adsubcat3 chk = new NewAdbooking.classmysql.adsubcat3();
        //   ds = chk.catdauto(str, subcatname);
        //    return ds;
        //}
    }
    public void publicationbind()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            //NewAdbooking.Report.classesoracle.Class1 pub_cent1 = new NewAdbooking.Report.classesoracle.Class1();
            //ds = pub_cent1.pub_cent(Session["compcode"].ToString());
            NewAdbooking.Report.classesoracle.Class1 pub_cent1 = new NewAdbooking.Report.classesoracle.Class1();
            ds = pub_cent1.pub_centbind(Session["compcode"].ToString(), Session["userid"].ToString(), "0");

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Report.Classes.Class1 pub_cent1 = new NewAdbooking.Report.Classes.Class1();
            ds = pub_cent1.pub_centbind(Session["compcode"].ToString(), Session["userid"].ToString(),"0");
        }
        else
        {
            string procedureName = "pubcent_proc_pubcent_proc_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { Session["compcode"].ToString(), Session["userid"].ToString(), "0" };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        int i;
        ListItem li;
        li = new ListItem();
        dppubcent.Items.Clear();

        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/frontend.xml"));
        li.Text = ds1.Tables[0].Rows[0].ItemArray[4].ToString();
        li.Value = "0";
        li.Selected = true;
        dppubcent.Items.Add(li);


        if (ds.Tables.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li1;
                li1 = new ListItem();
                li1.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li1.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                dppubcent.Items.Add(li1);

            }
        }
        dppubcent.SelectedValue = Session["center"].ToString();

    }



    protected void dppubcent_SelectedIndexChanged(object sender, EventArgs e)
    {

    }
}
