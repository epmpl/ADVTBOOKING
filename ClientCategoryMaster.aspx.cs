using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class ClientCategoryMaster : System.Web.UI.Page
{

    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        if (Session["compcode"] == null)
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }

        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenDateFormat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();

        //navigation();
        Ajax.Utility.RegisterTypeForAjax(typeof(ClientCategoryMaster));
        hiddenusername.Value = Session["Username"].ToString();

    



        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        txtclientcatcode.Enabled = false;
        txtclientcatname.Enabled = false;
        txtclientcatalias.Enabled = false;
      

        //****work done by shweta***********************************************************
        //******************************XML FOR BUTTON**************************************
        DataSet objDataSetbu = new DataSet();
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        

        //******************************XML for labels****************************************
        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/ClientCategoryMaster.xml"));

        ClientCategoryCode.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        ClientCategoryName.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
        ClientCategoryAlias.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();

        btnNew.Focus();

        if (!Page.IsPostBack)
        {
            //  getbuttoncheck(formname);
            btnNew.Attributes.Add("OnClick", "javascript:return newclick();");
            btnSave.Attributes.Add("onclick", "javascript:return saveclick();");
            btnModify.Attributes.Add("onclick", "javascript:return modifyclick();");

            btnQuery.Attributes.Add("OnClick", "javascript:return queryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return executeclick();");

            btnfirst.Attributes.Add("onclick", "javascript:return firstclick();");
            btnlast.Attributes.Add("onclick", "javascript:return lastclick();");
            btnprevious.Attributes.Add("onclick", "javascript:return previousclick();");
            btnnext.Attributes.Add("onclick", "javascript:return nextclick();");
            btnDelete.Attributes.Add("onclick", "javascript:return deleteclick();");
            btnExit.Attributes.Add("onclick", "javascript:return closeclient();");

            


            btnCancel.Attributes.Add("onclick", "javascript:return cancelclick('ClientCategoryMaster');");

            //txtclientcatcode.Attributes.Add("OnChange", "javascript:return uppercase('txtclientcatcode');");
            txtclientcatname.Attributes.Add("OnChange", "javascript:return autoornot();");




            //txtclientcatalias.Attributes.Add("OnChange", "javascript:return uppercase('txtclientcatalias');");
        }

          if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
    




        
    }

/**********************************************************************************************************/

    protected void btnNew_Click(object sender, EventArgs e)
    {
        //pnew.Value = "1";
        txtclientcatcode.Text = "";
        txtclientcatname.Text = "";
        txtclientcatalias.Text = "";
        // query.Value = "1";

        if (Session["autogenerated"].ToString() == "1")
        {
            txtclientcatcode.Enabled = false;
        }
        else
        {
            txtclientcatcode.Enabled = true;
        }
        txtclientcatname.Enabled = true;
        txtclientcatalias.Enabled = true;

        // chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnNew.Enabled = false;
        btnQuery.Enabled = false;
        btnCancel.Enabled = true;
        btnExit.Enabled = true;

    }
/****************************************************************************************************/
    [Ajax.AjaxMethod]
   
    public DataSet chkclientcatmast(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.clientcategorymaster ccm = new NewAdbooking.Classes.clientcategorymaster();

            ds = ccm.countccmcode(str);
            return ds;
        }

             else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.clientcategorymaster ccm = new NewAdbooking.classesoracle.clientcategorymaster();

                ds = ccm.countccmcode(str);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.clientcategorymaster ccm = new NewAdbooking.classmysql.clientcategorymaster();

                ds = ccm.countccmcode(str);
                return ds;
            }
       
    }
/***************************************************************************************************/

    [Ajax.AjaxMethod]
    public DataSet checkccm(string clientcatcode, string compcode, string userid,string name)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.clientcategorymaster check = new NewAdbooking.Classes.clientcategorymaster();

            ds = check.checkccmcode(clientcatcode, compcode, userid, name);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.clientcategorymaster check = new NewAdbooking.classesoracle.clientcategorymaster();

                ds = check.checkccmcode(clientcatcode, compcode, userid, name);
                return ds;
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "checkclientcatmaster_checkclientcatmaster_p_NEW";
                string[] parameterValueArray = { clientcatcode, compcode, userid, name };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
        return ds;
    }
/*******************************************************************************************************/
     [Ajax.AjaxMethod]
    public DataSet insert(string ccmcode, string ccmname, string ccmalias, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.clientcategorymaster insertccmast = new NewAdbooking.Classes.clientcategorymaster();

            ds = insertccmast.insertclientcatmast(ccmcode, ccmname, ccmalias, compcode, userid);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.clientcategorymaster insertccmast = new NewAdbooking.classesoracle.clientcategorymaster();

                ds = insertccmast.insertclientcatmast(ccmcode, ccmname, ccmalias, compcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.clientcategorymaster insertccmast = new NewAdbooking.classmysql.clientcategorymaster();
            ds = insertccmast.insertclientcatmast(ccmcode, ccmname, ccmalias, compcode, userid);
            return ds;
        }
    }
/**********************************************************************************************************/

    [Ajax.AjaxMethod]
    public DataSet update(string ccmcode, string ccmname, string ccmalias, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.clientcategorymaster updateclientcatmast = new NewAdbooking.Classes.clientcategorymaster();

            ds = updateclientcatmast.updaetccmcode(ccmcode, ccmname, ccmalias, compcode, userid);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.clientcategorymaster updateclientcatmast = new NewAdbooking.classesoracle.clientcategorymaster();

                ds = updateclientcatmast.updaetccmcode(ccmcode, ccmname, ccmalias, compcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.clientcategorymaster updateclientcatmast = new NewAdbooking.classmysql.clientcategorymaster();
            ds = updateclientcatmast.updaetccmcode(ccmcode, ccmname, ccmalias, compcode, userid);
            return ds;
        }
    }
 /*********************************************************************************************************/
 
    [Ajax.AjaxMethod]
    public DataSet execute(string ccmcode, string ccmname, string ccmalias, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.clientcategorymaster execute1 = new NewAdbooking.Classes.clientcategorymaster();

            ds = execute1.executeccm(ccmcode, ccmname, ccmalias, compcode, userid);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.clientcategorymaster execute1 = new NewAdbooking.classesoracle.clientcategorymaster();

                ds = execute1.executeccm(ccmcode, ccmname, ccmalias, compcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.clientcategorymaster execute1 = new NewAdbooking.classmysql.clientcategorymaster();
            ds = execute1.executeccm(ccmcode, ccmname, ccmalias, compcode, userid);
            return ds;
        }
    }
/*********************************************************************************************************/

/************************************************************************************************************/
     [Ajax.AjaxMethod]
    public DataSet deleteit(string ccmcode, string ccmcompcode, string ccmuserid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.clientcategorymaster objdelete = new NewAdbooking.Classes.clientcategorymaster();

            ds = objdelete.deleteit(ccmcode, ccmcompcode, ccmuserid);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.clientcategorymaster objdelete = new NewAdbooking.classesoracle.clientcategorymaster();

                ds = objdelete.deleteit(ccmcode, ccmcompcode, ccmuserid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.clientcategorymaster objdelete = new NewAdbooking.classmysql.clientcategorymaster();
            ds = objdelete.deleteit(ccmcode, ccmcompcode, ccmuserid);
            return ds;
        }
    }
/**********************************************************************************************************/
    protected void btnSave_Click(object sender, EventArgs e)
    {

    }
    [Ajax.AjaxMethod]
    public DataSet chkname(string compcode, string name, string code)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.clientcategorymaster idname = new NewAdbooking.Classes.clientcategorymaster();

            ds = idname.chknameforduplicate(compcode, name, code);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.clientcategorymaster idname = new NewAdbooking.classesoracle.clientcategorymaster();

                ds = idname.chknameforduplicate(compcode, name, code);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.clientcategorymaster idname = new NewAdbooking.classmysql.clientcategorymaster();
            ds = idname.chknameforduplicate(compcode, name, code);
            return ds;
        }
    }
/*********************************************************************************************************/
}

   
