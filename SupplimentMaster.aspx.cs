using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class SupplimentMaster : System.Web.UI.Page
{
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void blankSession()
    {
        Session["firstdate"] = null;
        Session["seconddate"] = null;
    }
    protected void Page_Load(object sender, System.EventArgs e)
    {
        btnNew.Focus();
        Response.Expires = -1;
        if (Session["compcode"] != null)
        {
            hiddencompcode11.Value = Session["compcode"].ToString();
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            //dateformat=Session["dateformat"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();

        }
        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }

        hiddenusername.Value = Session["Username"].ToString();
        if (Session["Username"] == null)
        {
            Response.Redirect("login.aspx");
        }
        else
        {


        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"]; 
        Ajax.Utility.RegisterTypeForAjax(typeof(SupplimentMaster));
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();


        DataSet objDataSetlb = new DataSet();
        objDataSetlb.ReadXml(Server.MapPath("XML/SupplimentMaster.xml"));
        SupplementCode.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[0].ToString();
        PublicationName.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[1].ToString();
        EditonName.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[2].ToString();
        SupplementName.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[3].ToString();
        Alias.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[4].ToString();
        lbuom.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[5].ToString();
        lbcolumn.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[6].ToString();
        lbsize.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[7].ToString();
        lbheight.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[8].ToString();
        lbwidth.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[9].ToString();
        lbsupplement.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[19].ToString();
        lbperiodicity.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[20].ToString();
        supptyp.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[21].ToString();
      
        SELECTSUPPLIMENTDAY.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[10].ToString();
        SUN.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[11].ToString();
        MON.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[12].ToString();
        TUE.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[13].ToString();
        WED.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[14].ToString();
        THU.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[15].ToString();
        FRI.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[16].ToString();
        SAT.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[17].ToString();
        ALL.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[18].ToString();

        lblgutter.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[22].ToString();
        lblcolumn.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[23].ToString();
        lblrotime.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[24].ToString();
        lblhr.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[25].ToString();
        lblmin.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[26].ToString();
        lblproduction.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[27].ToString();
        lbdaysbefore.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[28].ToString();
        lblshortname.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[29].ToString();
        lblepr.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[30].ToString();

        if (objDataSetlb.Tables.Count > 1)
        {
            if (objDataSetlb.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
            {
                lbuom.Attributes.Add("style", "display:none");
                druom.Attributes.Add("style", "display:none");
            }

        }
        if (!Page.IsPostBack)
        {
            addPub();
            addUOM();
            addperiod();
            addsupptyp();
      
            btnNew.Enabled = true;
            btnSave.Enabled = false;
            btnModify.Enabled = false;
            btnDelete.Enabled = false;
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;
            lbsupplement.Enabled = true;
         
            drpPubName.Enabled = false;
            drEditonName.Enabled = false;
            drsupptyp.Enabled = false;
            
            txtAlias.Enabled = false;
            txtSuppCode.Enabled = false;
            txtSuppName.Enabled = false;
            druom.Enabled = false;
            txtcolumn.Enabled = false;
            txtsizeheight.Enabled = false;
            txtsizewidth.Enabled = false;
            drperiodicity.Enabled = false;
            txtgutter.Enabled = false;
            txtcol.Enabled = false;
            txthr.Enabled = false;
            txtmin.Enabled = false;
            txtproduction.Enabled = false;
            txtarea.Enabled = false;
            lbsupplement.Enabled = false;
            txtshortname.Enabled = false;

            lbsupplement.Attributes.Add("OnClick", "javascript:return opensupplement();");
       
            btnNew.Attributes.Add("OnClick", "javascript:return ClickNew();");
            btnSave.Attributes.Add("OnClick", "javascript:return ClickSave();");
            btnModify.Attributes.Add("OnClick", "javascript:return ClickModify();");
            btnDelete.Attributes.Add("OnClick", "javascript:return ClickDelete();");
            btnQuery.Attributes.Add("OnClick", "javascript:return ClickQuery();");
            btnExecute.Attributes.Add("OnClick", "javascript:return ClickExecute();");
            btnCancel.Attributes.Add("OnClick", "javascript:return ClickCancel('SupplimentMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return ClickFirst();");
            btnprevious.Attributes.Add("OnClick", "javascript:return ClickPrevious();");
            btnnext.Attributes.Add("OnClick", "javascript:return ClickNext();");
            btnlast.Attributes.Add("OnClick", "javascript:return ClickLast();");
            btnExit.Attributes.Add("OnClick", "javascript:return ClickExit();");

            CheckBox8.Attributes.Add("OnClick", "javascript:return checkedunchecked('CheckBox8');");
            CheckBox1.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox2.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox3.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox4.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox5.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox6.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox7.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            
            txtAlias.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtAlias');");
            txtSuppCode.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtSuppCode');");
            txtSuppName.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtSuppName');");
            //txtSuppName.Attributes.Add("onkeypress","javascript:return Clientchar();");
            //txtAlias.Attributes.Add("OnBlur","javascript:return ClientUpperCase('txtAlias');");
            txtSuppName.Attributes.Add("OnChange", "javascript:return autoornot();");
            txtSuppCode.Attributes.Add("OnBlur", "javascript:return autoornot();");
            drEditonName.Attributes.Add("OnChange", "javascript:return fillalias();");


          //  drpPubName.Attributes.Add("OnChange", "javascript:addeditionname();");
            drpPubName.Attributes.Add("OnBlur","javascript:return addcount();");
            drEditonName.Attributes.Add("OnChange", "javascript:return chkbox_supplement();");
            txtsizeheight.Attributes.Add("OnBlur", "javascript:return fillheight();");
            txtsizewidth.Attributes.Add("OnBlur", "javascript:return fillwidth();");
            txtsizeheight.Attributes.Add("OnChange", "javascript:return chkheight('txtsizeheight');");
            txtsizewidth.Attributes.Add("OnChange", "javascript:return chkwidth('txtsizewidth');");
            drEditonName.Attributes.Add("onkeypress", "return keySort(this);");
            drpPubName.Attributes.Add("onkeypress", "return keySort(this);");
            drsupptyp.Attributes.Add("onkeypress", "return keySort(this);");
            druom.Attributes.Add("onkeypress", "return keySort(this);");
            drperiodicity.Attributes.Add("onkeypress", "return keySort(this);");
            txtgutter.Attributes.Add("OnChange", "javascript:return checkgutter();");
            txtcol.Attributes.Add("OnChange", "javascript:return checkcol();");
            txtmin.Attributes.Add("OnChange", "javascript:return checkmin();");
            txthr.Attributes.Add("OnChange", "javascript:return checkhr();");
           drperiodicity.Attributes.Add("OnChange", "javascript:return chkbox_periodicity();");
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
    }

  [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public void insert(string PubName,string EditonName,string CityName,string SuppName,string Alias,string SuppCode,string compcode,string userid)
    public void insert(string PubName, string EditonName, string SuppName, string Alias, string SuppCode, string compcode, string userid, string uom, string column, string height, string width, string area, string periodicity, string supptyp, string gut, string col, string hr, string min, string pro, string ip, string SHORTNAME,string epaper)
     {
         DataSet ds = new DataSet();
         string err = "";
         try
         {

             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {
                 NewAdbooking.Classes.SupplimentMaster insert = new NewAdbooking.Classes.SupplimentMaster();
                 ds = insert.InsertValue(PubName, EditonName, SuppName, Alias, SuppCode, compcode, userid, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro,epaper,SHORTNAME);
             }
             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.SupplimentMaster insert = new NewAdbooking.classesoracle.SupplimentMaster();
                 ds = insert.InsertValue(PubName, EditonName, SuppName, Alias, SuppCode, compcode, userid, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro, SHORTNAME,epaper);
             }
             else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
             {
                 string procedureName = "websp_Supplementinsert_websp_Supplementinsert_p";
                 string[] parameterValueArray = { PubName, EditonName, SuppCode, SuppName, Alias, userid, compcode, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro, SHORTNAME, epaper };
                 NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                 ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
             }
         }
         catch (Exception e)
         {
             err = e.Message;
         }
         string SuppCode1 = "Inserted Supplement " + SuppCode;
         clsconnection dconnect = new clsconnection();
         string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Supplement','" + err.Replace("'", "''") + "','Supplement Inserted','" + SuppCode1;
         sqldd = sqldd + "',";
         sqldd = sqldd + "'" + ip + "')";
         dconnect.executenonquery1(sqldd);
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public void modify(string PubName,string EditonName,string CityName,string SuppName,string Alias,string SuppCode,string compcode,string userid)
  public void modify(string PubName, string EditonName, string SuppName, string Alias, string SuppCode, string compcode, string userid, string uom, string column, string height, string width, string area, string periodicity, string supptyp, string gut, string col, string hr, string min, string pro, string ip, string SHORTNAME,string epaper)
     {

         DataSet ds = new DataSet();
         string err = "";
         try
         {

             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {

                 NewAdbooking.Classes.SupplimentMaster modify = new NewAdbooking.Classes.SupplimentMaster();
                 ds = modify.ModifyValue(PubName, EditonName, SuppName, Alias, SuppCode, compcode, userid, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro,epaper,SHORTNAME);
             }
             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.SupplimentMaster modify = new NewAdbooking.classesoracle.SupplimentMaster();
                 ds = modify.ModifyValue(PubName, EditonName, SuppName, Alias, SuppCode, compcode, userid, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro,SHORTNAME,epaper);
             }
             else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
             {
                 string procedureName = "websp_Supplementmodify_websp_Supplementmodify_p";
                 string[] parameterValueArray = { PubName, EditonName, SuppCode, SuppName, Alias, userid, compcode, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro, SHORTNAME, epaper };
                 NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                 ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
             }

         }
         catch (Exception e)
         {
             err = e.Message;
         }
         string SuppCode2 = "Modified Supplement " + SuppCode;
         clsconnection dconnect = new clsconnection();
         string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Supplement','" + err.Replace("'", "''") + "','Supplement Modified','" + SuppCode2;
         sqldd = sqldd + "',";
         sqldd = sqldd + "'" + ip + "')";
         dconnect.executenonquery1(sqldd);

    }

    [Ajax.AjaxMethod]
    //		public DataSet Select(string PubName,string EditonName,string CityName,string SuppName,string Alias,string SuppCode,string compcode,string userid)
    public DataSet Select(string PubName, string EditonName, string SuppName, string Alias, string SuppCode, string compcode, string userid, string uom, string column, string height, string width, string area, string periodicity, string supptyp, string gut, string col, string hr, string min, string pro, string SHORTNAME)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster select = new NewAdbooking.Classes.SupplimentMaster();            
            ds = select.SelectValue(PubName, EditonName, SuppName, Alias, SuppCode, compcode, userid, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro);

            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster select = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = select.SelectValue(PubName, EditonName, SuppName, Alias, SuppCode, compcode, userid, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro, SHORTNAME);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
       {
           string procedureName = "websp_SupplementSelect_websp_SupplementSelect_p";
           string[] parameterValueArray = { compcode, PubName, EditonName, SuppCode, SuppName, Alias, userid, uom, column, height, width, area, periodicity, supptyp, gut, col, hr, min, pro, SHORTNAME };
           NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
           ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
       }
        return ds;

    }


    [Ajax.AjaxMethod]
    //		public DataSet Selectfnpl(string PubName,string EditonName,string CityName,string SuppName,string Alias,string SuppCode,string compcode,string userid)
    public DataSet Selectfnpl(string PubName, string EditonName, string SuppName, string Alias, string SuppCode, string compcode, string userid, string SHORTNAME)
     {
         DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster select = new NewAdbooking.Classes.SupplimentMaster();
            

            ds = select.Selectfnpl(PubName, EditonName, SuppName, Alias, SuppCode, compcode, userid);

            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster select = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = select.Selectfnpl(PubName, EditonName, SuppName, Alias, SuppCode, compcode, userid, SHORTNAME);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
       {
           string procedureName = "websp_supplementfnpl_websp_supplementfnpl_p";
           string[] parameterValueArray = { compcode, userid};
           NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
           ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
       
        }

return ds;
    }

   


    //		public void addPub()
     public void addPub()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster PubName = new NewAdbooking.Classes.SupplimentMaster();
            
            ds = PubName.Pub(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster PubName = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = PubName.Pub(hiddencompcode.Value);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "bind_pubname_bind_pubedname_p";
            string[] parameterValueArray = { hiddencompcode.Value };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Publication--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpPubName.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpPubName.Items.Add(li);


        }
    }

    public void addsupptyp()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster supptyp = new NewAdbooking.Classes.SupplimentMaster();
            
            ds = supptyp.supptyp(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster supptyp = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = supptyp.supptyp(hiddencompcode.Value);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "Bind_supptyp_Bind_supptyp_p";
            string[] parameterValueArray = { hiddencompcode.Value };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Supplement Type--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drsupptyp.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drsupptyp.Items.Add(li);


        }
    }

    public void addUOM()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.EditorMaster uom = new NewAdbooking.Classes.EditorMaster();
            
            ds = uom.uomname(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.EditorMaster uom = new NewAdbooking.classesoracle.EditorMaster();
            ds = uom.uomname(hiddencompcode.Value);
        }

        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "bind_uomname_p";
            string[] parameterValueArray = { hiddencompcode.Value };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Volume Unit-";
        li1.Value = "0";
        li1.Selected = true;
        druom.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            druom.Items.Add(li);
        }
    }

    //**********This is used to bind periodicity***************//

    public void addperiod()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.EditorMaster periodcity = new NewAdbooking.Classes.EditorMaster();
            
            ds = periodcity.periodic(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.EditorMaster periodcity = new NewAdbooking.classesoracle.EditorMaster();
            ds = periodcity.periodic(hiddencompcode.Value);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "bind_periodicty_bind_periodicty_p";
            string[] parameterValueArray = { hiddencompcode.Value };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "---Select Periodicity---";
        li1.Value = "0";
        li1.Selected = true;
        drperiodicity.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drperiodicity.Items.Add(li);
        }
    }

  
    
    [Ajax.AjaxMethod]
    public DataSet fillsupplement(string editioncode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster ediname = new NewAdbooking.Classes.SupplimentMaster();
            
            ds = ediname.countedition(editioncode);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster ediname = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = ediname.countedition(editioncode);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "filledition1_filledition1_p";
            string[] parameterValueArray = { editioncode };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
     
        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet addchkvisibil(string pubcode,string compcode,string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster chkv = new NewAdbooking.Classes.SupplimentMaster();
            
            ds = chkv.chkedition(pubcode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster chkv = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = chkv.chkedition(pubcode, compcode, userid);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "checkpublicationcode_checkpublicationcode_p";
            string[] parameterValueArray = { compcode, pubcode, userid };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet addedition(string pubname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster chkv = new NewAdbooking.Classes.SupplimentMaster();
            
            ds = chkv.addedition(pubname);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster chkv = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = chkv.addedition(pubname);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "fill_editionalias_fill_editionalias_p";
            string[] parameterValueArray = { pubname };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet findedition(string editname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster chkv = new NewAdbooking.Classes.SupplimentMaster();
            
            ds = chkv.findedition(editname);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster chkv = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = chkv.findedition(editname);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "fill_supplalias_fill_supplalias_p";
            string[] parameterValueArray = { editname };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }



    [Ajax.AjaxMethod]
    //		public DataSet checkedtioncode1(string hiddencompcode,string suppcode,string userid1)
     public DataSet checkedtioncode1(string comp_code, string suppcode, string userid1,string pubcode,string editioncode)
     {
         DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster supliment = new NewAdbooking.Classes.SupplimentMaster();

            ds = supliment.checksupcode(comp_code, suppcode, userid1, pubcode, editioncode);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster supliment = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = supliment.checksupcode(comp_code, suppcode, userid1, pubcode, editioncode);
            return ds;
        }

        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "checksupplementcode_checksupplementcode_p";
            string[] parameterValueArray = { comp_code, suppcode, userid1 };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
       
        return ds;
    }

    [Ajax.AjaxMethod]
    //		public DataSet chkid(string SuppCode,string compcode,string userid)
     public DataSet chkid(string SuppName,string SuppCode,string Alias, string compcode, string userid, string pubname, string editionname)
    { 
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
           NewAdbooking.Classes.SupplimentMaster supliment = new NewAdbooking.Classes.SupplimentMaster();
           ds = supliment.chksupcode(SuppName, SuppCode, Alias,compcode, userid, pubname, editionname);
           return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster supliment = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = supliment.chksupcode(SuppName, SuppCode, Alias,compcode, userid, pubname, editionname);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "chksupcode_chksupcode_p";
            string[] parameterValueArray = { SuppCode, compcode, userid, pubname, editionname, SuppName, Alias };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            NewAdbooking.Classes.SupplimentMaster supliment = new NewAdbooking.Classes.SupplimentMaster();
            ds = supliment.chksupcode(SuppName, SuppCode, Alias, compcode, userid, pubname, editionname);
            return ds;
        }
        return ds;
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet delsup(string SuppCode,string compcode,string userid)
     public void delsup(string SuppCode, string compcode, string userid, string pubcode, string editioncode,string ip)
     {
         DataSet ds = new DataSet();
         string err = "";
         try
         {
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {

                 NewAdbooking.Classes.SupplimentMaster supliment = new NewAdbooking.Classes.SupplimentMaster();

                 ds = supliment.supdel(SuppCode, compcode, userid, pubcode, editioncode);
             }
             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.SupplimentMaster supliment = new NewAdbooking.classesoracle.SupplimentMaster();
                 ds = supliment.supdel(SuppCode, compcode, userid, pubcode, editioncode);
             }
             else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
             {
                 string procedureName = "supplimentdel_supplimentdel_p";
                 string[] parameterValueArray = { SuppCode, compcode, userid, pubcode, editioncode };
                 NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                 ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
             }
         }
         catch (Exception e)
         {
             err = e.Message;
         }
         string SuppCode3 = "Deleted Supplement " + SuppCode;
         clsconnection dconnect = new clsconnection();
         string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Supplement','" + err.Replace("'", "''") + "','Supplement Deleted','" + SuppCode3;
         sqldd = sqldd + "',";
         sqldd = sqldd + "'" + ip + "')";
         dconnect.executenonquery1(sqldd);
       // return ds;

    }

    [Ajax.AjaxMethod]
    //		public DataSet edtiondaymodify1(string hiddencompcode,string suppcode,string CheckBox1,string CheckBox2,string CheckBox3,string CheckBox4,string CheckBox5,string CheckBox6,string CheckBox7,string CheckBox8,string userid1)
     public DataSet edtiondaymodify1(string hiddencompcode, string suppcode, string CheckBox1, string CheckBox2, string CheckBox3, string CheckBox4, string CheckBox5, string CheckBox6, string CheckBox7, string CheckBox8, string userid1)
     {
         DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster modify = new NewAdbooking.Classes.SupplimentMaster();
           
            ds = modify.selecteditiondaymodify(hiddencompcode, suppcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster modify = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = modify.selecteditiondaymodify(hiddencompcode, suppcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "supplementdaymodify_supplementdaymodify_p";
            string[] parameterValueArray = { suppcode, hiddencompcode,userid1 , CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8};
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;

    }

    [Ajax.AjaxMethod]
    //		public DataSet editionpubdaysave1(string hiddencompcode,string suppcode,string CheckBox1,string CheckBox2,string CheckBox3,string CheckBox4,string CheckBox5,string CheckBox6,string CheckBox7,string CheckBox8,string userid1)
     public DataSet editionpubdaysave1(string hiddencompcode, string suppcode, string CheckBox1, string CheckBox2, string CheckBox3, string CheckBox4, string CheckBox5, string CheckBox6, string CheckBox7, string CheckBox8, string userid1)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {

             NewAdbooking.Classes.SupplimentMaster save = new NewAdbooking.Classes.SupplimentMaster();
           
             ds = save.editiondaysave(hiddencompcode, suppcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
             return ds;
         }
         else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             NewAdbooking.classesoracle.SupplimentMaster save = new NewAdbooking.classesoracle.SupplimentMaster();
             ds = save.editiondaysave(hiddencompcode, suppcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
             return ds;
         }
         else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
         {
             string procedureName = "supplementdaysave_supplementdaysave_p";
             string[] parameterValueArray = {suppcode, hiddencompcode, userid1,  CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8 };
             NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet chkcsupcode(string str,string editstr,string pubeditstr)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster chk = new NewAdbooking.Classes.SupplimentMaster();
           
            ds = chk.chkcsupcode1(str, editstr, pubeditstr);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster chk = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = chk.chkcsupcode1(str, editstr, pubeditstr);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "chksuppcode_chksuppcode_p";
            string[] parameterValueArray = { str, str.Substring(0, 2), editstr, pubeditstr };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet addcity(string edition)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster suppmast = new NewAdbooking.Classes.SupplimentMaster();
            
            ds = suppmast.countcity(edition);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster suppmast = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = suppmast.countcity(edition);
            return ds;
        }

        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "fillcity1_fillcity1_p";
            string[] parameterValueArray = { edition };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]

    public DataSet chkperiodicty_edition(string supplement)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplimentMaster chkperiodicty = new NewAdbooking.Classes.SupplimentMaster();
         
            ds = chkperiodicty.chkperiodicty_edition(supplement);

            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster chkperiodicty = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = chkperiodicty.chkperiodicty_edition(supplement);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "chkperiodictysupplement_chkperiodictysupplement_p";//chkperiodictysupplement.chkperiodictysupplement_p
            string[] parameterValueArray = { supplement };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;

    }

    [Ajax.AjaxMethod]

    public DataSet chkperiodicty(string periodicty)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.SupplimentMaster chkperiodicty = new NewAdbooking.Classes.SupplimentMaster();
           
            ds = chkperiodicty.chkperiodicty(periodicty);

            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster chkperiodicty = new NewAdbooking.classesoracle.SupplimentMaster();
            ds = chkperiodicty.chkperiodicty(periodicty);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "chkperiodictyforsupp_chkperiodictyforsupp_p";
            string[] parameterValueArray = { periodicty };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        return ds;

    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]

    public void popinsertsupp(string txteditionname, string txtdate, string txtaddate, string compcode, string userid, string suppcode)
    {
        //DataSet ds = new DataSet();
        //if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        //{
        //    NewAdbooking.Classes.SupplimentMaster insertgrid = new NewAdbooking.Classes.SupplimentMaster();
            
        //    ds = insertgrid.inserteditname(txteditionname, txtdate, txtaddate, compcode, userid, suppcode);
        //}
        //else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        //{
        //    NewAdbooking.classesoracle.SupplimentMaster insertgrid = new NewAdbooking.classesoracle.SupplimentMaster();
        //    ds = insertgrid.inserteditname(txteditionname, txtdate, txtaddate, compcode, userid, suppcode);
        //}
        //else
        //{
        //    NewAdbooking.classmysql.SupplimentMaster insertgrid = new NewAdbooking.classmysql.SupplimentMaster();

        //    ds = insertgrid.inserteditname(txteditionname, txtdate, txtaddate, compcode, userid, suppcode);
        //}
        if ((Session["suppdate"] == "") || (Session["suppdate"] == null))
        {
        }
        else
        {
            DataSet db1 = (DataSet)Session["suppdate"];
            int er1 = db1.Tables[0].Rows.Count;
            int gf1 = db1.Tables.Count;
            for (int b = 0; b <= gf1 - 1; b++)
            {
                string suppcode1 = db1.Tables[b].Rows[0].ItemArray[0].ToString();
                string txteditionname1 = db1.Tables[b].Rows[0].ItemArray[1].ToString();
                string txtdate1 = db1.Tables[b].Rows[0].ItemArray[2].ToString();
                string txtaddate1 = db1.Tables[b].Rows[0].ItemArray[3].ToString();
                //string drpadtype = db1.Tables[b].Rows[0].ItemArray[4].ToString();
                DataSet ds = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.SupplimentMaster insertgrid = new NewAdbooking.Classes.SupplimentMaster();

                    ds = insertgrid.inserteditname(txteditionname1, txtdate1, txtaddate1, compcode, userid, suppcode, Session["dateformat"].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.SupplimentMaster insertgrid = new NewAdbooking.classesoracle.SupplimentMaster();
                    ds = insertgrid.inserteditname(txteditionname1, txtdate1, txtaddate1, compcode, userid, suppcode, Session["dateformat"].ToString());
                }
                else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
                {
                    string procedureName = "insertsuppdate_insertsuppdate_p";
                    string[] parameterValueArray = { compcode, userid, txteditionname1, txtdate1, txtaddate1, suppcode};
                    NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
            }
        }
        Session["suppdate"] = null;

    }


    //ad neww
   /* [Ajax.AjaxMethod]

    public DataSet chkperiodicty(string periodicty, string publication, string edit_period, string mod, string editcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.EditorMaster chkperiodicty = new NewAdbooking.Classes.EditorMaster();

            ds = chkperiodicty.chkperiodicty(periodicty, publication, edit_period, mod, editcode);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.EditorMaster chkperiodicty = new NewAdbooking.classesoracle.EditorMaster();
            ds = chkperiodicty.chkperiodicty(periodicty, publication, edit_period, mod, editcode);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.EditorMaster chkperiodicty = new NewAdbooking.classmysql.EditorMaster();
            ds = chkperiodicty.chkperiodicty(periodicty);
            return ds;
        }


    }*/


    [Ajax.AjaxMethod]
    public DataSet enablechkbox(string pubname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.EditorMaster find = new NewAdbooking.Classes.EditorMaster();

            ds = find.enablechkbox(pubname);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.EditorMaster find = new NewAdbooking.classesoracle.EditorMaster();
            ds = find.enablechkbox(pubname);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "enablechkboxpub_enablechkboxpub_p";
            string[] parameterValueArray = { pubname };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    

    #region Web Form Designer generated code
     protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }






    protected void Topbar1_Load(object sender, EventArgs e)
    {

    }
}