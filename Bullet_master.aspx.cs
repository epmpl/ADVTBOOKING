using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class Bullet_master : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {
        // Put user code to initialize the page here
        Response.Expires = -1;
        //drpadvtype.Attributes.Add("onchange", "javascript:return advcat();");
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            hiddenpremtype.Value = Session["premtype"].ToString();
        }
        else
        {
            Response.Write("<script>alert('Your session has been Expired');window.close();</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        DataSet objDataSetbullet = new DataSet();
        // Read in the XML file
        objDataSetbullet.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbullet.Tables[0].Rows[0].ItemArray[11].ToString();
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/bulletmaster.xml"));
        //lbladvtype.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        //lbladvcat.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        //lbledition.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        lblcode.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lbldescription.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lblcharges.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        lblvfrm.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        lblvalidtill.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        lblremarks.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();

        lblpubcenter.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lbladcat.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();
       //// lblpubliname.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
       // lbedition.Text = ds.Tables[0].Rows[0].ItemArray[13].ToString();
       // btnmultibull.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        navigation();
        Ajax.Utility.RegisterTypeForAjax(typeof(Bullet_master));

        hiddenusername.Value = Session["Username"].ToString();

        drppubcenter.Enabled = false;
        drpfont.Enabled = false;
        drpadcategory.Enabled = false;
        drpedition.Enabled = false;
        if (!Page.IsPostBack)
        {

            fontbind();
            addtype();
            ddlPublication.Attributes.Add("OnChange", "javascript:return filledit();");
            txtbulletdesc.Attributes.Add("OnChange", "javascript:return autoornot();");
            txtvalidityfrom.Attributes.Add("OnChange", "javascript:return checkdate(this);  ");
            txttilldate.Attributes.Add("OnChange", "javascript:return checkdate(this);  ");
            //addedition();
            addmultilistbox();
            btnNew.Attributes.Add("OnClick", "javascript:return newclick();  ");
            btnSave.Attributes.Add("OnClick", "javascript:return saveclick();  ");
            btnModify.Attributes.Add("OnClick", "javascript:return modifyclick();  ");
            btnQuery.Attributes.Add("OnClick", "javascript:return queryclick();  ");
            btnCancel.Attributes.Add("OnClick", "javascript:return cancelclick('Bullet_master');  ");
            btnExecute.Attributes.Add("OnClick", "javascript:return executeclick();  ");
            btnfirst.Attributes.Add("OnClick", "javascript:return  firstclick();  ");
            btnlast.Attributes.Add("OnClick", "javascript:return lastclick();  ");
            btnprevious.Attributes.Add("OnClick", "javascript:return previousclick();  ");
            btnnext.Attributes.Add("OnClick", "javascript:return nextclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return exitclick();  ");
            btnDelete.Attributes.Add("OnClick", "javascript:return deleteclick();  ");
            txtbulletcode.Attributes.Add("OnChange", "javascript:return uppercase('txtbulletcode');  ");
            //txtbulletdesc.Attributes.Add("OnChange", "javascript:return uppercase('txtbulletdesc');  ");
            txtremarks.Attributes.Add("OnChange", "javascript:return uppercase('txtremarks');  ");
            txtbulletcjar.Attributes.Add("OnChange", "javascript:return allamountbullet(this);  ");

            txtvalidityfrom.Attributes.Add("OnChange", "javascript:return checkdateforcurr(this);  ");

            lbcommdetail.Attributes.Add("OnClick", "javascript:return commission();");
            //btnmultibull.Attributes.Add("OnClick", "javascript:return multiplebull();");

            advcat();
            fillPubCenter();
           // publicationbind();
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbullet.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
        ddlPublication.Enabled = false;
    }

    public void advcat()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bind = new NewAdbooking.Classes.BookingMaster();

            ds = bind.advdatacategory(Session["compcode"].ToString(), "CL0");
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bind = new NewAdbooking.classesoracle.BookingMaster();

                ds = bind.advdatacategory(Session["compcode"].ToString(), "CL0");
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster bind = new NewAdbooking.classmysql.BookingMaster();

                ds = bind.advdatacategory(Session["compcode"].ToString(), "CL0");
            }


        int i;
        ListItem li1;
        li1 = new ListItem();
        drpadcategory.Items.Clear();
        li1.Text = "Select Ad Category";
        li1.Value = "0";
        li1.Selected = true;
        drpadcategory.Items.Add(li1);

        if (ds.Tables.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drpadcategory.Items.Add(li);

            }
        }


    }
    public void fontbind()
    {
        NewAdbooking.Classes.Adsize bindtype = new NewAdbooking.Classes.Adsize();
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/eyecatcherfonts.xml"));

        ListItem li1;

        li1 = new ListItem();
        li1.Text = "--Select FontType--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpfont.Items.Add(li1);
        int i;
        for (i = 0; i < ds.Tables[0].Columns.Count; i++)
        {

            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[0].ItemArray[i].ToString();
            li.Value = ds.Tables[0].Rows[0].ItemArray[i].ToString();
            drpfont.Items.Add(li);


        }


    }

    public void addmultilistbox()
    {
        /*
        NewAdbooking.Classes.Adsize bindlistbox = new NewAdbooking.Classes.Adsize();
        DataSet ds = new DataSet();
        ds = bindlistbox.listboxbind(Session["compcode"].ToString(), Session["userid"].ToString());

        ListItem li1;
        //ListItem li2;
        li1 = new ListItem();
        li1.Text = "--Select --";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;

        ListBox1.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {

            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            ListBox1.Items.Add(li);


        }*/

    }
    public void addtype()
    {
        //NewAdbooking.Classes.Adsize bindtype = new NewAdbooking.Classes.Adsize();
        //DataSet ds = new DataSet();
        //ds = bindtype.typebind(Session["compcode"].ToString(), Session["userid"].ToString());

        //ListItem li1;

        //li1 = new ListItem();
        //li1.Text = "--Select AdType--";
        //li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        //li1.Selected = true;
        //drpadvtype.Items.Add(li1);
        //int i;
        //for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        //{

        //    ListItem li;
        //    li = new ListItem();
        //    li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
        //    li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
        //    drpadvtype.Items.Add(li);


        //}
    }
    //		
    //public void addedition()
    //{/*
    //    NewAdbooking.Classes.Adsize bindedition = new NewAdbooking.Classes.Adsize();
    //    DataSet ds = new DataSet();
    //    ds = bindedition.editionbind(Session["compcode"].ToString(), Session["userid"].ToString());

    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = "--Select Edition--";
    //    li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
    //    li1.Selected = true;
    //    drpedition.Items.Add(li1);
    //    int i;
    //    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //    {

    //        ListItem li;
    //        li = new ListItem();
    //        li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //        li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //        drpedition.Items.Add(li);


    //    }*/
    //}

    public void navigation()
    {

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        //btncomname.Enabled=false;

    }
    #region Web Form Designer generated code
    override protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    [Ajax.AjaxMethod]

    public DataSet checkcode(string comcode,string bulletdesc, string compcode, string userid, string pubcenter)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.bulletmaster check = new NewAdbooking.Classes.bulletmaster();
            da = check.checkrevcode(comcode, bulletdesc, compcode, userid, pubcenter);
            return da;
        }

        else
            if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="orcl")
            {
                NewAdbooking.classesoracle.bulletmaster check = new NewAdbooking.classesoracle.bulletmaster();
                da = check.checkrevcode(comcode, bulletdesc, compcode, userid, pubcenter);
                return da;
            }
        else
            {
                NewAdbooking.classmysql.bulletmaster check = new NewAdbooking.classmysql.bulletmaster();
                da = check.checkrevcode(comcode, bulletdesc, compcode, userid, pubcenter);
                return da;
            }

    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //public DataSet insert(string bulletcode, string advtype, string edition, string bulletdesc, string bulletcharge, string bullettext, string remarks, string listboxvalue, string validatedate, string validatetill, string compcode, string userid)
        //compcode,bulletcode,bulletdesc,bulletcharge,bullettext,validatedate,validatetill,remarks,userid,sumble
    public DataSet insert(string compcode, string bulletcode, string bulletdesc, string bulletcharge, string bullettext, string remarks, string validatedate, string validatetill, string userid, string sumble, string pubcenter, string font, string adcat, string ip, string fontcol,string pubcode,string edit)                                                                                                                                                                                   
    {
        DataSet da = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.bulletmaster insertbullet = new NewAdbooking.Classes.bulletmaster();
                da = insertbullet.insertintobullet(bulletcode, bulletdesc, bulletcharge, bullettext, remarks, validatedate, validatetill, compcode, userid, sumble, pubcenter, font, adcat, fontcol, pubcode, edit);
                //   return da;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.bulletmaster insertbullet = new NewAdbooking.classesoracle.bulletmaster();
                    da = insertbullet.insertintobullet(bulletcode, bulletdesc, bulletcharge, bullettext, remarks, validatedate, validatetill, compcode, userid, sumble, pubcenter, font, adcat, fontcol, pubcode, edit);
                    //     return da;
                }
                else
                {
                    NewAdbooking.classmysql.bulletmaster insertbullet = new NewAdbooking.classmysql.bulletmaster();
                    da = insertbullet.insertintobullet(bulletcode, bulletdesc, bulletcharge, bullettext, remarks, validatedate, validatetill, compcode, userid, sumble, pubcenter, font);
                    //return da;
                }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string bulletcode1 = "Inserted Bullet " + bulletcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Bullet','" + err.Replace("'", "''") + "','Bullet Created','" + bulletcode1;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return da;

    }
    [Ajax.AjaxMethod]
    //public DataSet execute(string advtype, string edition, string bulletcode, string bulletdesc, string bulletcharge, string bullettext, string listboxvalue, string compcode, string userid)
    public DataSet execute(string bulletcode, string bulletdesc, string bulletcharge, string bullettext, string compcode, string userid, string pubcenter, string dateformat, string adcat)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.bulletmaster executebullet = new NewAdbooking.Classes.bulletmaster();
            da = executebullet.executebulletmast(bulletcode, bulletdesc, bulletcharge, bullettext, compcode, userid, pubcenter, dateformat, adcat);
            return da;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.bulletmaster executebullet = new NewAdbooking.classesoracle.bulletmaster();
                da = executebullet.executebulletmast(bulletcode, bulletdesc, bulletcharge, bullettext, compcode, userid, pubcenter, dateformat, adcat);
                return da;
            }
        else
        {
                NewAdbooking.classmysql.bulletmaster executebullet = new NewAdbooking.classmysql.bulletmaster();
                da = executebullet.executebulletmast(bulletcode, bulletdesc, bulletcharge, bullettext, compcode, userid, pubcenter, dateformat);
                return da;
        }

    }
    [Ajax.AjaxMethod]

    public DataSet first()
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.bulletmaster firstbullet = new NewAdbooking.Classes.bulletmaster();
            da = firstbullet.bulletfirst();
            return da;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.bulletmaster firstbullet = new NewAdbooking.classesoracle.bulletmaster();
                da = firstbullet.bulletfirst();
                return da;
            }
        else
        {
            NewAdbooking.classmysql.bulletmaster firstbullet = new NewAdbooking.classmysql.bulletmaster();
            da = firstbullet.bulletfirst();
            return da;
        }
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //public DataSet update(string bulletcode, string advtype, string edition, string bulletdesc, string bulletcharge, string bullettext, string remarks, string listboxvalue, string validatedate, string validatetill, string compcode, string userid)
    public DataSet update(string bulletcode, string bulletdesc, string bulletcharge, string bullettext, string remarks, string validatedate, string validatetill, string compcode, string userid, string sumble, string pubcenter, string font, string adcat, string ip, string fontcol, string pubcode, string edit)
    {
        DataSet da = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.bulletmaster updatebullet = new NewAdbooking.Classes.bulletmaster();
                da = updatebullet.updateinbullet(bulletcode, bulletdesc, bulletcharge, bullettext, remarks, validatedate, validatetill, compcode, userid, sumble, pubcenter, font, adcat, fontcol, pubcode, edit);
                //   return da;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.bulletmaster updatebullet = new NewAdbooking.classesoracle.bulletmaster();
                    da = updatebullet.updateinbullet(bulletcode, bulletdesc, bulletcharge, bullettext, remarks, validatedate, validatetill, compcode, userid, sumble, pubcenter, font, adcat, fontcol, pubcode, edit);
                    //     return da;
                }
                else
                {
                    NewAdbooking.classmysql.bulletmaster updatebullet = new NewAdbooking.classmysql.bulletmaster();
                    da = updatebullet.updateinbullet(bulletcode, bulletdesc, bulletcharge, bullettext, remarks, validatedate, validatetill, compcode, userid, sumble, pubcenter, font);
                    //return da;
                }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string bulletcode2 = "Modified Bullet " + bulletcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Bullet','" + err.Replace("'", "''") + "','Bullet Updated','" + bulletcode2;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return da;

    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]

    public void deletebullet(string bulletcode, string compcode, string ip)
    {
        //DataSet da = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.bulletmaster del = new NewAdbooking.Classes.bulletmaster();
                del.deletevalue(bulletcode, compcode);
                //return da;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {

                    NewAdbooking.classesoracle.bulletmaster del = new NewAdbooking.classesoracle.bulletmaster();
                    del.deletevalue(bulletcode, compcode);
                    //return da;
                }
                else
                {
                    NewAdbooking.classmysql.bulletmaster del = new NewAdbooking.classmysql.bulletmaster();
                    del.deletevalue(bulletcode, compcode);
                    //  return da;
                }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string bulletcode3 = "Deleted Bullet " + bulletcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Bullet','" + err.Replace("'", "''") + "','Bullet Deleted','" + bulletcode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);

    }



    protected void drpadvtype_DataBinding(object sender, System.EventArgs e)
    {

    }

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }


    /****************************/
    [Ajax.AjaxMethod]
    public DataSet getcategory(string sel, string comp)
    {
        DataSet ds1 = new DataSet();
        //dpdbrand.Items.Clear();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.bulletmaster objcat = new NewAdbooking.Classes.bulletmaster();
            
            ds1 = objcat.getlistad_cat(sel, comp);
            return ds1;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.bulletmaster objcat = new NewAdbooking.classesoracle.bulletmaster();

                ds1 = objcat.getlistad_cat(sel, comp);
                return ds1;
            }
        else
        {
            NewAdbooking.classmysql.bulletmaster objcat = new NewAdbooking.classmysql.bulletmaster();
             ds1 = objcat.getlistad_cat(sel, comp);
             return ds1;
        }
       
      
    }
    /***************************/
    [Ajax.AjaxMethod]
    public DataSet chkbulletcodename(string str, string pubcenter, string publication, string edition)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.bulletmaster chk = new NewAdbooking.Classes.bulletmaster();
            ds = chk.countbulletcode(str, pubcenter, publication, edition);
           
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.bulletmaster chk = new NewAdbooking.classesoracle.bulletmaster();
                ds = chk.countbulletcode(str, pubcenter);
            }
        else
        {
            NewAdbooking.classmysql.bulletmaster chk = new NewAdbooking.classmysql.bulletmaster();
            ds = chk.countbulletcode(str, pubcenter);
      
        }
        return ds;
    }
    
[Ajax.AjaxMethod]
    public DataSet chkbulletname(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.bulletmaster chk = new NewAdbooking.Classes.bulletmaster();

            ds = chk.countbulletname(str);
           
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.bulletmaster chk = new NewAdbooking.classesoracle.bulletmaster();

                ds = chk.countbulletname(str);
            }
        else
        {
            NewAdbooking.classmysql.bulletmaster chk = new NewAdbooking.classmysql.bulletmaster();
            ds = chk.countbulletname(str);
           
        }


        return ds;
    }
    [Ajax.AjaxMethod]
   public DataSet addedition(string pubname)
    {
    DataSet ds = new DataSet();
    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    {

        NewAdbooking.Classes.SupplimentMaster chkv = new NewAdbooking.Classes.SupplimentMaster();

        ds = chkv.addedition(pubname);
       // return ds;
    }
    else
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplimentMaster chkv = new NewAdbooking.classesoracle.SupplimentMaster();

            ds = chkv.addedition(pubname);
            //return ds;
        }
        else
        {
            NewAdbooking.classmysql.SupplimentMaster chkv = new NewAdbooking.classmysql.SupplimentMaster();

            ds = chkv.addedition(pubname);
            //return ds;
        }
    return ds;
}


   



    private void fillPubCenter()
    {
        DataSet ds;
        drppubcenter.Items.Clear();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.login logindetail = new NewAdbooking.Classes.login();

            ds = logindetail.getPubCenter();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.login logindetail = new NewAdbooking.classesoracle.login();

            ds = logindetail.getPubCenter();

        }
        else
        {
            NewAdbooking.classmysql.login logindetail = new NewAdbooking.classmysql.login();
            ds = logindetail.getPubCenter();
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Center";
        li1.Value = "0";
        li1.Selected = true;
        drppubcenter.Items.Add(li1);
        string[] drptext;
        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            if (ds.Tables[0].Rows[i].ItemArray[1].ToString().IndexOf("(") > 0)
            {
                drptext = ds.Tables[0].Rows[i].ItemArray[1].ToString().Split('(');
                li.Text = drptext[0];
            }
            else
            {
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            }
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drppubcenter.Items.Add(li);
        }

    }
    //public void publicationbind()
    //{
    //    string chk_value = ConfigurationSettings.AppSettings["LAYOUTX"].ToString();

    //    ddlPublication.Items.Clear();
    //    DataSet ds = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.Classes.AdCat4 Pripubl = new NewAdbooking.Classes.AdCat4();
    //        ds = Pripubl.Pripubcode_new(Session["compcode"].ToString(), Session["userid"].ToString(), chk_value);
    //    }
    //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //    {
    //        NewAdbooking.classesoracle.AdCat4 Pripubl = new NewAdbooking.classesoracle.AdCat4();
    //        ds = Pripubl.Pripubcode(Session["compcode"].ToString(), Session["userid"].ToString(), chk_value);
    //    }
    //    int i;
    //    System.Web.UI.WebControls.ListItem li1;
    //    li1 = new System.Web.UI.WebControls.ListItem();
    //    li1.Text = "--Select Publication--";
    //    li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
    //    li1.Selected = true;
    //    ddlPublication.Items.Add(li1);

    //    if (ds.Tables[0].Rows.Count > 0)
    //    {
    //        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //        {
    //            System.Web.UI.WebControls.ListItem li;
    //            li = new System.Web.UI.WebControls.ListItem();
    //            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //            ddlPublication.Items.Add(li);
    //        }
    //    }
    //}

}