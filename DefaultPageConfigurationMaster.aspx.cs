using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class DefaultPageConfigurationMaster : System.Web.UI.Page
{
  
    string username, userid;
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";


        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenusername.Value = Session["username"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();

        }
        else
        {
            li.Text = "<script>window.parent.location=\"login.aspx\";</script>";

            return;
        }
        DataSet objDataSet = new DataSet();
        // Read in the XML file
        objDataSet.ReadXml(Server.MapPath("XML/pageStatusMaster.xml"));
        lblPublication.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        lblCenter.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        lblEdition.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        lblSupplement.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        lblAdFilling.Text = objDataSet.Tables[0].Rows[0].ItemArray[9].ToString();
        lblNoofPage.Text = objDataSet.Tables[0].Rows[0].ItemArray[8].ToString();
        lblCategory.Text = objDataSet.Tables[0].Rows[0].ItemArray[10].ToString();
        lblPageno.Text = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        lblPageHeading.Text = objDataSet.Tables[0].Rows[0].ItemArray[5].ToString();
        lblPageColor.Text = objDataSet.Tables[0].Rows[0].ItemArray[7].ToString();
        lblPageHeight.Text = objDataSet.Tables[0].Rows[0].ItemArray[14].ToString();
        lblPageWidth.Text = objDataSet.Tables[0].Rows[0].ItemArray[15].ToString();
        lblPageVolume.Text = objDataSet.Tables[0].Rows[0].ItemArray[6].ToString();
        lblPremiumRequired.Text = objDataSet.Tables[0].Rows[0].ItemArray[12].ToString();
        lblStartingRow.Text = objDataSet.Tables[0].Rows[0].ItemArray[16].ToString();
        lblStartingCol.Text = objDataSet.Tables[0].Rows[0].ItemArray[17].ToString();
        lblSharepageStatus.Text = objDataSet.Tables[0].Rows[0].ItemArray[18].ToString();
        lblSharePageno.Text = objDataSet.Tables[0].Rows[0].ItemArray[19].ToString();
        lblValidateDateFrom.Text = objDataSet.Tables[0].Rows[0].ItemArray[21].ToString();
        lblvalidateDateTo.Text = objDataSet.Tables[0].Rows[0].ItemArray[22].ToString();
        lblMaxAdAllow.Text = objDataSet.Tables[0].Rows[0].ItemArray[13].ToString();
        lblHouseAdRequired.Text = objDataSet.Tables[0].Rows[0].ItemArray[23].ToString();
        lblMaxAdSize.Text = objDataSet.Tables[0].Rows[0].ItemArray[24].ToString();

        //This code reads the label name from the xml file
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        string ss = hiddenpermission.Value;
        hiddenpermission.Value = "";
        Ajax.Utility.RegisterTypeForAjax(typeof(DefaultPageConfigurationMaster));

        hiddenusername.Value = Session["Username"].ToString();

        if (Session["Username"] == null)
        {
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        else
        {
            username = Session["Username"].ToString();
            userid = Session["userid"].ToString();

        }

        if (!Page.IsPostBack)
        {
              btnExit.Attributes.Add("OnClick", "javascript:return exitclick();");
              btnQuery.Attributes.Add("OnClick", "javascript:return queryclick();");
              btnCancel.Attributes.Add("OnClick", "javascript:return cancelClick();");
              btnNew.Attributes.Add("OnClick", "javascript:return newClick();");
              btnSave.Attributes.Add("OnClick", "javascript:return saveclick();");
              btnExecute.Attributes.Add("OnClick", "javascript:return Executeclick();");
              btnModify.Attributes.Add("OnClick", "javascript:return ModifyClick();");
              btnDelete.Attributes.Add("OnClick", "javascript:return DeleteClick();");
             // txtValidateDateFrom.Attributes.Add("onchange", "javascript:return checkdate(this);");
              //txtValidateDateTo.Attributes.Add("onchange", "javascript:return checkdate(this);");
              btnnext.Attributes.Add("OnClick", "javascript:return adNext();");
              btnfirst.Attributes.Add("OnClick", "javascript:return adFirst();");
              btnprevious.Attributes.Add("OnClick", "javascript:return adPrevious();");
              btnlast.Attributes.Add("OnClick", "javascript:return adLast();");
            
             ddlCenter.Attributes.Add("OnChange", "javascript:return filledition(this);");
             ddlEdition.Attributes.Add("OnChange", "javascript:return fillsupp(this);");
             ddlPublication.Attributes.Add("OnChange", "javascript:return fillcentercode(this);");


            bindprem();
            enable();
            addPub();
            addcolourcode();
            addIssuePage();
            //addPremiumcode();
            addAdFilling();
            //adHouseAd();
            //adSharePage();
            addCategory();
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
    }

    public void enable()
    {
        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnCancel.Enabled = true;
        btnQuery.Enabled = true;
        btnExit.Enabled = true;
        btnModify.Enabled = false;
        btnExecute.Enabled = false;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnDelete.Enabled = false;
        //Rdbt1.Enabled = false;
        //Rdbt2.Enabled = false;


        txtMaxAdSize.Enabled = false;
        ddlPublication.Enabled = false;
        ddlCenter.Enabled = false;
        ddlEdition.Enabled = false;
        ddlSupplement.Enabled = false;
        ddlAdFilling.Enabled = false;
        ddlNoofPage.Enabled = false;
        txtPageno.Enabled = false;
        ddlPageColor.Enabled = false;
        ddlPremiumRequired.Enabled = false;
        txtCategory.Enabled = false;
        txtMadAdAllow.Enabled = false;
        txtPageHeight.Enabled = false;
        txtPageWidth.Enabled = false;
        txtPageVolume.Enabled = false;
        txtSharePageno.Enabled = false;
        txtSharepageStatus.Enabled = false;
        txtStartingCol.Enabled = false;
        txtStartingRow.Enabled = false;
        ddlHouseAdRequired.Enabled = false;
        txtValidateDateFrom.Enabled = false;
        txtValidateDateTo.Enabled = false;
        ddlPageHeading.Enabled = false;
    }


    //**********This is used to bind publication name***************//

    public void addPub()
    {
        DataSet ds = new DataSet();
        
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.EditorMaster PubName = new NewAdbooking.Classes.EditorMaster();
            ds = PubName.Pub(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.EditorMaster PubName = new NewAdbooking.classesoracle.EditorMaster();
            ds = PubName.Pub(hiddencompcode.Value);
        }
        else
        {
            NewAdbooking.classmysql.EditorMaster PubName = new NewAdbooking.classmysql.EditorMaster();
            ds = PubName.Pub(hiddencompcode.Value);
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "---Select Publication---";
        li1.Value = "0";
        li1.Selected = true;
        ddlPublication.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            ddlPublication.Items.Add(li);
        }
    }

    [Ajax.AjaxMethod]
    public DataSet SavenewRecord(string compcode, string userid, string ddlpubcode, string ddlcentercode, string ddleditioncode, string ddlsuppcode, string ddlpgno, string ddlladder, string ddlIssuePage, string txtadctg, string txtadsubctg, string ddlpgheading, string ddlpgcolor, string txtpgheight, string txtpgwidth, string txtstrow, string txtstcol, string txtpgvolume, string txtsharepgstatus, string txtsharepgno, string txtmaxadallow, string txtvalidfromdate, string txtvalidtodate, string dateformat, string ddlPremiumRequired, string ddlHouseAdRequired)  //,string ddlpubname,string ddlcentername,string ddleditionname,string ddlsuppname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig objSavenewRecord = new NewAdbooking.Classes.DefaultPageConfig();
            ds = objSavenewRecord.clsSavenewRecord(compcode, userid, ddlpubcode, ddlcentercode, ddleditioncode, ddlsuppcode, ddlpgno, ddlladder, ddlIssuePage, txtadctg, txtadsubctg, ddlpgheading, ddlpgcolor, txtpgheight, txtpgwidth, txtstrow, txtstcol, txtpgvolume, txtsharepgstatus, txtsharepgno, txtmaxadallow, txtvalidfromdate, txtvalidtodate, dateformat, ddlPremiumRequired, ddlHouseAdRequired);  //,ddlpubname,ddlcentername,ddleditionname,ddlsuppname);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig objSavenewRecord = new NewAdbooking.classesoracle.DefaultPageConfig();
            ds = objSavenewRecord.clsSavenewRecord(compcode, userid, ddlpubcode, ddlcentercode, ddleditioncode, ddlsuppcode, ddlpgno, ddlladder, ddlIssuePage, txtadctg, txtadsubctg, ddlpgheading, ddlpgcolor, txtpgheight, txtpgwidth, txtstrow, txtstcol, txtpgvolume, txtsharepgstatus, txtsharepgno, txtmaxadallow, txtvalidfromdate, txtvalidtodate, dateformat, ddlPremiumRequired, ddlHouseAdRequired);  //,ddlpubname,ddlcentername,ddleditionname,ddlsuppname);
        }
        else
        {
          //  NewAdbooking.classmysql.DefaultPageConfig objSavenewRecord = new NewAdbooking.classmysql.DefaultPageConfig();
          //  ds = objSavenewRecord.clsSavenewRecord(compcode, userid, ddlpubcode, ddlcentercode, ddleditioncode, ddlsuppcode, ddlpgno, ddlladder, ddlIssuePage, txtadctg, txtadsubctg, ddlpgheading, ddlpgcolor, txtpgheight, txtpgwidth, txtstrow, txtstcol, txtpgvolume, txtsharepgstatus, txtsharepgno, txtmaxadallow, txtvalidfromdate, txtvalidtodate, dateformat, ddlPremiumRequired, ddlHouseAdRequired);  //,ddlpubname,ddlcentername,ddleditionname,ddlsuppname);
        }
        return ds;
    }

   

    [Ajax.AjaxMethod]
    public DataSet bkunit(string compcode, string pubcode, string centercode, string editioncode, string suppcode, string pageno, string noofpages)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig objbkunit = new NewAdbooking.Classes.DefaultPageConfig();
            ds = objbkunit.clscheckentry(compcode, pubcode, centercode, editioncode, suppcode, pageno, noofpages);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig objbkunit = new NewAdbooking.classesoracle.DefaultPageConfig();
            ds = objbkunit.clscheckentry(compcode, pubcode, centercode, editioncode, suppcode, pageno, noofpages);
        }
        else
        {
           // NewAdbooking.classmysql.DefaultPageConfig objbkunit = new NewAdbooking.classmysql.DefaultPageConfig();
           // ds = objbkunit.clscheckentry(compcode, pubcode, centercode, editioncode, suppcode, pageno, noofpages);
        }

        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet ExecuteRecord(string compcode, string pubcode, string centercode, string editioncode, string suppcode, string pageno, string noofpages, string ddlpgcolor, string ddlPremiumRequired, string flag, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig objExecuteRecord = new NewAdbooking.Classes.DefaultPageConfig();
            ds = objExecuteRecord.clsExecuteRecord(compcode, pubcode, centercode, editioncode, suppcode, pageno, noofpages, ddlpgcolor, flag, dateformat);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig objExecuteRecord = new NewAdbooking.classesoracle.DefaultPageConfig();
            ds = objExecuteRecord.clsExecuteRecord(compcode, pubcode, centercode, editioncode, suppcode, pageno, noofpages, ddlpgcolor, ddlPremiumRequired, flag);
        }
        else
        {
          //  NewAdbooking.classmysql.DefaultPageConfig objExecuteRecord = new NewAdbooking.classmysql.DefaultPageConfig();
          //  ds = objExecuteRecord.clsExecuteRecord(compcode, pubcode, centercode, editioncode, suppcode, pageno, noofpages, ddlpgcolor, ddlPremiumRequired, flag);
        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet ModifyRecord(string compcode, string pubcode, string centercode, string editioncode, string suppcode, string ladder, string pageno, string category, string noofpages, string ddlpgcolor, string pageheading, string pageheight, string pagewidth, string maxad, string strow, string stcol, string dt_from, string dt_to, string pagevolume, string dateformat, string ddlPremiumRequired)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig objModifyRecord = new NewAdbooking.Classes.DefaultPageConfig();

            ds = objModifyRecord.clsModifyRecord(compcode, pubcode, centercode, editioncode, suppcode, ladder, pageno, category, "", noofpages, ddlpgcolor, pageheading, pageheight, pagewidth, maxad, strow, stcol, dt_from, dt_to, pagevolume, dateformat, ddlPremiumRequired);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig objModifyRecord = new NewAdbooking.classesoracle.DefaultPageConfig();

            ds = objModifyRecord.clsModifyRecord(compcode, pubcode, centercode, editioncode, suppcode, ladder, pageno, category, noofpages, ddlpgcolor, pageheading, pageheight, pagewidth, maxad, strow, stcol, dt_from, dt_to, pagevolume, dateformat, ddlPremiumRequired);
        }
        else
        {
           // NewAdbooking.classmysql.DefaultPageConfig objModifyRecord = new NewAdbooking.classmysql.DefaultPageConfig();
          //  ds = objModifyRecord.clsModifyRecord(compcode, pubcode, centercode, editioncode, suppcode, ladder, pageno, category, noofpages, ddlpgcolor, pageheading, pageheight, pagewidth, maxad, strow, stcol, dt_from, dt_to, pagevolume, dateformat, ddlPremiumRequired);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet DeleteRecord(string compcode, string pubcode, string centercode, string editioncode, string suppcode, string pageno)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig objDeleteRecord = new NewAdbooking.Classes.DefaultPageConfig();

            ds = objDeleteRecord.clsDeleteRecord(compcode, pubcode, centercode, editioncode, suppcode, pageno);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig objDeleteRecord = new NewAdbooking.classesoracle.DefaultPageConfig();

            ds = objDeleteRecord.clsDeleteRecord(compcode, pubcode, centercode, editioncode, suppcode, pageno);
        }
        else
        {
          //  NewAdbooking.classmysql.DefaultPageConfig objDeleteRecord = new NewAdbooking.classmysql.DefaultPageConfig();
          //  ds = objDeleteRecord.clsDeleteRecord(compcode, pubcode, centercode, editioncode, suppcode, pageno);
        
        }
        return ds;
    }



    public void addCategory()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig addCat = new NewAdbooking.Classes.DefaultPageConfig();
            txtCategory.Items.Clear();

            ds = addCat.clsCategory(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig addCat = new NewAdbooking.classesoracle.DefaultPageConfig();
            txtCategory.Items.Clear();

            ds = addCat.clsCategory(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
//            NewAdbooking.classmysql.DefaultPageConfig addCat = new NewAdbooking.classmysql.DefaultPageConfig();
        //    txtCategory.Items.Clear();
         //   ds = addCat.clsCategory(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Category--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        txtCategory.Items.Add(li1);

        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                txtCategory.Items.Add(li);
            }
        }

    }


   

    public void addcolourcode()
    {
        ddlPageColor.Items.Clear();
        ListItem li;
        li = new ListItem();
        li.Text = "-- Select Page Colour --";
        li.Value = "0";
        li.Selected = true;
        ddlPageColor.Items.Add(li);

        ddlPageColor.Items.Add("C");

        ddlPageColor.Items.Add("B");
    }

    public void addIssuePage()
    {
        ddlNoofPage.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-- Select Issue Page --";
        li1.Value = "0";
        li1.Selected = true;
        ddlNoofPage.Items.Add(li1);

        for (i = 2; i <= 50; i = i + 2)
        {
            ListItem li;
            li = new ListItem();
            li.Text = i.ToString();
            // li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();                
            ddlNoofPage.Items.Add(li);
        }
    }

    public void addAdFilling()
    {
        ddlAdFilling.Items.Clear();
        ListItem li;
        li = new ListItem();
        li.Text = "-- Select Ad Filling --";
        li.Value = "0";
        li.Selected = true;
        ddlAdFilling.Items.Add(li);

        ddlAdFilling.Items.Add("RL");

        ddlAdFilling.Items.Add("LR");

        ddlAdFilling.Items.Add("BF");
    }

    [Ajax.AjaxMethod]
    public DataSet addcentercode(string compcode, string userid) //, string pubcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig addCenter = new NewAdbooking.Classes.DefaultPageConfig();
            ds = addCenter.centercode(compcode, userid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig addCenter = new NewAdbooking.classesoracle.DefaultPageConfig();
            ds = addCenter.centercode(compcode, userid);
        }
        else
        {
//            NewAdbooking.classmysql.DefaultPageConfig addCenter = new NewAdbooking.classmysql.DefaultPageConfig();
        //    ds = addCenter.centercode(compcode, userid);
        }

        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet addeditioncode(string centercode, string compcode, string pubcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig addEdition = new NewAdbooking.Classes.DefaultPageConfig();
            ds = addEdition.editioncodes(centercode, compcode, pubcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig addEdition = new NewAdbooking.classesoracle.DefaultPageConfig();
            ds = addEdition.editioncodes(centercode, compcode, pubcode);
        }
        else
        {
            //NewAdbooking.classmysql.DefaultPageConfig addEdition = new NewAdbooking.classmysql.DefaultPageConfig();
          //  ds = addEdition.editioncodes(centercode, compcode, pubcode);
        }

        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet addsecpubcode(string compcode, string userid, string editioncode, string flag)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DefaultPageConfig addSecpub = new NewAdbooking.Classes.DefaultPageConfig();
            ds = addSecpub.secpubcodes(compcode, userid, editioncode, flag);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.DefaultPageConfig addSecpub = new NewAdbooking.classesoracle.DefaultPageConfig();
            ds = addSecpub.secpubcodes(compcode, userid, editioncode, flag);
        }
        else
        {
//            NewAdbooking.classmysql.DefaultPageConfig addSecpub = new NewAdbooking.classmysql.DefaultPageConfig();
          //  ds = addSecpub.secpubcodes(compcode, userid, editioncode, flag);
        }


        return ds;
    }

    public void bindprem()
    {
        DataSet prem = new DataSet();
        prem.ReadXml(Server.MapPath("XML/advpage.xml"));
        ddlPageHeading.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Heading-";
        li1.Value = "0";
        li1.Selected = true;
        ddlPageHeading.Items.Add(li1);

        for (i = 0; i < prem.Tables[0].Columns.Count - 1; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = prem.Tables[0].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li.Value = prem.Tables[0].Rows[0].ItemArray[i].ToString();
            ddlPageHeading.Items.Add(li);

        }

    }
}
