using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class Booking_Master_temp : System.Web.UI.Page
{
    int z = 0;
    int cou = 0;
    string[] arrfor_uom;
    string message = "";
    static string saveormodify = "";
    string dateformat = "";
    string formname = "";
    static int FlagStatus, fpnl;
    static DataSet executequery = new DataSet();
    static string gciobookid = "";
    string getdatecheck = "";
    string rategr = "";
    string agencyrate = "";
    string clientrate = "";
    string insertstatus;
    string hidReceipt = "";
    int i = 0;
    static string grono = "";
    static string gdockitno = "";
    static string gkeyno = "";
    static string gagencyscode = "";
    static string gclient = "";
    string globalid = "";
    protected void AspNetMessageBox(string strMessage)
    {
        //strMessage = adminResource.GetStringFromResource(strMessage);
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_Master_temp), "ShowAlert", strAlert, true);
    }
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        hiddenuomdesc.Value = "CD";
        if (Session["compcode"] == null)
        {
            Response.Write("<script>alert('Your Session Has Been Expired');window.close();</script>");
            return;
        }
        hiddeninsertwise.Value = ConfigurationManager.AppSettings["boxchrginsertwise"].ToString();
        hiddenvaliddate.Value = Session["validdate_pub"].ToString();
        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster Show_NoAd = new NewAdbooking.Classes.BookingMaster();
            ds = Show_NoAd.clsShow_NoAd();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster Show_NoAd = new NewAdbooking.classesoracle.BookingMaster();
            ds = Show_NoAd.clsShow_NoAd();
        }

        grd_SpaceCheck.DataSource = ds;
        grd_SpaceCheck.DataBind();

        dateformat = Session["dateformat"].ToString();

        formname = "Booking_Master_temp";
        hiddenschemetype.Value = Session["SCHEME_TYPE"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddendateformat.Value = Session["dateformat"].ToString();
        hiddentfn.Value = Session["tfn"].ToString();
        hiddeninserts.Value = Session["insertsbreakup"].ToString();
        hiddencurrency.Value = Session["currency"].ToString();
        hiddenpremtype.Value = Session["premtype"].ToString();
        hiddentype.Value = Session["dealtype"].ToString();
        hiddenprefix.Value = Session["prefix"].ToString();
        hiddensufix.Value = Session["suffix"].ToString();
        hiddenroadcat.Value = Session["roadcat"].ToString();
        hiddenrodatetime.Value = Session["rodatetime"].ToString();
        hiddenspacearea.Value = Session["spacearea"].ToString();
        hiddenvat.Value = Session["vat"].ToString();
        hiddencirculation.Value = Session["solorate"].ToString();
        hiddenprereceipt.Value = Session["Receipt_no"].ToString();
        hiddenadtype.Value = "DI0";
        hiddenratecheckdate.Value = Session["RATE_CHECK"].ToString();
        hiddenratepremtype.Value = Session["ratepremtype"].ToString();
        hiddenusername.Value = Session["username"].ToString();
        hiddenuom.Value = Session["uom"].ToString();
        hiddencenter.Value = Session["center"].ToString();
        hiddencioidformat.Value = Session["cioid"].ToString();
        hiddenrostatus.Value = Session["rostatus"].ToString();
        //This code reads the label name from the xml file
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        //////get the label name from xml
        DataSet objDatagetlabname = new DataSet();
        objDatagetlabname.ReadXml(Server.MapPath("XML/bookingmaster.xml"));
        lbdatetime.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[0].ToString();
        lbbranch.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[1].ToString();
        lbbookedby.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[2].ToString();
        lbcioid.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[3].ToString();
        //  lbappby.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[4].ToString();
        //lbaudit.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[5].ToString();
        lbrono.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[6].ToString();
        lbrodate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[7].ToString();
        lbcaption.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[8].ToString();
        lbbillstatus.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[9].ToString();
        lbrostatus.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[10].ToString();
        lbagency.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[14].ToString();
        lbclient.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[12].ToString();
        lbaaddress.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[13].ToString();
        lbcaddress.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[13].ToString();
        lbagescode.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[11].ToString();
        lbdockit.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[15].ToString();
        lbececname.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[16].ToString();
        lbexeczone.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[17].ToString();
        lbproduct.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[18].ToString();
        lbbrand.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[19].ToString();
        lbkey.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[20].ToString();
        lbbillremark.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[21].ToString();
        lbprintremark.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[22].ToString();
        lbpackage.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[42].ToString();
        //lbselectdate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[43].ToString();
        lbnoofins.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[44].ToString();
        lbrepdate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[45].ToString();
        lbadtype.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[23].ToString();
        lbadcat.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[24].ToString();
        lbadscat.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[25].ToString();
        lbcolor.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[26].ToString();
        lbuom.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[27].ToString();
        lbpagepost.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[28].ToString();
        lbpagetyp.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[29].ToString();
        lbpageno.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[30].ToString();
        lbadsizetype.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[31].ToString();
        lbadsize.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[33].ToString();
        lbratecode.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[34].ToString();
        lbscheme.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[35].ToString();
        // lbscty.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[35].ToString();
        lbcurrency.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[36].ToString();
        lbagreed.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[37].ToString();
        lbagreamo.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[38].ToString();
        lbspecialamo.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[39].ToString();
        lbspace.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[40].ToString();
        lbspechar.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[41].ToString();

        LinkButton1.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[46].ToString();
        LinkButton2.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[47].ToString();
        LinkButton3.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[48].ToString();
        LinkButton4.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[49].ToString();
        LinkButton5.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[50].ToString();
        LinkButton6.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[74].ToString();

        lblbillcycle.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[51].ToString();
        lblrevenuecenter.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[52].ToString();
        lblpaymenttype.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[53].ToString();
        lblinvoice.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[54].ToString();
        lblvts.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[55].ToString();
        lblbillsize.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[56].ToString();
        lblbillto.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[57].ToString();
        lbltradedisc.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[58].ToString();
        lblagencyoutstand.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[59].ToString();
        lblagencytype.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[60].ToString();
        lblagencystatus.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[61].ToString();
        lblagencypaymode.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[62].ToString();
        lblagencycreditperiod.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[63].ToString();
        lblcardrate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[64].ToString();
        lblcardamt.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[65].ToString();
        lbldiscount.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[66].ToString();
        lbldiscpre.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[67].ToString();
        lblbilladdress.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[68].ToString();
        lbboxcode.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[69].ToString();
        lbboxno.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[70].ToString();
        lbboxadd.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[71].ToString();
        chkage.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[72].ToString();
        chkclie.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[73].ToString();
        lbad.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[75].ToString();
        lbcamp.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[76].ToString();
        lbbillamt.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[77].ToString();
        lbpageprem.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[78].ToString();
        lbpagepostamt.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[79].ToString();
        lbpremium.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[80].ToString();
        lbgrossamt.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[81].ToString();
        lbcolumn.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[82].ToString();
        // lbbillcolumn.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[82].ToString();
        // lbbillarea.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[83].ToString();
        lbspediscper.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[84].ToString();
        lbspadiscper.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[85].ToString();
        lbpaid.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[86].ToString();
        lbpreid.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[87].ToString();
        btndeal.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[88].ToString();
        lbdealtype.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[89].ToString();
        lbdeviation.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[90].ToString();
        lbcoupan.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[91].ToString();
        lbvarient.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[92].ToString();
        lbcontractname.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[93].ToString();
        lbcontracttype.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[94].ToString();
        lbcardname.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[95].ToString();
        lbtype.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[96].ToString();
        lbexdate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[97].ToString();
        lbcardno.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[98].ToString();
        lbreceipt.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[99].ToString();
        lbprint.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[100].ToString();
        lbselectdate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[101].ToString();
        LinkButton7.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[108].ToString();
        lbmat.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[109].ToString();
        lblretainer.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[110].ToString();
        //Cheque / DD info
        lbchqno.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[111].ToString();
        lbchqamt.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[112].ToString();
        lbchqdate.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[113].ToString();
        lbbankname.Text = objDatagetlabname.Tables[0].Rows[0].ItemArray[114].ToString();
        ///////this code is to show the user's previous booking and the branch
        //DataSet dprv = new DataSet();
        //if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        //{
        //    NewAdbooking.Classes.BookingMaster prev = new NewAdbooking.Classes.BookingMaster();
        //    dprv = prev.prevbooking(Session["compcode"].ToString(), Session["userid"].ToString(), "DI0");
        //}
        //else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        //{
        //    NewAdbooking.classesoracle.BookingMaster prev = new NewAdbooking.classesoracle.BookingMaster();
        //    dprv = prev.prevbooking(Session["compcode"].ToString(), Session["userid"].ToString(), "DI0");
        //}

        //else
        //{
        //    NewAdbooking.classmysql.BookingMaster prev = new NewAdbooking.classmysql.BookingMaster();
        //    dprv = prev.prevbooking(Session["compcode"].ToString(), Session["userid"].ToString(), "DI0");
        //}
        //if (dprv.Tables[0].Rows.Count > 0)
        //{
        //    txtprevbook.Text = dprv.Tables[0].Rows[0].ItemArray[0].ToString();

        //}
        //else
        //{
            txtprevbook.Text = "";
        //}
        //if (dprv.Tables[1].Rows.Count > 0)
        //{
        //    txtbranch.Text = dprv.Tables[1].Rows[0].ItemArray[0].ToString();
        //}

        ///////this is to get that whether the user can do the backdate booking 
        ///if it is 0 than backdate booking is not possible and if 1 than it can be

        //if (dprv.Tables[2].Rows.Count > 0)
        //{
        //    hiddenbackdatebook.Value = dprv.Tables[2].Rows[0].ItemArray[0].ToString();

        //}

        //lab
        if (!Page.IsPostBack)
        {
            if (Session["addAgencyComm"].ToString() == "N")
            {
                addagency.Visible = false;
                addagencycomm.Visible = false;
            }
            hiddenaddAgencyComm.Value = Session["addAgencyComm"].ToString();  //*14 Oct
            hiddenbillNo.Value = Request.QueryString["billno"].ToString();
            hiddenafency_retainer.Value = Session["addAgencyComm_Ret"].ToString();
            //btnRefresh.Attributes.Add("OnClick", "javascript:return draw_LoadControls();");
            btnRefresh.Attributes.Add("OnClick", "javascript:return getButtonId();");

            btnPaginate.Attributes.Add("OnClick", "javascript:return Paginate();");
            Panel1.Attributes.Add("OnClick", "javascript:return getImageId();");
            // Form1.Attributes.Add("OnClick", "javascript:return getButtonId();");

            LinkButton1.Enabled = false;
            LinkButton2.Enabled = false;
            LinkButton3.Enabled = false;
            LinkButton4.Enabled = false;
            LinkButton5.Enabled = false;
            LinkButton6.Enabled = false;
            LinkButton7.Enabled = false;
            drpadcategory.Attributes.Add("onkeypress", "return keySort(this);");
            drpadsubcategory.Attributes.Add("onkeypress", "return keySort(this);");
            drpadcat3.Attributes.Add("onkeypress", "return keySort(this);");
            drpadcat4.Attributes.Add("onkeypress", "return keySort(this);");
            drpadcat5.Attributes.Add("onkeypress", "return keySort(this);");
            btnSpaceCheck.Attributes.Add("OnClick", "javascript:return getSpaceAvailability();");
            hidehref.Attributes.Add("onclick", "javascript:return Hide();");
            btndeal.Attributes.Add("onclick", "javascript:return showdealvalue();");
            drprostatus.Attributes.Add("onchange", "javascript:return chkrodate();");
            drprostatus.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpretainer.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            //drpretainer.Attributes.Add("onblur", "javascript:return chkExecutive();");

            drpretainer.Attributes.Add("onblur", "javascript:return chkExecutive();");

            //*6Aug*
            lstretainer.Attributes.Add("onclick", "javascript:return showretainervalue(this);");
            ///////////////////////////////////////////
            txtrono.Attributes.Add("onchange", "javascript:return disabledokit();");
            txtrono.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtdockitno1.Attributes.Add("onchange", "javascript:return disablerono();");
            txtdockitno1.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtagencypaymode.Attributes.Add("onchange", "javascript:return getintohidden();");
            txtagencypaymode.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            Ajax.Utility.RegisterTypeForAjax(typeof(Booking_Master_temp));
            txtrepeatingdate.Attributes.Add("OnKeyPress", "javascript:return checkdateInsert();");
            txtrepeatingdate.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtrepeatingdate.Attributes.Add("OnKeydown", "javascript:return checknumeric();");

            drppackage.Attributes.Add("onkeypress", "return keySort(this);");
            drppackage.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            // txtrepeatingdate.Attributes.Add("OnChange", "javascript:return onInsertionChange();");
            txtrepeatingdate.Attributes.Add("OnChange", "javascript:return onRepeatingDate();");

            txtinsertion.Attributes.Add("OnChange", "javascript:return onInsertionChange();");
            txtinsertion.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            hiddendateformat.Value = Session["dateformat"].ToString();

            btnSave.Attributes.Add("OnClick", "javascript:return checkValidation();");
            btnsavepaginate.Attributes.Add("OnClick", "javascript:return checkValidation();");
            txtbookedby.Text = Session["username"].ToString();
            hiddencompuser.Value = Session["userhome"].ToString();
            hiddenadmin.Value = Session["Admin"].ToString();

            LinkButton1.Attributes.Add("Onclick", "javascript:return changediv();");
            LinkButton2.Attributes.Add("Onclick", "javascript:return changediv1();");
            LinkButton3.Attributes.Add("Onclick", "javascript:return changebilldiv();");
            LinkButton4.Attributes.Add("Onclick", "javascript:return changedivrate();");
            lstagency.Attributes.Add("onclick", "javascript:return insertagency();");
            //lstagency.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            lstclient.Attributes.Add("onclick", "javascript:return insertagency();");
            lstexec.Attributes.Add("onclick", "javascript:return insertagency();");
            lstproduct.Attributes.Add("onclick", "javascript:return insertagency();");

            LinkButton5.Attributes.Add("OnClick", "javascript:return changepackage();");
            LinkButton6.Attributes.Add("OnClick", "javascript:return openboxpopup();");
            LinkButton7.Attributes.Add("onclick", "javascript:return openvts();");
            txtcardrate.Attributes.Add("onchange", "javascript:return getcardamou();");
            txtcardrate.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");

            txtadsize1.Attributes.Add("onchange", "javascript:return chkheight();");
            txtadsize1.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtadsize2.Attributes.Add("onchange", "javascript:return chkwidth();");
            txtadsize2.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtcolum.Attributes.Add("onchange", "javascript:return getwidth();");
            txtagreedrate.Attributes.Add("onchange", "javascript:return getagreedamt();");    //****
            txtagreedrate.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtagreedamt.Attributes.Add("onchange", "javascript:return getagreedamt();");    //****
            txtagreedamt.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtrodate.Attributes.Add("OnChange", "javascript:return checkdateforcurr(this);  ");
            txtrodate.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtdummydate.Attributes.Add("OnChange", "javascript:return checkdateforbook(this);  ");
            txtdummydate.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            //  btnshgrid.Attributes.Add("OnClick", "javascript:return fillrateintogrid();");      //****
            btnshgrid.Attributes.Add("OnClick", "javascript:return checkGridDate_Validation();");
            txtaddagencycommrate.Attributes.Add("OnChange", "javascript:return addagencycomm();");
            txtaddagencycommrate.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            lstagency.Attributes.Add("onkeypress", "return keySort(this);");
            lstclient.Attributes.Add("onkeypress", "return keySort(this);");
            lstproduct.Attributes.Add("onkeypress", "return keySort(this);");
            lstexec.Attributes.Add("onkeypress", "return keySort(this);");
            //drpagscode.Attributes.Add("onchange", "javascript:return getpayandstatus();");
            chkage.Attributes.Add("onclick", "javascript:return agencychk()");
            chkclie.Attributes.Add("onclick", "javascript:return clientchk()");
            //drpagscode.Attributes.Add("onchange", "javascript:return getsubcode();");
            //    txtratecode.Attributes.Add("onblur", "javascript:return gettherate();");
            txtratecode.Attributes.Add("onchange", "javascript:return rateRefresh();");
            txtratecode.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            //drpcurrency.Attributes.Add("onchange", "javascript:return chkpckforcurr();");
            drpcurrency.Attributes.Add("onchange", "javascript:return getrateoncurrchang();");
            drpbrand.Attributes.Add("onchange", "javascript:return getbrand();");
            drpbrand.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtexeczone.Attributes.Add("onchange", "javascript:return getzone();");
            txtexeczone.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpadcategory.Attributes.Add("onchange", "javascript:return filladsubcatmain();");
            drpadcategory.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            //btnupload.Attributes.Add("onclick", "javascript:return uploadimageall();");
            txtagency.Attributes.Add("onchange", "javascript:return chkagency();");
            drpretainer.Attributes.Add("onchange", "javascript:return chkagency();");
            txtagency.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtproduct.Attributes.Add("onchange", "javascript:return chkagency();");
            txtproduct.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtexecname.Attributes.Add("onchange", "javascript:return chkagency();");
            txtexecname.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");

            chktfn.Attributes.Add("onclick", "javascript:return disbledinsertion();");
            drppageprem.Attributes.Add("onchange", "javascript:return getpremper();");
            drppageprem.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drppageposition.Attributes.Add("onchange", "javascript:return getpageamt();");
            drppageposition.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpboxcode.Attributes.Add("onchange", "javascript:return getboxno();");
            drpboxcode.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtbillheight.Attributes.Add("onchange", "javascript:return getbiilablearea();");
            txtbillheight.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtbillwidth.Attributes.Add("onchange", "javascript:return getbiilablearea();");

            txtbillwidth.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtspedisc.Attributes.Add("onchange", "javascript:return getspecialdisc();");   //****
            txtspedisc.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtspediscper.Attributes.Add("onchange", "javascript:return getspecialdisc();"); //**** 
            txtspediscper.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtextracharges.Attributes.Add("onchange", "javascript:return getsplcharge();");          //****
            txtextracharges.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtspacedisc.Attributes.Add("onchange", "javascript:return getspacedisc();");  //****

            txtspacedisc.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            //  txtspadiscper.Attributes.Add("onchange", "javascript:return getspacedisc('txtspacedisc');");  //****
            txtspadiscper.Attributes.Add("onchange", "javascript:return getspacedisc();");
            drpbooktype.Attributes.Add("onchange", "javascript:return getbillzero();");
            drpbooktype.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");

            drpadsubcategory.Attributes.Add("onchange", "javascript:return filladscatingrid();");
            drpadsubcategory.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");

            drpadcat3.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpadcat3.Attributes.Add("onchange", "javascript:return bindadscat4();");
            drpadcat4.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpadcat4.Attributes.Add("onchange", "javascript:return bindadcat5();");
            drpadcat5.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");

            drpcolor.Attributes.Add("onchange", "javascript:return fillcoloringrid();");
            drpcolor.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpbrand.Attributes.Add("onchange", "javascript:return bindvarient();");
            drpbrand.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpvarient.Attributes.Add("onchange", "javascript:return getvarval();");
            drpvarient.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtclient.Attributes.Add("onblur", "javascript:return chkcasualclient();");
            txtclient.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            btncopy.Attributes.Add("onclick", "javascript:return addpkgname();");
            btndel.Attributes.Add("onclick", "javascript:return removepkgname();");
            showdiv.Attributes.Add("onclick", "javascript:return showstrip();");
            txtclientadd.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtkeyno.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtcamp.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtcaption.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtcolum.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txttotalarea.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtpageno.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpcurrency.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpbillcycle.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drprevenue.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drppaymenttype.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpbillstatus.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpbillto.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpbillto.Attributes.Add("onchange", "javascript:return getvalueintohidden();");

            txtinvoice.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");

            txtvts.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtbilladdress.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtagencyoutstand.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtbillremark.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtprintremark.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpboxcode.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            txtboxaddress.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drppaymenttype.Attributes.Add("onchange", "javascript:return showcreditdetail();");   //0n24 oct, 09
            btnExit.Attributes.Add("onclick", "javascript:return exitbook();");
            drpmonth.Attributes.Add("onchange", "javascript:return chkyear();");
            drpyear.Attributes.Add("onchange", "javascript:return chkyear();");
            lbprint.Attributes.Add("onclick", "javascript:return printreceipt_display();");
            drpuom.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpuom.Attributes.Add("onchange", "javascript:return getlabeluom();");
            drpmatsta.Attributes.Add("onfocus", "javascript:return changebackcolor(this);");
            drpmatsta.Attributes.Add("onchange", "javascript:return setmatstatus();");
            txttotalarea.Attributes.Add("onchange", "javascript:return fillnooflineintogrid();");
            chkcontract.Attributes.Add("onclick", "javascript:return contractapply();");

            //  btnNew.Attributes.Add("onclick", "javascript:return enableLink();");
            btnNew.Attributes.Add("onclick", "javascript:return newclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return clearClick();");
            btnModify.Attributes.Add("OnClick", "javascript:return modifyClick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return queryClick();");
            btnfirst.Attributes.Add("OnClick", "javascript:return firstClick();");
            btnlast.Attributes.Add("OnClick", "javascript:return lastClick();");
            btnnext.Attributes.Add("OnClick", "javascript:return nextClick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return previousClick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return executeClick();");
            btnDelete.Attributes.Add("onclick", "javascript:return deleteCheck();");
            txtpageno.Attributes.Add("onchange", "javascript:return fillpgnogrid();");

            txtrono.Attributes.Add("onblur", "javascript:return checkro();");
            ttextchqdate.Attributes.Add("onchange", "javascript:return checkdate(this);");

            // ttextchqdate.Attributes.Add("OnChange", "javascript:return checkdateforbook(this);  ");
            hiddencalendar.Value = "1";
            //LinkButton5.Attributes.Add("Onclick", "javascript:return changedivbill();");
            ///////permission wise
            getbuttoncheck(formname);


            bindbillcycle();

            bindStatus();

            bindrevenuecenter();
            drprevenue.SelectedValue = Session["revenue"].ToString();
            txtbranch.Text = drprevenue.SelectedItem.Text;
            bindbox();
            bindAdType(Session["compcode"].ToString());
            //bindCustomer(Session["compcode"].ToString());
            bindcolor();
            advcat(Session["compcode"].ToString());
            bindpackage();
            binduom();
            //bindpublication();
            bindpagePosition(Session["compcode"].ToString());
            bindAdSizeType(Session["compcode"].ToString());
            bindcurrency();
            bindBillStatus();
            bindpageprem();
            //bindscheme();
            // bindschemepck();
            bindcardtype();
            bindpagetype();
            //bindmatstatus();
            //*6Aug bindretainer();
            ScriptManager1.SetFocus(btnNew);




            // if (Request.QueryString["cioid"] != null)
            if (Request.QueryString["cioid"] != null)
            {
                hiddenaudit.Value = Request.QueryString["cioid"].ToString();

            }
            else
            {
                hiddenaudit.Value = "";
            }

            //bindProduct(Session["compcode"].ToString());
        }

        DateTime dt = DateTime.Now;

        int year = Convert.ToInt32(dt.Year);
        int month = Convert.ToInt32(dt.Month);
        int day = Convert.ToInt32(dt.Day);
        string serdate = Convert.ToString(month + "/" + day + "/" + year);
        datesave getdatechk = new datesave();
        dateinsert getdateshow = new dateinsert();
        DataSet dsdate = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster cls_book = new NewAdbooking.Classes.BookingMaster();
            dsdate = cls_book.getCurrdate();
        }
        else
        {
            NewAdbooking.classesoracle.BookingMaster cls_book = new NewAdbooking.classesoracle.BookingMaster();
            dsdate = cls_book.getCurrdate();
        }
        day = Convert.ToInt32(dsdate.Tables[0].Rows[0].ItemArray[0].ToString());
        string month1 = dsdate.Tables[0].Rows[0].ItemArray[1].ToString();
        year = Convert.ToInt32(dsdate.Tables[0].Rows[0].ItemArray[2].ToString());
        if (month1.ToString().Length == 1)
            month1 = "0" + month1;

        if (Session["dateformat"].ToString() == "dd/mm/yyyy")
        {
            txtdatetime.Text = day + "/" + month1 + "/" + year;

            getdatecheck = day + "/" + month1 + "/" + year;
        }
        else if (Session["dateformat"].ToString() == "yyyy/mm/dd")
        {
            txtdatetime.Text = year + "/" + month1 + "/" + day;

            getdatecheck = year + "/" + month1 + "/" + day;
        }
        else
        {
            txtdatetime.Text = month1 + "/" + day + "/" + year;//getdateshow.getDate(Session["dateformat"].ToString(), serdate);

            getdatecheck = month1 + "/" + day + "/" + year;//getdatechk.getDate(Session["dateformat"].ToString(), serdate);
        }


        //Request.QueryString["cioid"] = "CI881";

        //generate receipt format ---------------------------------------------------------        

        if (hiddenprereceipt.Value == "5")
        {
            DataSet ds_rcpt = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster objReceipt = new NewAdbooking.Classes.BookingMaster();
                ds_rcpt = objReceipt.clsBranchAlias(Session["compcode"].ToString(), Session["revenue"].ToString());
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster objReceipt = new NewAdbooking.classesoracle.BookingMaster();
                ds_rcpt = objReceipt.clsBranchAlias(Session["compcode"].ToString(), Session["revenue"].ToString());
            }
            else
            {

            }
            hidReceipt = ds_rcpt.Tables[0].Rows[0].ItemArray[0].ToString() + "/" + year.ToString().Substring(year.ToString().Length - 2) + "-" + Convert.ToInt32(Convert.ToInt32(year.ToString().Substring(year.ToString().Length - 2)) + 1) + "/";
            hiddenhidReceipt.Value = hidReceipt;
        }
        //********************************

    }
    public void bindpagetype()
    {
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindptyp = new NewAdbooking.Classes.BookingMaster();
            dx = bindptyp.book_bindpagetyp(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindptyp = new NewAdbooking.classesoracle.BookingMaster();
            dx = bindptyp.book_bindpagetyp(Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bindptyp = new NewAdbooking.classmysql.BookingMaster();
            dx = bindptyp.book_bindpagetyp(Session["compcode"].ToString());
        }

        drppagetype.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select-";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drppagetype.Items.Add(li1);

        if (dx.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < dx.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = dx.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = dx.Tables[0].Rows[i].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drppagetype.Items.Add(li);
            }

        }



    }



    public void bindcardtype()
    {
        DataSet cardtyp = new DataSet();
        cardtyp.ReadXml(Server.MapPath("XML/billcycle.xml"));
        drptype.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Card Type";
        li1.Value = "0";
        //li1.Selected = true;
        drptype.Items.Add(li1);

        for (i = 0; i < cardtyp.Tables[5].Columns.Count - 1; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = cardtyp.Tables[5].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li.Value = cardtyp.Tables[5].Rows[0].ItemArray[i].ToString();

            drptype.Items.Add(li);

        }

    }


    public void bindpageprem()
    {
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RateMaster bindrate = new NewAdbooking.Classes.RateMaster();
            dx = bindrate.premiumbind(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.RateMaster bindrate = new NewAdbooking.classesoracle.RateMaster();
            dx = bindrate.premiumbind(Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.RateMaster bindrate = new NewAdbooking.classmysql.RateMaster();
            dx = bindrate.premiumbind(Session["compcode"].ToString());
        }

        drppageprem.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Premium-";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drppageprem.Items.Add(li1);

        if (dx.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < dx.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = dx.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = dx.Tables[0].Rows[i].ItemArray[1].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drppageprem.Items.Add(li);
            }

        }


    }


    //public void bindscheme()
    //{
    //    NewAdbooking.Classes.BookingMaster bindschem = new NewAdbooking.Classes.BookingMaster();
    //    DataSet dsch = new DataSet();
    //    dsch = bindschem.schemebind(Session["compcode"].ToString());

    //    drpscheme.Items.Clear();
    //    int i;
    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = "-Select Scheme-";
    //    li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
    //    li1.Selected = true;
    //    drpscheme.Items.Add(li1);

    //    if (dsch.Tables[0].Rows.Count > 0)
    //    {
    //        for (i = 0; i < dsch.Tables[0].Rows.Count; i++)
    //        {
    //            ListItem li;
    //            li = new ListItem();

    //            li.Text = dsch.Tables[0].Rows[i].ItemArray[3].ToString();
    //            li.Value = dsch.Tables[0].Rows[i].ItemArray[4].ToString();
    //            //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
    //            drpscheme.Items.Add(li);
    //        }

    //    }


    //}

    //public void bindschemepck()
    //{

    //    NewAdbooking.Classes.BookingMaster bindschem = new NewAdbooking.Classes.BookingMaster();
    //    DataSet dsch = new DataSet();
    //    dsch = bindschem.schemebind(Session["compcode"].ToString());

    //    drpschemepck.Items.Clear();
    //    int i;
    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = "-Select Scheme-";
    //    li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
    //    li1.Selected = true;
    //    drpschemepck.Items.Add(li1);

    //    if (dsch.Tables[0].Rows.Count > 0)
    //    {
    //        for (i = 0; i < dsch.Tables[0].Rows.Count; i++)
    //        {
    //            ListItem li;
    //            li = new ListItem();

    //            li.Text = dsch.Tables[0].Rows[i].ItemArray[3].ToString();
    //            li.Value = dsch.Tables[0].Rows[i].ItemArray[4].ToString();
    //            //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
    //            drpschemepck.Items.Add(li);
    //        }

    //    }


    //}

    public void bindbox()
    {
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindboxcode = new NewAdbooking.Classes.BookingMaster();
            dx = bindboxcode.boxbind(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindboxcode = new NewAdbooking.classesoracle.BookingMaster();
            dx = bindboxcode.boxbind(Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bindboxcode = new NewAdbooking.classmysql.BookingMaster();
            dx = bindboxcode.boxbind(Session["compcode"].ToString());
        }

        drpboxcode.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Box-";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpboxcode.Items.Add(li1);

        if (dx.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < dx.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = dx.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = dx.Tables[0].Rows[i].ItemArray[1].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpboxcode.Items.Add(li);
            }

        }

    }

    [Ajax.AjaxMethod]
    public DataSet bindratecode(string adcat, string compcode)
    {
        //NewAdbooking.Classes.pop bindrate = new NewAdbooking.Classes.pop();
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
            dx = bindrate.ratebind(adcat, compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
            dx = bindrate.ratebind(adcat, compcode);
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
            dx = bindrate.ratebind(adcat, compcode);
        }
        return dx;

        //txtratecode.Items.Clear();
        //int i;
        //ListItem li1;
        //li1 = new ListItem();
        //li1.Text = "-Select Rate Code-";
        //li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        //li1.Selected = true;
        //txtratecode.Items.Add(li1);

        //if (dx.Tables[0].Rows.Count > 0)
        //{
        //    for (i = 0; i < dx.Tables[0].Rows.Count; i++)
        //    {
        //        ListItem li;
        //        li = new ListItem();
        //        li.Text = dx.Tables[0].Rows[i].ItemArray[0].ToString();
        //        li.Value = dx.Tables[0].Rows[i].ItemArray[0].ToString();
        //        //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
        //        txtratecode.Items.Add(li);
        //    }

        //}

    }

    public void bindrevenuecenter()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.login logindetail = new NewAdbooking.Classes.login();

            ds = logindetail.getQBC(Session["center"].ToString());

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.login logindetail = new NewAdbooking.classesoracle.login();
            ds = logindetail.getQBC(Session["center"].ToString());

        }
        else
        {
            NewAdbooking.classmysql.login logindetail = new NewAdbooking.classmysql.login();

            ds = logindetail.getQBC(Session["center"].ToString());
        }

        drprevenue.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Revenue Center";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drprevenue.Items.Add(li1);

        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drprevenue.Items.Add(li);
            }

        }

    }

    //public void bindpaymenttype()
    //{
    //    NewAdbooking.Classes.BookingMaster pay = new NewAdbooking.Classes.BookingMaster();
    //    DataSet ds = new DataSet();
    //    ds = pay.bindpaymode(Session["compcode"].ToString());

    //    drppaymenttype.Items.Clear();
    //    int i;
    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = "Select Pay Mode";
    //    li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
    //    li1.Selected = true;
    //    drppaymenttype.Items.Add(li1);

    //    if (ds.Tables[0].Rows.Count > 0)
    //    {
    //        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //        {
    //            ListItem li;
    //            li = new ListItem();
    //            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //            //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
    //            drppaymenttype.Items.Add(li);
    //        }

    //    }

    //}

    [Ajax.AjaxMethod]
    public DataSet bindbillto_ag(string agcode, string compcode)
    {
        DataSet dbt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getbillto = new NewAdbooking.Classes.BookingMaster();
            dbt = getbillto.getbillval(agcode, compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getbillto = new NewAdbooking.classesoracle.BookingMaster();
            dbt = getbillto.getbillval(agcode, compcode);
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster getbillto = new NewAdbooking.classmysql.BookingMaster();
            dbt = getbillto.getbillval(agcode, compcode);
        }
        return dbt;

    }
    //{
    //    DataSet billcyc = new DataSet();
    //    billcyc.ReadXml(Server.MapPath("XML/billcycle.xml"));
    //    drpbillto.Items.Clear();
    //    int i;
    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = "Select Bill To";
    //    li1.Value = "0";
    //    li1.Selected = true;
    //    drpbillto.Items.Add(li1);

    //    for (i = 0; i < billcyc.Tables[1].Columns.Count - 1; i++)
    //    {
    //        ListItem li;
    //        li = new ListItem();
    //        li.Text = billcyc.Tables[1].Rows[0].ItemArray[i].ToString();
    //        i = i + 1;
    //        li.Value = billcyc.Tables[1].Rows[0].ItemArray[i].ToString();
    //        drpbillto.Items.Add(li);

    //    }


    //}

    public void bindbillcycle()
    {
        DataSet billcyc = new DataSet();
        billcyc.ReadXml(Server.MapPath("XML/billcycle.xml"));
        drpbillcycle.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Bill";
        li1.Value = "0";
        li1.Selected = true;
        drpbillcycle.Items.Add(li1);

        for (i = 0; i < billcyc.Tables[0].Columns.Count - 1; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = billcyc.Tables[0].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li.Value = billcyc.Tables[0].Rows[0].ItemArray[i].ToString();
            drpbillcycle.Items.Add(li);

        }

    }

    public void bindPaymentMode()
    {

    }
    public void bindcurrency()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Contract curr = new NewAdbooking.Classes.Contract();
            ds = curr.currencybind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Contract curr = new NewAdbooking.classesoracle.Contract();
            ds = curr.currencybind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.Contract curr = new NewAdbooking.classmysql.Contract();
            ds = curr.currencybind(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        drpcurrency.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Currency";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpcurrency.Items.Add(li1);

        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpcurrency.Items.Add(li);
            }

        }

    }




    public void binduom()
    {
        //NewAdbooking.Classes.Contract binduom = new NewAdbooking.Classes.Contract();
        //DataSet ds = new DataSet();
        //ds = binduom.uombind(Session["compcode"].ToString(), Session["userid"].ToString());

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RateMaster binduom = new NewAdbooking.Classes.RateMaster();
            ds = binduom.uombind(Session["compcode"].ToString(), Session["userid"].ToString(), "0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.RateMaster binduom = new NewAdbooking.classesoracle.RateMaster();
            ds = binduom.uombind(Session["compcode"].ToString(), Session["userid"].ToString(), "0");
        }
        else
        {
            NewAdbooking.classmysql.RateMaster binduom = new NewAdbooking.classmysql.RateMaster();
            ds = binduom.uombind(Session["compcode"].ToString(), Session["userid"].ToString(), "0");
        }

        drpuom.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select UOM";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpuom.Items.Add(li1);

        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpuom.Items.Add(li);
            }

        }

    }

    public void bindpackage()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Contract bindopackage = new NewAdbooking.Classes.Contract();
            ds = bindopackage.packagebind(Session["compcode"].ToString(), "DI0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Contract bindopackage = new NewAdbooking.classesoracle.Contract();
            ds = bindopackage.packagebindActive(Session["compcode"].ToString(), "DI0");
        }
        else
        {
            NewAdbooking.classmysql.Contract bindopackage = new NewAdbooking.classmysql.Contract();
            ds = bindopackage.packagebind(Session["compcode"].ToString(), "DI0");
        }

        drppackage.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Package";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drppackage.Items.Add(li1);

        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drppackage.Items.Add(li);
            }

        }


    }

    public void advcat(string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bind = new NewAdbooking.Classes.BookingMaster();
            ds = bind.advdatacategory(compcode, "DI0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bind = new NewAdbooking.classesoracle.BookingMaster();
            ds = bind.advdatacategory(compcode, "DI0");
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bind = new NewAdbooking.classmysql.BookingMaster();
            ds = bind.advdatacategory(compcode, "DI0");
        }

        int i;
        ListItem li1;
        li1 = new ListItem();
        drpadcategory.Items.Clear();
        li1.Text = "Select Ad Category";
        li1.Value = "0";
        li1.Selected = true;
        drpadcategory.Items.Add(li1);

        if (ds.Tables.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drpadcategory.Items.Add(li);

            }
        }


    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindExec(string compcode, string execname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.getExec(compcode, execname, "0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.getExec(compcode, execname, "0",Session["center"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.getExec(compcode, execname, "0");
        }
        return ds;



    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindagencyname(string compcode, string userid, string agency)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindagenname = new NewAdbooking.Classes.BookingMaster();
            ds = bindagenname.bindagency(compcode, userid, agency);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindagenname = new NewAdbooking.classesoracle.BookingMaster();
            ds = bindagenname.bindagency(compcode, userid, agency, Session["center"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bindagenname = new NewAdbooking.classmysql.BookingMaster();
            ds = bindagenname.bindagency(compcode, userid, agency);
        }
        return ds;



    }
    public void bindStatus()
    {
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select RO Status";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drprostatus.Items.Add(li1);
        li1 = new ListItem();
        li1.Value = "2";
        li1.Text = "Confirm";
        drprostatus.Items.Add(li1);
        li1 = new ListItem();
        li1.Value = "1";
        li1.Text = "Reservation";
        drprostatus.Items.Add(li1);

    }
    public void bindBillStatus()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsBook = new NewAdbooking.Classes.BookingMaster();
            ds = clsBook.getBillStatus();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsBook = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsBook.getBillStatus();
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsBook = new NewAdbooking.classmysql.BookingMaster();
            ds = clsBook.getBillStatus();
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Status";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpbillstatus.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            //drpregion.SelectedValue=ds.Tables[0].Rows[i].ItemArray[1].ToString();
            //drpregion.SelectedItem.Text=ds.Tables[0].Rows[i].ItemArray[1].ToString();
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpbillstatus.Items.Add(li);
        }
    }


    protected void drpagency_SelectedIndexChanged(object sender, EventArgs e)
    {
        //string agency = txtagency.SelectedItem.Value;

    }
    public void bindpagePosition(string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.bindPagePosition(compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.bindPagePosition(compcode);
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.bindPagePosition(compcode);
        }

        int i;
        ListItem li1;

        li1 = new ListItem();
        drppageposition.Items.Clear();
        li1.Text = "Select Page Position";
        li1.Value = "0";
        li1.Selected = true;
        drppageposition.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drppageposition.Items.Add(li);


        }

    }
    public void bindAdSizeType(string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.bindAdSizeType(compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.bindAdSizeType(compcode);
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.bindAdSizeType(compcode);
        }

        int i;
        ListItem li1;

        li1 = new ListItem();
        drpadstype.Items.Clear();
        li1.Text = "Select Ad Size Type";
        li1.Value = "0";
        li1.Selected = true;
        drpadstype.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpadstype.Items.Add(li);


        }
    }
    [Ajax.AjaxMethod]
    public DataSet bindProduct(string compcode, string product)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.bindProduct(compcode, product, "0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.bindProduct(compcode, product, "0");
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.bindProduct(compcode, product, "0");
        }
        return ds;

        //int i;
        //ListItem li1;

        //li1 = new ListItem();
        //txtproduct.Items.Clear();
        //li1.Text = "Select Product";
        //li1.Value = "0";
        //li1.Selected = true;
        //txtproduct.Items.Add(li1);

        //for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        //{
        //    ListItem li;
        //    li = new ListItem();
        //    li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
        //    li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
        //    txtproduct.Items.Add(li);


        //}

    }
    public void bindAdType(string compcode)
    {
        DataSet billtyp = new DataSet();
        billtyp.ReadXml(Server.MapPath("XML/billcycle.xml"));
        drpbooktype.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Booking Type";
        li1.Value = "0";
        //li1.Selected = true;
        drpbooktype.Items.Add(li1);

        for (i = 0; i < billtyp.Tables[3].Columns.Count - 1; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = billtyp.Tables[3].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li.Value = billtyp.Tables[3].Rows[0].ItemArray[i].ToString();

            drpbooktype.Items.Add(li);

        }

    }
    [Ajax.AjaxMethod]
    public DataSet getexeczone(string execcode, string compcode)
    {
        //string execcode = txtexecname.Text;
        DataSet ds = new DataSet();


        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.getExecZoneName(execcode, compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.getExecZoneName(execcode, compcode);
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.getExecZoneName(execcode, compcode);
        }
        return ds;

    }
    public void bindcolor()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Contract bindcolor = new NewAdbooking.Classes.Contract();
            ds = bindcolor.colorbind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Contract bindcolor = new NewAdbooking.classesoracle.Contract();
            ds = bindcolor.colorbind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.Contract bindcolor = new NewAdbooking.classmysql.Contract();
            ds = bindcolor.colorbind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        drpcolor.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select Color";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpcolor.Items.Add(li1);

        if (ds.Tables[0].Rows.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpcolor.Items.Add(li);
            }

        }


    }



    [Ajax.AjaxMethod]
    public DataSet getbrand(string product, string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.bindBrand(compcode, product);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.bindBrand(compcode, product);
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.bindBrand(compcode, product);
        }
        return ds;


    }

    protected void txtinsertion_TextChanged1(object sender, EventArgs e)
    {

    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        //in case of modify save Previous booking ID and amount...
        /*    string prev_cioid = "";
            string prev_receipt = "";
            Decimal prev_ga = 0;
            string srtcancel = "0";
            string auditstatus = "";
            hiddenclientname.Value = txtclient.Text;
            autogenerated("3");
           // string xx = txtagencypaymode.SelectedValue; 
            if (txtagencypaymode.SelectedValue == "CA0" || txtagencypaymode.SelectedValue == "CR2" || txtagencypaymode.SelectedValue=="PC003")
            {
                if (hiddenprevamt.Value != "" && hiddenprevamt.Value != null)
                {
                    if (Convert.ToDecimal(hiddenprevamt.Value) != Convert.ToDecimal(txtgrossamt.Text))
                    {
                        prev_cioid = txtciobookid.Text;
                        prev_receipt = txtreceipt.Text;
                        prev_receipt = hiddenreceiptno.Value;
                        prev_ga = (Convert.ToDecimal(txtgrossamt.Text) - Convert.ToDecimal(hiddenprevamt.Value));
                        saveormodify = "0";
                        autogenerated("0");
                        autogenerated("3");
                        srtcancel = "1";
                    }   
                }           

            }

            if (Session["audit"].ToString() == "n")
            {
                if (txtcardamt.Text != txtagreedamt.Text)
                    auditstatus = "Not Approved";
                else
                    auditstatus = "Approved";
            }
            else
            {
                auditstatus = "Not Approved";
            } 

            //saveormodify = "0";
            hiddensavemod.Value = saveormodify;
            //splitting of date
            datesave getdatechk = new datesave();
            string branch = txtbranch.Text;
            string booked_by = txtbookedby.Text;
            string prevbook = txtprevbook.Text;
            string date_time = txtdatetime.Text = getdatechk.getDate(dateformat, txtdatetime.Text);
            string ciobookid = txtciobookid.Text;
        
            //string approvedby=txtappby.Text;
            //string audit=txtaudit.Text;
            string approvedby = "";
            string audit ="";
            string rono = txtrono.Text ;


            string rodate = "";
            if (txtrodate.Text != "")
            {
                 rodate = txtrodate.Text = getdatechk.getDate(dateformat, txtrodate.Text);
            }
            rodate = txtrodate.Text;

            string caption=txtcaption.Text;
            string billstatus=drpbillstatus.SelectedValue;
            string rostatus=drprostatus.SelectedValue;
            string agencycod=txtagency.Text;
            //////////////this is to split the  and get the code
            char[] splitter = { '(' };
            string[] myarray = agencycod.Split(splitter);
            string agencycode = myarray[1];
            agencycode = agencycode.Replace(")", "");
            hiddenagency.Value = agencycode;
            ////////////////////////////////////


            string clientcode=txtclient.Text;
            string client;
            ///this is to split and get the client code

            if (clientcode.IndexOf("(".ToString()) > 0)
            {
                //clientcode.IndexOf(
                char[] splitterclie = { '(' };
                string[] myarray1 = clientcode.Split(splitterclie);
            
                 client = myarray1[1];
                client = client.Replace(")", null);

                /////this is to chk whether this code exixts in the database if exists than it is a register client else
                ///it is walkinn client
                DataSet dcl = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster chkclient = new NewAdbooking.Classes.BookingMaster();
                    dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster chkclient = new NewAdbooking.classesoracle.BookingMaster();
                    dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster chkclient = new NewAdbooking.classmysql.BookingMaster();
                    dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
                }
                if (dcl.Tables[0].Rows.Count > 0)
                {

                }
                else
                {
                    client = clientcode;
                }

            }
            else
            {

                client = clientcode;
            }
            /////////////////////////////////////////////
            string agencyaddress=txtagencyaddress.Text;
            string clientaddresses=txtclientadd.Text ;
            string agency=drpagscode.SelectedValue;
            agency=hiddensubcode.Value;
            string dockitno=txtdockitno1.Text;
            string execnamecode=txtexecname.Text;
            //execnamecode = hiddenzone.Value;

            //char[] splitterex = { '(' };
            string execname = "";
            if (execnamecode != "")
            {
                string[] myarrayex = execnamecode.Split(splitter);
                execname = myarrayex[1];
                execname = execname.Replace(")", "");

            }        
        
            string execzone=txtexeczone.Text;
            execzone = hiddenzone.Value;
            string productcode=txtproduct.Text;
            string[] myarraypr;
            string product;
            if (productcode != "")
            {
                myarraypr = productcode.Split(splitter);
                product = myarraypr[1];
                product = product.Replace(")", "");
            }
            else
            {
                product = "";
            }

            string brand=drpbrand.SelectedValue;
            brand = hiddenbrand.Value;
            string keyno=txtkeyno.Text;
            string billremark=txtbillremark.Text;
            string printremark=txtprintremark.Text;
            string package;//=drppackage.SelectedValue;
            package = hiddenpackage.Value;
            string insertion=txtinsertion.Text;
            string startdate = "";
            if (txtdummydate.Text != "")
            {
                startdate = txtdummydate.Text; //= getDate(dateformat, txtdummydate.Text); //getdatechk.getDate(dateformat, txtdummydate.Text);
            }
            else
            {
                startdate = "";
            }
        
            string repeatdate=txtrepeatingdate.Text;
            //string adtype=drpbooktype.SelectedValue;
            string adtype = "DI0";
            string bookingtype = drpbooktype.SelectedValue;
            string adcategory=drpadcategory.SelectedValue;
            string subcategory = hiddenadsubcategory.Value;
            string color=drpcolor.SelectedValue;
            ////to split uom
            //char[] splitteruom = { '+' };
            //string[] myarrayuom = drpuom.SelectedValue.Split(splitteruom);

            //client = myarray1[1];
            string uom = drpuom.SelectedValue;
            string pageposition=drppageposition.SelectedValue;
            string pagetype=drppagetype.SelectedValue;
            string pageno=txtpageno.Text;
            //string adtype=drpadstype.SelectedValue;
            string adsizheight = txtadsize1.Text;// txtadsizetypeheight.Text;
            string adsizwidth =txtadsize2.Text;// txtadsizetypewidth.Text;
            string ratecode=txtratecode.SelectedValue ;
            ratecode = hiddenratecode.Value;
            string scheme=drpscheme.Text;
            scheme = hiddenscheme.Value;
            string currency=drpcurrency.SelectedValue;
            string agreedrate=txtagreedrate.Text;
            string agreedamt=txtagreedamt.Text;
            string spedisc=txtspedisc.Text;
            string spacedisx=txtspacedisc.Text;
            string adsizetype = drpadstype.SelectedValue;
            string specialcharges = txtextracharges.Text;
            /////new
            string agencytype = txtagencytype.Text;
            string agencystatus = txtagencystatus.Text;
            agencystatus = hiddenstatus.Value;
            string paymode = txtagencypaymode.SelectedValue;
            paymode = hiddenpay.Value;
            string agencredit = txtcreditperiod.Text;
            string cardrate = txtcardrate.Text;
            string cardamount = txtcardamt.Text;
            string discount = txtdiscount.Text;
            string discountper = txtdiscpre.Text;
            string billaddress = txtbilladdress.Text;
            string totarea = txttotalarea.Text;
            string billcycle = drpbillcycle.SelectedValue;
            string revenuecenter = drprevenue.SelectedValue;
            string billpay = drppaymenttype.SelectedValue;
            billpay = hiddenbillpay.Value;
        
            string billheight = txtbillheight.Text;
            string billwidth = txtbillwidth.Text;
            string billto = drpbillto.SelectedValue;
            billto = hiddenbillto.Value;
            string invoices = txtinvoice.Text;
            string vts = txtvts.Text;
            string tradedisc = txttradedisc.Text;
            string agencyout = txtagencyoutstand.Text;

            string boxcode = drpboxcode.SelectedValue;
            string boxno = txtboxno.Text;
            boxno = hiddenboxno.Value;
            string boxaddress=txtboxaddress.Text;
            string boxagency;
            string boxclient;
            string tfn;
            string coupan;
            string campaign = txtcamp.Text;
            string bill_amt = txtbillamt.Text;
            string pageprem = drppageprem.SelectedValue;
            string pageamt = txtpageamt.Text;
            string premper = txtpremper.Text;
            string grossamt = txtgrossamt.Text;
            string adsizcolumn = txtcolum.Text;
            string billcolumn = "";
            Decimal billarea = Convert.ToDecimal(txtbillwidth.Text) * Convert.ToDecimal(txtbillheight.Text);
            string specdiscper = txtspediscper.Text;
            string spacediscper = txtspadiscper.Text;
            string paidins = txtpaid.Text;
            string dealrate = txtdealrate.Text;
            string deviation = txtdeviation.Text;
            string varient="";
            if (drpvarient.Items.Count > 0)
            {
                 varient = drpvarient.SelectedValue;
            }
            varient = hiddenvar.Value;
            string contractname = txtcontractname.Text;
            string dealtyp = txtcontracttype.Text;
            string cardname = txtcardname.Text;
            string cardtype = drptype.SelectedValue;
            string cardmonth = drpmonth.SelectedValue;
            string cardyear = drpyear.SelectedValue;
            string cardno = txtcardno.Text;
            string receiptno = txtreceipt.Text;
            receiptno = hiddenreceiptno.Value;
            string adscat3 = hiddenadscat3.Value; //"0";
            string adscat4 = hiddenadscat4.Value; //"0";
            string adscat5 = hiddenadscat5.Value; //"0";
            string bgcolor = "0";
            string bulletcode = "0";
            string bulletprm = "";
            string material = drpmatsta.SelectedValue;

            string variant_name = drpvarient.SelectedValue;


            if (chkage.Checked == true)
            {
                boxagency = "1";
            }
            else
            {
                boxagency = "0";
            }
            if (chkclie.Checked == true)
            {
                boxclient = "1";
            }
            else
            {
                boxclient = "0";
            }

            if (chktfn.Checked == true)
            {
                tfn = "1";
            }
            else
            {
                tfn = "0";
            }
            if (chkcoupan.Checked == true)
            {
                coupan = "1";
            }
            else
            {
                coupan = "0";
            }


            string retainer = drpretainer.Text; //*6Aug* drpretainer.SelectedValue; //hiddenretainer.Value;

            string addagencycommVar = txtaddagencycommrate.Text;
            if (saveormodify == "0")
            {
                ///////if 0 than autogenerate the cio booking id and if 1 than autogenerate dockit no.
                //autogenerated("0");
                ciobookid = txtciobookid.Text;

                DataSet dck = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster chkbookid = new NewAdbooking.Classes.BookingMaster();
                    dck = chkbookid.bookidchk(Session["compcode"].ToString(), txtciobookid.Text, agency, agencycode, rono, "0");
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster chkbookid = new NewAdbooking.classesoracle.BookingMaster();
                    dck = chkbookid.bookidchk(Session["compcode"].ToString(), txtciobookid.Text, agency, agencycode, rono, "0");
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster chkbookid = new NewAdbooking.classmysql.BookingMaster();
                    dck = chkbookid.bookidchk(Session["compcode"].ToString(), txtciobookid.Text, agency, agencycode, rono, "0");
                }

                if (dck.Tables[0].Rows.Count >= 1)
                {
                    message = "This Booking Id Has Been Assigned";
                    AspNetMessageBox(message);
                    btnCancel_Click(sender, e);
                    return;

                }

                if (txtrono.Text == "")
                {
                    autogenerated("1");
                    dockitno = txtdockitno1.Text;
                    if (Session["rostatus"].ToString() == "1")
                    {
                        drprostatus.SelectedValue = "1";
                        rostatus = drprostatus.SelectedValue;
                    }
                }

           
                DataSet dgr = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster chkrategrupcode = new NewAdbooking.Classes.BookingMaster();
                    dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, "DI0", Session["compcode"].ToString(), agency, client);
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster chkrategrupcode = new NewAdbooking.classesoracle.BookingMaster();
                    dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, "DI0", Session["compcode"].ToString(), agency, client, Session["dateformat"].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster chkrategrupcode = new NewAdbooking.classmysql.BookingMaster();
                    dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, "DI0", Session["compcode"].ToString(), agency, client);
                }

                if (dgr.Tables[0].Rows.Count > 0)
                {
                     rategr = dgr.Tables[0].Rows[0].ItemArray[0].ToString();
                }
                if (dgr.Tables[2].Rows.Count > 0)
                {
                     agencyrate = dgr.Tables[2].Rows[0].ItemArray[0].ToString();
                }
                if (dgr.Tables[1].Rows.Count > 0)
                {
                     clientrate = dgr.Tables[1].Rows[0].ItemArray[0].ToString();
                }

                DataSet dins = new DataSet();
                //for booking cancellation..
                DataSet dscancel = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                
                    NewAdbooking.Classes.BookingMaster insert = new NewAdbooking.Classes.BookingMaster();
                    dins = insert.insertbooking1(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, prev_ga, "0", variant_name, auditstatus);
                    if (srtcancel == "1")
                    {
                        dscancel = insert.cancelbooking(prev_cioid);
                    }
                    dscancel.Dispose();
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster insert = new NewAdbooking.classesoracle.BookingMaster();
                    dins = insert.insertbooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, prev_ga, "0", variant_name, "0", "0", "0", "0", "0", Session["dateformat"].ToString(), retainer, addagencycommVar);                
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster insert = new NewAdbooking.classmysql.BookingMaster();
                    dins = insert.insertbooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, prev_ga, "0", variant_name, "0", "0", "0", "0", "0");
                
                }


                ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "aa", "saveinsertion()", true);
                /////////////////////////////////////////////////////////////////////////////////////

                string savename = "";
                if (Session["imgname"] != null)
                {
                    string filename = Session["imgname"].ToString();
                    char[] splitimg = { '+' };
                    string[] array = filename.Split(splitimg);

                    /////////////this is to attach the name file
                    string insertname = Session["insertname"].ToString();
                    char[] splitins ={ '/' };
                    string[] array1 = insertname.Split(splitins); 
          

                    for (int z = 0; z <= array.Length - 1; z++)
                    {
                        if (array[z] != "")
                        {
                            //char[] split ={ '.' };
                            //string[] arraypoint = array[z].Split(split); 
                            string str2 = array[z];
                            int ind = str2.LastIndexOf(".");
                            int len = (str2.Length) - ind;
                            string tot = str2.Substring(ind, len);

                            if (array[z] != null && array[z]!="undefined")
                            {
                                savename = array[z];

                                if (!System.IO.Directory.Exists(Server.MapPath("Orignal/" + txtciobookid.Text)))
                                {
                                    System.IO.Directory.CreateDirectory(Server.MapPath("Orignal/" + txtciobookid.Text));
                                }

                                    if (System.IO.Directory.Exists(Server.MapPath("Temp/")))
                                    {
                                        System.IO.File.Copy(Server.MapPath("Temp/" + array[z]), Server.MapPath("Orignal/"+ciobookid+"/" + array[z]), true);

                                        System.IO.File.Move(Server.MapPath("Orignal/" + ciobookid + "/" + array[z]), Server.MapPath("Orignal/" + ciobookid + "/" + ciobookid + "-" + array1[z] +  tot));
                                   
                                        System.IO.File.Delete(Server.MapPath("Temp/" + array[z]));
                                    }


                            }
                        }

                    }


                }

                Session["imgname"] = null;
                Session["Tempimgname"] = null;
                Session["insertname"] = null;
                Session["Tempinsertname"] = null;
                hiddencalendar.Value = "0";

              //  txtappby.Enabled = false;
               // txtaudit.Enabled = false;
                txtrono.Enabled = false;
                txtrodate.Enabled = false;
                txtcaption.Enabled = false;
                drpbillstatus.Enabled = false;
                drprostatus.Enabled = false;
                txtagency.Enabled = false;
                txtclient.Enabled = false;
                txtagencyaddress.Enabled = false;
                txtclientadd.Enabled = false;
                drpagscode.Enabled = false;
                txtdockitno1.Enabled = false;
                txtexecname.Enabled = false;
                txtexeczone.Enabled = false;
                txtproduct.Enabled = false;
                drpbrand.Enabled = false;
                txtkeyno.Enabled = false;
                txtbillremark.Enabled = false;
                txtprintremark.Enabled = false;
                drppackage.Enabled = false;
                txtinsertion.Enabled = false;
                txtdummydate.Enabled = false;
                txtrepeatingdate.Enabled = false;
                drpbooktype.Enabled = false;
                drpadcategory.Enabled = false;
                drpadsubcategory.Enabled = false;

                drpadcat3.Enabled = false;
                drpadcat4.Enabled = false;
                drpadcat5.Enabled = false;

                drpcolor.Enabled = false;
                drpuom.Enabled = false;
                drppageposition.Enabled = false;
                drppagetype.Enabled = false;
                txtpageno.Enabled = false;
                drpadstype.Enabled = false;
                //txtadsizetypeheight.Enabled = false;
               // txtadsizetypewidth.Enabled = false;
                txtratecode.Enabled = false;
                drpscheme.Enabled = false;
             //   drpschemepck.Enabled = false;
                drpcurrency.Enabled = false;
                txtagreedrate.Enabled = false;
                txtagreedamt.Enabled = false;
                txtspedisc.Enabled = false;
                txtspacedisc.Enabled = false;
                txtextracharges.Enabled = false;
                txtdatetime.Enabled = false;
                txtrepeatingdate.Enabled = false;
                txtadsize1.Enabled = false;
                txtadsize2.Enabled = false;
                txttotalarea.Enabled = false;
                txtcardrate.Enabled = false;
                txtcardamt.Enabled = false;
                txtdiscount.Enabled = false;
                txtdiscpre.Enabled = false;
                txtrepeatingdate.Enabled = false;
                drpbillcycle.Enabled = false;
                drprevenue.Enabled = false;
                drppaymenttype.Enabled = false;
                txtbillheight.Enabled = false;
                txtbillwidth.Enabled = false;
                drpbillto.Enabled = false;
                txtinvoice.Enabled = false;
                txtvts.Enabled = false;
                txtbilladdress.Enabled = false;
                txttradedisc.Enabled = false;
                txtagencyoutstand.Enabled = false;
            
                txtcolum.Enabled = false;
               // txtbillcolumn.Enabled = false;
               // txtbillarea.Enabled = false;
                txtspediscper.Enabled = false;
                txtspadiscper.Enabled = false;
                drpboxcode.Enabled = false;
                drpboxcode.SelectedValue = "0";
                txtboxno.Enabled = false;
                txtboxno.Text = "";
                chkage.Enabled = false;
                chkage.Checked = false;
                chkclie.Enabled = false;
                chkclie.Checked = false;
                drpvarient.Enabled = false;
                txtagencypaymode.Enabled = false;
                drpmatsta.Enabled = false;
                if (Session["addAgencyComm"].ToString() == "Y")
                {
                    txtaddagencycommrate.Enabled = false;
                    txtaddagencycommrate.Text = "";
                }
                drpmatsta.SelectedValue = "0";
                drpvarient.SelectedValue = "0";
                txtboxaddress.Text = "";
                txtbillamt.Text = "";
                txtpageamt.Text = "";
                txtpremper.Text = "";
                txtgrossamt.Text = "";
                drppageprem.SelectedValue = "0";
           

               // txtappby.Text = "";
                //txtaudit.Text = "";
                txtcolum.Text = "";
                //txtbillcolumn.Text = "";
                ////txtbillarea.Text = "" = "";
                txtspediscper.Text = "";
                txtspadiscper.Text = "";
                txtrono.Text = "";
                txtrodate.Text = "";
                txtcaption.Text = "";
                drpbillstatus.SelectedValue = "0";
                drprostatus.SelectedValue = "0";
                txtagency.Text = "";
                txtclient.Text = "";
                txtagencyaddress.Text = "";
                txtclientadd.Text = "";
                drpagscode.SelectedValue = "0";
                txtdockitno1.Text = "";
                txtexecname.Text = "";
                txtexeczone.Text = "";
                txtproduct.Text = "";
                drpbrand.SelectedValue = "0";
                txtkeyno.Text = "";
                txtbillremark.Text = "";
                txtprintremark.Text = "";
               // drppackage.SelectedValue = "0";
                txtinsertion.Text = "";
                txtdummydate.Text = "";
                txtrepeatingdate.Text = "";
                drpbooktype.SelectedValue="0";
                drpadcategory.SelectedValue = "0";
                drpadsubcategory.SelectedValue = "0";

                drpadcat3.SelectedValue = "0";
                drpadcat4.SelectedValue = "0";
                drpadcat5.SelectedValue = "0";
                txtRetainercomm.Text = "";
                txtRetainercomm.Enabled = false;
                drpretainer.Enabled = false;
                drpretainer.Text = "";
                drpcolor.SelectedValue = "0";
                drpuom.SelectedValue = "0";
                drppageposition.SelectedValue = "0";
                drppagetype.SelectedValue = "0";
                txtpageno.Text = "";
                drpadstype.SelectedValue = "0";
               // txtadsizetypeheight.Text = "";
                //txtadsizetypewidth.Text = "";
                txtratecode.SelectedValue = "0";
                drpscheme.Text = "";
              //  drpschemepck.SelectedValue = "0";
                drpcurrency.SelectedValue = "0";
                txtagreedrate.Text = "";
                txtagreedamt.Text = "";
                txtspedisc.Text = "";
                txtspacedisc.Text = "";
                txtextracharges.Text = "";
                txtagencytype.Text = "";
                txtagencystatus.Text = "";
                txtaddagencycommrate.Text = "";
                txtaddagencycommrate.Enabled = false;
                //txtagencypaymode.Items.Clear();
                txtagencypaymode.Items.Clear();
                txtadsize1.Text = "";
                txtadsize2.Text = "";
                txttotalarea.Text = "";
                txtcardrate.Text = "";
                txtcardamt.Text = "";
                txtdiscount.Text = "";
                txtdiscpre.Text = "";
                txtrepeatingdate.Text = "";
                drpbillcycle.SelectedValue = "0";
                drprevenue.SelectedValue = "0";
                // drppaymenttype.Items.Clear();
                drppaymenttype.Items.Clear();
                txtbillheight.Text = "";
                txtbillwidth.Text = "";
                //drpbillto.SelectedValue = "0";
                drpbillto.Items.Clear();
                txtinvoice.Text = "";
                txtvts.Text = "";
                txtbilladdress.Text = "";
                txttradedisc.Text = "";
                txtagencyoutstand.Text = "";
                txtcreditperiod.Text = "";

              //*6aug*  drpretainer.SelectedValue = "0";
                drpretainer.Enabled = false;
                //txtciobookid.Text = "";

                    DataSet objDataSetxml1 = new DataSet();
                // Read in the XML file
                objDataSetxml1.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                //message = objDataSetxml1.Tables[0].Rows[0].ItemArray[0].ToString();
                message = "Data Saved Sucessfully with CIO Id " + ciobookid + "";

                hiddencioid.Value = ciobookid;
                // message = "Value saved";
                AspNetMessageBox(message);
                getbuttoncheck(formname);
                //grd_SpaceCheck.Visible = false;
                ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz0", "document.getElementById('drpinsertion').options.length=0;document.getElementById('drpedition').options.length=0;document.getElementById('divspace').style.display='none';document.getElementById('tblinsert').innerHTML='';document.getElementById('Panel1').innerHTML='<DIV id=Divn1 style=\"BORDER-RIGHT: thin groove; BORDER-TOP: thin groove; FONT-SIZE: 6pt; VISIBILITY: hidden; BORDER-LEFT: thin groove; WIDTH: 60px; BORDER-BOTTOM: thin groove; POSITION: absolute; HEIGHT: 80px\"><IMG class=drag id=Image1 style=\"BORDER-RIGHT: 1px solid; BORDER-TOP: 1px solid; VISIBILITY: hidden; BORDER-LEFT: 1px solid; BORDER-BOTTOM: 1px solid\" src=\"\"> </DIV><DIV id=Divpg1 style=\"BORDER-RIGHT: thin groove; BORDER-TOP: thin groove; FONT-SIZE: 8pt; LEFT: 14px; VISIBILITY: hidden; BORDER-LEFT: thin groove; WIDTH: 20px; BORDER-BOTTOM: thin groove; POSITION: absolute; TOP: 46px; HEIGHT: 10px\"></DIV>';", true);
            
                //print the receipt *4sep*
                if (hiddenprint_rec.Value == "Y")
                {
                    ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "print", "printreceipt_display();", true);
                }

            }
            else//modify
            {

                ///////////////////this is to get the file name from insert table 
                DataSet dckfile = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster chkfile = new NewAdbooking.Classes.BookingMaster();
                    dckfile = chkfile.chkfilename(txtciobookid.Text, Session["compcode"].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster chkfile = new NewAdbooking.classesoracle.BookingMaster();
                    dckfile = chkfile.chkfilename(txtciobookid.Text, Session["compcode"].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster chkfile = new NewAdbooking.classmysql.BookingMaster();
                    dckfile = chkfile.chkfilename(txtciobookid.Text, Session["compcode"].ToString());
                }

                if (txtciobookid.Text != "")
                {
                    DataSet ddl = new DataSet();
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                        NewAdbooking.Classes.BookingMaster delid = new NewAdbooking.Classes.BookingMaster();
                        ddl = delid.deleteid(txtciobookid.Text, Session["compcode"].ToString());
                    }
                    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.BookingMaster delid = new NewAdbooking.classesoracle.BookingMaster();
                        ddl = delid.deleteid(txtciobookid.Text, Session["compcode"].ToString());
                    }
                    else
                    {
                        NewAdbooking.classmysql.BookingMaster delid = new NewAdbooking.classmysql.BookingMaster();
                        ddl = delid.deleteid(txtciobookid.Text, Session["compcode"].ToString());
                    }

                }
            

                DataSet dup = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster update = new NewAdbooking.Classes.BookingMaster();
                    //dup = update.updatebooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout);
                    dup = update.updatebooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "0", "0","0","0","0","0","0",auditstatus );
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster update = new NewAdbooking.classesoracle.BookingMaster();
                    //dup = update.updatebooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout);
                    dup = update.updatebookingdisp(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "0", "0", "0", "0", "0", "0", "0", auditstatus,Session["dateformat"].ToString(), retainer,txtaddagencycommrate.Text);
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster update = new NewAdbooking.classmysql.BookingMaster();
                    //dup = update.updatebooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout);
                    dup = update.updatebooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "0", "0", "0", "0", "0", "0", "0", auditstatus,"");
                }


                ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "kk", "getmodifygrid()", true);
                if (Request.QueryString["cioid"] != null)
                {
                    ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "jj", "window.opener.document.getElementById('hiddenmodify').value=1;", true);
                }

                string savename = "";
                if (Session["imgname"] != null)
                {
                    string filename = Session["imgname"].ToString();
                    char[] splitimg = { '+' };
                    string[] array = filename.Split(splitimg);

                    /////////////this is to attach the name file
                    string insertname = Session["insertname"].ToString();
                    char[] splitins ={ '/' };
                    string[] array1 = insertname.Split(splitins);


                    for (int z = 0; z <= array.Length - 1; z++)
                    {
                        if (array[z] != "")
                        {
                            //char[] split ={ '.' };
                            //string[] arraypoint = array[z].Split(split); 
                            string str2 = array[z];
                            int ind = str2.LastIndexOf(".");
                            int len = (str2.Length) - ind;
                            string tot = str2.Substring(ind, len);

                            if (array[z] != null && array[z] != "undefined")
                            {
                                savename = array[z];

                                if (!System.IO.Directory.Exists(Server.MapPath("Orignal/" + txtciobookid.Text)))
                                {
                                    System.IO.Directory.CreateDirectory(Server.MapPath("Orignal/" + txtciobookid.Text));
                                }

                                if (System.IO.Directory.Exists(Server.MapPath("Temp/")))
                                {
                                    System.IO.File.Copy(Server.MapPath("Temp/" + array[z]), Server.MapPath("Orignal/" + ciobookid + "/" + array[z]), true);
                                    if (dckfile.Tables[0].Rows[z].ItemArray[0].ToString() != "")
                                    {

                                        if (System.IO.File.Exists(Server.MapPath("Orignal/" + ciobookid + "/" + dckfile.Tables[0].Rows[z].ItemArray[0].ToString())))
                                        {
                                            System.IO.File.Delete(Server.MapPath("Orignal/" + ciobookid + "/" + dckfile.Tables[0].Rows[z].ItemArray[0].ToString()));

                                        }
                                    }
                                    System.IO.File.Move(Server.MapPath("Orignal/" + ciobookid + "/" + array[z]), Server.MapPath("Orignal/" + ciobookid + "/" + ciobookid + "-" + array1[z] + tot));                               
                                    System.IO.File.Delete(Server.MapPath("Temp/" + array[z]));
                                }
                            }
                        }
                    }

                }

                Session["imgname"] = null;
                Session["Tempimgname"] = null;
                Session["insertname"] = null;
                Session["Tempinsertname"] = null;
                hiddencalendar.Value = "0";


                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster execute = new NewAdbooking.Classes.BookingMaster();
                    executequery = execute.executebooking(Session["compcode"].ToString(), gciobookid, gdockitno, gkeyno, grono, gagencyscode, gclient, "DI0");
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster execute = new NewAdbooking.classesoracle.BookingMaster();
                    executequery = execute.executebooking(Session["compcode"].ToString(), gciobookid, gdockitno, gkeyno, grono, gagencyscode, gclient, "DI0");
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster execute = new NewAdbooking.classmysql.BookingMaster();
                    executequery = execute.executebooking(Session["compcode"].ToString(), gciobookid, gdockitno, gkeyno, grono, gagencyscode, gclient, "DI0");
                }

                dateinsert getdatechkup = new dateinsert();

                txtbranch.Text = executequery.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtbookedby.Text = executequery.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtprevbook.Text = executequery.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                string datetime = executequery.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                txtdatetime.Text = getdatechk.getDate(dateformat, datetime);
                txtciobookid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                //txtappby.Text = executequery.Tables[0].Rows[fpnl].ItemArray[5].ToString();
                // txtaudit.Text = executequery.Tables[0].Rows[fpnl].ItemArray[6].ToString();
                txtrono.Text = executequery.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                string ro_date = executequery.Tables[0].Rows[fpnl].ItemArray[8].ToString();
                if (ro_date != "")
                    txtrodate.Text = getdatechk.getDate(dateformat, ro_date);
                else
                    txtrodate.Text = "";

                txtcaption.Text = executequery.Tables[0].Rows[fpnl].ItemArray[9].ToString();
                drpbillstatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[10].ToString();
                drprostatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[11].ToString();
                txtagency.Text = executequery.Tables[0].Rows[fpnl].ItemArray[89].ToString();
                //drpagency_SelectedIndexChanged(sender, e);

                ///////////////this is to bind the subagency drop down
                DataSet dsbsa = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster bindsubage = new NewAdbooking.Classes.BookingMaster();
                    dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster bindsubage = new NewAdbooking.classesoracle.BookingMaster();
                    dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster bindsubage = new NewAdbooking.classmysql.BookingMaster();
                    dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                }

                drpagscode.Items.Clear();
                int p;
                ListItem li11;
                li11 = new ListItem();
                li11.Text = "Select Package";
                li11.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();

                drpagscode.Items.Add(li11);

                if (dsbsa.Tables[0].Rows.Count > 0)
                {
                    for (p = 0; p < dsbsa.Tables[0].Rows.Count; p++)
                    {
                        ListItem li12;
                        li12 = new ListItem();
                        li12.Text = dsbsa.Tables[0].Rows[p].ItemArray[1].ToString();
                        li12.Value = dsbsa.Tables[0].Rows[p].ItemArray[0].ToString();
                        //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                        drpagscode.Items.Add(li12);
                    }
                }

                //////////////////////////////////////////////////////

                txtclient.Text = executequery.Tables[0].Rows[fpnl].ItemArray[14].ToString();
                txtagencyaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[13].ToString();
                txtclientadd.Text = executequery.Tables[0].Rows[fpnl].ItemArray[15].ToString();
                hiddensubcode.Value = drpagscode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString();
                txtdockitno1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[17].ToString();
                txtexecname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[90].ToString();
                hiddenzone.Value = txtexeczone.Text = executequery.Tables[0].Rows[fpnl].ItemArray[19].ToString();
                txtproduct.Text = executequery.Tables[0].Rows[fpnl].ItemArray[91].ToString();
            
                /////////////////////////////////////////////this is to bind the brand drop down
                DataSet dsbrand = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster brandbind = new NewAdbooking.Classes.BookingMaster();
                    dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster brandbind = new NewAdbooking.classesoracle.BookingMaster();
                    dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster brandbind = new NewAdbooking.classmysql.BookingMaster();
                    dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                }

                drpbrand.Items.Clear();
                int x;

                ListItem li112;
                li112 = new ListItem();
                li112.Text = "Select brand";
                li112.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                drpbrand.Items.Add(li112);
                hiddencioid.Value = ciobookid;
                if (dsbrand.Tables[0].Rows.Count > 0)
                {
                    for (x = 0; x < dsbrand.Tables[0].Rows.Count; x++)
                    {
                        ListItem li3;
                        li3 = new ListItem();
                        li3.Text = dsbrand.Tables[0].Rows[x].ItemArray[1].ToString();
                        li3.Value = dsbrand.Tables[0].Rows[x].ItemArray[0].ToString();
                        //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                        drpbrand.Items.Add(li3);
                    }

                }
               // hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
                if (executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString() == "")
                {
                    drpbrand.Items.Clear();
                    hiddenbrand.Value = "";
                }
                else
                {
                    hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
                }
                ////////////////////this is to bind the varient dropdown
                DataSet dva = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster getvarient = new NewAdbooking.Classes.BookingMaster();
                    dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster getvarient = new NewAdbooking.classesoracle.BookingMaster();
                    dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster getvarient = new NewAdbooking.classmysql.BookingMaster();
                    dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                }

                drpvarient.Items.Clear();
                int x1;
                ListItem li1121;
                li1121 = new ListItem();
                li1121.Text = "Select varient";
                li1121.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                drpvarient.Items.Add(li1121);

                if (dva.Tables[0].Rows.Count > 0)
                {
                    for (x1 = 0; x1 < dva.Tables[0].Rows.Count; x1++)
                    {
                        ListItem li31;
                        li31 = new ListItem();
                        li31.Text = dva.Tables[0].Rows[x1].ItemArray[1].ToString();
                        li31.Value = dva.Tables[0].Rows[x1].ItemArray[0].ToString();
                        //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                        drpvarient.Items.Add(li31);
                    }

                }

                ////////////////////////////////////////////////////////////////////////////////
                txtkeyno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[22].ToString();
                txtbillremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[23].ToString();
                txtprintremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[24].ToString();
                string listpck = executequery.Tables[0].Rows[fpnl].ItemArray[25].ToString();
                hiddenpackage.Value = listpck;
                //////////////////this is to bind the package grid on what the value is saved in the database

                //ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "c1", "bindgridpkg('" + listpck + "')", true);
                DataSet dsexecut = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster bindpacforexe = new NewAdbooking.Classes.BookingMaster();
                    dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
                    dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster bindpacforexe = new NewAdbooking.classmysql.BookingMaster();
                    dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                }

                int i;

                drppackagecopy.Items.Clear();
                for (i = 0; i <= dsexecut.Tables[0].Rows.Count - 1; i++)
                {
                    if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "")
                    {
                        if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "0")
                        {

                            ListItem li;
                            li = new ListItem();
                            li.Text = dsexecut.Tables[0].Rows[i].ItemArray[1].ToString();
                            li.Value = dsexecut.Tables[0].Rows[i].ItemArray[2].ToString();
                            //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                            drppackagecopy.Items.Add(li);

                        }
                    }
                }

                txtinsertion.Text = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
                hiddeninsertion.Value = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
                string start_date = executequery.Tables[0].Rows[fpnl].ItemArray[27].ToString();
                txtdummydate.Text = getdatechk.getDate(dateformat, start_date);
                txtrepeatingdate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[28].ToString();
                drpbooktype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[70].ToString();
                drpadcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString();
                drpadsubcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString();
                drpcolor.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[32].ToString();
                drpuom.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[33].ToString();
                drppageposition.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[34].ToString();
                drppagetype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[35].ToString();
                txtpageno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[36].ToString();
                //string adtype=drpadstype.SelectedValue;
                txtadsize1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[38].ToString();
                txtadsize2.Text = executequery.Tables[0].Rows[fpnl].ItemArray[39].ToString();

                ////this is to bind the ratecode drpdown
                DataSet dx = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
                    dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                }
                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
                    dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
                    dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                }

                txtratecode.Items.Clear();
                int ii;
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "-Select Rate Code-";
                li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                li1.Selected = true;
                txtratecode.Items.Add(li1);

                if (dx.Tables[0].Rows.Count > 0)
                {
                    for (ii = 0; ii < dx.Tables[0].Rows.Count; ii++)
                    {
                        ListItem li;
                        li = new ListItem();
                        li.Text = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                        li.Value = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                        //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                        txtratecode.Items.Add(li);
                    }

                }
                txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
                hiddenratecode.Value = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();

               // txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
                drpscheme.Text = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
                hiddenscheme.Value = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
              //  drpschemepck.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
                drpcurrency.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[42].ToString();
                txtagreedrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[43].ToString();
                txtagreedamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[44].ToString();
                txtspedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[45].ToString();
                txtspacedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[46].ToString();
                drpadstype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[37].ToString();
                txtextracharges.Text = executequery.Tables[0].Rows[fpnl].ItemArray[47].ToString();
                hiddenstatus.Value = txtagencystatus.Text = executequery.Tables[0].Rows[fpnl].ItemArray[50].ToString();
                txtagencytype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[51].ToString();
                ////this is to bind the bill pay mode

                DataSet dch = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster getsta = new NewAdbooking.Classes.BookingMaster();
                    dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
                }

                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster getsta = new NewAdbooking.classesoracle.BookingMaster();
                    dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text, Session["dateformat"].ToString(), "DI0");
                }

                else
                {
                    NewAdbooking.classmysql.BookingMaster getsta = new NewAdbooking.classmysql.BookingMaster();
                    dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
                }
            
                txtagencypaymode.Items.Clear();
                if (dch.Tables[5].Rows.Count > 0)
                {
                    for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
                    {
                        ListItem li;
                        li = new ListItem();
                        li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                        li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                        txtagencypaymode.Items.Add(li);
                    }

                }
                hiddenpay.Value = txtagencypaymode.Text = executequery.Tables[0].Rows[fpnl].ItemArray[52].ToString();
                txtcreditperiod.Text = executequery.Tables[0].Rows[fpnl].ItemArray[53].ToString();
                txttotalarea.Text = executequery.Tables[0].Rows[fpnl].ItemArray[54].ToString();
                txtcardrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[55].ToString();
                txtcardamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[56].ToString();
                txtdiscount.Text = executequery.Tables[0].Rows[fpnl].ItemArray[57].ToString();
                txtdiscpre.Text = executequery.Tables[0].Rows[fpnl].ItemArray[58].ToString();
                drpbillcycle.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[59].ToString();
                drprevenue.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[60].ToString();

                drppaymenttype.Items.Clear();
                if (dch.Tables[5].Rows.Count > 0)
                {
                    for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
                    {
                        ListItem li;
                        li = new ListItem();
                        li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                        li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                        drppaymenttype.Items.Add(li);
                    }

                }
                hiddenbillpay.Value=drppaymenttype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[61].ToString();
                txtbillheight.Text = executequery.Tables[0].Rows[fpnl].ItemArray[62].ToString();
                txtbillwidth.Text = executequery.Tables[0].Rows[fpnl].ItemArray[63].ToString();

                //////////////this is to bind the bill to 
                DataSet dbt = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster getbillto = new NewAdbooking.Classes.BookingMaster();
                    dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
                }

                else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster getbillto = new NewAdbooking.classesoracle.BookingMaster();
                    dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
                }

                else
                {
                    NewAdbooking.classmysql.BookingMaster getbillto = new NewAdbooking.classmysql.BookingMaster();
                    dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
                }
            
                ////////////////////////////////////////////////////
                drpbillto.Items.Clear();
                ListItem lik;
                lik = new ListItem();
                lik.Text = "Client";
                lik.Value = "client";
                drpbillto.Items.Add(lik);
                for (int k = 0; k < dbt.Tables[0].Rows.Count; k++)
                {
                    ListItem lio;
                    lio = new ListItem();
                    lio.Text = dbt.Tables[0].Rows[k].ItemArray[1].ToString();
                    lio.Value = dbt.Tables[0].Rows[k].ItemArray[0].ToString();
                    //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                    drpbillto.Items.Add(lio);
                }
                hiddenbillto.Value = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();

                if (drpbillto.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString()) != null)
                {
                    drpbillto.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
                }
                txtinvoice.Text = executequery.Tables[0].Rows[fpnl].ItemArray[65].ToString();
                txtvts.Text = executequery.Tables[0].Rows[fpnl].ItemArray[66].ToString();
                txtbilladdress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[67].ToString();
                txttradedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[68].ToString();
                txtagencyoutstand.Text = executequery.Tables[0].Rows[fpnl].ItemArray[69].ToString();
                txtcamp.Text = executequery.Tables[0].Rows[fpnl].ItemArray[71].ToString();
                drppageprem.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[72].ToString();
                txtpageamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[73].ToString();
                txtpremper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[74].ToString();
                txtgrossamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();

            
                //Inserting in hidden field to compare new and  Previous amount 
                hiddenprevamt.Value = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();

                txtbillamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[76].ToString();
                drpboxcode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[77].ToString();
                txtboxno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[78].ToString();
                if (executequery.Tables[0].Rows[fpnl].ItemArray[79].ToString() == "1")
                {
                    chkage.Checked = true;
                }
                else
                {
                    chkage.Checked = false;
                }
                if (executequery.Tables[0].Rows[fpnl].ItemArray[80].ToString() == "1")
                {
                    chkclie.Checked = true;
                }
                else
                {
                    chkclie.Checked = false;
                }
                txtboxaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[81].ToString();
                if (executequery.Tables[0].Rows[fpnl].ItemArray[82].ToString() == "1")
                {
                    chktfn.Checked = true;
                }
                else
                {
                    chktfn.Checked = false;
                }
                if (executequery.Tables[0].Rows[fpnl].ItemArray[83].ToString() == "1")
                {
                    chkcoupan.Checked = true;
                }
                else
                {
                    chkcoupan.Checked = false;
                }
                txtcolum.Text = executequery.Tables[0].Rows[fpnl].ItemArray[84].ToString();
                //txtbillcolumn.Text = executequery.Tables[0].Rows[fpnl].ItemArray[85].ToString();
                //txtbillarea.Text = "" = executequery.Tables[0].Rows[fpnl].ItemArray[86].ToString();
                txtspediscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[87].ToString();
                txtspadiscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[88].ToString();
                txtpaid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[92].ToString();
                txtdealrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[93].ToString();
                txtdeviation.Text = executequery.Tables[0].Rows[fpnl].ItemArray[94].ToString();
                if (executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString()!="")
                {
                    hiddenvar.Value = drpvarient.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString();
                }
                else
                {
                    hiddenvar.Value = "";
                }
                txtcontractname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[96].ToString();
                txtcontracttype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[97].ToString();

                txtcardname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[98].ToString();
                drptype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[99].ToString();
                drpmonth.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[100].ToString();
                drpyear.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[101].ToString();
                txtcardno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[102].ToString();
                hiddenreceiptno.Value=txtreceipt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[103].ToString();
                drpmatsta.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[120].ToString();
            
               // txtappby.Enabled = false;
                //txtaudit.Enabled = false;
                drpbooktype.Enabled = false;
                txtciobookid.Enabled = false;
                // txtappby.Enabled = true;
                //txtaudit.Enabled = true;
                txtrono.Enabled = false;
                txtrodate.Enabled = false;
                txtcaption.Enabled = false;
                drpbillstatus.Enabled = false;
                drprostatus.Enabled = false;
                txtagency.Enabled = false;
                txtclient.Enabled = false;
                // txtagencyaddress.Enabled = true;
                txtclientadd.Enabled = false;
                drpagscode.Enabled = false;
                txtdockitno1.Enabled = false;
                txtexecname.Enabled = false;
                txtexeczone.Enabled = false;
                txtproduct.Enabled = false;
                drpbrand.Enabled = false;
                txtkeyno.Enabled = false;
                txtbillremark.Enabled = false;
                txtprintremark.Enabled = false;
                drppackage.Enabled = false;
                txtinsertion.Enabled = false;
                txtdummydate.Enabled = false;
                txtrepeatingdate.Enabled = false;
                drpbooktype.Enabled = false;
                drpadcategory.Enabled = false;
                drpadsubcategory.Enabled = false;

                drpadcat3.Enabled = false;
                drpadcat4.Enabled = false;
                drpadcat5.Enabled = false;

                drpcolor.Enabled = false;
                drpuom.Enabled = false;
                drppageposition.Enabled = false;
                drppagetype.Enabled = false;
                txtpageno.Enabled = false;
                drpadstype.Enabled = false;
                // txtadsizetypeheight.Enabled = true;
                //txtadsizetypewidth.Enabled = true;
                txtratecode.Enabled = false;
                drpscheme.Enabled = false;
              //  drpschemepck.Enabled = false;
                drpcurrency.Enabled = false;
                txtagreedrate.Enabled = false;
                txtagreedamt.Enabled = false;
                txtspedisc.Enabled = false;
                txtspacedisc.Enabled = false;
                txtextracharges.Enabled = false;
                txtdatetime.Enabled = false;
                txtrepeatingdate.Enabled = false;

                drpbillcycle.Enabled = false;
                drprevenue.Enabled = false;
                //drpbilltype.Enabled = true;
                drpbillstatus.Enabled = false;
                //drpbillcurrency.Enabled = true;
                drppaymenttype.Enabled = false;
                txtinvoice.Enabled = false;
                txtvts.Enabled = false;
                txtbillwidth.Enabled = false;
                txtbillheight.Enabled = false;
                drpbillto.Enabled = false;
                txttradedisc.Enabled = false;
                txtagencyoutstand.Enabled = false;
                txtcardrate.Enabled = false;
                txtcardamt.Enabled = false;
                txtdiscount.Enabled = false;
                txtdiscpre.Enabled = false;
                txtadsize2.Enabled = false;
                txtadsize1.Enabled = false;
                txttotalarea.Enabled = false;
                txtbilladdress.Enabled = false;
                txtcaption.Enabled = false;
                drpboxcode.Enabled = false;
                //txtboxno.Enabled = true;
                txtboxaddress.Enabled = false;
                txtcamp.Enabled = false;
                txtcaption.Enabled = false;
                txtbillamt.Enabled = false;
                drppageprem.Enabled = false;
                txtgrossamt.Enabled = false;
                txtcamp.Enabled = false;
                drppageprem.Enabled = false;
                drpboxcode.Enabled = false;
                chkage.Enabled = false;
                chkclie.Enabled = false;
                chktfn.Enabled = false;
                chkcoupan.Enabled = false;
                txtboxaddress.Enabled = false;
                txtinsertion.Enabled = false;

                txtcolum.Enabled = false;
               // txtbillcolumn.Enabled = false;
               // txtbillarea.Enabled = false;
                txtspediscper.Enabled = false;
                txtspadiscper.Enabled = false;
                txtboxno.Enabled = false;
                drpvarient.Enabled = false;
                txtagencypaymode.Enabled = false;
                drpretainer.Enabled = false;

                ///////////////////////////////////////////////////////////////////////////

                txtciobookid.Enabled = false;

                saveormodify = "0";

                DataSet objDataSetxml = new DataSet();
                // Read in the XML file
                objDataSetxml.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                message = objDataSetxml.Tables[0].Rows[0].ItemArray[1].ToString();
                updateStatus();
                // message = "Value saved";
                AspNetMessageBox(message);
                saveormodify = "1";
                hiddensavemod.Value = saveormodify;
                ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "ca", "showcardinfo('" + executequery.Tables[0].Rows[0].ItemArray[61].ToString() + "')", true);
                ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "cc", "showgridexecute()", true);           
             
                if (hiddenaudit.Value != "")
                {
                    hiddenaudit.Value = "";
                    ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "cc", "window.close()", true);
                    return;
                }
        
                if (fpnl == 0)
                {
                    btnfirst.Enabled = false;
                    btnprevious.Enabled = false;
                }

                if (fpnl == executequery.Tables[0].Rows.Count - 1)
                {
                    btnlast.Enabled = false;
                    btnnext.Enabled = false;
                }
                if (executequery.Tables[0].Rows.Count == 0)
                {
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                }           

            }
            //print the receipt  *4sep*
            if (hiddenprint_rec.Value == "Y")
            {
                ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "print", "printreceipt_display();", true);
            } */
    }


    //protected void DataGrid2_ItemDataBound(object sender, DataGridItemEventArgs e)
    //{
    //    if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
    //    {
    //        string text = "Text" + z;
    //        e.Item.Cells[2].Text = "<input id=" + text + " type=\"text\" value='' Class=\"btextforgrid\" />";
    //    }
    //    z++;
    //}
    protected void btnNew_Click(object sender, EventArgs e)
    {
        /*  saveormodify="0";
        
          hiddensavemod.Value = saveormodify;
        
          LinkButton1.Enabled = true;
          LinkButton2.Enabled = true;
          LinkButton3.Enabled = true;
          LinkButton4.Enabled = true;
          LinkButton5.Enabled = true;
          LinkButton6.Enabled = true;
          LinkButton7.Enabled = true;
          btnshgrid.Enabled = true;
         // btnupload.Enabled = true;
          drpbooktype.Enabled = true;
          txtciobookid.Enabled = false;
         // txtappby.Enabled = true;
          //txtaudit.Enabled = true;
          txtrono.Enabled = true;
          txtrodate.Enabled = true;
          txtcaption.Enabled = true;
          drpbillstatus.Enabled = true;
          drprostatus.Enabled = true;
          txtagency.Enabled = true;
          txtclient.Enabled = true;
          if (Session["addAgencyComm"].ToString() == "Y")
          {
              txtaddagencycommrate.Enabled = true;
          }
         // txtagencyaddress.Enabled = true;
          txtclientadd.Enabled = true;
          drpagscode.Enabled = true;
          txtdockitno1.Enabled = false;
          txtexecname.Enabled = true;
          txtexeczone.Enabled = true;
          txtproduct.Enabled = true;
          drpbrand.Enabled = true;
          txtkeyno.Enabled = true;
          txtbillremark.Enabled = true;
          txtprintremark.Enabled = true;
          drppackage.Enabled = true;
          txtinsertion.Enabled = true;
          txtdummydate.Enabled = true;
          txtrepeatingdate.Enabled = true;
          drpbooktype.Enabled = true;
          drpadcategory.Enabled = true;
          drpadsubcategory.Enabled = true;

          drpadcat3.Enabled = true;
          drpadcat4.Enabled = true;
          drpadcat5.Enabled = true;

          drpcolor.Enabled = true;
          drpuom.Enabled = true;
          drppageposition.Enabled = true;
          drppagetype.Enabled = true;
          txtpageno.Enabled = true;
          drpadstype.Enabled = true;
         // txtadsizetypeheight.Enabled = true;
          //txtadsizetypewidth.Enabled = true;
          txtratecode.Enabled = true;
          drpscheme.Enabled = false;
      //    drpschemepck.Enabled = true;
          drpcurrency.Enabled = true;
          txtagreedrate.Enabled = true;
          txtagreedamt.Enabled = true;
          txtspedisc.Enabled = true;
          txtspacedisc.Enabled = true;
          txtextracharges.Enabled = true;
          txtdatetime.Enabled = false;
          txtrepeatingdate.Enabled = true;
        
          drpbillcycle.Enabled = true;
          drprevenue.Enabled = true;
          //drpbilltype.Enabled = true;
          drpbillstatus.Enabled = true;
          //drpbillcurrency.Enabled = true;
          drppaymenttype.Enabled = true;
          txtinvoice.Enabled = true;
          txtvts.Enabled = true;
          txtbillwidth.Enabled = true;
          txtbillheight.Enabled = true;
          drpbillto.Enabled = true;
          txttradedisc.Enabled = false;
          txtagencyoutstand.Enabled = true;
          txtcardrate.Enabled = false;
          txtcardamt.Enabled = false;
          txtdiscount.Enabled = false;
          txtdiscpre.Enabled = false;
          txtadsize2.Enabled = true;
          txtadsize1.Enabled = true;
          txttotalarea.Enabled = true;
          txtbilladdress.Enabled = true;
          txtcaption.Enabled = true;
          drpboxcode.Enabled = true;
          //txtboxno.Enabled = true;
          txtboxaddress.Enabled = true;
          txtcamp.Enabled = true;
          txtcaption.Enabled = true;
          txtbillamt.Enabled = false;
          drppageprem.Enabled = true;
          txtgrossamt.Enabled = false;
          drpboxcode.Enabled = true;
          chkage.Enabled = true;
          chkclie.Enabled = true;
          chktfn.Enabled = true;
          chkcoupan.Enabled = true;
          txtboxaddress.Enabled = true;
          txtinsertion.Enabled = true;
          txtcolum.Enabled = true;
         // txtbillcolumn.Enabled = true;
         // txtbillarea.Enabled = true;
          txtspediscper.Enabled = true;
          txtspadiscper.Enabled = true;
          drpvarient.SelectedValue = "0";
          drpvarient.Enabled = true;
       //   drpschemepck.Enabled = true;
          ///////////////////////
          //txtcontractname.Enabled = true;
          //txtcontracttype.Enabled = true;
          txtcardname.Enabled = true;
          drptype.Enabled = true;
          drpmonth.Enabled = true;
          drpyear.Enabled = true;
          txtcardno.Enabled = true;
          txtagencypaymode.Enabled = true;
          btncopy.Enabled = true;
          btnshgrid.Enabled = true;
          btndeal.Enabled = true;
          txtagencypaymode.Enabled = true;
          //btndel.Enabled = true;
          drpmatsta.Enabled = true;

          drpretainer.Enabled = true;

          drpmatsta.SelectedValue = "0";

          txtcontractname.Text = "";
          txtcontracttype.Text = "";
          txtcardname.Text = "";
          drptype.SelectedValue = "0";
          drpmonth.SelectedValue = "0";
          drpyear.SelectedValue = "0";
          txtcardno.Text = "";
          //////////////////////////////
       //   drpschemepck.SelectedValue = "0";
        //  txtappby.Text="";
          //txtaudit.Text = "";
          txtspediscper.Text = "";
          txtspadiscper.Text = "";
          ////txtbillarea.Text = "" = "";
          //txtbillcolumn.Text = "";
          txtcolum.Text = "";
          drppageprem.SelectedValue = "0";
          txtbillamt.Text = "";
          txtcaption.Text = "";
          txtrono.Text = "";
          txtbilladdress.Text = "";
          txtrodate.Text = "";
          txtcaption.Text = "";
          drpbillstatus.SelectedValue = "0";
          drprostatus.SelectedValue = "0";
          txtagency.Text = "";
          txtclient.Text = "";
          txtagencyaddress.Text = "";
          txtclientadd.Text = "";
          drpagscode.SelectedValue = "0";
          txtdockitno1.Text = "";
          txtexecname.Text = "";
          txtexeczone.Text = "";
          txtproduct.Text = "";
          drpbrand.SelectedValue = "0";
          txtkeyno.Text = "";
          txtbillremark.Text = "";
          txtprintremark.Text = "";
        //  drppackage.SelectedValue = "0";
          txtinsertion.Text = "";
          txtdummydate.Text = "";
          txtrepeatingdate.Text = "";
        
          drpadcategory.SelectedValue = "0";
          drpadsubcategory.SelectedValue = "0";

          drpadcat3.SelectedValue = "0";
          drpadcat4.SelectedValue = "0";
          drpadcat5.SelectedValue = "0";

          drpcolor.SelectedValue = "0";
          drpuom.SelectedValue = "0";
          drppageposition.SelectedValue = "0";
          drppagetype.SelectedValue = "0";
          txtpageno.Text = "";
          drpadstype.SelectedValue = "0";
          //txtadsizetypeheight.Text = "";
          //txtadsizetypewidth.Text = "";
          //txtratecode.SelectedValue = "0";
          txtratecode.SelectedValue = "0";
          drpscheme.Text = "";
        //  drpschemepck.SelectedValue = "0";
          drpcurrency.SelectedValue = "0";
          txtagreedrate.Text = "";
          txtagreedamt.Text = "";
          txtspedisc.Text = "";
          txtspacedisc.Text = "";
          txtextracharges.Text = "";
          drpbillcycle.SelectedValue = "0";
          drprevenue.SelectedValue = "0";
          //drpbilltype.SelectedValue = "0";
          drpbillstatus.SelectedValue = "0";
          //drpbillcurrency.SelectedValue = "0";
          txtagencypaymode.Items.Clear();
          drppaymenttype.Items.Clear();
          txtinvoice.Text = "";
          txtvts.Text = "";
          txtbillwidth.Text = "";
          txtbillheight.Text = "";
          //drpbillto.SelectedValue = "0";
          drpbillto.Items.Clear();
          txttradedisc.Text = "";
          txtagencyoutstand.Text = "";
          txtcardrate.Text = "";
          txtcardamt.Text = "";
          txtdiscount.Text = "";
          txtdiscpre.Text = "";
          txtadsize2.Text = "";
          txtadsize1.Text = "";
          txttotalarea.Text = "";
          drpboxcode.SelectedValue = "0";

         //*6Aug* drpretainer.SelectedValue = "0";

          txtboxno.Text = "";
          txtboxaddress.Text = "";
          chkage.Checked = false;
          chkclie.Checked = false;
          txtcamp.Text = "";
          txtgrossamt.Text = "";
          drppackage.SelectedValue = "0";
          drppackagecopy.Items.Clear();           

          drpboxcode.SelectedValue = "0";
          chkage.Checked = false;
          chkclie.Checked = false;
          chktfn.Checked = false;
          chkcoupan.Checked = false;
          txtboxaddress.Text = "";
          txtinsertion.Text = "";
          drpbooktype.SelectedValue = "3";       

          saveormodify = "0";

          /////////if 0 than autogenerate the cio booking id and if 1 than autogenerate dockit no.
      
          autogenerated("0"); //for booking id      

          fpnl = 0;      
          //bindpackage();      

          chkstatus(FlagStatus);
          btnSave.Enabled = true;
          btnsavepaginate.Enabled = true;
          btnNew.Enabled = false;
          btnQuery.Enabled = false;
           //drpuom.SelectedIndex=drpuom.Items.IndexOf(drpuom.Items.FindByText(Session["uom"].ToString()));
          if (drpuom.Items.FindByValue(Session["uom"].ToString()) != null)
          {
              drpuom.SelectedValue = Session["uom"].ToString();
          }
          drpcurrency.SelectedValue = Session["currency"].ToString() ;
          lbmeasure.Text = drpuom.SelectedItem.Text.ToString();
          lbbilluom.Text = drpuom.SelectedItem.Text.ToString();
          lbmeasuretotal.Text = "Sq"+"&nbsp;"+drpuom.SelectedItem.Text.ToString();
        
          hiddenbranch.Value = drprevenue.SelectedItem.Text.ToString();
          ScriptManager1.SetFocus(txtagency);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zj", "document.getElementById('btndel').disabled=false;", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz", "document.getElementById('tblinsert').innerHTML=''", true);
       
          //ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "z1", "uncheckchkbox();", true);
       */
    }

    [Ajax.AjaxMethod]
    public DataSet getData(string drppackage, string txtinsertion, string txtrepeatingdate, string txtstartdate, string dateformat, string compcode, string adcategory, string adsubcat, string color, string adtype, string currency, string ratecode, string clickdate, string insert, string code, string cardrate, string uom, string dealrate, string checkforor, string premium, string clientname, string adcat3, string adcat4, string adcat5)
    {
        DataSet ds = new DataSet();
        //DateTime dt = System.DBNull.Value;
        if (txtinsertion == "")
            txtinsertion = "1";
        if (txtrepeatingdate == "")
            txtrepeatingdate = "";
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            //  ds = clsbooking.getInsertion(drppackage, txtinsertion, txtrepeatingdate, txtstartdate, dateformat, compcode, adcategory, adsubcat, color, adtype, currency, ratecode, clickdate, insert, code, cardrate, uom, dealrate, checkforor, premium, clientname);
            ds = clsbooking.qbc_getInsertion(drppackage, txtinsertion, txtrepeatingdate, txtstartdate, dateformat, compcode, adcategory, adsubcat, color, adtype, currency, ratecode, clickdate, insert, code, cardrate, uom, dealrate, checkforor, insert, "", adcat3, adcat4, adcat5, clientname, "", "0");
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            //ds = clsbooking.qbc_getInsertion(drppackage, txtinsertion, txtrepeatingdate, txtstartdate, dateformat, compcode, adcategory, adsubcat, color, adtype, currency, ratecode, clickdate, insert, code, cardrate, uom, dealrate, checkforor, premium, clientname);
            ds = clsbooking.qbc_getInsertion(drppackage, txtinsertion, txtrepeatingdate, txtstartdate, dateformat, compcode, adcategory, adsubcat, color, adtype, currency, ratecode, clickdate, insert, code, cardrate, uom, dealrate, checkforor, insert, "", adcat3, adcat4, adcat5, clientname, "", "0");
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.getInsertion(drppackage, txtinsertion, txtrepeatingdate, txtstartdate, dateformat, compcode, adcategory, adsubcat, color, adtype, currency, ratecode, clickdate, insert, code, cardrate, uom, dealrate, checkforor, premium, clientname);
        }


        //////this to get the value for color,uom,premium,adscat to bind the drop down in java script
        //NewAdbooking.Classes.BookingMaster getuompreas = new NewAdbooking.Classes.BookingMaster();
        //DataSet duom = new DataSet();
        //duom=getuompreas.getthedatabook(Session["compcode"].ToString());


        return ds;
    }

    public void autogenerated(string no)
    {
        if (Session["cioid"] == null)
        {
            Response.Redirect("login.aspx");
        }
        if (no == "0")
        {
            DateTime dt = DateTime.Now;
            string auto = "";
            string cen = Session["center"].ToString();
            cen = cen.Substring(0, 3);
            cen = cen.Trim();
            int year = Convert.ToInt32(dt.Year);
            string zeros = "";
            ////this to chk from the preferrences if from the preferrences it is  1 than generate id as center + year + 8 digit no.
            ////and if it is 2 than center + yrar + uid + 8 digit no.
            if (Session["cioid"].ToString() == "1")
            {
                auto = cen + year;
            }
            else if (Session["cioid"].ToString() == "2")
            {
                auto = cen + year + Session["userid"].ToString();
            }


            string autogen = auto + cou;

            DataSet da = new DataSet();

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster autocode = new NewAdbooking.Classes.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }

            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster autocode = new NewAdbooking.classesoracle.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }

            else
            {
                NewAdbooking.classmysql.BookingMaster autocode = new NewAdbooking.classmysql.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }

            if (da.Tables[0].Rows.Count > 0 && da.Tables[0].Rows[0].ItemArray[0].ToString() != "")
            {
                string ab = da.Tables[0].Rows[0].ItemArray[0].ToString();
                int cou1 = Convert.ToInt32(ab);
                //cou1++;
                int countlen = cou1.ToString().Length;
                if (countlen == 1)
                {
                    zeros = "0000000" + cou1;

                }
                else if (countlen == 2)
                {
                    zeros = "000000" + cou1;

                }
                else if (countlen == 3)
                {
                    zeros = "00000" + cou1;
                }
                else if (countlen == 4)
                {
                    zeros = "0000" + cou1;
                }
                else if (countlen == 5)
                {
                    zeros = "000" + cou1;
                }
                else if (countlen == 6)
                {
                    zeros = "00" + cou1;
                }
                else if (countlen == 7)
                {
                    zeros = "0" + cou1;
                }
                else if (countlen == 8)
                {
                    zeros = "0" + cou1;
                }


                txtciobookid.Text = auto + zeros;
            }
            else
            {
                txtciobookid.Text = autogen;

            }
        }
        else if (no == "1")
        {
            string auto = "DN";
            string autogen = auto + cou;

            DataSet da = new DataSet();

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster autocode = new NewAdbooking.Classes.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }

            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster autocode = new NewAdbooking.classesoracle.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }

            else
            {
                NewAdbooking.classmysql.BookingMaster autocode = new NewAdbooking.classmysql.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }

            if (da.Tables[0].Rows.Count > 0 && da.Tables[0].Rows[0].ItemArray[0].ToString() != "")
            {
                string ab = da.Tables[0].Rows[0].ItemArray[0].ToString();
                int cou1 = Convert.ToInt32(ab);
                cou1++;

                txtdockitno1.Text = auto + cou1;
            }
            else
            {
                txtdockitno1.Text = autogen;

            }


        }

        else if (no == "2")
        {
            string auto = "BN";
            string autogen = auto + cou;

            DataSet da = new DataSet();

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster autocode = new NewAdbooking.Classes.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }

            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster autocode = new NewAdbooking.classesoracle.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }

            else
            {
                NewAdbooking.classmysql.BookingMaster autocode = new NewAdbooking.classmysql.BookingMaster();
                da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
            }


            if (da.Tables[0].Rows.Count > 0 && da.Tables[0].Rows[0].ItemArray[0].ToString() != "")
            {
                string ab = da.Tables[0].Rows[0].ItemArray[0].ToString();
                int cou1 = Convert.ToInt32(ab);
                cou1++;

                txtboxno.Text = auto + cou1;
            }
            else
            {
                txtboxno.Text = autogen;

            }
        }

        //get max receipt number 
        else if (no == "3")
        {
            DataSet ds_maxreceipt = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster objMaxReceipt_No = new NewAdbooking.classesoracle.BookingMaster();
                ds_maxreceipt = objMaxReceipt_No.clsMaxReceipt(txtciobookid.Text);
            }
            else
            {

            }
            //***************************************
            string max_number = "0";
            if (ds_maxreceipt.Tables[0].Rows[0].ItemArray[0].ToString().Length == 1)
                max_number = "000" + ds_maxreceipt.Tables[0].Rows[0].ItemArray[0].ToString();
            else if (ds_maxreceipt.Tables[0].Rows[0].ItemArray[0].ToString().Length == 2)
                max_number = "00" + ds_maxreceipt.Tables[0].Rows[0].ItemArray[0].ToString();
            else if (ds_maxreceipt.Tables[0].Rows[0].ItemArray[0].ToString().Length == 3)
                max_number = "0" + ds_maxreceipt.Tables[0].Rows[0].ItemArray[0].ToString();
            else
                max_number = ds_maxreceipt.Tables[0].Rows[0].ItemArray[0].ToString();

            if (hiddenpaymode.Value == "CASH")
            {
                txtreceipt.Text = "R/" + hidReceipt + max_number;
                hiddenreceiptno.Value = txtreceipt.Text;
            }
            else
            {
                txtreceipt.Text = hidReceipt + max_number;
                hiddenreceiptno.Value = txtreceipt.Text;
            }
        }

        /*
                //for generate Receipt No. for modification...
                else if (no == "3")
                {
                    no = "2";
                    string auto = "";
                    string zeros = "";
                    if (Session["Receipt_no"].ToString() == "1")
                    {

                        auto = Session["center"].ToString().Substring(0, 3);
                        auto = auto.Trim();
                    }
                    else if (Session["Receipt_no"].ToString() == "2")
                    {
                        auto = txtagency.Text.Substring(0, 3);
                    }

                    // string autogen = auto + cou;
                    DataSet da = new DataSet();
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                        NewAdbooking.Classes.BookingMaster autocode = new NewAdbooking.Classes.BookingMaster();

                        da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
                    }
                    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.BookingMaster autocode = new NewAdbooking.classesoracle.BookingMaster();

                        da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);
                    }
                    else
                    {
                        NewAdbooking.classmysql.BookingMaster autocode = new NewAdbooking.classmysql.BookingMaster();

                        da = autocode.autogenrated(Session["compcode"].ToString(), auto, no);

                    }

                    if (da.Tables[0].Rows.Count > 0 && da.Tables[0].Rows[0].ItemArray[0].ToString() != "")
                    {
                        string ab = da.Tables[0].Rows[0].ItemArray[0].ToString();
                        int cou1 = Convert.ToInt32(ab);
                        //cou1++;
                        if (cou1.ToString().Length == 1)
                        {
                            zeros = "00000" + cou1;
                        }
                        if (cou1.ToString().Length == 2)
                        {
                            zeros = "0000" + cou1;
                        }
                        if (cou1.ToString().Length == 3)
                        {
                            zeros = "000" + cou1;
                        }
                        if (cou1.ToString().Length == 4)
                        {
                            zeros = "00" + cou1;
                        }
                        if (cou1.ToString().Length == 5)
                        {
                            zeros = "00" + cou1;
                        }
                        if (cou1.ToString().Length == 6)
                        {
                            zeros = "0" + cou1;
                        }


                        txtreceipt.Text = auto + zeros;
                        if (Session["Receipt_no"].ToString() == "3")
                        {
                            txtreceipt.Text = "";
                            txtreceipt.Text = Session["prefix"].ToString() + zeros + Session["suffix"].ToString();
                        }
                    }
                    else
                    {
                        txtreceipt.Text = auto + "000000";

                    }

                    hiddenreceiptno.Value = txtreceipt.Text;

                }*/

    }

    public void getbuttoncheck(string formname)
    {

        DataSet butt = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.classlibraryforbutton getpermission = new NewAdbooking.Classes.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.classlibraryforbutton getpermission = new NewAdbooking.classesoracle.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }

        else
        {
            NewAdbooking.classmysql.classlibraryforbutton getpermission = new NewAdbooking.classmysql.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        string id = "0";
        if (butt.Tables[0].Rows.Count > 0)
        {
            id = butt.Tables[0].Rows[0].ItemArray[0].ToString();
            hiddenroperm.Value = butt.Tables[2].Rows[0].ItemArray[0].ToString();
        }
        //////this is for the ro date time permission if there is 0 than no permission and if 1 than having the permission

        hiddenbuttonidcheck.Value = id;

        if (id != "0")
        {
            //var id = ds.Tables[0].Rows[0].button_id;



            if (id == "0" || id == "8")
            {

                FlagStatus = 0;

                btnNew.Enabled = false;
                btnQuery.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = false;
                btnExit.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnsavepaginate.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;



                //window.location.href = 'EnterPage.aspx';
                //alert("You Are Not Authorised To See This Form");
                //FlagStatus = 0;
                //

            }
            if (id == "1" || id == "9")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnExecute.Enabled = false;

                btnSave.Enabled = false;
                btnsavepaginate.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 1;

            }
            if (id == "2" || id == "10")
            {

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnModify.Enabled = true;

                btnSave.Enabled = false;
                btnsavepaginate.Enabled = false;
                btnfirst.Enabled = true;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;
                FlagStatus = 2;


            }
            if (id == "3" || id == "11")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;


                btnSave.Enabled = false;
                btnsavepaginate.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;

                FlagStatus = 3;



            }
            if (id == "4" || id == "12")
            {
                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;


                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnsavepaginate.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 4;



            }
            if (id == "5" || id == "13")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnsavepaginate.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                btnModify.Enabled = false;
                FlagStatus = 5;


            }
            if (id == "6" || id == "14")
            {
                btnNew.Enabled = false;
                btnSave.Enabled = false;
                btnsavepaginate.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                FlagStatus = 6;
            }
            if (id == "7" || id == "15")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnsavepaginate.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                FlagStatus = 7;

            }
        }




    }

    public void chkstatus(int FlagStatus)
    {
        if (FlagStatus == 0 || FlagStatus == 8)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = false;
        }
        if (FlagStatus == 1 || FlagStatus == 9)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = true;
            btnsavepaginate.Enabled = true;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;

        }
        if (FlagStatus == 2 || FlagStatus == 10)
        {
            btnExecute.Enabled = true;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnNew.Enabled = false;
            btnCancel.Enabled = true;
            btnExecute.Enabled = false;
            btnModify.Enabled = false;
            btnExit.Enabled = true;
            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;
        }

        if (FlagStatus == 3 || FlagStatus == 11)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;
            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnsavepaginate.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

        if (FlagStatus == 4 || FlagStatus == 12)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;
            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 5 || FlagStatus == 13)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;
            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 6 || FlagStatus == 14)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;
            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 7 || FlagStatus == 15)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;
            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnsavepaginate.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

    }

    public void updateStatus()
    {
        chkstatus(FlagStatus);
        if (FlagStatus == 2 || FlagStatus == 3)
        {
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;
            btnDelete.Enabled = false;
        }
        if (FlagStatus == 4)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 5)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 6 || FlagStatus == 7)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnsavepaginate.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
    }




    protected void btnModify_Click(object sender, EventArgs e)
    {
        /*  saveormodify = "01";
          hiddensavemod.Value = saveormodify;
          LinkButton1.Enabled = true;
          LinkButton2.Enabled = true;
          LinkButton3.Enabled = true;
          LinkButton4.Enabled = true;
          LinkButton5.Enabled = true;
          LinkButton6.Enabled = true;
          LinkButton7.Enabled = true;
          txtaddagencycommrate.Enabled = true;
          hiddenmodifyinsert.Value = txtinsertion.Text;
       

        /////if in the insertion grid record insertion status is publish or hold or cancel than the main form except the 
          ////insert grid record cannot modify

          DataSet dex = new DataSet();

          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {
              NewAdbooking.Classes.BookingMaster showgri = new NewAdbooking.Classes.BookingMaster();
              dex = showgri.fetchdataforexe(txtciobookid.Text, Session["compcode"].ToString());
          }

          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.BookingMaster showgri = new NewAdbooking.classesoracle.BookingMaster();
              dex = showgri.fetchdataforexe(txtciobookid.Text, Session["compcode"].ToString());
          }

          else
          {
              NewAdbooking.classmysql.BookingMaster showgri = new NewAdbooking.classmysql.BookingMaster();
              dex = showgri.fetchdataforexe(txtciobookid.Text, Session["compcode"].ToString());
          }
        

          for (int j=0; j <= dex.Tables[0].Rows.Count - 1; j++)
          {


              if (dex.Tables[0].Rows[j].ItemArray[20].ToString() == "publish")
              {
                  insertstatus = "2";
                  break;
              }
              else if (dex.Tables[0].Rows[j].ItemArray[20].ToString() == "billed")
              {
                  insertstatus = "1";
                  saveormodify = "1";
                  hiddensavemod.Value = saveormodify;
                  break;
              }
              else
              {
                  insertstatus = "0";
              }
          }
          if (insertstatus == "2")
          {
              btndeal.Enabled = false;
              btnshgrid.Enabled = false;
              //btnupload.Enabled = false;
              drpbooktype.Enabled = false;
              txtciobookid.Enabled = false;
              // txtappby.Enabled = true;
              //txtaudit.Enabled = true;
              txtrono.Enabled = true;
              txtrodate.Enabled = true;
              txtcaption.Enabled = true;
              drpbillstatus.Enabled = true;
              drprostatus.Enabled = true;
              txtagency.Enabled = true;
              txtclient.Enabled = true;
              txtagencypaymode.Enabled = true;
              // txtagencyaddress.Enabled = true;
              txtclientadd.Enabled = true;
              drpagscode.Enabled = true;
              txtdockitno1.Enabled = false;
              txtexecname.Enabled = true;
              txtexeczone.Enabled = true;
              txtproduct.Enabled = true;
              drpbrand.Enabled = true;
              txtkeyno.Enabled = true;
              txtbillremark.Enabled = true;
              txtprintremark.Enabled = true;
              drpvarient.Enabled = true;
              drppackage.Enabled = false;
              txtinsertion.Enabled = false;
              txtdummydate.Enabled = false;
              txtrepeatingdate.Enabled = false;
              drpbooktype.Enabled = false;
              drpadcategory.Enabled = false;
              drpadsubcategory.Enabled = false;

              drpadcat3.Enabled = false;
              drpadcat4.Enabled = false;
              drpadcat5.Enabled = false;

              drpcolor.Enabled = false;
              drpuom.Enabled = false;
              drppageposition.Enabled = false;
              drppagetype.Enabled = false;
              txtpageno.Enabled = false;
              drpadstype.Enabled = false;
              // txtadsizetypeheight.Enabled = true;
              //txtadsizetypewidth.Enabled = true;
              txtratecode.Enabled = false;
              drpscheme.Enabled = false;
          //    drpschemepck.Enabled = false;
              drpcurrency.Enabled = false;
              txtagreedrate.Enabled = false;
              txtagreedamt.Enabled = false;
              txtspedisc.Enabled = false;
              txtspacedisc.Enabled = false;
              txtextracharges.Enabled = false;
              txtdatetime.Enabled = false;
              txtrepeatingdate.Enabled = false;

              drpbillcycle.Enabled = false;
              drprevenue.Enabled = false;
              //drpbilltype.Enabled = true;
              drpbillstatus.Enabled = false;
              //drpbillcurrency.Enabled = true;
              drppaymenttype.Enabled = false;
              txtinvoice.Enabled = false;
              txtvts.Enabled = false;
              txtbillwidth.Enabled = false;
              txtbillheight.Enabled = false;
              drpbillto.Enabled = false;
              txttradedisc.Enabled = false;
              txtagencyoutstand.Enabled = false;
              txtcardrate.Enabled = false;
              txtcardamt.Enabled = false;
              txtdiscount.Enabled = false;
              txtdiscpre.Enabled = false;
              txtadsize2.Enabled = false;
              txtadsize1.Enabled = false;
              txttotalarea.Enabled = false;
              txtbilladdress.Enabled = false;
              txtcaption.Enabled = false;
              drpboxcode.Enabled = false;
              //txtboxno.Enabled = true;
              txtboxaddress.Enabled = false;
              txtcamp.Enabled = false;
              txtcaption.Enabled = true;
              txtbillamt.Enabled = false;
              drppageprem.Enabled = false;
              txtgrossamt.Enabled = false;
              drpboxcode.Enabled = false;
              chkage.Enabled = false;
              chkclie.Enabled = false;
              chktfn.Enabled = false;
              chkcoupan.Enabled = false;
              txtboxaddress.Enabled = false;
              txtinsertion.Enabled = false;
              txtcolum.Enabled = false;
             // txtbillcolumn.Enabled = false;
             // txtbillarea.Enabled = false;
              txtspediscper.Enabled = false;
              txtspadiscper.Enabled = false;

              ///////////////////////
              txtcontractname.Enabled = false;
              txtcontracttype.Enabled = false;
              txtcardname.Enabled = false;
              drptype.Enabled = false;
              drpmonth.Enabled = true;
              drpyear.Enabled = false;
              txtcardno.Enabled = false;
              btnshgrid.Enabled = false;
              btndeal.Enabled = false;
              drpmatsta.Enabled = false;
          }
          else if (insertstatus == "1")
          {
              drpbooktype.Enabled = false;
              txtciobookid.Enabled = false;
              // txtappby.Enabled = true;
              //txtaudit.Enabled = true;
              txtrono.Enabled = false;
              txtrodate.Enabled = false;
              txtcaption.Enabled = false;
              drpbillstatus.Enabled = false;
              drprostatus.Enabled = false;
              txtagency.Enabled = false;
              txtclient.Enabled = false;
              // txtagencyaddress.Enabled = true;
              txtclientadd.Enabled = false;
              drpagscode.Enabled = false;
              txtdockitno1.Enabled = false;
              txtexecname.Enabled = false;
              txtexeczone.Enabled = false;
              txtproduct.Enabled = false;
              drpbrand.Enabled = false;
              txtkeyno.Enabled = false;
              txtbillremark.Enabled = false;
              txtprintremark.Enabled = false;
              drppackage.Enabled = false;
              txtinsertion.Enabled = false;
              txtdummydate.Enabled = false;
              txtrepeatingdate.Enabled = false;
              drpbooktype.Enabled = false;
              drpadcategory.Enabled = false;
              drpadsubcategory.Enabled = false;

              drpadcat3.Enabled = false;
              drpadcat4.Enabled = false;
              drpadcat5.Enabled = false;

              drpcolor.Enabled = false;
              drpuom.Enabled = false;
              drppageposition.Enabled = false;
              drppagetype.Enabled = false;
              txtpageno.Enabled = false;
              drpadstype.Enabled = false;
              // txtadsizetypeheight.Enabled = true;
              //txtadsizetypewidth.Enabled = true;
              txtratecode.Enabled = false;
              drpscheme.Enabled = false;
            //  drpschemepck.Enabled = false;
              drpcurrency.Enabled = false;
              txtagreedrate.Enabled = false;
              txtagreedamt.Enabled = false;
              txtspedisc.Enabled = false;
              txtspacedisc.Enabled = false;
              txtextracharges.Enabled = false;
              txtdatetime.Enabled = false;
              txtrepeatingdate.Enabled = false;

              drpbillcycle.Enabled = false;
              drprevenue.Enabled = false;
              //drpbilltype.Enabled = true;
              drpbillstatus.Enabled = false;
              //drpbillcurrency.Enabled = true;
              drppaymenttype.Enabled = false;
              txtinvoice.Enabled = false;
              txtvts.Enabled = false;
              txtbillwidth.Enabled = false;
              txtbillheight.Enabled = false;
              drpbillto.Enabled = false;
              txttradedisc.Enabled = false;
              txtagencyoutstand.Enabled = false;
              txtcardrate.Enabled = false;
              txtcardamt.Enabled = false;
              txtdiscount.Enabled = false;
              txtdiscpre.Enabled = false;
              txtadsize2.Enabled = false;
              txtadsize1.Enabled = false;
              txttotalarea.Enabled = false;
              txtbilladdress.Enabled = false;
              txtcaption.Enabled = false;
              drpboxcode.Enabled = false;
              //txtboxno.Enabled = true;
              txtboxaddress.Enabled = false;
              txtcamp.Enabled = false;
              txtcaption.Enabled = false;
              txtbillamt.Enabled = false;
              drppageprem.Enabled = false;
              txtgrossamt.Enabled = false;
              txtcamp.Enabled = false;
              drppageprem.Enabled = false;
              drpboxcode.Enabled = false;
              chkage.Enabled = false;
              chkclie.Enabled = false;
              chktfn.Enabled = false;
              chkcoupan.Enabled = false;
              txtboxaddress.Enabled = false;
              txtinsertion.Enabled = false;

              txtcolum.Enabled = false;
             // txtbillcolumn.Enabled = false;
             // txtbillarea.Enabled = false;
              txtspediscper.Enabled = false;
              txtspadiscper.Enabled = false;
              txtboxno.Enabled = false;
              drpvarient.Enabled = false;
              drpmatsta.Enabled = false;

              ///////////////////////
              txtcontractname.Enabled = false;
              txtcontracttype.Enabled = false;
              txtcardname.Enabled = false;
              drptype.Enabled = false;
              drpmonth.Enabled = true;
              drpyear.Enabled = false;
              txtcardno.Enabled = false;
              btnshgrid.Enabled = false;
              btndeal.Enabled = false;
              txtagencypaymode.Enabled = false;

          }
          else if(insertstatus=="0")
          {

              btndeal.Enabled = true;
              btnshgrid.Enabled = true;
              //btnupload.Enabled = true;
              drpbooktype.Enabled = true;
              txtciobookid.Enabled = false;
              // txtappby.Enabled = true;
              //txtaudit.Enabled = true;
              txtrono.Enabled = true;
              txtrodate.Enabled = true;
              txtcaption.Enabled = true;
              drpbillstatus.Enabled = true;
              drprostatus.Enabled = true;
              txtagency.Enabled = true;
              txtclient.Enabled = true;
              // txtagencyaddress.Enabled = true;
              txtagencypaymode.Enabled = true;
              txtclientadd.Enabled = true;
              drpagscode.Enabled = true;
              txtdockitno1.Enabled = false;
              txtexecname.Enabled = true;
              txtexeczone.Enabled = true;
              txtproduct.Enabled = true;
              drpbrand.Enabled = true;
              txtkeyno.Enabled = true;
              txtbillremark.Enabled = true;
              txtprintremark.Enabled = true;
              drppackage.Enabled = true;
              txtinsertion.Enabled = true;
              txtdummydate.Enabled = true;
              txtrepeatingdate.Enabled = true;
              drpbooktype.Enabled = true;
              drpadcategory.Enabled = true;
              drpadsubcategory.Enabled = true;

              drpadcat3.Enabled = true;
              drpadcat4.Enabled = true;
              drpadcat5.Enabled = true;

              drpcolor.Enabled = true;
              drpuom.Enabled = true;
              drppageposition.Enabled = true;
              drppagetype.Enabled = true;
              txtpageno.Enabled = true;
              drpadstype.Enabled = true;
              // txtadsizetypeheight.Enabled = true;
              //txtadsizetypewidth.Enabled = true;
              txtratecode.Enabled = true;
              drpscheme.Enabled = false;
            //  drpschemepck.Enabled = true;
              drpcurrency.Enabled = true;
              txtagreedrate.Enabled = true;
              txtagreedamt.Enabled = true;
              txtspedisc.Enabled = true;
              txtspacedisc.Enabled = true;
              txtextracharges.Enabled = true;
              txtdatetime.Enabled = false;
              txtrepeatingdate.Enabled = true;

              drpbillcycle.Enabled = true;
              drprevenue.Enabled = true;
              //drpbilltype.Enabled = true;
              drpbillstatus.Enabled = true;
              //drpbillcurrency.Enabled = true;
              drppaymenttype.Enabled = true;
              txtinvoice.Enabled = true;
              txtvts.Enabled = true;
              txtbillwidth.Enabled = true;
              txtbillheight.Enabled = true;
              drpbillto.Enabled = true;
              txttradedisc.Enabled = false;
              txtagencyoutstand.Enabled = true;
              txtcardrate.Enabled = false;
              txtcardamt.Enabled = false;
              txtdiscount.Enabled = false;
              txtdiscpre.Enabled = false;
              txtadsize2.Enabled = true;
              txtadsize1.Enabled = true;
              txttotalarea.Enabled = true;
              txtbilladdress.Enabled = true;
              txtcaption.Enabled = true;
              drpboxcode.Enabled = true;
              //txtboxno.Enabled = true;
              txtboxaddress.Enabled = true;
              txtcamp.Enabled = true;
              txtcaption.Enabled = true;
              txtbillamt.Enabled = false;
              drppageprem.Enabled = true;
              txtgrossamt.Enabled = false;
              drpboxcode.Enabled = true;
              chkage.Enabled = true;
              chkclie.Enabled = true;
              chktfn.Enabled = true;
              chkcoupan.Enabled = true;
              txtboxaddress.Enabled = true;
              txtinsertion.Enabled = true;
              txtcolum.Enabled = true;
             // txtbillcolumn.Enabled = true;
             // txtbillarea.Enabled = true;
              txtspediscper.Enabled = true;
              txtspadiscper.Enabled = true;
              drpvarient.Enabled = true;
              drpmatsta.Enabled = true;
              ///////////////////////
              txtcontractname.Enabled = true;
              txtcontracttype.Enabled = true;
              txtcardname.Enabled = true;
              drptype.Enabled = true;
              drpmonth.Enabled = true;
              drpyear.Enabled = true;
              txtcardno.Enabled = true;
              btncopy.Enabled = true;
              btndel.Enabled = true;
              btnshgrid.Enabled = true;
              btndeal.Enabled = true;
              ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zj", "document.getElementById('btndel').disabled=false;", true);
          }

          if (txtadsize1.Text != "" && txtcolum.Text != "")
          {
              txtadsize2.Enabled = false;

          }
          else if (txtadsize1.Text != "" && txtadsize2.Text != "")
          {
              txtcolum.Enabled = false;

          }

          drpretainer.Enabled = true;
          //saveormodify = "01";
          string listpck = hiddenpackage.Value;
          txtcontractname.Enabled = false;
          txtcontracttype.Enabled = false;
          //ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "c1", "bindgridpkg('" + listpck + "')", true);            
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "cc", "showgridexecute()", true);

          chkstatus(FlagStatus);
          btnSave.Enabled = true;
          btnQuery.Enabled = false;
          btnsavepaginate.Enabled = false;*/

    }
    protected void btnQuery_Click(object sender, EventArgs e)
    {
        /* saveormodify = "1";
         hiddensavemod.Value = saveormodify;
         fpnl = 0;

         btnshgrid.Enabled = false;
         txtagencypaymode.Enabled = false;     

         txtciobookid.Text = "";     
         txtrono.Text = "";
         txtrodate.Text = "";
         txtcaption.Text = "";
         drpbillstatus.SelectedValue = "0";
         drprostatus.SelectedValue = "0";
         txtagency.Text = "";
         txtclient.Text = "";
         txtagencyaddress.Text = "";
         txtclientadd.Text = "";
         drpagscode.SelectedValue = "0";
         txtdockitno1.Text = "";
         txtexecname.Text = "";
         txtexeczone.Text = "";
         txtproduct.Text = "";
         drpbrand.SelectedValue = "0";
         txtkeyno.Text = "";
         txtbillremark.Text = "";
         txtprintremark.Text = "";       
         txtinsertion.Text = "";
         txtdummydate.Text = "";
         txtrepeatingdate.Text = "";
         drpbooktype.SelectedValue="0";
         drpadcategory.SelectedValue = "0";
         drpadsubcategory.SelectedValue = "0";

         drpadcat3.SelectedValue = "0";
         drpadcat4.SelectedValue = "0";
         drpadcat5.SelectedValue = "0";

         drpcolor.SelectedValue = "0";
         drpuom.SelectedValue = "0";
         drppageposition.SelectedValue = "0";
         drppagetype.SelectedValue = "0";
         txtpageno.Text = "";
         drpadstype.SelectedValue = "0";        
         txtratecode.SelectedValue = "0";
         drpscheme.Text = "";
         drpcurrency.SelectedValue = "0";
         txtagreedrate.Text = "";
         txtagreedamt.Text = "";
         txtspedisc.Text = "";
         txtspacedisc.Text = "";
         txtextracharges.Text = "";
         txtcolum.Text = "";        
         txtspediscper.Text = "";
         txtspadiscper.Text = "";
     
         txtcontractname.Text = "";
         txtcontracttype.Text = "";
         txtcardname.Text = "";
         drptype.SelectedValue = "0";
         drpmonth.SelectedValue = "0";
         drpyear.SelectedValue = "0";
         txtcardno.Text = "";
         drpmatsta.SelectedValue = "0";
         drpmatsta.Enabled = false;
         drppackage.SelectedValue = "0";

         drppackagecopy.Items.Clear();
         txtagencypaymode.Items.Clear();
         //////////////////////////////
         txtdockitno1.Enabled = true;
         txtkeyno.Enabled = true;
         txtrono.Enabled = true;
         txtagency.Enabled = true;
         txtclient.Enabled = true;
         btnshgrid.Enabled = false;
        
         txtciobookid.Enabled = true;
         saveormodify = "01";
         chkstatus(FlagStatus);

         btnQuery.Enabled = false;
         btnExecute.Enabled = true;
         btnSave.Enabled = false;
         btnsavepaginate.Enabled = false;
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zj", "document.getElementById('btndel').disabled=true;", true);
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz", "document.getElementById('tblinsert').innerHTML=''", true);
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt", "document.getElementById('tblrate').style.display='none'", true);
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt1", "document.getElementById('tblbill').style.display='none'", true);
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt2", "document.getElementById('addetails').style.display='none'", true);
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt3", "document.getElementById('pagedetail').style.display='none'", true);
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt4", "document.getElementById('tblpackage').style.display='none'", true);
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt5", "document.getElementById('tbbox').style.display='none'", true);
         ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt7", "disablelistbox();", true);
        */
    }
    protected void btnExecute_Click(object sender, EventArgs e)
    {/*
        ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz", "document.getElementById('tblinsert').innerHTML=''", true);
        saveormodify = "1";
        hiddensavemod.Value = saveormodify;
        LinkButton1.Enabled = true;
        LinkButton2.Enabled = true;
        LinkButton3.Enabled = true;
        LinkButton4.Enabled = true;
        LinkButton5.Enabled = true;
        LinkButton6.Enabled = true;
        LinkButton7.Enabled = true;

        //////////////////////////////////////////////////////////////////////////

        btnshgrid.Enabled = false;
        //btnupload.Enabled = false;

        drpbooktype.Enabled = false;
        txtciobookid.Enabled = false;
        // txtappby.Enabled = true;
        //txtaudit.Enabled = true;
        txtrono.Enabled = false;
        txtrodate.Enabled = false;
        txtcaption.Enabled = false;
        drpbillstatus.Enabled = false;
        drprostatus.Enabled = false;
        txtagency.Enabled = false;
        txtclient.Enabled = false;
        // txtagencyaddress.Enabled = true;
        txtclientadd.Enabled = false;
        drpagscode.Enabled = false;
        txtdockitno1.Enabled = false;
        txtexecname.Enabled = false;
        txtexeczone.Enabled = false;
        txtproduct.Enabled = false;
        drpbrand.Enabled = false;
        txtkeyno.Enabled = false;
        txtbillremark.Enabled = false;
        txtprintremark.Enabled = false;
        drppackage.Enabled = false;
        txtinsertion.Enabled = false;
        txtdummydate.Enabled = false;
        txtrepeatingdate.Enabled = false;
        drpbooktype.Enabled = false;
        drpadcategory.Enabled = false;
        drpadsubcategory.Enabled = false;

        drpadcat3.Enabled = false;
        drpadcat4.Enabled = false;
        drpadcat5.Enabled = false;

        drpcolor.Enabled = false;
        drpuom.Enabled = false;
        drppageposition.Enabled = false;
        drppagetype.Enabled = false;
        txtpageno.Enabled = false;
        drpadstype.Enabled = false;
        // txtadsizetypeheight.Enabled = true;
        //txtadsizetypewidth.Enabled = true;
        txtratecode.Enabled = false;
        drpscheme.Enabled = false;
      //  drpschemepck.Enabled = false;
        drpcurrency.Enabled = false;
        txtagreedrate.Enabled = false;
        txtagreedamt.Enabled = false;
        txtspedisc.Enabled = false;
        txtspacedisc.Enabled = false;
        txtextracharges.Enabled = false;
        txtdatetime.Enabled = false;
        txtrepeatingdate.Enabled = false;

        drpbillcycle.Enabled = false;
        drprevenue.Enabled = false;
        //drpbilltype.Enabled = true;
        drpbillstatus.Enabled = false;
        //drpbillcurrency.Enabled = true;
        drppaymenttype.Enabled = false;
        txtinvoice.Enabled = false;
        txtvts.Enabled = false;
        txtbillwidth.Enabled = false;
        txtbillheight.Enabled = false;
        drpbillto.Enabled = false;
        txttradedisc.Enabled = false;
        txtagencyoutstand.Enabled = false;
        txtcardrate.Enabled = false;
        txtcardamt.Enabled = false;
        txtdiscount.Enabled = false;
        txtdiscpre.Enabled = false;
        txtadsize2.Enabled = false;
        txtadsize1.Enabled = false;
        txttotalarea.Enabled = false;
        txtbilladdress.Enabled = false;
        txtcaption.Enabled = false;
        drpboxcode.Enabled = false;
        //txtboxno.Enabled = true;
        txtboxaddress.Enabled = false;
        txtcamp.Enabled = false;
        txtcaption.Enabled = false;
        txtbillamt.Enabled = false;
        drppageprem.Enabled = false;
        txtgrossamt.Enabled = false;
        txtcamp.Enabled = false;
        drppageprem.Enabled = false;
        drpboxcode.Enabled = false;
        chkage.Enabled = false;
        chkclie.Enabled = false;
        chktfn.Enabled = false;
        chkcoupan.Enabled = false;
        txtboxaddress.Enabled = false;
        txtinsertion.Enabled = false;

        txtcolum.Enabled = false;
       // txtbillcolumn.Enabled = false;
       // txtbillarea.Enabled = false;
        txtspediscper.Enabled = false;
        txtspadiscper.Enabled = false;
        txtboxno.Enabled = false;

        ///////////////////////
        txtcontractname.Enabled = false;
        txtcontracttype.Enabled = false;
        txtcardname.Enabled = false;
        drptype.Enabled = false;
        drpmonth.Enabled = true;
        drpyear.Enabled = false;
        txtcardno.Enabled = false;
        txtagencypaymode.Enabled = false;

        btncopy.Enabled = false;
        btndel.Enabled = false;
        btnshgrid.Enabled = false;
        btndeal.Enabled = false;
        txtagencypaymode.Enabled = false;
        drpmatsta.Enabled = false;

        drpretainer.Enabled = false;
        txtaddagencycommrate.Enabled = false;
       
        ///////////////////////////////////////////////////////////////////////////

        txtciobookid.Enabled = false;
        string ciobookid = txtciobookid.Text;
        gciobookid = ciobookid;
        string docno = txtdockitno1.Text;
        gdockitno = docno;
        string keyno = txtkeyno.Text;
        gkeyno = keyno;
        string rono = txtrono.Text;
        grono = rono;

        string agencycod = txtagency.Text;
        string agencycode="";
        //////////////this is to split the  and get the code
        if (agencycod != "")
        {
            char[] splitter = { '(' };
            string[] myarray = agencycod.Split(splitter);
             agencycode = myarray[1];
            agencycode = agencycode.Replace(")", "");
            gagencyscode = agencycode;
        }
        ////for client

        string clientcode = txtclient.Text;
        string client="";
        ///this is to split and get the client code

        if (clientcode.IndexOf("(".ToString()) > 0 && clientcode!="")
        {
            //clientcode.IndexOf(
            char[] splitterclie = { '(' };
            string[] myarray1 = clientcode.Split(splitterclie);
            client = myarray1[1];
            client = client.Replace(")", null);

            /////this is to chk whether this code exixts in the database if exists than it is a register client else
            ///it is walkinn client
            DataSet dcl = new DataSet();

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster chkclient = new NewAdbooking.Classes.BookingMaster();
                dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
            }

            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster chkclient = new NewAdbooking.classesoracle.BookingMaster();
                dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
            }

            else
            {
                NewAdbooking.classmysql.BookingMaster chkclient = new NewAdbooking.classmysql.BookingMaster();
                dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
            }

            if (dcl.Tables[0].Rows.Count > 0)
            {

            }
            else
            {
                client = clientcode;
            }

        }
        else
        {

            client = clientcode;
        }
        gclient = client;
       
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster execute = new NewAdbooking.Classes.BookingMaster();
            executequery = execute.executebooking(Session["compcode"].ToString(), ciobookid, docno, keyno, rono, agencycode, client, "DI0");
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster execute = new NewAdbooking.classesoracle.BookingMaster();
            executequery = execute.executebooking(Session["compcode"].ToString(), ciobookid, docno, keyno, rono, agencycode, client, "DI0");
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster execute = new NewAdbooking.classmysql.BookingMaster();
            executequery = execute.executebooking(Session["compcode"].ToString(), ciobookid, docno, keyno, rono, agencycode, client, "DI0");
        }

        dateinsert getdatechk = new dateinsert();
        if (executequery.Tables[0].Rows.Count > 0)
        {
    
            txtbranch.Text = executequery.Tables[0].Rows[0].ItemArray[1].ToString();
             txtbookedby.Text = executequery.Tables[0].Rows[0].ItemArray[2].ToString();
             txtprevbook.Text = executequery.Tables[0].Rows[0].ItemArray[4].ToString();
            string datetime = executequery.Tables[0].Rows[0].ItemArray[0].ToString();
            txtdatetime.Text = getdatechk.getDatedisp(dateformat, datetime);
             txtciobookid.Text = executequery.Tables[0].Rows[0].ItemArray[3].ToString();
             //txtappby.Text = executequery.Tables[0].Rows[0].ItemArray[5].ToString();
            // txtaudit.Text = executequery.Tables[0].Rows[0].ItemArray[6].ToString();
             txtrono.Text = executequery.Tables[0].Rows[0].ItemArray[7].ToString();
            string ro_date = executequery.Tables[0].Rows[0].ItemArray[8].ToString();
            txtrodate.Text = getdatechk.getDatedisp(dateformat, ro_date);
             txtcaption.Text = executequery.Tables[0].Rows[0].ItemArray[9].ToString();
             drpbillstatus.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[10].ToString();
             drprostatus.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[11].ToString();
            txtagency.Text = executequery.Tables[0].Rows[0].ItemArray[89].ToString();
            //drpagency_SelectedIndexChanged(sender, e);

            ///////////////this is to bind the subagency drop down
            DataSet dsbsa = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster bindsubage = new NewAdbooking.Classes.BookingMaster();
                dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
            }

            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bindsubage = new NewAdbooking.classesoracle.BookingMaster();
                dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
            }

            else
            {
                NewAdbooking.classmysql.BookingMaster bindsubage = new NewAdbooking.classmysql.BookingMaster();
                dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
            }
            

            drpagscode.Items.Clear();
            int p;
            ListItem li11;
            li11 = new ListItem();
            li11.Text = "Select Package";
            li11.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
          
            drpagscode.Items.Add(li11);

            if (dsbsa.Tables[0].Rows.Count > 0)
            {
                for (p = 0; p < dsbsa.Tables[0].Rows.Count; p++)
                {
                    ListItem li12;
                    li12 = new ListItem();
                    li12.Text = dsbsa.Tables[0].Rows[p].ItemArray[1].ToString();
                    li12.Value = dsbsa.Tables[0].Rows[p].ItemArray[0].ToString();
                    //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                    drpagscode.Items.Add(li12);
                }

            }


            //////////////////////////////////////////////////////

             txtclient.Text = executequery.Tables[0].Rows[0]["Client"].ToString();  //.ItemArray[14].ToString();
             txtagencyaddress.Text = executequery.Tables[0].Rows[0].ItemArray[13].ToString();
             txtclientadd.Text = executequery.Tables[0].Rows[0].ItemArray[15].ToString();
             hiddensubcode.Value=drpagscode.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[12].ToString();
             txtdockitno1.Text = executequery.Tables[0].Rows[0].ItemArray[17].ToString();
             txtexecname.Text = executequery.Tables[0].Rows[0].ItemArray[90].ToString();
             hiddenzone.Value= txtexeczone.Text = executequery.Tables[0].Rows[0].ItemArray[19].ToString();
             txtproduct.Text = executequery.Tables[0].Rows[0].ItemArray[91].ToString();
             //drpproduct_SelectedIndexChanged1(sender, e);
             //drpbrand.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[21].ToString();
            /////////////////////////////////////////////this is to bind the brand drop down
            DataSet dsbrand = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster brandbind = new NewAdbooking.Classes.BookingMaster();
                dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[0].ItemArray[20].ToString());
            }

            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster brandbind = new NewAdbooking.classesoracle.BookingMaster();
                dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[0].ItemArray[20].ToString());
            }

            else
            {
                NewAdbooking.classmysql.BookingMaster brandbind = new NewAdbooking.classmysql.BookingMaster();
                dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[0].ItemArray[20].ToString());
            }
            

             drpbrand.Items.Clear();
             int x;

             ListItem li112;
             li112 = new ListItem();
             li112.Text = "Select brand";
             li112.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
             drpbrand.Items.Add(li112);

             if (dsbrand.Tables[0].Rows.Count > 0)
             {
                 for (x = 0; x < dsbrand.Tables[0].Rows.Count; x++)
                 {
                     ListItem li3;
                     li3 = new ListItem();
                     li3.Text = dsbrand.Tables[0].Rows[x].ItemArray[1].ToString();
                     li3.Value = dsbrand.Tables[0].Rows[x].ItemArray[0].ToString();
                     //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                     drpbrand.Items.Add(li3);
                 }

             }
          //hiddenbrand.Value=drpbrand.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[21].ToString();
             if (executequery.Tables[0].Rows[0].ItemArray[21].ToString() == "")
             {
                 drpbrand.Items.Clear();
                 hiddenbrand.Value = "";
             }
             else
             {
                 hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[21].ToString();
             }
            ////////////////////this is to bind the varient dropdown

             DataSet dva = new DataSet();
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {
                 NewAdbooking.Classes.BookingMaster getvarient = new NewAdbooking.Classes.BookingMaster();
                 dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
             }

             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.BookingMaster getvarient = new NewAdbooking.classesoracle.BookingMaster();
                 dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
             }

             else
             {
                 NewAdbooking.classmysql.BookingMaster getvarient = new NewAdbooking.classmysql.BookingMaster();
                 dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
             }


          drpvarient.Items.Clear();
          int x1;

          ListItem li1121;
          li1121 = new ListItem();
          li1121.Text = "Select varient";
          li1121.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
          drpvarient.Items.Add(li1121);

          if (dva.Tables[0].Rows.Count > 0)
          {
              for (x1 = 0; x1 < dva.Tables[0].Rows.Count; x1++)
              {
                  ListItem li31;
                  li31 = new ListItem();
                  li31.Text = dva.Tables[0].Rows[x1].ItemArray[1].ToString();
                  li31.Value = dva.Tables[0].Rows[x1].ItemArray[0].ToString();
                  //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                  drpvarient.Items.Add(li31);
              }

          }

            ////////////////////////////////////////////////////////////////////////////////
             txtkeyno.Text = executequery.Tables[0].Rows[0].ItemArray[22].ToString();
             txtbillremark.Text = executequery.Tables[0].Rows[0].ItemArray[23].ToString();
            txtprintremark.Text = executequery.Tables[0].Rows[0].ItemArray[24].ToString();
             string listpck = executequery.Tables[0].Rows[0].ItemArray[25].ToString();
             hiddenpackage.Value = listpck;
            //////////////////this is to bind the package grid on what the value is saved in the database


             //ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "c1", "bindgridpkg('"+listpck+"')", true);            
             DataSet dsexecut = new DataSet();
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {
                 NewAdbooking.Classes.BookingMaster bindpacforexe = new NewAdbooking.Classes.BookingMaster();
                 dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
             }

             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
                 dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
             }

             else
             {
                 NewAdbooking.classmysql.BookingMaster bindpacforexe = new NewAdbooking.classmysql.BookingMaster();
                 dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
             }
             
             int i;

             drppackagecopy.Items.Clear();
             for (i = 0; i <= dsexecut.Tables[0].Rows.Count - 1; i++)
             {
                 if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "")
                 {
                     if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "0")
                     {
                         arrfor_uom = dsexecut.Tables[0].Rows[i].ItemArray[2].ToString().Split('@');
                         DataSet dsinsert = new DataSet();
                         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                         {
                             NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
                             dsinsert = bindpacforexe.getPackageInsert(arrfor_uom[0].ToString(), txtciobookid.Text);


                         }
                         ListItem li;
                         li = new ListItem();
                         li.Text = dsexecut.Tables[0].Rows[i].ItemArray[1].ToString() + "(" + dsinsert.Tables[0].Rows[0].ItemArray[0].ToString() + ")";
                         li.Value = dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() + "(" + dsinsert.Tables[0].Rows[0].ItemArray[0].ToString() + ")"; ;
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drppackagecopy.Items.Add(li);

                     }
                 }
             }



            
             
             txtinsertion.Text = executequery.Tables[0].Rows[0].ItemArray[26].ToString();
             hiddeninsertion.Value = executequery.Tables[0].Rows[0].ItemArray[26].ToString();
             string start_date = executequery.Tables[0].Rows[0].ItemArray[27].ToString();
             txtdummydate.Text = getdatechk.getDatedisp(dateformat, start_date);
             txtrepeatingdate.Text = executequery.Tables[0].Rows[0].ItemArray[28].ToString();
             if (drpbooktype.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[70].ToString()) != null)
             {
                 drpbooktype.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[70].ToString();
             }
             if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[30].ToString()) != null)
             {
                 drpadcategory.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[30].ToString();
             }
             getadsubcatmain(Session["compcode"].ToString(), drpadcategory.SelectedValue, "");
             if (drpadsubcategory.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[31].ToString()) != null)
             {
                 drpadsubcategory.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[31].ToString();
             }
             if (drpcolor.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[32].ToString()) != null)
             {
                 drpcolor.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[32].ToString();
             }
             if (drpuom.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[33].ToString()) != null)
             {
                 drpuom.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[33].ToString();
             }
             if (drppageposition.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[34].ToString()) != null)
             {
                 drppageposition.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[34].ToString();
             }
             if (drppagetype.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[35].ToString()) != null)
             {
                 drppagetype.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[35].ToString();
             }
             txtpageno.Text = executequery.Tables[0].Rows[0].ItemArray[36].ToString();
            //string adtype=drpadstype.SelectedValue;
             txtadsize1.Text = executequery.Tables[0].Rows[0].ItemArray[38].ToString();
             txtadsize2.Text = executequery.Tables[0].Rows[0].ItemArray[39].ToString();

             ////this is to bind the ratecode drpdown
             DataSet dx = new DataSet();
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {
                 NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
                 dx = bindrate.ratebind(executequery.Tables[0].Rows[0].ItemArray[30].ToString(), Session["compcode"].ToString());
             }

             else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
                 dx = bindrate.ratebind(executequery.Tables[0].Rows[0].ItemArray[30].ToString(), Session["compcode"].ToString());
             }

             else
             {
                 NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
                 dx = bindrate.ratebind(executequery.Tables[0].Rows[0].ItemArray[30].ToString(), Session["compcode"].ToString());
             }
             

             txtratecode.Items.Clear();
             int ii;
             ListItem li1;
             li1 = new ListItem();
             li1.Text = "-Select Rate Code-";
             li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
             li1.Selected = true;
             txtratecode.Items.Add(li1);

             if (dx.Tables[0].Rows.Count > 0)
             {
                 for (ii = 0; ii < dx.Tables[0].Rows.Count; ii++)
                 {
                     ListItem li;
                     li = new ListItem();
                     li.Text = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                     li.Value = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                     //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                     txtratecode.Items.Add(li);
                 }

             }
             if (txtratecode.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[40].ToString()) != null)
             {
                 txtratecode.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[40].ToString();
             }
             hiddenratecode.Value = executequery.Tables[0].Rows[0].ItemArray[40].ToString();

            // txtratecode.SelectedValue  = executequery.Tables[0].Rows[0].ItemArray[40].ToString();
            
                 drpscheme.Text = executequery.Tables[0].Rows[0].ItemArray[41].ToString();
            
             hiddenscheme.Value = executequery.Tables[0].Rows[0].ItemArray[41].ToString();
           //  drpschemepck.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[41].ToString();
             if (drpcurrency.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[42].ToString()) != null)
             {
                 drpcurrency.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[42].ToString();
             }
            
                 txtagreedrate.Text = executequery.Tables[0].Rows[0].ItemArray[43].ToString();
            
             
                 txtagreedamt.Text = executequery.Tables[0].Rows[0].ItemArray[44].ToString();
             
            
                 txtspedisc.Text = executequery.Tables[0].Rows[0].ItemArray[45].ToString();
            
             
                 txtspacedisc.Text = executequery.Tables[0].Rows[0].ItemArray[46].ToString();
             
            if (drpadstype.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[37].ToString()) != null)
             {
                 drpadstype.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[37].ToString();
             }
             
                 txtextracharges.Text = executequery.Tables[0].Rows[0].ItemArray[47].ToString();
             
            hiddenstatus.Value =txtagencystatus.Text = executequery.Tables[0].Rows[0].ItemArray[50].ToString();
            txtagencytype.Text = executequery.Tables[0].Rows[0].ItemArray[51].ToString();
            //this is To the bind the the agencypaymode dropdown on execution
            DataSet dch = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster getsta = new NewAdbooking.Classes.BookingMaster();
                dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), executequery.Tables[0].Rows[0].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
            }

            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster getsta = new NewAdbooking.classesoracle.BookingMaster();
                dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), executequery.Tables[0].Rows[0].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text,Session["dateformat"].ToString(), "DI0");
            }

            else
            {
                NewAdbooking.classmysql.BookingMaster getsta = new NewAdbooking.classmysql.BookingMaster();
                dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), executequery.Tables[0].Rows[0].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
            }
            

            txtagencypaymode.Items.Clear();
            if (dch.Tables[5].Rows.Count > 0)
            {
                for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                    li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                    txtagencypaymode.Items.Add(li);
                }

            }

            ///////////////////////////////////////////////////////////////////////////////////////////////////
            if (txtagencypaymode.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[52].ToString()) != null)
            {
                //if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[52].ToString()) != "0")
                //{
                    hiddenpay.Value = txtagencypaymode.Text = executequery.Tables[0].Rows[0].ItemArray[52].ToString();
                //}
            }
            
                txtcreditperiod.Text = executequery.Tables[0].Rows[0].ItemArray[53].ToString();
            
           
                txttotalarea.Text = executequery.Tables[0].Rows[0].ItemArray[54].ToString();
            
           
                txtcardrate.Text = executequery.Tables[0].Rows[0].ItemArray[55].ToString();
           
           
                txtcardamt.Text = executequery.Tables[0].Rows[0].ItemArray[56].ToString();
           
            
                txtdiscount.Text = executequery.Tables[0].Rows[0].ItemArray[57].ToString();
            
            
                txtdiscpre.Text = executequery.Tables[0].Rows[0].ItemArray[58].ToString();
           
          if (drpbillcycle.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[58].ToString()) != null)
            {
                drpbillcycle.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[58].ToString();
            }
            if (drprevenue.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[60].ToString()) != null)
            {
                drprevenue.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[60].ToString();
            }
            ////this is to bind the bill pay mode
            drppaymenttype.Items.Clear();
            if (dch.Tables[5].Rows.Count > 0)
            {
                for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                    li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                    drppaymenttype.Items.Add(li);
                }

            }
            if (drppaymenttype.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[61].ToString()) != null)
            {
                hiddenbillpay.Value = drppaymenttype.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[61].ToString();
            }
          
                txtbillheight.Text = executequery.Tables[0].Rows[0].ItemArray[62].ToString();
            
            
                txtbillwidth.Text = executequery.Tables[0].Rows[0].ItemArray[63].ToString();
            
                 //////////////this is to bind the bill to 
            
            DataSet dbt = new DataSet();

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster getbillto = new NewAdbooking.Classes.BookingMaster();
                dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
            }

            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster getbillto = new NewAdbooking.classesoracle.BookingMaster();
                dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
            }

            else
            {
                NewAdbooking.classmysql.BookingMaster getbillto = new NewAdbooking.classmysql.BookingMaster();
                dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
            }
            ////////////////////////////////////////////////////
            drpbillto.Items.Clear();
            ListItem lik;
            lik = new ListItem();
            lik.Text = "Client";
            lik.Value = "c";
            drpbillto.Items.Add(lik);
            for (int k = 0; k < dbt.Tables[0].Rows.Count; k++)
            {
                ListItem lio;
                lio = new ListItem();
                lio.Text = dbt.Tables[0].Rows[k].ItemArray[1].ToString();
                lio.Value = dbt.Tables[0].Rows[k].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpbillto.Items.Add(lio);
            }

            if (drpbillto.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString()) != null)
            {
                hiddenbillto.Value = drpbillto.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
            }
           
            //hiddenbillto.Value = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
            //drpbillto.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[64].ToString();
            txtinvoice.Text = executequery.Tables[0].Rows[0].ItemArray[65].ToString();
            txtvts.Text = executequery.Tables[0].Rows[0].ItemArray[66].ToString();
            txtbilladdress.Text = executequery.Tables[0].Rows[0].ItemArray[67].ToString();
            txttradedisc.Text = executequery.Tables[0].Rows[0].ItemArray[68].ToString();
            txtagencyoutstand.Text = executequery.Tables[0].Rows[0].ItemArray[69].ToString();
            txtcamp.Text = executequery.Tables[0].Rows[0].ItemArray[71].ToString();
            drppageprem.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[72].ToString();
            txtpageamt.Text = executequery.Tables[0].Rows[0].ItemArray[73].ToString();
            txtpremper.Text = executequery.Tables[0].Rows[0].ItemArray[74].ToString();
            txtgrossamt.Text = executequery.Tables[0].Rows[0].ItemArray[75].ToString();

            hiddenprevamt.Value = executequery.Tables[0].Rows[0].ItemArray[75].ToString();


            txtbillamt.Text = executequery.Tables[0].Rows[0].ItemArray[76].ToString();
            drpboxcode.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[77].ToString();
            txtboxno.Text = executequery.Tables[0].Rows[0].ItemArray[78].ToString();
            if (executequery.Tables[0].Rows[0].ItemArray[79].ToString() == "1")
            {
                chkage.Checked = true;
            }
            else
            {
                chkage.Checked = false;
            }
            if (executequery.Tables[0].Rows[0].ItemArray[80].ToString() == "1")
            {
                chkclie.Checked = true;
            }
            else
            {
                chkclie.Checked = false;
            }
            txtboxaddress.Text = executequery.Tables[0].Rows[0].ItemArray[81].ToString();
            if (executequery.Tables[0].Rows[0].ItemArray[82].ToString() == "1")
            {
                chktfn.Checked = true;
            }
            else
            {
                chktfn.Checked = false;
            }
            if (executequery.Tables[0].Rows[0].ItemArray[83].ToString() == "1")
            {
                chkcoupan.Checked = true;
            }
            else
            {
                chkcoupan.Checked = false;
            }
            txtcolum.Text = executequery.Tables[0].Rows[0].ItemArray[84].ToString();
            //txtbillcolumn.Text = executequery.Tables[0].Rows[0].ItemArray[85].ToString();
            //txtbillarea.Text = "" = executequery.Tables[0].Rows[0].ItemArray[86].ToString();
            txtspediscper.Text = executequery.Tables[0].Rows[0].ItemArray[87].ToString();
            txtspadiscper.Text = executequery.Tables[0].Rows[0].ItemArray[88].ToString();
            txtpaid.Text = executequery.Tables[0].Rows[0].ItemArray[92].ToString();
            txtdealrate.Text = executequery.Tables[0].Rows[0].ItemArray[93].ToString();
            txtdeviation.Text = executequery.Tables[0].Rows[0].ItemArray[94].ToString();
            if (executequery.Tables[0].Rows[0].ItemArray[95].ToString() == "")
            {
                drpvarient.Items.Clear();
            }
            hiddenvar.Value=drpvarient.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[95].ToString();
            txtcontractname.Text = executequery.Tables[0].Rows[0].ItemArray[96].ToString();
            txtcontracttype.Text = executequery.Tables[0].Rows[0].ItemArray[97].ToString();
            txtcardname.Text = executequery.Tables[0].Rows[0].ItemArray[98].ToString();
            drptype.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[99].ToString();
            drpmonth.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[100].ToString();
            drpyear.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[101].ToString();
            txtcardno.Text = executequery.Tables[0].Rows[0].ItemArray[102].ToString();
            hiddenreceiptno.Value = txtreceipt.Text = executequery.Tables[0].Rows[0].ItemArray[103].ToString();
            drpmatsta.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[120].ToString();

            //*6Aug* drpretainer.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[134].ToString();
           // drpretainer.Text = executequery.Tables[0].Rows[0].ItemArray[134].ToString();
            drpretainer.Text = executequery.Tables[0].Rows[0]["RETAINER1"].ToString();  
            txtaddagencycommrate.Text = executequery.Tables[0].Rows[0].ItemArray[136].ToString();
            ////this is to bind the adscat3 drpdown



            if (executequery.Tables[0].Rows[0].ItemArray[104].ToString() == "" || executequery.Tables[0].Rows[0].ItemArray[104].ToString() == "0")
            {
                drpadcat3.Items.Clear();
                hiddenadscat3.Value = "";

            }
            else
            {
                DataSet dacat = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();

                    //////if 0 than bind adcat3 drop down 
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                }

                else
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

                        //////if 0 than bind adcat3 drop down 
                        dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");

                    }


                    else
                    {
                        NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();

                        //////if 0 than bind adcat3 drop down 
                        dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                    }
                ////////////////////////////////////////////////////////////////
                drpadcat3.Items.Clear();
                ListItem lika;
                lika = new ListItem();
                lika.Text = "Select";
                lika.Value = "0";
                drpadcat3.Items.Add(lika);
                for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                {
                    ListItem lio;
                    lio = new ListItem();
                    lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                    lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                    //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                    drpadcat3.Items.Add(lio);
                }


            }
            if (drpadcat3.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[104].ToString()) != null)
            {
                hiddenadscat3.Value = drpadcat3.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[104].ToString();
            }
            else
            {
                hiddenadscat3.Value = drpadcat3.SelectedValue = "0";
            }
            ////////////////////this is to bind the adcat4 drp down
            if (executequery.Tables[0].Rows[0].ItemArray[105].ToString() == "")
            {
                drpadcat4.Items.Clear();
                hiddenadscat4.Value = "";

            }
            else
            {
                ////////////when 1 than bind the adscat4 drp down
                DataSet dacat = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();

                    //////if 0 than bind adcat3 drop down 
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                }

                else
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {

                        NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

                        //////if 0 than bind adcat3 drop down 
                        dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                    }
                    else
                    {
                        NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();

                        //////if 0 than bind adcat3 drop down 
                        dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                    }
                ////////////////////////////////////////////////////////////////
                drpadcat4.Items.Clear();
                ListItem liks;
                liks = new ListItem();
                liks.Text = "Select";
                liks.Value = "0";
                drpadcat4.Items.Add(liks);
                for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                {
                    ListItem lio;
                    lio = new ListItem();
                    lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                    lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                    //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                    drpadcat4.Items.Add(lio);
                }

            }

            if (drpadcat4.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[105].ToString()) != null)
            {
                hiddenadscat4.Value = drpadcat4.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[105].ToString();
            }
            else
            {
                hiddenadscat4.Value = drpadcat4.SelectedValue = "0";
            }

            ///bind adcat5 drpdown
            if (executequery.Tables[0].Rows[0].ItemArray[106].ToString() == "")
            {
                drpadcat5.Items.Clear();
                hiddenadscat5.Value = "";
            }
            else
            {
                ////////////when 1 than bind the adscat4 drp down
                DataSet dacat = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();

                    //////if 2 than bind adcat2 drop down 
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
                }


                else
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

                        //////if 2 than bind adcat2 drop down 
                        dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");

                    }
                    else
                    {
                        NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();

                        //////if 2 than bind adcat2 drop down 
                        dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[0].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
                    }
                ////////////////////////////////////////////////////////////////
                drpadcat5.Items.Clear();
                ListItem liks;
                liks = new ListItem();
                liks.Text = "Select";
                liks.Value = "0";
                drpadcat5.Items.Add(liks);
                for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                {
                    ListItem lio;
                    lio = new ListItem();
                    lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                    lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                    //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                    drpadcat5.Items.Add(lio);
                }
            }
            if (drpadcat5.Items.FindByValue(executequery.Tables[0].Rows[0].ItemArray[106].ToString()) != null)
            {
                hiddenadscat5.Value = drpadcat5.SelectedValue = executequery.Tables[0].Rows[0].ItemArray[106].ToString();
            }
            else
            {
                hiddenadscat5.Value = drpadcat5.SelectedValue = "0";
            }


            //txtretainer.Text = executequery.Tables[0].Rows[0].ItemArray[135].ToString();
        }

        else
        {
            message = "Your Search Produces No Result";
            btnCancel_Click(sender, e);
            AspNetMessageBox(message);
            return;
        }

        updateStatus();
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        

        if (executequery.Tables[0].Rows.Count - 1 == 0)
        {
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = false;
            btnlast.Enabled = false;
        }
        hiddencioid.Value = txtciobookid.Text;
        ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "ca", "showcardinfo('"+executequery.Tables[0].Rows[0].ItemArray[61].ToString()+"');", true);
        ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "cc", "showgridexecute()", true);
        if (hiddenaudit.Value != "")
        {
            btnModify_Click(sender, e);
        }*/

    }



    protected void btnCancel_Click(object sender, EventArgs e)
    {
        /*  saveormodify = "0";
          hiddencalendar.Value = "0";
          hiddensavemod.Value = saveormodify;
          LinkButton1.Enabled = false;
          LinkButton2.Enabled = false;
          LinkButton3.Enabled = false;
          LinkButton4.Enabled = false;
          LinkButton5.Enabled = false;
          LinkButton6.Enabled = false;
          LinkButton7.Enabled = false;

          btnshgrid.Enabled = false;
         // btnupload.Enabled = false;
          if (Session["addAgencyComm"].ToString() == "Y")
          {
              txtaddagencycommrate.Enabled = false;
          }
          txtciobookid.Enabled = false;
         // txtappby.Enabled = false;
         // txtaudit.Enabled = false;
          txtrono.Enabled = false;
          txtrodate.Enabled = false;
          txtcaption.Enabled = false;
          drpbillstatus.Enabled = false;
          drprostatus.Enabled = false;
          txtagency.Enabled = false;
          txtclient.Enabled = false;
          txtagencyaddress.Enabled = false;
          txtclientadd.Enabled = false;
          drpagscode.Enabled = false;
          txtdockitno1.Enabled = false;
          txtexecname.Enabled = false;
          txtexeczone.Enabled = false;
          txtproduct.Enabled = false;
          drpbrand.Enabled = false;
          txtkeyno.Enabled = false;
          txtbillremark.Enabled = false;
          txtprintremark.Enabled = false;
          txtaddagencycommrate.Text = "";
          txtaddagencycommrate.Enabled = false;
          drppackage.Enabled = false;
          txtinsertion.Enabled = false;
          txtdummydate.Enabled = false;
          txtrepeatingdate.Enabled = false;
          drpbooktype.Enabled = false;
          drpadcategory.Enabled = false;
          drpadsubcategory.Enabled = false;
          txtRetainercomm.Text = "";
          txtRetainercomm.Enabled = false;
          drpretainer.Enabled = false;
          drpretainer.Text = "";
          drpadcat3.Enabled = false;
          drpadcat4.Enabled = false;
          drpadcat5.Enabled = false;

          drpcolor.Enabled = false;
          drpuom.Enabled = false;
          drppageposition.Enabled = false;
          drppagetype.Enabled = false;
          txtpageno.Enabled = false;
          drpadstype.Enabled = false;
         // txtadsizetypeheight.Enabled = false;
          //txtadsizetypewidth.Enabled = false;
          txtratecode.Enabled = false;
          drpscheme.Enabled = false;
        //  drpschemepck.Enabled = false;
          drpcurrency.Enabled = false;
          txtagreedrate.Enabled = false;
          txtagreedamt.Enabled = false;
          txtspedisc.Enabled = false;
          txtspacedisc.Enabled = false;
          txtextracharges.Enabled = false;
          txtdatetime.Enabled = false;
          txtrepeatingdate.Enabled = false;

       
          txtadsize1.Enabled = false;
          txtadsize2.Enabled = false;
          txttotalarea.Enabled = false;
          txtcardrate.Enabled = false;
          txtcardamt.Enabled = false;
          txtdiscount.Enabled = false;
          txtdiscpre.Enabled = false;
          txtrepeatingdate.Enabled = false;
          drpbillcycle.Enabled = false;
          drprevenue.Enabled = false;
          drppaymenttype.Enabled = false;
          txtbillheight.Enabled = false;
          txtbillwidth.Enabled = false;
          drpbillto.Enabled = false;
          txtinvoice.Enabled = false;
          txtvts.Enabled = false;
          txtbilladdress.Enabled = false;
          txttradedisc.Enabled = false;
          txtagencyoutstand.Enabled = false;
          txtcamp.Enabled = false;
          drppageprem.Enabled = false;
          drpboxcode.Enabled = false;
          chkage.Enabled = false;
          chkclie.Enabled = false;
          chktfn.Enabled = false;
          chkcoupan.Enabled = false;
          txtboxaddress.Enabled = false;
          txtinsertion.Enabled = false;

          txtcolum.Enabled = false;
         // txtbillcolumn.Enabled = false;
         // txtbillarea.Enabled = false;
          txtspediscper.Enabled = false;
          txtspadiscper.Enabled = false;
          drpvarient.Enabled = false;

          drpretainer.Enabled = false;

          drpvarient.SelectedValue = "0";

          ///////////////////////
          txtcontractname.Enabled = false;
          txtcontracttype.Enabled = false;
          txtcardname.Enabled = false;
          drptype.Enabled = false;
          drpmonth.Enabled = true;
          drpyear.Enabled = false;
          txtcardno.Enabled = false;
          btncopy.Enabled = false;
          btndel.Enabled = false;
          txtagencypaymode.Enabled = false;
          drpmatsta.Enabled = false;
          drpmatsta.SelectedValue = "0";

          txtcontractname.Text = "";
          txtcontracttype.Text = "";
          txtcardname.Text = "";
          drptype.SelectedValue = "0";
          drpmonth.SelectedValue = "0";
          drpyear.SelectedValue = "0";
          txtcardno.Text = "";
          //////////////////////////////

          txtcolum.Text = "";
          //txtbillcolumn.Text = "";
          ////txtbillarea.Text = "" = "";
          txtspediscper.Text = "";
          txtspadiscper.Text = "";

          txtciobookid.Text = "";
         // txtappby.Text = "";
         // txtaudit.Text = "";
          txtrono.Text = "";
          txtrodate.Text = "";
          txtcaption.Text = "";
          drpbillstatus.SelectedValue = "0";
          drprostatus.SelectedValue = "0";
          txtagency.Text = "";
          txtclient.Text = "";
          txtagencyaddress.Text = "";
          txtclientadd.Text = "";
          drpagscode.SelectedValue = "0";
          txtdockitno1.Text = "";
          txtexecname.Text = "";
          txtexeczone.Text = "";
          txtproduct.Text = "";
          drpbrand.SelectedValue = "0";
          txtkeyno.Text = "";
          txtbillremark.Text = "";
          txtprintremark.Text = "";
          //drppackage.SelectedValue = "0";
          //drppackage.Items.Clear();
          ///////////on the click of clear button bind the grid again to uncheck
          txtinsertion.Text = "";
          txtdummydate.Text = "";
          txtrepeatingdate.Text = "";
          drpbooktype.SelectedValue="0";
          drpadcategory.SelectedValue = "0";
          drpadsubcategory.SelectedValue = "0";

          drpadcat3.SelectedValue = "0";
          drpadcat4.SelectedValue = "0";
          drpadcat5.SelectedValue = "0";

          drpcolor.SelectedValue = "0";
          drpuom.SelectedValue = "0";
          drppageposition.SelectedValue = "0";
          drppagetype.SelectedValue = "0";
          txtpageno.Text = "";
          drpadstype.SelectedValue = "0";
        //  txtadsizetypeheight.Text = "";
          //txtadsizetypewidth.Text = "";
          txtratecode.SelectedValue = "0";
          drpscheme.Text = "";
        //  drpschemepck.SelectedValue = "0";
          drpcurrency.SelectedValue = "0";
          txtagreedrate.Text = "";
          txtagreedamt.Text = "";
          txtspedisc.Text = "";
          txtspacedisc.Text = "";
          txtextracharges.Text = "";

          txtagencytype.Text = "";
          txtagencystatus.Text = "";
          //txtagencypaymode.Items.Clear();
          txtagencypaymode.Items.Clear();
          txtadsize1.Text = "";
          txtadsize2.Text = "";
          txttotalarea.Text = "";
          txtcardrate.Text = "";
          txtcardamt.Text = "";
          txtdiscount.Text = "";
          txtdiscpre.Text = "";
          txtrepeatingdate.Text = "";
          drpbillcycle.SelectedValue = "0";
          drprevenue.SelectedValue = "0";
           drppaymenttype.Items.Clear();
          txtbillheight.Text = "";
          txtbillwidth.Text = "";
          //drpbillto.SelectedValue = "0";
          drpbillto.Items.Clear();
          txtinvoice.Text = "";
          txtvts.Text = "";
          txtbilladdress.Text = "";
          txttradedisc.Text = "";
          txtagencyoutstand.Text = "";
          txtcamp.Text = "";
          txtpageamt.Text = "";
          txtpremper.Text = "";
          drppageprem.SelectedValue = "0";
          drpboxcode.SelectedValue = "0";
          chkage.Checked = false;
          chkclie.Checked = false;
          chktfn.Checked = false;
          chkcoupan.Checked = false;
          txtboxaddress.Text = "";
          txtinsertion.Text = "";


        //*6Aug*  drpretainer.SelectedValue = "0";
          drpretainer.Text = "";
         // lstretainer.Attributes["Style"] = "display: none";
          //lstretainer.Style.Add("display", "none");
          drppackage.SelectedValue = "0";
          drppackagecopy.Items.Clear();
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zj", "document.getElementById('btndel').disabled=true;", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz", "document.getElementById('tblinsert').innerHTML=''", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt", "document.getElementById('tblrate').style.display='none'", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt1", "document.getElementById('tblbill').style.display='none'", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt2", "document.getElementById('addetails').style.display='none'", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt3", "document.getElementById('pagedetail').style.display='none'", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt4", "document.getElementById('tblpackage').style.display='none'", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt5", "document.getElementById('tbbox').style.display='none'", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zt7", "disablelistbox();", true);

          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz8", "document.getElementById('drpinsertion').options.length=0;document.getElementById('drpedition').options.length=0;document.getElementById('divspace').style.display='none';document.getElementById('Panel1').innerHTML='';", true);
          saveormodify = "01";
          fpnl = 0;
          getbuttoncheck(formname);
          if (btnNew.Enabled == true)
          {
              ScriptManager1.SetFocus(btnNew);
          }   */

    }
    protected void btnfirst_Click(object sender, EventArgs e)
    { /*
        ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz", "document.getElementById('tblinsert').innerHTML=''", true);
        LinkButton1.Enabled = true;
        LinkButton2.Enabled = true;
        LinkButton3.Enabled = true;
        LinkButton4.Enabled = true;
        LinkButton5.Enabled = true;
        LinkButton6.Enabled = true;
        LinkButton7.Enabled = true;

        fpnl = 0;
        dateinsert getdatechk = new dateinsert();

        txtbranch.Text = executequery.Tables[0].Rows[fpnl].ItemArray[1].ToString();
        txtbookedby.Text = executequery.Tables[0].Rows[fpnl].ItemArray[2].ToString();
        txtprevbook.Text = executequery.Tables[0].Rows[fpnl].ItemArray[4].ToString();
        string datetime = executequery.Tables[0].Rows[fpnl].ItemArray[0].ToString();
        txtdatetime.Text = getdatechk.getDatedisp(dateformat, datetime);
        txtciobookid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[3].ToString();
        
        txtrono.Text = executequery.Tables[0].Rows[fpnl].ItemArray[7].ToString();
        string ro_date = executequery.Tables[0].Rows[fpnl].ItemArray[8].ToString();
        txtrodate.Text = getdatechk.getDatedisp(dateformat, ro_date);
        txtcaption.Text = executequery.Tables[0].Rows[fpnl].ItemArray[9].ToString();
        drpbillstatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[10].ToString();
        drprostatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[11].ToString();
        txtagency.Text = executequery.Tables[0].Rows[fpnl].ItemArray[89].ToString();
        
        ///////////////this is to bind the subagency drop down
        DataSet dsbsa = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindsubage = new NewAdbooking.Classes.BookingMaster();
            dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindsubage = new NewAdbooking.classesoracle.BookingMaster();
            dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bindsubage = new NewAdbooking.classmysql.BookingMaster();
            dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
        }
        
        drpagscode.Items.Clear();
        int p;
        ListItem li11;
        li11 = new ListItem();
        li11.Text = "Select Package";
        li11.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();

        drpagscode.Items.Add(li11);

        if (dsbsa.Tables[0].Rows.Count > 0)
        {
            for (p = 0; p < dsbsa.Tables[0].Rows.Count; p++)
            {
                ListItem li12;
                li12 = new ListItem();
                li12.Text = dsbsa.Tables[0].Rows[p].ItemArray[1].ToString();
                li12.Value = dsbsa.Tables[0].Rows[p].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpagscode.Items.Add(li12);
            }

        }

        //////////////////////////////////////////////////////

        txtclient.Text = executequery.Tables[0].Rows[fpnl].ItemArray[14].ToString();
        txtagencyaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[13].ToString();
        txtclientadd.Text = executequery.Tables[0].Rows[fpnl].ItemArray[15].ToString();
        hiddensubcode.Value = drpagscode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString();
        txtdockitno1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[17].ToString();
        txtexecname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[90].ToString();
        hiddenzone.Value = txtexeczone.Text = executequery.Tables[0].Rows[fpnl].ItemArray[19].ToString();
        txtproduct.Text = executequery.Tables[0].Rows[fpnl].ItemArray[91].ToString();
        
        /////////////////////////////////////////////this is to bind the brand drop down
        DataSet dsbrand = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster brandbind = new NewAdbooking.Classes.BookingMaster();
            dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster brandbind = new NewAdbooking.classesoracle.BookingMaster();
            dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster brandbind = new NewAdbooking.classmysql.BookingMaster();
            dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
        }
        

        drpbrand.Items.Clear();
        int x;

        ListItem li112;
        li112 = new ListItem();
        li112.Text = "Select brand";
        li112.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        drpbrand.Items.Add(li112);

        if (dsbrand.Tables[0].Rows.Count > 0)
        {
            for (x = 0; x < dsbrand.Tables[0].Rows.Count; x++)
            {
                ListItem li3;
                li3 = new ListItem();
                li3.Text = dsbrand.Tables[0].Rows[x].ItemArray[1].ToString();
                li3.Value = dsbrand.Tables[0].Rows[x].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpbrand.Items.Add(li3);
            }

        }
        //hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
        if (executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString() == "")
        {
            drpbrand.Items.Clear();
            hiddenbrand.Value = "";
        }
        else
        {
            hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
        }
        ////////////////////this is to bind the varient dropdown

        DataSet dva = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getvarient = new NewAdbooking.Classes.BookingMaster();
            dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getvarient = new NewAdbooking.classesoracle.BookingMaster();
            dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getvarient = new NewAdbooking.classmysql.BookingMaster();
            dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
        }
        

        drpvarient.Items.Clear();
        int x1;

        ListItem li1121;
        li1121 = new ListItem();
        li1121.Text = "Select brand";
        li1121.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        drpvarient.Items.Add(li1121);

        if (dva.Tables[0].Rows.Count > 0)
        {
            for (x1 = 0; x1 < dva.Tables[0].Rows.Count; x1++)
            {
                ListItem li31;
                li31 = new ListItem();
                li31.Text = dva.Tables[0].Rows[x1].ItemArray[1].ToString();
                li31.Value = dva.Tables[0].Rows[x1].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpvarient.Items.Add(li31);
            }

        }

        ////////////////////////////////////////////////////////////////////////////////
        txtkeyno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[22].ToString();
        txtbillremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[23].ToString();
        txtprintremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[24].ToString();
        string listpck = executequery.Tables[0].Rows[fpnl].ItemArray[25].ToString();
        hiddenpackage.Value = listpck;
        //////////////////this is to bind the package grid on what the value is saved in the database


        ////ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "c1", "bindgridpkg('" + listpck + "')", true);
        DataSet dsexecut = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindpacforexe = new NewAdbooking.Classes.BookingMaster();
            dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
            dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster bindpacforexe = new NewAdbooking.classmysql.BookingMaster();
            dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
        }

        int i;
        //////this is to bind the drppackagepck
        drppackagecopy.Items.Clear();
        for (i = 0; i <= dsexecut.Tables[0].Rows.Count - 1; i++)
        {
            if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "")
            {
                if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "0")
                {

                    ListItem li;
                    li = new ListItem();
                    li.Text = dsexecut.Tables[0].Rows[i].ItemArray[1].ToString();
                    li.Value = dsexecut.Tables[0].Rows[i].ItemArray[2].ToString();
                    //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                    drppackagecopy.Items.Add(li);

                }
            }
        }
        txtinsertion.Text = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
        hiddeninsertion.Value = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
        string start_date = executequery.Tables[0].Rows[fpnl].ItemArray[27].ToString();
        txtdummydate.Text = getdatechk.getDatedisp(dateformat, start_date);
        txtrepeatingdate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[28].ToString();
        drpbooktype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[70].ToString();
        if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString()) != null)
        {
            drpadcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString();
        }
        drpadsubcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString();
        drpcolor.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[32].ToString();
        drpuom.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[33].ToString();
        drppageposition.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[34].ToString();
        drppagetype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[35].ToString();
        txtpageno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[36].ToString();
        //string adtype=drpadstype.SelectedValue;
        txtadsize1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[38].ToString();
        txtadsize2.Text = executequery.Tables[0].Rows[fpnl].ItemArray[39].ToString();
        ////this is to bind the ratecode drpdown
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
            dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
            dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
            dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
        }        

        txtratecode.Items.Clear();
        int ii;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Rate Code-";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        txtratecode.Items.Add(li1);

        if (dx.Tables[0].Rows.Count > 0)
        {
            for (ii = 0; ii < dx.Tables[0].Rows.Count; ii++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                li.Value = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                txtratecode.Items.Add(li);
            }

        }
        txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
        hiddenratecode.Value = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();

        drpscheme.Text = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
        hiddenscheme.Value=executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
      
        drpcurrency.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[42].ToString();
        txtagreedrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[43].ToString();
        txtagreedamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[44].ToString();
        txtspedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[45].ToString();
        txtspacedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[46].ToString();
        drpadstype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[37].ToString();
        txtextracharges.Text = executequery.Tables[0].Rows[fpnl].ItemArray[47].ToString();
        hiddenstatus.Value = txtagencystatus.Text = executequery.Tables[0].Rows[fpnl].ItemArray[50].ToString();
        txtagencytype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[51].ToString();

        DataSet dch = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getsta = new NewAdbooking.Classes.BookingMaster();
            dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getsta = new NewAdbooking.classesoracle.BookingMaster();
            dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text,Session["dateformat"].ToString(), "DI0");
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getsta = new NewAdbooking.classmysql.BookingMaster();
            dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
        }
        
        ////this is to bind the bill pay mode
        txtagencypaymode.Items.Clear();
        if (dch.Tables[5].Rows.Count > 0)
        {
            for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
            {
                ListItem li;
                li = new ListItem();
                li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                txtagencypaymode.Items.Add(li);
            }

        }
        hiddenpay.Value = txtagencypaymode.Text = executequery.Tables[0].Rows[fpnl].ItemArray[52].ToString();
        txtcreditperiod.Text = executequery.Tables[0].Rows[fpnl].ItemArray[53].ToString();
        txttotalarea.Text = executequery.Tables[0].Rows[fpnl].ItemArray[54].ToString();
        txtcardrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[55].ToString();
        txtcardamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[56].ToString();
        txtdiscount.Text = executequery.Tables[0].Rows[fpnl].ItemArray[57].ToString();
        txtdiscpre.Text = executequery.Tables[0].Rows[fpnl].ItemArray[58].ToString();
        drpbillcycle.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[59].ToString();
        drprevenue.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[60].ToString();
        drppaymenttype.Items.Clear();
        if (dch.Tables[5].Rows.Count > 0)
        {
            for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
            {
                ListItem li;
                li = new ListItem();
                li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                drppaymenttype.Items.Add(li);
            }

        }
        hiddenbillpay.Value= drppaymenttype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[61].ToString();
        txtbillheight.Text = executequery.Tables[0].Rows[fpnl].ItemArray[62].ToString();
        txtbillwidth.Text = executequery.Tables[0].Rows[fpnl].ItemArray[63].ToString();

        //////////////this is to bind the bill to 
        DataSet dbt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getbillto = new NewAdbooking.Classes.BookingMaster();
            dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getbillto = new NewAdbooking.classesoracle.BookingMaster();
            dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getbillto = new NewAdbooking.classmysql.BookingMaster();
            dbt = getbillto.getbillval(executequery.Tables[0].Rows[0].ItemArray[16].ToString(), Session["compcode"].ToString());
        }
        ////////////////////////////////////////////////////
        drpbillto.Items.Clear();
        ListItem lik;
        lik = new ListItem();
        lik.Text = "Client";
        lik.Value = "client";
        drpbillto.Items.Add(lik);
        for (int k = 0; k < dbt.Tables[0].Rows.Count; k++)
        {
            ListItem lio;
            lio = new ListItem();
            lio.Text = dbt.Tables[0].Rows[k].ItemArray[1].ToString();
            lio.Value = dbt.Tables[0].Rows[k].ItemArray[0].ToString();
            //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
            drpbillto.Items.Add(lio);
        }
        hiddenbillto.Value = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
        if (drpbillto.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString()) != null)
        {
            drpbillto.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
        }
        txtinvoice.Text = executequery.Tables[0].Rows[fpnl].ItemArray[65].ToString();
        txtvts.Text = executequery.Tables[0].Rows[fpnl].ItemArray[66].ToString();
        txtbilladdress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[67].ToString();
        txttradedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[68].ToString();
        txtagencyoutstand.Text = executequery.Tables[0].Rows[fpnl].ItemArray[69].ToString();
        txtcamp.Text = executequery.Tables[0].Rows[fpnl].ItemArray[71].ToString();
        drppageprem.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[72].ToString();
        txtpageamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[73].ToString();
        txtpremper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[74].ToString();
        txtgrossamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();

        hiddenprevamt.Value = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();

        txtbillamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[76].ToString();
        drpboxcode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[77].ToString();
        txtboxno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[78].ToString();
        if (executequery.Tables[0].Rows[fpnl].ItemArray[79].ToString() == "1")
        {
            chkage.Checked = true;
        }
        else
        {
            chkage.Checked = false;
        }
        if (executequery.Tables[0].Rows[fpnl].ItemArray[80].ToString() == "1")
        {
            chkclie.Checked = true;
        }
        else
        {
            chkclie.Checked = false;
        }
        txtboxaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[81].ToString();
        if (executequery.Tables[0].Rows[fpnl].ItemArray[82].ToString() == "1")
        {
            chktfn.Checked = true;
        }
        else
        {
            chktfn.Checked = false;
        }
        if (executequery.Tables[0].Rows[fpnl].ItemArray[83].ToString() == "1")
        {
            chkcoupan.Checked = true;
        }
        else
        {
            chkcoupan.Checked = false;
        }
        txtcolum.Text = executequery.Tables[0].Rows[fpnl].ItemArray[84].ToString();
        //txtbillcolumn.Text = executequery.Tables[0].Rows[fpnl].ItemArray[85].ToString();
        //txtbillarea.Text = "" = executequery.Tables[0].Rows[fpnl].ItemArray[86].ToString();
        txtspediscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[87].ToString();
        txtspadiscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[88].ToString();
        txtpaid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[92].ToString();
        txtdealrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[93].ToString();
        txtdeviation.Text = executequery.Tables[0].Rows[fpnl].ItemArray[94].ToString();
        if (executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString() == "")
        {
            drpvarient.Items.Clear();
        }
        hiddenvar.Value = drpvarient.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString();
        txtcontractname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[96].ToString();
        txtcontracttype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[97].ToString();
        txtcardname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[98].ToString();
        drptype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[99].ToString();
        drpmonth.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[100].ToString();
        drpyear.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[101].ToString();
        txtcardno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[102].ToString();
        hiddenreceiptno.Value = txtreceipt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[103].ToString();

        ////this is to bind the adscat3 drpdown

        if (executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString() == "")
        {
            drpadcat3.Items.Clear();
            hiddenadscat3.Value = "";
        }
        else
        {
            DataSet dacat = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
                dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                }
            ////////////////////////////////////////////////////////////////
            drpadcat3.Items.Clear();
            ListItem lika;
            lika = new ListItem();
            lika.Text = "Select";
            lika.Value = "0";
            drpadcat3.Items.Add(lika);
            for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
            {
                ListItem lio;
                lio = new ListItem();
                lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpadcat3.Items.Add(lio);
            }

        }

        if (drpadcat3.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString()) != null)
        {
            hiddenadscat3.Value = drpadcat3.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString();
        }
        else
        {
            hiddenadscat3.Value = drpadcat3.SelectedValue = "0";
        }
        ////////////////////this is to bind the adcat4 drp down
        if (executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString() == "")
        {
            drpadcat4.Items.Clear();
            hiddenadscat4.Value = "";
        }
        else
        {
            ////////////when 1 than bind the adscat4 drp down
            DataSet dacat = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
                dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                }
            ////////////////////////////////////////////////////////////////
            drpadcat4.Items.Clear();
            ListItem liks;
            liks = new ListItem();
            liks.Text = "Select";
            liks.Value = "0";
            drpadcat4.Items.Add(liks);
            for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
            {
                ListItem lio;
                lio = new ListItem();
                lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpadcat4.Items.Add(lio);
            }

        }

        if (drpadcat4.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString()) != null)
        {
            hiddenadscat4.Value = drpadcat4.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString();
        }
        else
        {
            hiddenadscat4.Value = drpadcat4.SelectedValue = "0";
        }

        ///bind adcat5 drpdown
        if (executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString() == "")
        {
            drpadcat5.Items.Clear();
            hiddenadscat5.Value = "";
        }
        else
        {
            ////////////when 1 than bind the adscat4 drp down
            DataSet dacat = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
                //////if 2 than bind adcat2 drop down 
                dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                    //////if 2 than bind adcat2 drop down 
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");

                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                    //////if 2 than bind adcat2 drop down 
                    dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
                }
            ////////////////////////////////////////////////////////////////
            drpadcat5.Items.Clear();
            ListItem liks;
            liks = new ListItem();
            liks.Text = "Select";
            liks.Value = "0";
            drpadcat5.Items.Add(liks);
            for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
            {
                ListItem lio;
                lio = new ListItem();
                lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                drpadcat5.Items.Add(lio);
            }
        }

        if (drpadcat5.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString()) != null)
        {
            hiddenadscat5.Value = drpadcat5.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString();
        }
        else
        {
            hiddenadscat5.Value = drpadcat5.SelectedValue = "0";
        }

        drpmatsta.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[120].ToString();

        drpretainer.Text = executequery.Tables[0].Rows[0].ItemArray[134].ToString();
        txtaddagencycommrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[136].ToString();

        ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "ca", "showcardinfo('" + executequery.Tables[0].Rows[0].ItemArray[61].ToString() + "')", true);
        ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "cc", "showgridexecute()", true);
        updateStatus();

        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        */
    }
    protected void btnprevious_Click(object sender, EventArgs e)
    {
        /* ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz", "document.getElementById('tblinsert').innerHTML=''", true);
         LinkButton1.Enabled = true;
         LinkButton2.Enabled = true;
         LinkButton3.Enabled = true;
         LinkButton4.Enabled = true;
         LinkButton5.Enabled = true;
         LinkButton6.Enabled = true;
         LinkButton7.Enabled = true;
        
         int count = executequery.Tables[0].Rows.Count-1;

         dateinsert getdatechk = new dateinsert();

         fpnl--;

         if (fpnl != -1)
         {
             if (fpnl >= 0 || fpnl <= count)
             {
               
                 txtbranch.Text = executequery.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                 txtbookedby.Text = executequery.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                 txtprevbook.Text = executequery.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                 string datetime = executequery.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                 txtdatetime.Text = getdatechk.getDatedisp(dateformat, datetime);
                 txtciobookid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                 txtrono.Text = executequery.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                 string ro_date = executequery.Tables[0].Rows[fpnl].ItemArray[8].ToString();
                 txtrodate.Text = getdatechk.getDatedisp(dateformat, ro_date);
                 txtcaption.Text = executequery.Tables[0].Rows[fpnl].ItemArray[9].ToString();
                 drpbillstatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[10].ToString();
                 drprostatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[11].ToString();
                 txtagency.Text = executequery.Tables[0].Rows[fpnl].ItemArray[89].ToString();
               
                 ///////////////this is to bind the subagency drop down
                 DataSet dsbsa = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster bindsubage = new NewAdbooking.Classes.BookingMaster();
                     dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster bindsubage = new NewAdbooking.classesoracle.BookingMaster();
                     dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster bindsubage = new NewAdbooking.classmysql.BookingMaster();
                     dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }
                

                 drpagscode.Items.Clear();
                 int p;
                 ListItem li11;
                 li11 = new ListItem();
                 li11.Text = "Select Package";
                 li11.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();

                 drpagscode.Items.Add(li11);

                 if (dsbsa.Tables[0].Rows.Count > 0)
                 {
                     for (p = 0; p < dsbsa.Tables[0].Rows.Count; p++)
                     {
                         ListItem li12;
                         li12 = new ListItem();
                         li12.Text = dsbsa.Tables[0].Rows[p].ItemArray[1].ToString();
                         li12.Value = dsbsa.Tables[0].Rows[p].ItemArray[0].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpagscode.Items.Add(li12);
                     }

                 }


                 //////////////////////////////////////////////////////

                 txtclient.Text = executequery.Tables[0].Rows[fpnl].ItemArray[14].ToString();
                 txtagencyaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[13].ToString();
                 txtclientadd.Text = executequery.Tables[0].Rows[fpnl].ItemArray[15].ToString();
                 if (drpagscode.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString()) != null)
                 {
                     hiddensubcode.Value = drpagscode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString();
                 }
                 txtdockitno1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[17].ToString();
                 txtexecname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[90].ToString();
                 hiddenzone.Value = txtexeczone.Text = executequery.Tables[0].Rows[fpnl].ItemArray[19].ToString();
                 txtproduct.Text = executequery.Tables[0].Rows[fpnl].ItemArray[91].ToString();
                
                 DataSet dsbrand = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster brandbind = new NewAdbooking.Classes.BookingMaster();
                     dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster brandbind = new NewAdbooking.classesoracle.BookingMaster();
                     dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster brandbind = new NewAdbooking.classmysql.BookingMaster();
                     dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                 }
                

                 drpbrand.Items.Clear();
                 int x;

                 ListItem li112;
                 li112 = new ListItem();
                 li112.Text = "Select brand";
                 li112.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                 drpbrand.Items.Add(li112);

                 if (dsbrand.Tables[0].Rows.Count > 0)
                 {
                     for (x = 0; x < dsbrand.Tables[0].Rows.Count; x++)
                     {
                         ListItem li3;
                         li3 = new ListItem();
                         li3.Text = dsbrand.Tables[0].Rows[x].ItemArray[1].ToString();
                         li3.Value = dsbrand.Tables[0].Rows[x].ItemArray[0].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpbrand.Items.Add(li3);
                     }

                 }
                 //hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString() == "")
                 {
                     drpbrand.Items.Clear();
                     hiddenbrand.Value = "";
                 }
                 else
                 {
                     hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
                 }
                 ////////////////////this is to bind the varient dropdown

                 DataSet dva = new DataSet();

                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster getvarient = new NewAdbooking.Classes.BookingMaster();
                     dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster getvarient = new NewAdbooking.classesoracle.BookingMaster();
                     dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster getvarient = new NewAdbooking.classmysql.BookingMaster();
                     dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                 }

                 drpvarient.Items.Clear();
                 int x1;

                 ListItem li1121;
                 li1121 = new ListItem();
                 li1121.Text = "Select brand";
                 li1121.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                 drpvarient.Items.Add(li1121);

                 if (dva.Tables[0].Rows.Count > 0)
                 {
                     for (x1 = 0; x1 < dva.Tables[0].Rows.Count; x1++)
                     {
                         ListItem li31;
                         li31 = new ListItem();
                         li31.Text = dva.Tables[0].Rows[x1].ItemArray[1].ToString();
                         li31.Value = dva.Tables[0].Rows[x1].ItemArray[0].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpvarient.Items.Add(li31);
                     }

                 }

                 ////////////////////////////////////////////////////////////////////////////////
                 txtkeyno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[22].ToString();
                 txtbillremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[23].ToString();
                 txtprintremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[24].ToString();
                 string listpck = executequery.Tables[0].Rows[fpnl].ItemArray[25].ToString();
                 hiddenpackage.Value = listpck;
                 //////////////////this is to bind the package grid on what the value is saved in the database


                 //ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "c1", "bindgridpkg('" + listpck + "')", true);
                 DataSet dsexecut = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster bindpacforexe = new NewAdbooking.Classes.BookingMaster();
                     dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
                     dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster bindpacforexe = new NewAdbooking.classmysql.BookingMaster();
                     dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                 }
                


                 int i;

                 drppackagecopy.Items.Clear();
                 for (i = 0; i <= dsexecut.Tables[0].Rows.Count - 1; i++)
                 {
                     if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "")
                     {
                         if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "0")
                         {

                             ListItem li;
                             li = new ListItem();
                             li.Text = dsexecut.Tables[0].Rows[i].ItemArray[1].ToString();
                             li.Value = dsexecut.Tables[0].Rows[i].ItemArray[2].ToString();
                             //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                             drppackagecopy.Items.Add(li);

                         }
                     }
                 }


                 txtinsertion.Text = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
                 hiddeninsertion.Value = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
                 string start_date = executequery.Tables[0].Rows[fpnl].ItemArray[27].ToString();
                 txtdummydate.Text = getdatechk.getDatedisp(dateformat, start_date);
                 txtrepeatingdate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[28].ToString();
                 if (drpbooktype.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[70].ToString()) != null)
                 {
                     drpbooktype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[70].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString()) != null)
                 {
                     drpadcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString();
                 }
                 if (drpadsubcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString()) != null)
                 {
                     drpadsubcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString();
                 }
                 if (drpcolor.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[32].ToString()) != null)
                 {
                     drpcolor.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[32].ToString();
                 }
                 if (drpuom.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[33].ToString()) != null)
                 {
                     drpuom.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[33].ToString();
                 }
                 drppageposition.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[34].ToString();
                 if (drppagetype.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[35].ToString()) != null)
                 {
                     drppagetype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[35].ToString();
                 }
                 txtpageno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[36].ToString();
                 //string adtype=drpadstype.SelectedValue;
                 txtadsize1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[38].ToString();
                 txtadsize2.Text = executequery.Tables[0].Rows[fpnl].ItemArray[39].ToString();

                 ////this is to bind the ratecode drpdown
                 DataSet dx = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
                     dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
                     dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
                     dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                 }
                

                 txtratecode.Items.Clear();
                 int ii;
                 ListItem li1;
                 li1 = new ListItem();
                 li1.Text = "-Select Rate Code-";
                 li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                 li1.Selected = true;
                 txtratecode.Items.Add(li1);

                 if (dx.Tables[0].Rows.Count > 0)
                 {
                     for (ii = 0; ii < dx.Tables[0].Rows.Count; ii++)
                     {
                         ListItem li;
                         li = new ListItem();
                         li.Text = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                         li.Value = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         txtratecode.Items.Add(li);
                     }

                 }
                 if (txtratecode.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString()) != null)
                 {
                     txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
                 }
                 hiddenratecode.Value = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();

                 //txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
                 drpscheme.Text = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
                 hiddenscheme.Value = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
             //    drpschemepck.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
                 drpcurrency.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[42].ToString();
                 txtagreedrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[43].ToString();
                 txtagreedamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[44].ToString();
                 txtspedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[45].ToString();
                 txtspacedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[46].ToString();
                 drpadstype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[37].ToString();
                 txtextracharges.Text = executequery.Tables[0].Rows[fpnl].ItemArray[47].ToString();
                 hiddenstatus.Value = txtagencystatus.Text = executequery.Tables[0].Rows[fpnl].ItemArray[50].ToString();
                 txtagencytype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[51].ToString();

                 DataSet dch = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster getsta = new NewAdbooking.Classes.BookingMaster();
                     dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster getsta = new NewAdbooking.classesoracle.BookingMaster();
                     dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text,Session["dateformat"].ToString(), "DI0");
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster getsta = new NewAdbooking.classmysql.BookingMaster();
                     dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
                 }
                
                 ////this is to bind the bill pay mode
                 txtagencypaymode.Items.Clear();
                 if (dch.Tables[5].Rows.Count > 0)
                 {
                     for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
                     {
                         ListItem li;
                         li = new ListItem();
                         li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                         li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                         txtagencypaymode.Items.Add(li);
                     }

                 }
                 if (txtagencypaymode.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[52].ToString()) != null)
                 {
                     hiddenpay.Value = txtagencypaymode.Text = executequery.Tables[0].Rows[fpnl].ItemArray[52].ToString();
                 }
                 txtcreditperiod.Text = executequery.Tables[0].Rows[fpnl].ItemArray[53].ToString();
                 txttotalarea.Text = executequery.Tables[0].Rows[fpnl].ItemArray[54].ToString();
                 txtcardrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[55].ToString();
                 txtcardamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[56].ToString();
                 txtdiscount.Text = executequery.Tables[0].Rows[fpnl].ItemArray[57].ToString();
                 txtdiscpre.Text = executequery.Tables[0].Rows[fpnl].ItemArray[58].ToString();
                 drpbillcycle.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[59].ToString();
                 drprevenue.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[60].ToString();

                 ////this is to bind the bill pay mode
                 txtagencypaymode.Items.Clear();
                 if (dch.Tables[5].Rows.Count > 0)
                 {
                     for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
                     {
                         ListItem li;
                         li = new ListItem();
                         li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                         li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                         txtagencypaymode.Items.Add(li);
                     }

                 }
                 if (drppaymenttype.Items.FindByValue( executequery.Tables[0].Rows[fpnl].ItemArray[61].ToString()) != null)
                 {
                     hiddenbillpay.Value = drppaymenttype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[61].ToString();
                 }
                 txtbillheight.Text = executequery.Tables[0].Rows[fpnl].ItemArray[62].ToString();
                 txtbillwidth.Text = executequery.Tables[0].Rows[fpnl].ItemArray[63].ToString();

                 //////////////this is to bind the bill to 
                 DataSet dbt = new DataSet();

                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster getbillto = new NewAdbooking.Classes.BookingMaster();
                     dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster getbillto = new NewAdbooking.classesoracle.BookingMaster();
                     dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster getbillto = new NewAdbooking.classmysql.BookingMaster();
                     dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }
                
                 ////////////////////////////////////////////////////
                 drpbillto.Items.Clear();
                 ListItem lik;
                 lik = new ListItem();
                 lik.Text = "Client";
                 lik.Value = "client";
                 drpbillto.Items.Add(lik);
                 for (int k = 0; k < dbt.Tables[0].Rows.Count; k++)
                 {
                     ListItem lio;
                     lio = new ListItem();
                     lio.Text = dbt.Tables[0].Rows[k].ItemArray[1].ToString();
                     lio.Value = dbt.Tables[0].Rows[k].ItemArray[0].ToString();
                     //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                     drpbillto.Items.Add(lio);
                 }
                 hiddenbillto.Value = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
                 if (drpbillto.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString()) != null)
                 {
                     drpbillto.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
                 }
                 txtinvoice.Text = executequery.Tables[0].Rows[fpnl].ItemArray[65].ToString();
                 txtvts.Text = executequery.Tables[0].Rows[fpnl].ItemArray[66].ToString();
                 txtbilladdress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[67].ToString();
                 txttradedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[68].ToString();
                 txtagencyoutstand.Text = executequery.Tables[0].Rows[fpnl].ItemArray[69].ToString();
                 txtcamp.Text = executequery.Tables[0].Rows[fpnl].ItemArray[71].ToString();
                 drppageprem.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[72].ToString();
                 txtpageamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[73].ToString();
                 txtpremper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[74].ToString();
                 txtgrossamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();

                 hiddenprevamt.Value = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();


                 txtbillamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[76].ToString();
                 drpboxcode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[77].ToString();
                 txtboxno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[78].ToString();
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[79].ToString() == "1")
                 {
                     chkage.Checked = true;
                 }
                 else
                 {
                     chkage.Checked = false;
                 }
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[80].ToString() == "1")
                 {
                     chkclie.Checked = true;
                 }
                 else
                 {
                     chkclie.Checked = false;
                 }
                 txtboxaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[81].ToString();
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[82].ToString() == "1")
                 {
                     chktfn.Checked = true;
                 }
                 else
                 {
                     chktfn.Checked = false;
                 }
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[83].ToString() == "1")
                 {
                     chkcoupan.Checked = true;
                 }
                 else
                 {
                     chkcoupan.Checked = false;
                 }
                 txtcolum.Text = executequery.Tables[0].Rows[fpnl].ItemArray[84].ToString();
                
                 txtspediscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[87].ToString();
                 txtspadiscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[88].ToString();
                 txtpaid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[92].ToString();
                 txtdealrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[93].ToString();
                 txtdeviation.Text = executequery.Tables[0].Rows[fpnl].ItemArray[94].ToString();
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString() == "")
                 {
                     drpvarient.Items.Clear();
                 }
                 hiddenvar.Value = drpvarient.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString();
                 txtcontractname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[96].ToString();
                 txtcontracttype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[97].ToString();
                 txtcardname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[98].ToString();
                 drptype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[99].ToString();
                 drpmonth.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[100].ToString();
                 drpyear.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[101].ToString();
                 txtcardno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[102].ToString();
                 hiddenreceiptno.Value = txtreceipt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[103].ToString();

                 ////this is to bind the adscat3 drpdown

                 if (executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString() == "")
                 {
                     drpadcat3.Items.Clear();
                     hiddenadscat3.Value = "";
                 }
                 else
                 {
                     DataSet dacat = new DataSet();
                     if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                     {
                         NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
                         dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                     }
                     else
                         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                         {
                             NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                         }
                         else
                         {
                             NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                         }
                     ////////////////////////////////////////////////////////////////
                     drpadcat3.Items.Clear();
                     ListItem lika;
                     lika = new ListItem();
                     lika.Text = "Select";
                     lika.Value = "0";
                     drpadcat3.Items.Add(lika);
                     for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                     {
                         ListItem lio;
                         lio = new ListItem();
                         lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                         lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpadcat3.Items.Add(lio);
                     }

                 }

                 if (drpadcat3.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString()) != null)
                 {
                     hiddenadscat3.Value = drpadcat3.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString();
                 }
                 else
                 {
                     hiddenadscat3.Value = drpadcat3.SelectedValue = "0";
                 }
                 ////////////////////this is to bind the adcat4 drp down
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString() == "")
                 {
                     drpadcat4.Items.Clear();
                     hiddenadscat4.Value = "";

                 }
                 else
                 {
                     ////////////when 1 than bind the adscat4 drp down
                     DataSet dacat = new DataSet();

                     if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                     {
                         NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
                         dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                     }

                     else
                         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                         {
                             NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                         }
                         else
                         {
                             NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                         }
                     ////////////////////////////////////////////////////////////////
                     drpadcat4.Items.Clear();
                     ListItem liks;
                     liks = new ListItem();
                     liks.Text = "Select";
                     liks.Value = "0";
                     drpadcat4.Items.Add(liks);
                     for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                     {
                         ListItem lio;
                         lio = new ListItem();
                         lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                         lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpadcat4.Items.Add(lio);
                     }

                 }

                 if (drpadcat4.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString()) != null)
                 {
                     hiddenadscat4.Value = drpadcat4.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString();
                 }
                 else
                 {
                     hiddenadscat4.Value = drpadcat4.SelectedValue = "0";
                 }

                 ///bind adcat5 drpdown
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString() == "")
                 {
                     drpadcat5.Items.Clear();
                     hiddenadscat5.Value = "";
                 }
                 else
                 {
                     ////////////when 1 than bind the adscat4 drp down
                     DataSet dacat = new DataSet();
                     if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                     {
                         NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();

                         //////if 2 than bind adcat2 drop down 
                         dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
                     }

                     else
                         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                         {
                             NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

                             //////if 2 than bind adcat2 drop down 
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");

                         }
                         else
                         {
                             NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();

                             //////if 2 than bind adcat2 drop down 
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
                         }
                     ////////////////////////////////////////////////////////////////
                     drpadcat5.Items.Clear();
                     ListItem liks;
                     liks = new ListItem();
                     liks.Text = "Select";
                     liks.Value = "0";
                     drpadcat5.Items.Add(liks);
                     for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                     {
                         ListItem lio;
                         lio = new ListItem();
                         lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                         lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpadcat5.Items.Add(lio);
                     }
                 }

                 if (drpadcat5.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString()) != null)
                 {
                     hiddenadscat5.Value = drpadcat5.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString();
                 }
                 else
                 {
                     hiddenadscat5.Value = drpadcat5.SelectedValue = "0";
                 }

                 drpmatsta.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[120].ToString();

                 //*6Aug* drpretainer.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[134].ToString();
                 drpretainer.Text = executequery.Tables[0].Rows[0].ItemArray[134].ToString();

                 txtaddagencycommrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[136].ToString();
                 ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "ca", "showcardinfo('" + executequery.Tables[0].Rows[0].ItemArray[61].ToString() + "')", true);
                 ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "cc", "showgridexecute()", true);
                 updateStatus();
                 btnfirst.Enabled = true;
                 btnlast.Enabled = true;
                 btnprevious.Enabled = true;
                 btnnext.Enabled = true;
             }
             else
             {
                 btnnext.Enabled = true;
                 btnlast.Enabled = true;
                 btnfirst.Enabled = false;
                 btnprevious.Enabled = false;


             }
         }
         else
         {
             btnnext.Enabled = true;
             btnlast.Enabled = true;
             btnfirst.Enabled = false;
             btnprevious.Enabled = false;
         }
         if (fpnl == 0)
         {
             btnfirst.Enabled = false;
             btnprevious.Enabled = false;
         }  */
    }
    protected void btnnext_Click(object sender, EventArgs e)
    {
        /* ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz", "document.getElementById('tblinsert').innerHTML=''", true);
         LinkButton1.Enabled = true;
         LinkButton2.Enabled = true;
         LinkButton3.Enabled = true;
         LinkButton4.Enabled = true;
         LinkButton5.Enabled = true;
         LinkButton6.Enabled = true;
         LinkButton7.Enabled = true;

        
          int count = executequery.Tables[0].Rows.Count - 1;
          dateinsert getdatechk = new dateinsert();
         fpnl++;

         if (fpnl != -1 && fpnl >= 0)
         {
             if (fpnl <= count)
             {
                 txtbranch.Text = executequery.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                 txtbookedby.Text = executequery.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                 txtprevbook.Text = executequery.Tables[0].Rows[fpnl].ItemArray[4].ToString();
                 string datetime = executequery.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                 txtdatetime.Text = getdatechk.getDatedisp(dateformat, datetime);
                 txtciobookid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                 //txtappby.Text = executequery.Tables[0].Rows[fpnl].ItemArray[5].ToString();
                 // txtaudit.Text = executequery.Tables[0].Rows[fpnl].ItemArray[6].ToString();
                 txtrono.Text = executequery.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                 string ro_date = executequery.Tables[0].Rows[fpnl].ItemArray[8].ToString();
                 txtrodate.Text = getdatechk.getDatedisp(dateformat, ro_date);
                 txtcaption.Text = executequery.Tables[0].Rows[fpnl].ItemArray[9].ToString();
                 drpbillstatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[10].ToString();
                 drprostatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[11].ToString();
                 txtagency.Text = executequery.Tables[0].Rows[fpnl].ItemArray[89].ToString();
                 //drpagency_SelectedIndexChanged(sender, e);

                 ///////////////this is to bind the subagency drop down
                 DataSet dsbsa = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster bindsubage = new NewAdbooking.Classes.BookingMaster();
                     dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster bindsubage = new NewAdbooking.classesoracle.BookingMaster();
                     dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster bindsubage = new NewAdbooking.classmysql.BookingMaster();
                     dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }
                

                 drpagscode.Items.Clear();
                 int p;
                 ListItem li11;
                 li11 = new ListItem();
                 li11.Text = "Select Package";
                 li11.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();

                 drpagscode.Items.Add(li11);

                 if (dsbsa.Tables[0].Rows.Count > 0)
                 {
                     for (p = 0; p < dsbsa.Tables[0].Rows.Count; p++)
                     {
                         ListItem li12;
                         li12 = new ListItem();
                         li12.Text = dsbsa.Tables[0].Rows[p].ItemArray[1].ToString();
                         li12.Value = dsbsa.Tables[0].Rows[p].ItemArray[0].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpagscode.Items.Add(li12);
                     }

                 }


                 //////////////////////////////////////////////////////

                 txtclient.Text = executequery.Tables[0].Rows[fpnl].ItemArray[14].ToString();
                 txtagencyaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[13].ToString();
                 txtclientadd.Text = executequery.Tables[0].Rows[fpnl].ItemArray[15].ToString();
                 if (drpagscode.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString()) != null)
                 {
                     hiddensubcode.Value = drpagscode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString();
                 }
                 txtdockitno1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[17].ToString();
                 txtexecname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[90].ToString();
                 hiddenzone.Value = txtexeczone.Text = executequery.Tables[0].Rows[fpnl].ItemArray[19].ToString();
                 txtproduct.Text = executequery.Tables[0].Rows[fpnl].ItemArray[91].ToString();
                 //drpproduct_SelectedIndexChanged1(sender, e);
                 //drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
                 /////////////////////////////////////////////this is to bind the brand drop down
                 DataSet dsbrand = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster brandbind = new NewAdbooking.Classes.BookingMaster();
                     dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster brandbind = new NewAdbooking.classesoracle.BookingMaster();
                     dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster brandbind = new NewAdbooking.classmysql.BookingMaster();
                     dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
                 }
                

                 drpbrand.Items.Clear();
                 int x;

                 ListItem li112;
                 li112 = new ListItem();
                 li112.Text = "Select brand";
                 li112.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                 drpbrand.Items.Add(li112);

                 if (dsbrand.Tables[0].Rows.Count > 0)
                 {
                     for (x = 0; x < dsbrand.Tables[0].Rows.Count; x++)
                     {
                         ListItem li3;
                         li3 = new ListItem();
                         li3.Text = dsbrand.Tables[0].Rows[x].ItemArray[1].ToString();
                         li3.Value = dsbrand.Tables[0].Rows[x].ItemArray[0].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpbrand.Items.Add(li3);
                     }

                 }
                 //hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString() == "")
                 {
                     drpbrand.Items.Clear();
                     hiddenbrand.Value = "";
                 }
                 else
                 {
                     hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
                 }
                 ////////////////////this is to bind the varient dropdown

                 DataSet dva = new DataSet();

                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster getvarient = new NewAdbooking.Classes.BookingMaster();
                     dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster getvarient = new NewAdbooking.classesoracle.BookingMaster();
                     dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster getvarient = new NewAdbooking.classmysql.BookingMaster();
                     dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
                 }

                 drpvarient.Items.Clear();
                 int x1;

                 ListItem li1121;
                 li1121 = new ListItem();
                 li1121.Text = "Select brand";
                 li1121.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                 drpvarient.Items.Add(li1121);

                 if (dva.Tables[0].Rows.Count > 0)
                 {
                     for (x1 = 0; x1 < dva.Tables[0].Rows.Count; x1++)
                     {
                         ListItem li31;
                         li31 = new ListItem();
                         li31.Text = dva.Tables[0].Rows[x1].ItemArray[1].ToString();
                         li31.Value = dva.Tables[0].Rows[x1].ItemArray[0].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpvarient.Items.Add(li31);
                     }

                 }

                 ////////////////////////////////////////////////////////////////////////////////
                 txtkeyno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[22].ToString();
                 txtbillremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[23].ToString();
                 txtprintremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[24].ToString();
                 string listpck = executequery.Tables[0].Rows[fpnl].ItemArray[25].ToString();
                 hiddenpackage.Value = listpck;
                 //////////////////this is to bind the package grid on what the value is saved in the database


                 //ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "c1", "bindgridpkg('" + listpck + "')", true);
                 DataSet dsexecut = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster bindpacforexe = new NewAdbooking.Classes.BookingMaster();
                     dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
                     dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster bindpacforexe = new NewAdbooking.classmysql.BookingMaster();
                     dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
                 }
                

                 int i;

                 drppackagecopy.Items.Clear();
                 for (i = 0; i <= dsexecut.Tables[0].Rows.Count - 1; i++)
                 {
                     if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "")
                     {
                         if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "0")
                         {

                             ListItem li;
                             li = new ListItem();
                             li.Text = dsexecut.Tables[0].Rows[i].ItemArray[1].ToString();
                             li.Value = dsexecut.Tables[0].Rows[i].ItemArray[2].ToString();
                             //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                             drppackagecopy.Items.Add(li);

                         }
                     }
                 }





                 txtinsertion.Text = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
                 hiddeninsertion.Value = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
                 string start_date = executequery.Tables[0].Rows[fpnl].ItemArray[27].ToString();
                 txtdummydate.Text = getdatechk.getDatedisp(dateformat, start_date);
                 txtrepeatingdate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[28].ToString();
                 if (drpbooktype.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[70].ToString()) != null)
                 {
                  drpbooktype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[70].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString()) != null)
                 {
                     drpadcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString()) != null)
                 {
                     drpadsubcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[32].ToString()) != null)
                 {
                     drpcolor.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[32].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[33].ToString()) != null)
                 {
                     drpuom.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[33].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[34].ToString()) != null)
                 {
                     drppageposition.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[34].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[35].ToString()) != null)
                 {
                     drppagetype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[35].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[36].ToString()) != null)
                 {
                     txtpageno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[36].ToString();
                 }
                 //string adtype=drpadstype.SelectedValue;
                 txtadsize1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[38].ToString();
                 txtadsize2.Text = executequery.Tables[0].Rows[fpnl].ItemArray[39].ToString();

                 ////this is to bind the ratecode drpdown
                 DataSet dx = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
                     dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
                     dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
                     dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
                 }

                 txtratecode.Items.Clear();
                 int ii;
                 ListItem li1;
                 li1 = new ListItem();
                 li1.Text = "-Select Rate Code-";
                 li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                 li1.Selected = true;
                 txtratecode.Items.Add(li1);

                 if (dx.Tables[0].Rows.Count > 0)
                 {
                     for (ii = 0; ii < dx.Tables[0].Rows.Count; ii++)
                     {
                         ListItem li;
                         li = new ListItem();
                         li.Text = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                         li.Value = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         txtratecode.Items.Add(li);
                     }

                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString()) != null)
                 {
                     txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString()) != null)
                 {
                     hiddenratecode.Value = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
                 }
                 //txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString()) != null)
                 {
                     drpscheme.Text = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString()) != null)
                 {
                     hiddenscheme.Value = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
                 }
                      //  drpschemepck.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[42].ToString()) != null)
                 {
                     drpcurrency.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[42].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[43].ToString()) != null)
                 {
                     txtagreedrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[43].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[44].ToString()) != null)
                 {
                     txtagreedamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[44].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[45].ToString()) != null)
                 {
                     txtspedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[45].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[46].ToString()) != null)
                 {
                     txtspacedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[46].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[37].ToString()) != null)
                 {
                     drpadstype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[37].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[47].ToString()) != null)
                 {
                     txtextracharges.Text = executequery.Tables[0].Rows[fpnl].ItemArray[47].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[50].ToString()) != null)
                 {
                     hiddenstatus.Value = txtagencystatus.Text = executequery.Tables[0].Rows[fpnl].ItemArray[50].ToString();
                 }
                 if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[51].ToString()) != null)
                 {
                     txtagencytype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[51].ToString();
                 }

                 DataSet dch = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster getsta = new NewAdbooking.Classes.BookingMaster();
                     dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster getsta = new NewAdbooking.classesoracle.BookingMaster();
                     dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text, Session["dateformat"].ToString(), "DI0");
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster getsta = new NewAdbooking.classmysql.BookingMaster();
                     dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
                 }
                 ////this is to bind the bill pay mode
                 txtagencypaymode.Items.Clear();
                 if (dch.Tables[5].Rows.Count > 0)
                 {
                     for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
                     {
                         ListItem li;
                         li = new ListItem();
                         li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                         li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                         txtagencypaymode.Items.Add(li);
                     }

                 }
                 if (txtagencypaymode.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[52].ToString()) != null)
                 {
                     hiddenpay.Value = txtagencypaymode.Text = executequery.Tables[0].Rows[fpnl].ItemArray[52].ToString();
                 }
                 txtcreditperiod.Text = executequery.Tables[0].Rows[fpnl].ItemArray[53].ToString();
                 txttotalarea.Text = executequery.Tables[0].Rows[fpnl].ItemArray[54].ToString();
                 txtcardrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[55].ToString();
                 txtcardamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[56].ToString();
                 txtdiscount.Text = executequery.Tables[0].Rows[fpnl].ItemArray[57].ToString();
                 txtdiscpre.Text = executequery.Tables[0].Rows[fpnl].ItemArray[58].ToString();
                 drpbillcycle.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[59].ToString();
                 drprevenue.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[60].ToString();

                 ////this is to bind the bill pay mode
                 drppaymenttype.Items.Clear();
                 if (dch.Tables[5].Rows.Count > 0)
                 {
                     for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
                     {
                         ListItem li;
                         li = new ListItem();
                         li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                         li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                         drppaymenttype.Items.Add(li);
                     }

                 }
                 if (drppaymenttype.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[61].ToString()) != null)
                 {
                     hiddenbillpay.Value = drppaymenttype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[61].ToString();
                 }
                 txtbillheight.Text = executequery.Tables[0].Rows[fpnl].ItemArray[62].ToString();
                 txtbillwidth.Text = executequery.Tables[0].Rows[fpnl].ItemArray[63].ToString();

                 //////////////this is to bind the bill to 
                 DataSet dbt = new DataSet();
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                 {
                     NewAdbooking.Classes.BookingMaster getbillto = new NewAdbooking.Classes.BookingMaster();
                     dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }

                 else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.BookingMaster getbillto = new NewAdbooking.classesoracle.BookingMaster();
                     dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }

                 else
                 {
                     NewAdbooking.classmysql.BookingMaster getbillto = new NewAdbooking.classmysql.BookingMaster();
                     dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
                 }
                
                 ////////////////////////////////////////////////////
                 drpbillto.Items.Clear();
                 ListItem lik;
                 lik = new ListItem();
                 lik.Text = "Client";
                 lik.Value = "client";
                 drpbillto.Items.Add(lik);
                 for (int k = 0; k < dbt.Tables[0].Rows.Count; k++)
                 {
                     ListItem lio;
                     lio = new ListItem();
                     lio.Text = dbt.Tables[0].Rows[k].ItemArray[1].ToString();
                     lio.Value = dbt.Tables[0].Rows[k].ItemArray[0].ToString();
                     //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                     drpbillto.Items.Add(lio);
                 }
                 hiddenbillto.Value = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
                 if (drpbillto.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString()) != null)
                 {
                     drpbillto.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
                 }
               
                 txtinvoice.Text = executequery.Tables[0].Rows[fpnl].ItemArray[65].ToString();
                 txtvts.Text = executequery.Tables[0].Rows[fpnl].ItemArray[66].ToString();
                 txtbilladdress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[67].ToString();
                 txttradedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[68].ToString();
                 txtagencyoutstand.Text = executequery.Tables[0].Rows[fpnl].ItemArray[69].ToString();
                 txtcamp.Text = executequery.Tables[0].Rows[fpnl].ItemArray[71].ToString();
                 drppageprem.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[72].ToString();
                 txtpageamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[73].ToString();
                 txtpremper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[74].ToString();
                 txtgrossamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();

                 hiddenprevamt.Value = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();


                 txtbillamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[76].ToString();
                 drpboxcode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[77].ToString();
                 txtboxno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[78].ToString();
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[79].ToString() == "1")
                 {
                     chkage.Checked = true;
                 }
                 else
                 {
                     chkage.Checked = false;
                 }
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[80].ToString() == "1")
                 {
                     chkclie.Checked = true;
                 }
                 else
                 {
                     chkclie.Checked = false;
                 }
                 txtboxaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[81].ToString();
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[82].ToString() == "1")
                 {
                     chktfn.Checked = true;
                 }
                 else
                 {
                     chktfn.Checked = false;
                 }
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[83].ToString() == "1")
                 {
                     chkcoupan.Checked = true;
                 }
                 else
                 {
                     chkcoupan.Checked = false;
                 }
                 txtcolum.Text = executequery.Tables[0].Rows[fpnl].ItemArray[84].ToString();
                 //txtbillcolumn.Text = executequery.Tables[0].Rows[fpnl].ItemArray[85].ToString();
                 //txtbillarea.Text = "" = executequery.Tables[0].Rows[fpnl].ItemArray[86].ToString();
                 txtspediscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[87].ToString();
                 txtspadiscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[88].ToString();
                 txtpaid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[92].ToString();
                 txtdealrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[93].ToString();
                 txtdeviation.Text = executequery.Tables[0].Rows[fpnl].ItemArray[94].ToString();
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString() == "")
                 {
                     drpvarient.Items.Clear();
                 }
                 hiddenvar.Value = drpvarient.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString();
                 txtcontractname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[96].ToString();
                 txtcontracttype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[97].ToString();
                 txtcardname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[98].ToString();
                 drptype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[99].ToString();
                 drpmonth.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[100].ToString();
                 drpyear.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[101].ToString();
                 txtcardno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[102].ToString();
                 hiddenreceiptno.Value = txtreceipt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[103].ToString();

                 ////this is to bind the adscat3 drpdown
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString() == "")
                 {
                     drpadcat3.Items.Clear();
                     hiddenadscat3.Value = "";

                 }
                 else
                 {
                     DataSet dacat = new DataSet();
                     if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                     {
                         NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();


                         dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                     }
                     else
                         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                         {
                             NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");

                         }
                         else
                         {
                             NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");

                         }
                     ////////////////////////////////////////////////////////////////
                     drpadcat3.Items.Clear();
                     ListItem lika;
                     lika = new ListItem();
                     lika.Text = "Select";
                     lika.Value = "0";
                     drpadcat3.Items.Add(lika);
                     for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                     {
                         ListItem lio;
                         lio = new ListItem();
                         lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                         lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpadcat3.Items.Add(lio);
                     }s

                 }

                 if (drpadcat3.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString()) != null)
                 {
                     hiddenadscat3.Value = drpadcat3.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString();
                 }
                 else
                 {
                     hiddenadscat3.Value = drpadcat3.SelectedValue = "0";
                 }
                 ////////////////////this is to bind the adcat4 drp down
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString() == "")
                 {
                     drpadcat4.Items.Clear();
                     hiddenadscat4.Value = "";
                 }
                 else
                 {
                     ////////////when 1 than bind the adscat4 drp down
                     DataSet dacat = new DataSet();

                     if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                     {
                         NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
                         dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                     }

                     else
                         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                         {
                             NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");

                         }
                         else
                         {
                             NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");s
                         }
                     ////////////////////////////////////////////////////////////////
                     drpadcat4.Items.Clear();
                     ListItem liks;
                     liks = new ListItem();
                     liks.Text = "Select";
                     liks.Value = "0";
                     drpadcat4.Items.Add(liks);
                     for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                     {
                         ListItem lio;
                         lio = new ListItem();
                         lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                         lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpadcat4.Items.Add(lio);
                     }

                 }

                 if (drpadcat4.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString()) != null)
                 {
                     hiddenadscat4.Value = drpadcat4.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString();
                 }
                 else
                 {
                     hiddenadscat4.Value = drpadcat4.SelectedValue = "0";
                 }

                 ///bind adcat5 drpdown
                 if (executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString() == "")
                 {
                     drpadcat5.Items.Clear();
                     hiddenadscat5.Value = "";
                 }
                 else
                 {
                     ////////////when 1 than bind the adscat4 drp down
                     DataSet dacat = new DataSet();
                     if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                     {
                         NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();

                         //////if 2 than bind adcat2 drop down 
                         dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
                     }

                     else
                         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                         {
                             NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

                             //////if 2 than bind adcat2 drop down 
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");

                         }
                         else
                         {
                             NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();

                             //////if 2 than bind adcat2 drop down 
                             dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
                         }
                     ////////////////////////////////////////////////////////////////
                     drpadcat5.Items.Clear();
                     ListItem liks;
                     liks = new ListItem();
                     liks.Text = "Select";
                     liks.Value = "0";
                     drpadcat5.Items.Add(liks);
                     for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
                     {
                         ListItem lio;
                         lio = new ListItem();
                         lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                         lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                         //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                         drpadcat5.Items.Add(lio);
                     }
                 }

                 if (drpadcat5.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString()) != null)
                 {
                     hiddenadscat5.Value = drpadcat5.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString();
                 }
                 else
                 {
                     hiddenadscat5.Value = drpadcat5.SelectedValue = "0";
                 }

                 drpmatsta.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[120].ToString();


                //*6Aug* drpretainer.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[134].ToString();
                 drpretainer.Text = executequery.Tables[0].Rows[0].ItemArray[134].ToString();

                 txtaddagencycommrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[136].ToString();
                 ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "ca", "showcardinfo('" + executequery.Tables[0].Rows[0].ItemArray[61].ToString() + "')", true);
                 ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "cc", "showgridexecute()", true);
                 updateStatus();
                 btnfirst.Enabled = true;
                 btnprevious.Enabled = true;
             }
             else
             {
                 btnnext.Enabled = false;
                 btnlast.Enabled = false;
                 btnfirst.Enabled = true;
                 btnprevious.Enabled = true;

             }
         }
         else
         {
             btnnext.Enabled = false;
             btnlast.Enabled = false;
             btnfirst.Enabled = true;
             btnprevious.Enabled = true;

         }*/
    }
    protected void btnlast_Click(object sender, EventArgs e)
    {
        /*  ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz", "document.getElementById('tblinsert').innerHTML=''", true);
          LinkButton1.Enabled = true;
          LinkButton2.Enabled = true;
          LinkButton3.Enabled = true;
          LinkButton4.Enabled = true;
          LinkButton5.Enabled = true;
          LinkButton6.Enabled = true;
          LinkButton7.Enabled = true;
        
          int count = executequery.Tables[0].Rows.Count - 1;
          fpnl = count;
          dateinsert getdatechk = new dateinsert();
          txtbranch.Text = executequery.Tables[0].Rows[fpnl].ItemArray[1].ToString();
          txtbookedby.Text = executequery.Tables[0].Rows[fpnl].ItemArray[2].ToString();
          txtprevbook.Text = executequery.Tables[0].Rows[fpnl].ItemArray[4].ToString();
          string datetime = executequery.Tables[0].Rows[fpnl].ItemArray[0].ToString();
          txtdatetime.Text = getdatechk.getDatedisp(dateformat, datetime);
          txtciobookid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[3].ToString();
          //txtappby.Text = executequery.Tables[0].Rows[fpnl].ItemArray[5].ToString();
          // txtaudit.Text = executequery.Tables[0].Rows[fpnl].ItemArray[6].ToString();
          txtrono.Text = executequery.Tables[0].Rows[fpnl].ItemArray[7].ToString();
          string ro_date = executequery.Tables[0].Rows[fpnl].ItemArray[8].ToString();
          txtrodate.Text = getdatechk.getDatedisp(dateformat, ro_date);
          txtcaption.Text = executequery.Tables[0].Rows[fpnl].ItemArray[9].ToString();
          drpbillstatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[10].ToString();
          drprostatus.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[11].ToString();
          txtagency.Text = executequery.Tables[0].Rows[fpnl].ItemArray[89].ToString();
          //drpagency_SelectedIndexChanged(sender, e);

          ///////////////this is to bind the subagency drop down
          DataSet dsbsa = new DataSet();
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {
              NewAdbooking.Classes.BookingMaster bindsubage = new NewAdbooking.Classes.BookingMaster();
              dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
          }

          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.BookingMaster bindsubage = new NewAdbooking.classesoracle.BookingMaster();
              dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
          }

          else
          {
              NewAdbooking.classmysql.BookingMaster bindsubage = new NewAdbooking.classmysql.BookingMaster();
              dsbsa = bindsubage.bindsubagency(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
          }
        

          drpagscode.Items.Clear();
          int p;
          ListItem li11;
          li11 = new ListItem();
          li11.Text = "Select Package";
          li11.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();

          drpagscode.Items.Add(li11);

          if (dsbsa.Tables[0].Rows.Count > 0)
          {
              for (p = 0; p < dsbsa.Tables[0].Rows.Count; p++)
              {
                  ListItem li12;
                  li12 = new ListItem();
                  li12.Text = dsbsa.Tables[0].Rows[p].ItemArray[1].ToString();
                  li12.Value = dsbsa.Tables[0].Rows[p].ItemArray[0].ToString();
                  //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                  drpagscode.Items.Add(li12);
              }

          }

          //////////////////////////////////////////////////////

          txtclient.Text = executequery.Tables[0].Rows[fpnl].ItemArray[14].ToString();
          txtagencyaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[13].ToString();
          txtclientadd.Text = executequery.Tables[0].Rows[fpnl].ItemArray[15].ToString();
          hiddensubcode.Value = drpagscode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString();
          txtdockitno1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[17].ToString();
          txtexecname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[90].ToString();
          hiddenzone.Value = txtexeczone.Text = executequery.Tables[0].Rows[fpnl].ItemArray[19].ToString();
          txtproduct.Text = executequery.Tables[0].Rows[fpnl].ItemArray[91].ToString();
          //drpproduct_SelectedIndexChanged1(sender, e);
          //drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
          /////////////////////////////////////////////this is to bind the brand drop down
          DataSet dsbrand = new DataSet();
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {
              NewAdbooking.Classes.BookingMaster brandbind = new NewAdbooking.Classes.BookingMaster();
              dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
          }

          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.BookingMaster brandbind = new NewAdbooking.classesoracle.BookingMaster();
              dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
          }

          else
          {
              NewAdbooking.classmysql.BookingMaster brandbind = new NewAdbooking.classmysql.BookingMaster();
              dsbrand = brandbind.bindBrand(Session["compcode"].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[20].ToString());
          }

          drpbrand.Items.Clear();
          int x;

          ListItem li112;
          li112 = new ListItem();
          li112.Text = "Select brand";
          li112.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
          drpbrand.Items.Add(li112);

          if (dsbrand.Tables[0].Rows.Count > 0)
          {
              for (x = 0; x < dsbrand.Tables[0].Rows.Count; x++)
              {
                  ListItem li3;
                  li3 = new ListItem();
                  li3.Text = dsbrand.Tables[0].Rows[x].ItemArray[1].ToString();
                  li3.Value = dsbrand.Tables[0].Rows[x].ItemArray[0].ToString();
                  //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                  drpbrand.Items.Add(li3);
              }

          }
          //hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
          if (executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString() == "")
          {
              drpbrand.Items.Clear();
              hiddenbrand.Value = "";
          }
          else
          {
              hiddenbrand.Value = drpbrand.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[21].ToString();
          }
          ////////////////////this is to bind the varient dropdown
          DataSet dva = new DataSet();
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {
              NewAdbooking.Classes.BookingMaster getvarient = new NewAdbooking.Classes.BookingMaster();
              dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
          }

          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.BookingMaster getvarient = new NewAdbooking.classesoracle.BookingMaster();
              dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
          }

          else
          {
              NewAdbooking.classmysql.BookingMaster getvarient = new NewAdbooking.classmysql.BookingMaster();
              dva = getvarient.bindvarient(hiddenbrand.Value, Session["compcode"].ToString());
          }
        

          drpvarient.Items.Clear();
          int x1;

          ListItem li1121;
          li1121 = new ListItem();
          li1121.Text = "Select brand";
          li1121.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
          drpvarient.Items.Add(li1121);

          if (dva.Tables[0].Rows.Count > 0)
          {
              for (x1 = 0; x1 < dva.Tables[0].Rows.Count; x1++)
              {
                  ListItem li31;
                  li31 = new ListItem();
                  li31.Text = dva.Tables[0].Rows[x1].ItemArray[1].ToString();
                  li31.Value = dva.Tables[0].Rows[x1].ItemArray[0].ToString();
                  //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                  drpvarient.Items.Add(li31);
              }

          }

          ////////////////////////////////////////////////////////////////////////////////
          txtkeyno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[22].ToString();
          txtbillremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[23].ToString();
          txtprintremark.Text = executequery.Tables[0].Rows[fpnl].ItemArray[24].ToString();
          string listpck = executequery.Tables[0].Rows[fpnl].ItemArray[25].ToString();
          hiddenpackage.Value = listpck;
          //////////////////this is to bind the package grid on what the value is saved in the database


          //ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "c1", "bindgridpkg('" + listpck + "')", true);
          DataSet dsexecut = new DataSet();
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {
              NewAdbooking.Classes.BookingMaster bindpacforexe = new NewAdbooking.Classes.BookingMaster();
              dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
          }

          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
              dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
          }

          else
          {
              NewAdbooking.classmysql.BookingMaster bindpacforexe = new NewAdbooking.classmysql.BookingMaster();
              dsexecut = bindpacforexe.packagebindforexebook(Session["compcode"].ToString(), listpck);
          }
        
          int i;

          drppackagecopy.Items.Clear();
          for (i = 0; i <= dsexecut.Tables[0].Rows.Count - 1; i++)
          {
              if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "")
              {
                  if (dsexecut.Tables[0].Rows[i].ItemArray[2].ToString() != "0")
                  {

                      ListItem li;
                      li = new ListItem();
                      li.Text = dsexecut.Tables[0].Rows[i].ItemArray[1].ToString();
                      li.Value = dsexecut.Tables[0].Rows[i].ItemArray[2].ToString();
                      //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                      drppackagecopy.Items.Add(li);

                  }
              }
          }

          txtinsertion.Text = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
          hiddeninsertion.Value = executequery.Tables[0].Rows[fpnl].ItemArray[26].ToString();
          string start_date = executequery.Tables[0].Rows[fpnl].ItemArray[27].ToString();
          txtdummydate.Text = getdatechk.getDatedisp(dateformat, start_date);
          txtrepeatingdate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[28].ToString();
          if (drpbooktype.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[70].ToString()) != null)
          {
           drpbooktype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[70].ToString();
          }
          if (drpadcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString()) != null)
          {
              drpadcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString();
          }
          if (drpadsubcategory.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString()) != null)
          {
              drpadsubcategory.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString();
          }
          if(drpcolor.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[32].ToString()) != null)
          {
              drpcolor.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[32].ToString();
          }
          if (drpuom.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[33].ToString()) != null)
          {
              drpuom.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[33].ToString();
          }
          drppageposition.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[34].ToString();
          if (drppagetype.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[35].ToString()) != null)
          {
              drppagetype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[35].ToString();
          }
          txtpageno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[36].ToString();
          //string adtype=drpadstype.SelectedValue;
          txtadsize1.Text = executequery.Tables[0].Rows[fpnl].ItemArray[38].ToString();
          txtadsize2.Text = executequery.Tables[0].Rows[fpnl].ItemArray[39].ToString();

          ////this is to bind the ratecode drpdown
          DataSet dx = new DataSet();
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {
              NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
              dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
          }

          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
              dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
          }

          else
          {
              NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
              dx = bindrate.ratebind(executequery.Tables[0].Rows[fpnl].ItemArray[30].ToString(), Session["compcode"].ToString());
          }
        

          txtratecode.Items.Clear();
          int ii;
          ListItem li1;
          li1 = new ListItem();
          li1.Text = "-Select Rate Code-";
          li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
          li1.Selected = true;
          txtratecode.Items.Add(li1);

          if (dx.Tables[0].Rows.Count > 0)
          {
              for (ii = 0; ii < dx.Tables[0].Rows.Count; ii++)
              {
                  ListItem li;
                  li = new ListItem();
                  li.Text = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                  li.Value = dx.Tables[0].Rows[ii].ItemArray[0].ToString();
                  //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                  txtratecode.Items.Add(li);
              }

          }
          if (txtratecode.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString()) != null)
          {
              txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
          }
          hiddenratecode.Value = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();

          //txtratecode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[40].ToString();
          drpscheme.Text = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
          hiddenscheme.Value = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
        //  drpschemepck.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[41].ToString();
          drpcurrency.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[42].ToString();
          txtagreedrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[43].ToString();
          txtagreedamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[44].ToString();
          txtspedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[45].ToString();
          txtspacedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[46].ToString();
          drpadstype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[37].ToString();
          txtextracharges.Text = executequery.Tables[0].Rows[fpnl].ItemArray[47].ToString();
          hiddenstatus.Value = txtagencystatus.Text = executequery.Tables[0].Rows[fpnl].ItemArray[50].ToString();
          txtagencytype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[51].ToString();


          DataSet dch = new DataSet();
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {
              NewAdbooking.Classes.BookingMaster getsta = new NewAdbooking.Classes.BookingMaster();
              dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
          }

          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.BookingMaster getsta = new NewAdbooking.classesoracle.BookingMaster();
              dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text, Session["dateformat"].ToString(), "DI0");
          }

          else
          {
              NewAdbooking.classmysql.BookingMaster getsta = new NewAdbooking.classmysql.BookingMaster();
              dch = getsta.getstatuspaymode(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), executequery.Tables[0].Rows[fpnl].ItemArray[12].ToString(), Session["compcode"].ToString(), txtdatetime.Text);
          }
        
          ////this is to bind the bill pay mode
          txtagencypaymode.Items.Clear();
          if (dch.Tables[5].Rows.Count > 0)
          {
              for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
              {
                  ListItem li;
                  li = new ListItem();
                  li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                  li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                  txtagencypaymode.Items.Add(li);
              }

          }
          if (txtagencypaymode.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[52].ToString()) != null)
          {
              hiddenpay.Value = txtagencypaymode.Text = executequery.Tables[0].Rows[fpnl].ItemArray[52].ToString();
          }
          txtcreditperiod.Text = executequery.Tables[0].Rows[fpnl].ItemArray[53].ToString();
          txttotalarea.Text = executequery.Tables[0].Rows[fpnl].ItemArray[54].ToString();
          txtcardrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[55].ToString();
          txtcardamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[56].ToString();
          txtdiscount.Text = executequery.Tables[0].Rows[fpnl].ItemArray[57].ToString();
          txtdiscpre.Text = executequery.Tables[0].Rows[fpnl].ItemArray[58].ToString();
          drpbillcycle.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[59].ToString();
          drprevenue.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[60].ToString();
          ////this is to bind the bill pay mode
          drppaymenttype.Items.Clear();
          if (dch.Tables[5].Rows.Count > 0)
          {
              for (int h = 0; h < dch.Tables[5].Rows.Count; h++)
              {
                  ListItem li;
                  li = new ListItem();
                  li.Value = dch.Tables[5].Rows[h].ItemArray[1].ToString();
                  li.Text = dch.Tables[5].Rows[h].ItemArray[0].ToString();
                  drppaymenttype.Items.Add(li);
              }

          }
          if (drppaymenttype.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[61].ToString()) != null)
          {
              hiddenbillpay.Value = drppaymenttype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[61].ToString();
          }
          txtbillheight.Text = executequery.Tables[0].Rows[fpnl].ItemArray[62].ToString();
          txtbillwidth.Text = executequery.Tables[0].Rows[fpnl].ItemArray[63].ToString();

          //////////////this is to bind the bill to 
          DataSet dbt = new DataSet();
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {
              NewAdbooking.Classes.BookingMaster getbillto = new NewAdbooking.Classes.BookingMaster();
              dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
          }

          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.BookingMaster getbillto = new NewAdbooking.classesoracle.BookingMaster();
              dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
          }

          else
          {
              NewAdbooking.classmysql.BookingMaster getbillto = new NewAdbooking.classmysql.BookingMaster();
              dbt = getbillto.getbillval(executequery.Tables[0].Rows[fpnl].ItemArray[16].ToString(), Session["compcode"].ToString());
          }
          ////////////////////////////////////////////////////
          drpbillto.Items.Clear();
          ListItem lik;
          lik = new ListItem();
          lik.Text = "Client";
          lik.Value = "client";
          drpbillto.Items.Add(lik);
          for (int k = 0; k < dbt.Tables[0].Rows.Count; k++)
          {
              ListItem lio;
              lio = new ListItem();
              lio.Text = dbt.Tables[0].Rows[k].ItemArray[1].ToString();
              lio.Value = dbt.Tables[0].Rows[k].ItemArray[0].ToString();
              //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
              drpbillto.Items.Add(lio);
          }
          hiddenbillto.Value = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
          if (drpbillto.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString()) != null)
          {
              drpbillto.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[64].ToString();
          }
          txtinvoice.Text = executequery.Tables[0].Rows[fpnl].ItemArray[65].ToString();
          txtvts.Text = executequery.Tables[0].Rows[fpnl].ItemArray[66].ToString();
          txtbilladdress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[67].ToString();
          txttradedisc.Text = executequery.Tables[0].Rows[fpnl].ItemArray[68].ToString();
          txtagencyoutstand.Text = executequery.Tables[0].Rows[fpnl].ItemArray[69].ToString();
          txtcamp.Text = executequery.Tables[0].Rows[fpnl].ItemArray[71].ToString();
          drppageprem.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[72].ToString();
          txtpageamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[73].ToString();
          txtpremper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[74].ToString();
          txtgrossamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();

          hiddenprevamt.Value = executequery.Tables[0].Rows[fpnl].ItemArray[75].ToString();  


          txtbillamt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[76].ToString();
          drpboxcode.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[77].ToString();
          txtboxno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[78].ToString();
          if (executequery.Tables[0].Rows[fpnl].ItemArray[79].ToString() == "1")
          {
              chkage.Checked = true;
          }
          else
          {
              chkage.Checked = false;
          }
          if (executequery.Tables[0].Rows[fpnl].ItemArray[80].ToString() == "1")
          {
              chkclie.Checked = true;
          }
          else
          {
              chkclie.Checked = false;
          }
          txtboxaddress.Text = executequery.Tables[0].Rows[fpnl].ItemArray[81].ToString();
          if (executequery.Tables[0].Rows[fpnl].ItemArray[82].ToString() == "1")
          {
              chktfn.Checked = true;
          }
          else
          {
              chktfn.Checked = false;
          }
          if (executequery.Tables[0].Rows[fpnl].ItemArray[83].ToString() == "1")
          {
              chkcoupan.Checked = true;
          }
          else
          {
              chkcoupan.Checked = false;
          }
          txtcolum.Text = executequery.Tables[0].Rows[fpnl].ItemArray[84].ToString();
         // //txtbillcolumn.Text = executequery.Tables[0].Rows[fpnl].ItemArray[85].ToString();
         // //txtbillarea.Text = "" = executequery.Tables[0].Rows[fpnl].ItemArray[86].ToString();
          txtspediscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[87].ToString();
          txtspadiscper.Text = executequery.Tables[0].Rows[fpnl].ItemArray[88].ToString();
          txtpaid.Text = executequery.Tables[0].Rows[fpnl].ItemArray[92].ToString();
          txtdealrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[93].ToString();
          txtdeviation.Text = executequery.Tables[0].Rows[fpnl].ItemArray[94].ToString();
          if (executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString() == "")
          {
              drpvarient.Items.Clear();
          }
          hiddenvar.Value = drpvarient.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[95].ToString();
          txtcontractname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[96].ToString();
          txtcontracttype.Text = executequery.Tables[0].Rows[fpnl].ItemArray[97].ToString();
          txtcardname.Text = executequery.Tables[0].Rows[fpnl].ItemArray[98].ToString();
          drptype.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[99].ToString();
          drpmonth.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[100].ToString();
          drpyear.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[101].ToString();
          txtcardno.Text = executequery.Tables[0].Rows[fpnl].ItemArray[102].ToString();
          hiddenreceiptno.Value = txtreceipt.Text = executequery.Tables[0].Rows[fpnl].ItemArray[103].ToString();

          ////this is to bind the adscat3 drpdown
        
          if (executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString() == "")
          {
              drpadcat3.Items.Clear();
              hiddenadscat3.Value = "";
          }
          else
          {
              DataSet dacat = new DataSet();
              if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
              {
                  NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
                  dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
              }
              else
                  if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                  {
                      NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                      dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                  }
                  else
                  {
                      NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                      dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[31].ToString(), Session["compcode"].ToString(), "0");
                  }
              ////////////////////////////////////////////////////////////////
              drpadcat3.Items.Clear();
              ListItem lika;
              lika = new ListItem();
              lika.Text = "Select";
              lika.Value = "0";
              drpadcat3.Items.Add(lika);
              for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
              {
                  ListItem lio;
                  lio = new ListItem();
                  lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                  lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                  //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                  drpadcat3.Items.Add(lio);
              }


          }

          if (drpadcat3.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString()) != null)
          {
              hiddenadscat3.Value = drpadcat3.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString();
          }
          else
          {
              hiddenadscat3.Value = drpadcat3.SelectedValue = "0";
          }
          ////////////////////this is to bind the adcat4 drp down
          if (executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString() == "")
          {
              drpadcat4.Items.Clear();
              hiddenadscat4.Value = "";

          }
          else
          {
              ////////////when 1 than bind the adscat4 drp down
              DataSet dacat = new DataSet();

              if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
              {
                  NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
                  dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
              }

              else
                  if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                  {
                      NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                      dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");

                  }
                  else
                  {
                      NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                      dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[104].ToString(), Session["compcode"].ToString(), "1");
                  }
              ////////////////////////////////////////////////////////////////
              drpadcat4.Items.Clear();
              ListItem liks;
              liks = new ListItem();
              liks.Text = "Select";
              liks.Value = "0";
              drpadcat4.Items.Add(liks);
              for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
              {
                  ListItem lio;
                  lio = new ListItem();
                  lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                  lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                  //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                  drpadcat4.Items.Add(lio);
              }

          }

          if (drpadcat4.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString()) != null)
          {
              hiddenadscat4.Value = drpadcat4.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString();
          }
          else
          {
              hiddenadscat4.Value = drpadcat4.SelectedValue = "0";
          }

          ///bind adcat5 drpdown
          if (executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString() == "")
          {
              drpadcat5.Items.Clear();
              hiddenadscat5.Value = "";
          }
          else
          {
              ////////////when 1 than bind the adscat4 drp down
              DataSet dacat = new DataSet();
              if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
              {
                  NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();

                  //////if 2 than bind adcat2 drop down 
                  dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
              }

              else
                  if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                  {
                      NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

                      //////if 2 than bind adcat2 drop down 
                      dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");

                  }
                  else
                  {
                      NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();

                      //////if 2 than bind adcat2 drop down 
                      dacat = getadcat3.getvalfromadcat3(executequery.Tables[0].Rows[fpnl].ItemArray[105].ToString(), Session["compcode"].ToString(), "2");
                  }
              ////////////////////////////////////////////////////////////////
              drpadcat5.Items.Clear();
              ListItem liks;
              liks = new ListItem();
              liks.Text = "Select";
              liks.Value = "0";
              drpadcat5.Items.Add(liks);
              for (int k = 0; k < dacat.Tables[0].Rows.Count; k++)
              {
                  ListItem lio;
                  lio = new ListItem();
                  lio.Text = dacat.Tables[0].Rows[k].ItemArray[0].ToString();
                  lio.Value = dacat.Tables[0].Rows[k].ItemArray[1].ToString();
                  //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                  drpadcat5.Items.Add(lio);
              }
          }

          if (drpadcat5.Items.FindByValue(executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString()) != null)
          {
              hiddenadscat5.Value = drpadcat5.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[106].ToString();
          }
          else
          {
              hiddenadscat5.Value = drpadcat5.SelectedValue = "0";
          }

          drpmatsta.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[120].ToString();

         //*6Aug* drpretainer.SelectedValue = executequery.Tables[0].Rows[fpnl].ItemArray[134].ToString();
          drpretainer.Text = executequery.Tables[0].Rows[0].ItemArray[134].ToString();
          txtaddagencycommrate.Text = executequery.Tables[0].Rows[fpnl].ItemArray[136].ToString();

          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "ca", "showcardinfo('" + executequery.Tables[0].Rows[0].ItemArray[61].ToString() + "')", true);
          ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "cc", "showgridexecute()", true);
          btnfirst.Enabled = true;
          btnprevious.Enabled = true;
          btnlast.Enabled = false;
          btnnext.Enabled = false;*/

    }

    protected void drpuom_SelectedIndexChanged(object sender, EventArgs e)
    {
        lbmeasure.Text = drpuom.SelectedItem.Text.ToString();
        lbbilluom.Text = drpuom.SelectedItem.Text.ToString();
        lbmeasuretotal.Text = "Sq" + "&nbsp;" + drpuom.SelectedItem.Text.ToString();

    }
    protected void drpcurrency_SelectedIndexChanged(object sender, EventArgs e)
    {


    }

    //[Ajax.AjaxMethod]
    //public DataSet getratevalue(string adtype, string color, string adcat, string adsucat, string currency, string ratecode, string package, string selecdate, string compcode, string uom, string premium, string clientcode, string noof_ins)
    //{
    //    DataSet dr = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.Classes.BookingMaster rate = new NewAdbooking.Classes.BookingMaster();
    //        dr = rate.getrate(adtype, color, adcat, adsucat, currency, ratecode, package, selecdate, compcode, uom, premium, clientcode, noof_ins);
    //    }

    //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //    {
    //        NewAdbooking.classesoracle.BookingMaster rate = new NewAdbooking.classesoracle.BookingMaster();
    //        dr = rate.getrate(adtype, color, adcat, adsucat, currency, ratecode, package, selecdate, compcode, uom, premium, clientcode, noof_ins);
    //    }

    //    else
    //    {
    //        NewAdbooking.classmysql.BookingMaster rate = new NewAdbooking.classmysql.BookingMaster();
    //        dr = rate.getrate(adtype, color, adcat, adsucat, currency, ratecode, package, selecdate, compcode, uom, premium, clientcode, noof_ins);
    //    }


    //    return dr;

    //    //if (dr.Tables[0].Rows.Count - 1 >= 0)getpercentage

    //    //{
    //    //    txtcardrate.Text = dr.Tables[0].Rows[0].ItemArray[0].ToString();

    //    //}
    //}

    [Ajax.AjaxMethod]
    public DataSet getratevalue(string adtype, string color, string adcat, string adsucat, string currency, string ratecode, string package, string selecdate, string compcode, string uom, string premium, string clientcode, string noof_ins, string adcat3, string adcat4, string adcat5)
    {
        DataSet dr = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster rate = new NewAdbooking.Classes.BookingMaster();
            dr = rate.getrate(adtype, color, adcat, adsucat, currency, ratecode, package, selecdate, compcode, uom, premium, clientcode, noof_ins);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster rate = new NewAdbooking.classesoracle.BookingMaster();
            dr = rate.getrate(adtype, color, adcat, adsucat, currency, ratecode, package, selecdate, compcode, uom, premium, clientcode, noof_ins, adcat3, adcat4, adcat5);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster rate = new NewAdbooking.classmysql.BookingMaster();
            dr = rate.getrate(adtype, color, adcat, adsucat, currency, ratecode, package, selecdate, compcode, uom, premium, clientcode, noof_ins);
        }


        return dr;

        //if (dr.Tables[0].Rows.Count - 1 >= 0)
        //{
        //    txtcardrate.Text = dr.Tables[0].Rows[0].ItemArray[0].ToString();

        //}
    }
    protected void drpboxcode_SelectedIndexChanged(object sender, EventArgs e)
    {
        if (drpboxcode.SelectedValue != "0")
        {
            autogenerated("2");

        }
    }
    protected void ListBox1_SelectedIndexChanged(object sender, EventArgs e)
    {


    }


    [Ajax.AjaxMethod]
    public DataSet bindagencusub(string agency, string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindsub = new NewAdbooking.Classes.BookingMaster();
            ds = bindsub.bindsubagency(agency, compcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindsub = new NewAdbooking.classesoracle.BookingMaster();
            ds = bindsub.bindsubagency(agency, compcode);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster bindsub = new NewAdbooking.classmysql.BookingMaster();
            ds = bindsub.bindsubagency(agency, compcode);
        }

        return ds;


    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindclientname(string compcode, string client)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.getClientName(compcode, client);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.getClientName(compcode, client, Session["center"].ToString());
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.getClientName(compcode, client);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet getpayandstatus(string agencycode, string agencysubcode, string compcode, string getdatecheck, string dateformat)
    {
        DataSet dch = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getsta = new NewAdbooking.Classes.BookingMaster();
            dch = getsta.getstatuspaymode(agencycode, agencysubcode, compcode, getdatecheck, dateformat);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getsta = new NewAdbooking.classesoracle.BookingMaster();
            dch = getsta.getstatuspaymode(agencycode, agencysubcode, compcode, getdatecheck, dateformat, "DI0");
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getsta = new NewAdbooking.classmysql.BookingMaster();
            dch = getsta.getstatuspaymode(agencycode, agencysubcode, compcode, getdatecheck);
        }

        return dch;

    }


    ///this the function to insert the records in insert table
    [Ajax.AjaxMethod]
    public void insertinsertion(string insertdate, string edition, string premium1, string premium2, string premallow, string adcategory, string latestdate, string material, string cardrate, string filename, string discrate, string insertstatus, string billstatus, string adsubcat, string compcode, string userid, string cioid, string height, string width, string totalsize, string pagepost, string premper1, string premper2, string colid, string repeat, string insertno, string paid, string insertinsertion, string solorate, string grossrate, string no, string insert_pageno, string insert_remarks, string page_code, string page_per, string noofcol, string billamt, string billrate, string insert_id, string dateformat, string pkgcode, string gridins, string pkgalias,string oldbillno,string oldbilldate)
    {
        DataSet dii = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            //NewAdbooking.Classes.BookingMaster insertchild = new NewAdbooking.Classes.BookingMaster();
            //dii = insertchild.insertbook_ins_display(insertdate, edition, premium1, premium2, premallow, adcategory, latestdate, material, cardrate, filename, discrate, insertstatus, billstatus, adsubcat, compcode, userid, cioid, height, width, totalsize, pagepost, premper1, premper2, colid, repeat, insertno, paid, insertinsertion, solorate, grossrate, insert_pageno, insert_remarks, page_code, page_per, noofcol, billamt, billrate, "0", "0", "0", insert_id, dateformat, "0", "0", "0", pkgcode, gridins, pkgalias);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster insertchild = new NewAdbooking.classesoracle.BookingMaster();
            dii = insertchild.insertbook_ins_Bill(insertdate, edition, premium1, premium2, premallow, adcategory, latestdate, material, cardrate, filename, discrate, insertstatus, billstatus, adsubcat, compcode, userid, cioid, height, width, totalsize, pagepost, premper1, premper2, colid, repeat, insertno, paid, insertinsertion, solorate, grossrate, insert_pageno, insert_remarks, page_code, page_per, noofcol, billamt, billrate, "0", "0", "0", dateformat, "0", "0", "0", pkgcode, gridins, pkgalias,oldbillno,oldbilldate);
        }

        else
        {
            //NewAdbooking.classmysql.BookingMaster insertchild = new NewAdbooking.classmysql.BookingMaster();
            //dii = insertchild.insertbook_ins(insertdate, edition, premium1, premium2, premallow, adcategory, latestdate, material, cardrate, filename, discrate, insertstatus, billstatus, adsubcat, compcode, userid, cioid, height, width, totalsize, pagepost, premper1, premper2, colid, repeat, insertno, paid, insertinsertion, solorate, grossrate, insert_pageno, insert_remarks, page_code, page_per, noofcol, billamt, billrate, "0", "0", "0", "");
        }



    }

    //this is to show the grid for execution

    [Ajax.AjaxMethod]
    public DataSet showgridforexe(string ciobid, string compcode)
    {
        DataSet dex = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            //NewAdbooking.Classes.BookingMaster showgri = new NewAdbooking.Classes.BookingMaster();
            //dex = showgri.fetchdataforexe(ciobid, compcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster showgri = new NewAdbooking.classesoracle.BookingMaster();
            dex = showgri.fetchdataforexeBill(ciobid, compcode);
        }

        else
        {
            //NewAdbooking.classmysql.BookingMaster showgri = new NewAdbooking.classmysql.BookingMaster();
            //dex = showgri.fetchdataforexe(ciobid, compcode);
        }
        return dex;

    }
    public void getadsubcatmain(string compcode, string adcat, string agencytype)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster cls_comb = new NewAdbooking.Classes.BookingMaster();
            da = cls_comb.advdatasubcatcat(compcode, adcat, agencytype);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster cls_comb = new NewAdbooking.classesoracle.BookingMaster();
            da = cls_comb.advdatasubcatcat(compcode, adcat, agencytype);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster cls_comb = new NewAdbooking.classmysql.BookingMaster();
            da = cls_comb.advdatasubcatcat(compcode, adcat, agencytype);
        }

        if (da.Tables[0].Rows.Count > 0)
        {
            drpadsubcategory.Items.Clear();
            int i;
            ListItem li1;
            li1 = new ListItem();
            li1.Text = "-Select-";
            li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
            li1.Selected = true;
            drpadsubcategory.Items.Add(li1);

            if (da.Tables[0].Rows.Count > 0)
            {
                for (i = 0; i < da.Tables[0].Rows.Count; i++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Text = da.Tables[0].Rows[i].ItemArray[1].ToString();
                    li.Value = da.Tables[0].Rows[i].ItemArray[0].ToString();
                    drpadsubcategory.Items.Add(li);
                }

            }
        }


    }
    [Ajax.AjaxMethod]
    public DataSet getadsubcat(string compcode, string adcat, string agencytype)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster cls_comb = new NewAdbooking.Classes.BookingMaster();
            da = cls_comb.advdatasubcatcat(compcode, adcat, agencytype);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster cls_comb = new NewAdbooking.classesoracle.BookingMaster();
            da = cls_comb.advdatasubcatcat(compcode, adcat, agencytype);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster cls_comb = new NewAdbooking.classmysql.BookingMaster();
            da = cls_comb.advdatasubcatcat(compcode, adcat, agencytype);
        }

        return da;


    }
    [Ajax.AjaxMethod]
    public DataSet chkagencycode(string agency, string compcode, string product, string execname, string retainer)
    {
        DataSet dagen = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster chkagen = new NewAdbooking.Classes.BookingMaster();
            dagen = chkagen.getagencyname(agency, compcode, product, execname, retainer);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster chkagen = new NewAdbooking.classesoracle.BookingMaster();
            dagen = chkagen.getagencyname(agency, compcode, product, execname);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster chkagen = new NewAdbooking.classmysql.BookingMaster();
            dagen = chkagen.getagencyname(agency, compcode, product, execname);
        }

        return dagen;

    }
    [Ajax.AjaxMethod]

    public DataSet getpageamount(string pagecode, string compcode)
    {
        DataSet damt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getamt = new NewAdbooking.Classes.BookingMaster();
            damt = getamt.getpageamt(pagecode, compcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getamt = new NewAdbooking.classesoracle.BookingMaster();
            damt = getamt.getpageamt(pagecode, compcode);
        }

        else
        {
            NewAdbooking.Classes.BookingMaster getamt = new NewAdbooking.Classes.BookingMaster();
            damt = getamt.getpageamt(pagecode, compcode);
        }

        return damt;


    }
    //public DataSet getpageamount(string pagecode,string compcode)
    //{
    //    DataSet damt = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.Classes.BookingMaster getamt = new NewAdbooking.Classes.BookingMaster();
    //        damt = getamt.getpageamt(pagecode, compcode);
    //    }

    //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //    {
    //        NewAdbooking.Classes.BookingMaster getamt = new NewAdbooking.Classes.BookingMaster();
    //        damt = getamt.getpageamt(pagecode, compcode);
    //    }

    //    else
    //    {
    //        NewAdbooking.Classes.BookingMaster getamt = new NewAdbooking.Classes.BookingMaster();
    //        damt = getamt.getpageamt(pagecode, compcode);
    //    }

    //    return damt;


    //}

    [Ajax.AjaxMethod]
    public DataSet getboxnovalue(string compcode, string boxno, string no)
    {
        //string auto = "BN";
        //string autogen = auto + cou;
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster autocode = new NewAdbooking.Classes.BookingMaster();
            da = autocode.autogenrated(compcode, boxno, no);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster autocode = new NewAdbooking.classesoracle.BookingMaster();
            //da = autocode.autogenrated(compcode, boxno, no);
            da = autocode.autogenratedbox(compcode, boxno, no, "0", "0");
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster autocode = new NewAdbooking.classmysql.BookingMaster();
            da = autocode.autogenrated(compcode, boxno, no);
        }

        return da;

    }
    //public DataSet getboxnovalue(string compcode, string boxno, string no)
    //{
    //    //string auto = "BN";
    //   //string autogen = auto + cou;
    //    DataSet da = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.Classes.BookingMaster autocode = new NewAdbooking.Classes.BookingMaster();
    //        da = autocode.autogenrated(compcode, boxno, no);
    //    }

    //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //    {
    //        NewAdbooking.classesoracle.BookingMaster autocode = new NewAdbooking.classesoracle.BookingMaster();
    //        da = autocode.autogenrated(compcode, boxno, no);
    //    }

    //    else
    //    {
    //        NewAdbooking.classmysql.BookingMaster autocode = new NewAdbooking.classmysql.BookingMaster();
    //        da = autocode.autogenrated(compcode, boxno, no);
    //    }

    //    return da;

    //}

    [Ajax.AjaxMethod]
    public DataSet modifygridinsert(string insertdate, string edition, string premium1, string premium2, string premallow, string adcategory, string latestdate, string material, string cardrate, string filename, string discrate, string insertstatus, string billstatus, string adsubcat, string compcode, string userid, string cioid, string height, string width, string totalsize, string pagepost, string premper1, string premper2, string colid, string repeat, string insertno, string paid, string insertinsertion, string solorate, string grossrate, string insert_pageno, string insert_remarks, string page_code, string page_per, string no_ofcol, string billamt, string billrate, string logo_h, string logo_w, string logo_name, string dateformat, string pkgcodegrid_value, string pkginsgrid_value, string pkg_alias_value, string insertid,string oldbillno,string oldbilldate)
    {
        DataSet dii = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            //NewAdbooking.Classes.BookingMaster insertchild = new NewAdbooking.Classes.BookingMaster();
            //dii = insertchild.insertbook_ins_display(insertdate, edition, premium1, premium2, premallow, adcategory, latestdate, material, cardrate, filename, discrate, insertstatus, billstatus, adsubcat, compcode, userid, cioid, height, width, totalsize, pagepost, premper1, premper2, colid, repeat, insertno, paid, insertinsertion, solorate, grossrate, insert_pageno, insert_remarks, page_code, page_per, no_ofcol, billamt, billrate, "0", "0", "0", insertid, dateformat, "0", "0", "0", pkgcodegrid_value, pkginsgrid_value, pkg_alias_value);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster insertchild = new NewAdbooking.classesoracle.BookingMaster();
            dii = insertchild.insertbook_ins_display_bill(insertdate, edition, premium1, premium2, premallow, adcategory, latestdate, material, cardrate, filename, discrate, insertstatus, billstatus, adsubcat, compcode, userid, cioid, height, width, totalsize, pagepost, premper1, premper2, colid, repeat, insertno, paid, insertinsertion, solorate, grossrate, insert_pageno, insert_remarks, page_code, page_per, no_ofcol, billamt, billrate, "0", "0", "0", dateformat, "0", "0", "0", pkgcodegrid_value, pkginsgrid_value, pkg_alias_value, insertid, oldbillno, oldbilldate);
        }

        else
        {
            //NewAdbooking.classmysql.BookingMaster insertchild = new NewAdbooking.classmysql.BookingMaster();
            //dii = insertchild.insertbook_ins(insertdate, edition, premium1, premium2, premallow, adcategory, latestdate, material, cardrate, filename, discrate, insertstatus, billstatus, adsubcat, compcode, userid, cioid, height, width, totalsize, pagepost, premper1, premper2, colid, repeat, insertno, paid, insertinsertion, solorate, grossrate, insert_pageno, insert_remarks, page_code, page_per, no_ofcol, billamt, billrate, "0", "0", "0", "");
        }

        return dii;

    }

    //*25Aug***
    [Ajax.AjaxMethod]
    public DataSet getclientinfo(string compcode, string clientname)
    {
        //NewAdbooking.Classes.pop bindrate = new NewAdbooking.Classes.pop();
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.classesoracle.BookingMaster bindclient = new NewAdbooking.classesoracle.BookingMaster();
            dx = bindclient.clsClientInfo(compcode, clientname);
            return dx;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bindclient = new NewAdbooking.classesoracle.BookingMaster();
                dx = bindclient.clsClientInfo(compcode, clientname);
                return dx;
            }
            else
            {
                NewAdbooking.classesoracle.BookingMaster bindclient = new NewAdbooking.classesoracle.BookingMaster();
                dx = bindclient.clsClientInfo(compcode, clientname);
                return dx;
            }
    }
    //*************

    [Ajax.AjaxMethod]
    public DataSet binddealtype(string compcode, string agencysplit, string subagency, string bookingdate, string color, string curr, string adcat, string clientsplit, string prod, string col, string code, string rate_cod, string adtype)
    {
        DataSet ddeal = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getdeal = new NewAdbooking.Classes.BookingMaster();
            ddeal = getdeal.getdealvalue(compcode, subagency, agencysplit, bookingdate, color, curr, adcat, clientsplit, prod, col, code, rate_cod, adtype);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getdeal = new NewAdbooking.classesoracle.BookingMaster();
            ddeal = getdeal.getdealvalue(compcode, subagency, agencysplit, bookingdate, color, curr, adcat, clientsplit, prod, col, code, rate_cod, adtype);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getdeal = new NewAdbooking.classmysql.BookingMaster();
            ddeal = getdeal.getdealvalue(compcode, subagency, agencysplit, bookingdate, color, curr, adcat, clientsplit, prod, col, code, rate_cod, adtype);
        }

        return ddeal;


    }

    [Ajax.AjaxMethod]
    public DataSet allowdisc(string dealcode, string compcode, string agencysplit, string subagency, string clientsplit)
    {
        DataSet ddisc = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getdisc = new NewAdbooking.Classes.BookingMaster();
            ddisc = getdisc.booking_getdealdisc(dealcode, compcode, agencysplit, subagency, clientsplit);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getdisc = new NewAdbooking.classesoracle.BookingMaster();
            ddisc = getdisc.booking_getdealdisc(dealcode, compcode, agencysplit, subagency, clientsplit);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getdisc = new NewAdbooking.classmysql.BookingMaster();
            ddisc = getdisc.booking_getdealdisc(dealcode, compcode, agencysplit, subagency, clientsplit);
        }

        return ddisc;

    }

    [Ajax.AjaxMethod]
    public DataSet getschemedisc(string schemcode, string compcode, string noofinsert)
    {
        DataSet dsc = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getschdisc = new NewAdbooking.Classes.BookingMaster();
            dsc = getschdisc.getschemedisc(schemcode, compcode, noofinsert);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getschdisc = new NewAdbooking.classesoracle.BookingMaster();
            dsc = getschdisc.getschemedisc(schemcode, compcode, noofinsert);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getschdisc = new NewAdbooking.classmysql.BookingMaster();
            dsc = getschdisc.getschemedisc(schemcode, compcode, noofinsert);
        }

        return dsc;



    }

    [Ajax.AjaxMethod]
    public DataSet fillvarient(string brandval, string compcode)
    {
        DataSet dva = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getvarient = new NewAdbooking.Classes.BookingMaster();

            dva = getvarient.bindvarient(brandval, compcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getvarient = new NewAdbooking.classesoracle.BookingMaster();
            dva = getvarient.bindvarient(brandval, compcode);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getvarient = new NewAdbooking.classmysql.BookingMaster();
            dva = getvarient.bindvarient(brandval, compcode);
        }

        return dva;


    }
    protected void txtspacedisc_TextChanged(object sender, EventArgs e)
    {

    }

    [Ajax.AjaxMethod]
    public DataSet chkcasualcli(string client, string compcode)
    {
        DataSet dc = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster chkcli = new NewAdbooking.Classes.BookingMaster();
            dc = chkcli.chkclient(client, compcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster chkcli = new NewAdbooking.classesoracle.BookingMaster();
            dc = chkcli.chkclient(client, compcode);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster chkcli = new NewAdbooking.classmysql.BookingMaster();
            dc = chkcli.chkclient(client, compcode);
        }

        return dc;

    }
    [Ajax.AjaxMethod]
    public DataSet getinsertionscheme(string schemecode, string compcode)
    {
        DataSet dc = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getinssch = new NewAdbooking.Classes.BookingMaster();
            dc = getinssch.getinsertsche(schemecode, compcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getinssch = new NewAdbooking.classesoracle.BookingMaster();
            dc = getinssch.getinsertsche(schemecode, compcode);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getinssch = new NewAdbooking.classmysql.BookingMaster();
            dc = getinssch.getinsertsche(schemecode, compcode);
        }

        return dc;

    }
    [Ajax.AjaxMethod]
    public DataSet bindTable(string pkgname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.getPkgDetail(pkgname);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.getPkgDetail(pkgname);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.getPkgDetail(pkgname);
        }

        return ds;
        //string output = "";
        //output = "<div style=\"width:300px,height:200px,overflow:auto\"><table cellpadding=0 cellspacing=0 border=1><tr bgcolor=\"#7DAAE3\" class=\"dtGridHd12\"><td align=center>Select</td><td align=center width=\"100px\">Edition</td></tr>";
        //for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        //{
        //    output = output + "<tr><td class=\"dtGrid\" align=center><input type=checkbox onclick=\"checkCount('" + ds.Tables[0].Rows[i].ItemArray[2].ToString() + "');\" value='" + ds.Tables[0].Rows[i].ItemArray[2].ToString() + "' id=chk" + i + " /></td><td align=center class=\"dtGrid\" width=\"100px\" id=td" + i + ">" + ds.Tables[0].Rows[i].ItemArray[1].ToString() + "</td></tr>";
        //}
        //output = output + "</table></div>";
        //tdtable.InnerHtml = output;
    }

    protected void btncopy_Click(object sender, EventArgs e)
    {

    }

    public void forbookingaudit()
    {
        saveormodify = "1";
        hiddensavemod.Value = saveormodify;
        fpnl = 0;

        btnshgrid.Enabled = false;
        txtagencypaymode.Enabled = false;
        // btnupload.Enabled = false;

        txtciobookid.Text = "";
        //  txtappby.Text = "";
        //txtaudit.Text = "";
        txtrono.Text = "";
        txtrodate.Text = "";
        txtcaption.Text = "";
        drpbillstatus.SelectedValue = "0";
        drprostatus.SelectedValue = "0";
        txtagency.Text = "";
        txtclient.Text = "";
        txtagencyaddress.Text = "";
        txtclientadd.Text = "";
        drpagscode.SelectedValue = "0";
        txtdockitno1.Text = "";
        txtexecname.Text = "";
        txtexeczone.Text = "";
        txtproduct.Text = "";
        drpbrand.SelectedValue = "0";
        txtkeyno.Text = "";
        txtbillremark.Text = "";
        txtprintremark.Text = "";
        // drppackage.SelectedValue = "0";
        txtinsertion.Text = "";
        txtdummydate.Text = "";
        txtrepeatingdate.Text = "";
        drpbooktype.SelectedValue = "0";
        drpadcategory.SelectedValue = "0";
        drpadsubcategory.SelectedValue = "0";

        drpadcat3.SelectedValue = "0";
        drpadcat4.SelectedValue = "0";
        drpadcat5.SelectedValue = "0";

        drpcolor.SelectedValue = "0";
        drpuom.SelectedValue = "0";
        drppageposition.SelectedValue = "0";
        drppagetype.SelectedValue = "0";
        txtpageno.Text = "";
        drpadstype.SelectedValue = "0";
        //txtadsizetypeheight.Text = "";
        //txtadsizetypewidth.Text = "";
        txtratecode.SelectedValue = "0";
        drpscheme.Text = "";
        drpscheme.Text = "";
        drpcurrency.SelectedValue = "0";
        txtagreedrate.Text = "";
        txtagreedamt.Text = "";
        txtspedisc.Text = "";
        txtspacedisc.Text = "";
        txtextracharges.Text = "";
        txtcolum.Text = "";
        //txtbillcolumn.Text = "";
        ////txtbillarea.Text = "" = "";
        txtspediscper.Text = "";
        txtspadiscper.Text = "";


        txtcontractname.Text = "";
        txtcontracttype.Text = "";
        txtcardname.Text = "";
        drptype.SelectedValue = "0";
        drpmonth.SelectedValue = "0";
        drpyear.SelectedValue = "0";
        txtcardno.Text = "";

        drppackage.SelectedValue = "0";
        drppackagecopy.Items.Clear();
        txtagencypaymode.Items.Clear();
        //////////////////////////////
        txtdockitno1.Enabled = true;
        txtkeyno.Enabled = true;
        txtrono.Enabled = true;
        txtagency.Enabled = true;
        txtclient.Enabled = true;

        btnshgrid.Enabled = false;
        //btnupload.Enabled = false;

        txtciobookid.Enabled = true;

        saveormodify = "01";
        chkstatus(FlagStatus);

        btnQuery.Enabled = false;
        btnExecute.Enabled = true;
        btnSave.Enabled = false;
        btnsavepaginate.Enabled = false;
    }
    [Ajax.AjaxMethod]
    public DataSet getIssuePages(string compcode, string pubdate, string pubcode, string centercode, string editioncode, string suppcode, string dateformat)
    {

        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.getPageInfo IssuePages = new NewAdbooking.Classes.getPageInfo();

            ds = IssuePages.clsGetIssuePages(compcode, pubdate, pubcode, centercode, editioncode, suppcode);

        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            NewAdbooking.classesoracle.getPageInfo IssuePages = new NewAdbooking.classesoracle.getPageInfo();

            ds = IssuePages.clsGetIssuePages(pubdate, pubcode, centercode, editioncode, suppcode, dateformat);

        }

        else
        {

            //NewAdbooking.classmysql.getPageInfo IssuePages = new NewAdbooking.classmysql.getPageInfo();

            //ds = IssuePages.clsGetIssuePages(pubdate, pubcode, centercode, editioncode, suppcode);

        }

        return ds;

    }

    [Ajax.AjaxMethod]
    public DataSet pageHeading(string pubdate, string pubcode, string centercode, string editioncode, string suppcode, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.getPageInfo page_Heading = new NewAdbooking.Classes.getPageInfo();
            ds = page_Heading.clspageHeading(pubdate, pubcode, centercode, editioncode, suppcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.getPageInfo page_Heading = new NewAdbooking.classesoracle.getPageInfo();
            ds = page_Heading.clspageHeading(pubdate, pubcode, centercode, editioncode, suppcode, dateformat);
        }

        else
        {
            //NewAdbooking.classmysql.getPageInfo page_Heading = new NewAdbooking.classmysql.getPageInfo();
            //ds = page_Heading.clspageHeading(pubdate, pubcode, centercode, editioncode, suppcode);
        }

        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet ShowPages(string pdate, string ppub, string pbkfor, string pedition, string psecpub, string pageno, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.getVolume ShowAds = new NewAdbooking.Classes.getVolume();
            ds = ShowAds.clsShowAd(pdate, ppub, pbkfor, pedition, psecpub, pageno);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.getVolume ShowAds = new NewAdbooking.classesoracle.getVolume();
            ds = ShowAds.clsShowAd(pdate, ppub, pbkfor, pedition, psecpub, pageno, dateformat);
        }

        else
        {
            //NewAdbooking.classmysql.getVolume ShowAds = new NewAdbooking.classmysql.getVolume();
            //ds = ShowAds.clsShowAd(pdate, ppub, pbkfor, pedition, psecpub, pageno);
        }

        return ds;
    }

    [Ajax.AjaxMethod]
    public void UpdateAd(string pdate, string ppub, string pbkfor, string pedition, string psecpub, string pageno, double xstcol, double ystrow, string iidnum, string pgid, string dateformat)
    {
        //  DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.getPageInfo Update_Ad = new NewAdbooking.Classes.getPageInfo();
            Update_Ad.clsUpdateAd(pdate, ppub, pbkfor, pedition, psecpub, pageno, xstcol, ystrow, iidnum, pgid);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.getPageInfo Update_Ad = new NewAdbooking.classesoracle.getPageInfo();
            Update_Ad.clsUpdateAd(pdate, ppub, pbkfor, pedition, psecpub, pageno, xstcol, ystrow, iidnum, pgid, dateformat);
        }

        else
        {
            //NewAdbooking.classmysql.getPageInfo Update_Ad = new NewAdbooking.classmysql.getPageInfo();
            //ds = Update_Ad.clsUpdateAd(pdate, ppub, pbkfor, pedition, psecpub, pageno, xstcol, ystrow, iidnum, pgid);
        }


    }

    [Ajax.AjaxMethod]
    public void Pagination(string pdate, string pbkfor, string ppub, string psecpub, string pedition, int pageno, string dateformat)
    {
        // DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.getPageInfo Pagination_Ad = new NewAdbooking.Classes.getPageInfo();
            Pagination_Ad.clsPagination(pdate, pbkfor, ppub, psecpub, pedition, pageno);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.getPageInfo Pagination_Ad = new NewAdbooking.classesoracle.getPageInfo();
            Pagination_Ad.clsPagination(pdate, pbkfor, ppub, psecpub, pedition, pageno, dateformat);
        }

        else
        {
            //NewAdbooking.classmysql.getPageInfo Pagination_Ad = new NewAdbooking.classmysql.getPageInfo();
            //ds = Pagination_Ad.clsPagination(pdate, pbkfor, ppub, psecpub, pedition, pageno);
        }


    }
    [Ajax.AjaxMethod]
    public DataSet getwidthforcoll(string desc, string collumn, string compcode)
    {
        DataSet dc = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getwidth = new NewAdbooking.Classes.BookingMaster();
            dc = getwidth.getwidthforcollumn(desc, collumn, compcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getwidth = new NewAdbooking.classesoracle.BookingMaster();
            dc = getwidth.getwidthforcollumn(desc, collumn, compcode);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getwidth = new NewAdbooking.classmysql.BookingMaster();
            dc = getwidth.getwidthforcollumn(desc, collumn, compcode);
        }

        return dc;

    }



    [Ajax.AjaxMethod]
    public DataSet getbookingdetail(string edition, string date)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getbookingdata = new NewAdbooking.Classes.BookingMaster();

            ds = getbookingdata.fetchbookingdata(edition, date);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster getbookingdata = new NewAdbooking.classesoracle.BookingMaster();

                ds = getbookingdata.fetchbookingdata(edition, date);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster getbookingdata = new NewAdbooking.classmysql.BookingMaster();

                ds = getbookingdata.fetchbookingdata(edition, date);
            }




        return ds;


    }

    [Ajax.AjaxMethod]
    public DataSet getEditionName(string compcode, string id_buttonText)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objgetEditionName = new NewAdbooking.Classes.BookingMaster();
            ds = objgetEditionName.clsGetEditionName(compcode, id_buttonText);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objgetEditionName = new NewAdbooking.classesoracle.BookingMaster();
            ds = objgetEditionName.clsGetEditionName(compcode, id_buttonText);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet CheckEditionRights(string compcode, string pkgName, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objEditionRights = new NewAdbooking.Classes.BookingMaster();
            ds = objEditionRights.clsEdiRights(compcode, pkgName, userid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objEditionRights = new NewAdbooking.classesoracle.BookingMaster();
            ds = objEditionRights.clsEdiRights(compcode, pkgName, userid);
        }

        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet SpaceAvailability(string compcode, string pdate, string ppub, string pbkfor, string pedition, string psecpub, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster Availability_Check = new NewAdbooking.Classes.BookingMaster();
            ds = Availability_Check.clsSpaceAvailability(compcode, pdate, ppub, pbkfor, pedition, psecpub);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster Availability_Check = new NewAdbooking.classesoracle.BookingMaster();
            ds = Availability_Check.clsSpaceAvailability(compcode, pdate, ppub, pbkfor, pedition, psecpub, dateformat);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet getPagesBookedVol(string compcode, string pdate, string ppub, string pbkfor, string pedition, string psecpub, int pgno, string spl_page, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objBookedVol = new NewAdbooking.Classes.BookingMaster();
            ds = objBookedVol.clsPagesBookedVol(compcode, pdate, ppub, pbkfor, pedition, psecpub, pgno, spl_page);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objBookedVol = new NewAdbooking.classesoracle.BookingMaster();
            ds = objBookedVol.clsPagesBookedVol(compcode, pdate, ppub, pbkfor, pedition, psecpub, pgno, spl_page, dateformat);
        }

        return ds;
    }


    [Ajax.AjaxMethod]
    public void SubmitIssuePages(string compcode, string pubdate, string pubcode, string centercode, string editioncode, string suppcode, string dateformat)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.getPageInfo obj12 = new NewAdbooking.Classes.getPageInfo();
            obj12.clsSubmitIssuePages(compcode, pubdate, pubcode, centercode, editioncode, suppcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.getPageInfo obj12 = new NewAdbooking.classesoracle.getPageInfo();
            obj12.clsSubmitIssuePages(compcode, pubdate, pubcode, centercode, editioncode, suppcode, dateformat);
        }
        else
        {
            //NewAdbooking.Classes.getPageInfo obj12 = new NewAdbooking.Classes.getPageInfo();
            //obj12.clsSubmitIssuePages(compcode, pubdate, pubcode, centercode, editioncode, suppcode);
        }
    }


    protected void grd_SpaceCheck_PageIndexChanging(object sender, GridViewPageEventArgs e)
    {
        grd_SpaceCheck.PageIndex = e.NewPageIndex;
    }
    protected void btnsavepaginate_Click(object sender, EventArgs e)
    {
        ////in case of modify save Previous booking ID and amount...
        //string prev_cioid = "";
        //string prev_receipt = "";
        //Decimal prev_ga = 0;
        //string srtcancel = "0";
        //string auditstatus = "";

        ////string xx =txtagencypaymode.SelectedValue;
        //if (txtagencypaymode.SelectedValue == "CA0" || txtagencypaymode.SelectedValue == "CR2" || txtagencypaymode.SelectedValue == "PC003")
        //{

        //    if (hiddenprevamt.Value != "" && hiddenprevamt.Value != null)
        //    {
        //        if (Convert.ToDecimal(hiddenprevamt.Value) != Convert.ToDecimal(txtgrossamt.Text))
        //        {
        //            prev_cioid = txtciobookid.Text;
        //            prev_receipt = txtreceipt.Text;
        //            prev_receipt = hiddenreceiptno.Value;
        //            prev_ga = (Convert.ToDecimal(txtgrossamt.Text) - Convert.ToDecimal(hiddenprevamt.Value));
        //            saveormodify = "0";
        //            autogenerated("0");
        //            autogenerated("3");
        //            srtcancel = "1";

        //        }
        //    }

        //}

        //if (Session["audit"].ToString() == "n")
        //{
        //    if (txtcardamt.Text != txtagreedamt.Text)
        //        auditstatus = "Not Approved";
        //    else
        //        auditstatus = "Approved";
        //}
        //else
        //{
        //    auditstatus = "Not Approved";
        //}







        ////saveormodify = "0";
        //hiddensavemod.Value = saveormodify;
        ////splitting of date
        //datesave getdatechk = new datesave();
        //string branch = txtbranch.Text;
        //string booked_by = txtbookedby.Text;
        //string prevbook = txtprevbook.Text;
        //string date_time = txtdatetime.Text = getdatechk.getDate(dateformat, txtdatetime.Text);
        //string ciobookid = txtciobookid.Text;

        ////string approvedby=txtappby.Text;
        ////string audit=txtaudit.Text;
        //string approvedby = "";
        //string audit = "";
        //string rono = txtrono.Text;


        //string rodate = "";
        //if (txtrodate.Text != "")
        //{
        //    rodate = txtrodate.Text = getdatechk.getDate(dateformat, txtrodate.Text);
        //}
        //rodate = txtrodate.Text;

        //string caption = txtcaption.Text;
        //string billstatus = drpbillstatus.SelectedValue;
        //string rostatus = drprostatus.SelectedValue;
        //string agencycod = txtagency.Text;
        ////////////////this is to split the  and get the code
        //char[] splitter = { '(' };
        //string[] myarray = agencycod.Split(splitter);
        //string agencycode = myarray[1];
        //agencycode = agencycode.Replace(")", "");
        //hiddenagency.Value = agencycode;
        //////////////////////////////////////


        //string clientcode = txtclient.Text;
        //string client;
        /////this is to split and get the client code

        //if (clientcode.IndexOf("(".ToString()) > 0)
        //{
        //    //clientcode.IndexOf(
        //    char[] splitterclie = { '(' };
        //    string[] myarray1 = clientcode.Split(splitterclie);

        //    client = myarray1[1];
        //    client = client.Replace(")", null);

        //    /////this is to chk whether this code exixts in the database if exists than it is a register client else
        //    ///it is walkinn client
        //    DataSet dcl = new DataSet();
        //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        //    {
        //        NewAdbooking.Classes.BookingMaster chkclient = new NewAdbooking.Classes.BookingMaster();
        //        dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
        //    }
        //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        //    {
        //        NewAdbooking.classesoracle.BookingMaster chkclient = new NewAdbooking.classesoracle.BookingMaster();
        //        dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
        //    }
        //    else
        //    {
        //        NewAdbooking.classmysql.BookingMaster chkclient = new NewAdbooking.classmysql.BookingMaster();
        //        dcl = chkclient.forwalkclient(client, Session["compcode"].ToString());
        //    }
        //    if (dcl.Tables[0].Rows.Count > 0)
        //    {

        //    }
        //    else
        //    {
        //        client = clientcode;
        //    }

        //}
        //else
        //{

        //    client = clientcode;
        //}
        ///////////////////////////////////////////////
        //string agencyaddress = txtagencyaddress.Text;
        //string clientaddresses = txtclientadd.Text;
        //string agency = drpagscode.SelectedValue;
        //agency = hiddensubcode.Value;
        //string dockitno = txtdockitno1.Text;
        //string execnamecode = txtexecname.Text;
        ////execnamecode = hiddenzone.Value;

        ////char[] splitterex = { '(' };
        //string[] myarrayex = execnamecode.Split(splitter);
        //string execname = myarrayex[1];
        //execname = execname.Replace(")", "");

        //string execzone = txtexeczone.Text;
        //execzone = hiddenzone.Value;
        //string productcode = txtproduct.Text;
        //string[] myarraypr;
        //string product;
        //if (productcode != "")
        //{
        //    myarraypr = productcode.Split(splitter);
        //    product = myarraypr[1];
        //    product = product.Replace(")", "");
        //}
        //else
        //{
        //    product = "";
        //}

        //string brand = drpbrand.SelectedValue;
        //brand = hiddenbrand.Value;
        //string keyno = txtkeyno.Text;
        //string billremark = txtbillremark.Text;
        //string printremark = txtprintremark.Text;
        //string package;//=drppackage.SelectedValue;
        //package = hiddenpackage.Value;
        //string insertion = txtinsertion.Text;

        //string startdate = "";
        //if (txtdummydate.Text != "")
        //{
        //    startdate = txtdummydate.Text = getdatechk.getDate(dateformat, txtdummydate.Text);
        //}
        //else
        //{
        //    startdate = "";
        //}
        //string repeatdate = txtrepeatingdate.Text;
        ////string adtype=drpbooktype.SelectedValue;
        //string adtype = "DI0";
        //string bookingtype = drpbooktype.SelectedValue;
        //string adcategory = drpadcategory.SelectedValue;
        //string subcategory = drpadsubcategory.SelectedValue;
        //string color = drpcolor.SelectedValue;
        //////to split uom
        ////char[] splitteruom = { '+' };
        ////string[] myarrayuom = drpuom.SelectedValue.Split(splitteruom);

        ////client = myarray1[1];
        //string uom = drpuom.SelectedValue;
        //string pageposition = drppageposition.SelectedValue;
        //string pagetype = drppagetype.SelectedValue;
        //string pageno = txtpageno.Text;
        ////string adtype=drpadstype.SelectedValue;
        //string adsizheight = txtadsize1.Text;// txtadsizetypeheight.Text;
        //string adsizwidth = txtadsize2.Text;// txtadsizetypewidth.Text;
        //string ratecode = txtratecode.SelectedValue;
        //ratecode = hiddenratecode.Value;
        //string scheme = drpscheme.Text;
        //scheme = hiddenscheme.Value;
        //string currency = drpcurrency.SelectedValue;
        //string agreedrate = txtagreedrate.Text;
        //string agreedamt = txtagreedamt.Text;
        //string spedisc = txtspedisc.Text;
        //string spacedisx = txtspacedisc.Text;
        //string adsizetype = drpadstype.SelectedValue;
        //string specialcharges = txtextracharges.Text;
        ///////new
        //string agencytype = txtagencytype.Text;
        //string agencystatus = txtagencystatus.Text;
        //agencystatus = hiddenstatus.Value;
        //string paymode = txtagencypaymode.SelectedValue;
        //paymode = hiddenpay.Value;
        //string agencredit = txtcreditperiod.Text;
        //string cardrate = txtcardrate.Text;
        //string cardamount = txtcardamt.Text;
        //string discount = txtdiscount.Text;
        //string discountper = txtdiscpre.Text;
        //string billaddress = txtbilladdress.Text;
        //string totarea = txttotalarea.Text;
        //string billcycle = drpbillcycle.SelectedValue;
        //string revenuecenter = drprevenue.SelectedValue;
        //string billpay = drppaymenttype.SelectedValue;
        //billpay = hiddenbillpay.Value;

        //string billheight = txtbillheight.Text;
        //string billwidth = txtbillwidth.Text;
        //string billto = drpbillto.SelectedValue;
        //billto = hiddenbillto.Value;
        //string invoices = txtinvoice.Text;
        //string vts = txtvts.Text;
        //string tradedisc = txttradedisc.Text;
        //string agencyout = txtagencyoutstand.Text;
        //string boxcode = drpboxcode.SelectedValue;
        //string boxno = txtboxno.Text;
        //boxno = hiddenboxno.Value;
        //string boxaddress = txtboxaddress.Text;
        //string boxagency;
        //string boxclient;
        //string tfn;
        //string coupan;
        //string campaign = txtcamp.Text;
        //string bill_amt = txtbillamt.Text;
        //string pageprem = drppageprem.SelectedValue;
        //string pageamt = txtpageamt.Text;
        //string premper = txtpremper.Text;
        //string grossamt = txtgrossamt.Text;
        //string adsizcolumn = txtcolum.Text;
        //string billcolumn = "";
        //Decimal billarea = Convert.ToDecimal(txtbillwidth.Text) * Convert.ToDecimal(txtbillheight.Text);
        //string specdiscper = txtspediscper.Text;
        //string spacediscper = txtspadiscper.Text;
        //string paidins = txtpaid.Text;
        //string dealrate = txtdealrate.Text;
        //string deviation = txtdeviation.Text;
        //string varient = "";
        //if (drpvarient.Items.Count > 0)
        //{
        //    varient = drpvarient.SelectedValue;
        //}
        //varient = hiddenvar.Value;
        //string contractname = txtcontractname.Text;
        //string dealtyp = txtcontracttype.Text;
        //string cardname = txtcardname.Text;
        //string cardtype = drptype.SelectedValue;
        //string cardmonth = drpmonth.SelectedValue;
        //string cardyear = drpyear.SelectedValue;
        //string cardno = txtcardno.Text;
        //string receiptno = txtreceipt.Text;
        //receiptno = hiddenreceiptno.Value;
        //string adscat3 = "0";
        //string adscat4 = "0";
        //string adscat5 = "0";
        //string bgcolor = "0";
        //string bulletcode = "0";
        //string bulletprm = "";
        //string material = drpmatsta.SelectedValue;

        //string variant_name = drpvarient.SelectedValue;


        //if (chkage.Checked == true)
        //{
        //    boxagency = "1";
        //}
        //else
        //{
        //    boxagency = "0";
        //}
        //if (chkclie.Checked == true)
        //{
        //    boxclient = "1";
        //}
        //else
        //{
        //    boxclient = "0";
        //}

        //if (chktfn.Checked == true)
        //{
        //    tfn = "1";
        //}
        //else
        //{
        //    tfn = "0";
        //}
        //if (chkcoupan.Checked == true)
        //{
        //    coupan = "1";
        //}
        //else
        //{
        //    coupan = "0";
        //}


        //string retainer = drpretainer.Text; //*6Aug* drpretainer.SelectedValue;


        //if (saveormodify == "0")
        //{
        //    ///////if 0 than autogenerate the cio booking id and if 1 than autogenerate dockit no.
        //    //autogenerated("0");
        //    ciobookid = txtciobookid.Text;

        //    DataSet dck = new DataSet();
        //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        //    {
        //        NewAdbooking.Classes.BookingMaster chkbookid = new NewAdbooking.Classes.BookingMaster();
        //        dck = chkbookid.bookidchk(Session["compcode"].ToString(), txtciobookid.Text, agency, agencycode, rono, "0");
        //    }
        //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        //    {
        //        NewAdbooking.classesoracle.BookingMaster chkbookid = new NewAdbooking.classesoracle.BookingMaster();
        //        dck = chkbookid.bookidchk(Session["compcode"].ToString(), txtciobookid.Text, agency, agencycode, rono, "0");
        //    }
        //    else
        //    {
        //        NewAdbooking.classmysql.BookingMaster chkbookid = new NewAdbooking.classmysql.BookingMaster();
        //        dck = chkbookid.bookidchk(Session["compcode"].ToString(), txtciobookid.Text, agency, agencycode, rono, "0");
        //    }

        //    if (dck.Tables[0].Rows.Count >= 1)
        //    {
        //        message = "This Booking Id Has Been Assigned";
        //        AspNetMessageBox(message);
        //        btnCancel_Click(sender, e);
        //        return;

        //    }





        //    if (txtrono.Text == "")
        //    {
        //        autogenerated("1");
        //        dockitno = txtdockitno1.Text;
        //        if (Session["rostatus"].ToString() == "1")
        //        {
        //            drprostatus.SelectedValue = "1";
        //            rostatus = drprostatus.SelectedValue;
        //        }
        //    }

        //    /*//////////////////////////////////////////////////////////////////////////////////////////////////
        //     if the package selected has a rategroup code(in rate master) and matches with one of rate group code in agency or in client master
        //     * than allow booking and if null in both agency as well as client than also booking is allowed but if the rate
        //     * group of rate master with referrence to package selected in booking master does not match with agency nor
        //     * with client than booking is now allowed
        //     */

        //    DataSet dgr = new DataSet();
        //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        //    {
        //        NewAdbooking.Classes.BookingMaster chkrategrupcode = new NewAdbooking.Classes.BookingMaster();
        //        dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, "DI0", Session["compcode"].ToString(), agency, client, Session["dateformat"].ToString());
        //    }
        //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        //    {
        //        NewAdbooking.classesoracle.BookingMaster chkrategrupcode = new NewAdbooking.classesoracle.BookingMaster();
        //        dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, "DI0", Session["compcode"].ToString(), agency, client,Session["dateformat"].ToString());
        //    }
        //    else
        //    {
        //        NewAdbooking.classmysql.BookingMaster chkrategrupcode = new NewAdbooking.classmysql.BookingMaster();
        //        dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, "DI0", Session["compcode"].ToString(), agency, client);
        //    }

        //    if (dgr.Tables[0].Rows.Count > 0)
        //    {
        //        rategr = dgr.Tables[0].Rows[0].ItemArray[0].ToString();
        //    }
        //    if (dgr.Tables[2].Rows.Count > 0)
        //    {
        //        agencyrate = dgr.Tables[2].Rows[0].ItemArray[0].ToString();
        //    }
        //    if (dgr.Tables[1].Rows.Count > 0)
        //    {
        //        clientrate = dgr.Tables[1].Rows[0].ItemArray[0].ToString();
        //    }

        //    //if (agencyrate != "" && clientrate != "")
        //    //{
        //    //    if (rategr != agencyrate && rategr != clientrate)
        //    //    {
        //    //        message = "Booking is not allowed";
        //    //        AspNetMessageBox(message);
        //    //        return;

        //    //    }
        //    //}


        //    DataSet dins = new DataSet();
        //    //for booking cancellation..
        //    DataSet dscancel = new DataSet();
        //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        //    {

        //        NewAdbooking.Classes.BookingMaster insert = new NewAdbooking.Classes.BookingMaster();
        //        dins = insert.insertbooking1(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, prev_ga, "0", variant_name, auditstatus);
        //        if (srtcancel == "1")
        //        {
        //            dscancel = insert.cancelbooking(prev_cioid);
        //        }
        //        dscancel.Dispose();
        //    }
        //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        //    {
        //        NewAdbooking.classesoracle.BookingMaster insert = new NewAdbooking.classesoracle.BookingMaster();
        //        dins = insert.insertbooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, prev_ga, "0", variant_name, "0", "0", "0", "0", "0", Session["dateformat"].ToString(), retainer, txtaddagencycommrate.Text,"");
        //       if (srtcancel == "1")
        //        {
        //            dscancel = insert.cancelbooking(prev_cioid);
        //        }
        //        dscancel.Dispose();
        //    }
        //    else
        //    {
        //        NewAdbooking.classmysql.BookingMaster insert = new NewAdbooking.classmysql.BookingMaster();
        //        // dins = insert.insertbooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, Session["compcode"].ToString(), Session["userid"].ToString(), specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, billarea, specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, prev_ga, "0", variant_name, "0", "0", "0", "0", "0");
        //        /*if (srtcancel == "1")
        //        {
        //            dscancel = insert.cancelbooking(prev_cioid);
        //        }
        //        dscancel.Dispose();*/
        //    }

        //    /*
        //     this function is created in the javascript to store the insertion line in the table
        //     */

        //    ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "aa", "saveinsertion()", true);
        //    /////////////////////////////////////////////////////////////////////////////////////

        //    /*
        //     *This is the coding to save the images from the Temp folder to main folder
        //     */

        //    string savename = "";
        //    if (Session["imgname"] != null)
        //    {
        //        string filename = Session["imgname"].ToString();
        //        char[] splitimg = { '+' };
        //        string[] array = filename.Split(splitimg);

        //        /////////////this is to attach the name file
        //        string insertname = Session["insertname"].ToString();
        //        char[] splitins ={ '/' };
        //        string[] array1 = insertname.Split(splitins);


        //        for (int z = 0; z <= array.Length - 1; z++)
        //        {
        //            if (array[z] != "")
        //            {
        //                //char[] split ={ '.' };
        //                //string[] arraypoint = array[z].Split(split); 
        //                string str2 = array[z];
        //                int ind = str2.LastIndexOf(".");
        //                int len = (str2.Length) - ind;
        //                string tot = str2.Substring(ind, len);

        //                if (array[z] != null && array[z] != "undefined")
        //                {
        //                    savename = array[z];

        //                    if (!System.IO.Directory.Exists(Server.MapPath("Orignal/" + txtciobookid.Text)))
        //                    {
        //                        System.IO.Directory.CreateDirectory(Server.MapPath("Orignal/" + txtciobookid.Text));
        //                    }

        //                    if (System.IO.Directory.Exists(Server.MapPath("Temp/")))
        //                    {
        //                        System.IO.File.Copy(Server.MapPath("Temp/" + array[z]), Server.MapPath("Orignal/" + ciobookid + "/" + array[z]), true);

        //                        System.IO.File.Move(Server.MapPath("Orignal/" + ciobookid + "/" + array[z]), Server.MapPath("Orignal/" + ciobookid + "/" + ciobookid + "-" + array1[z] + tot));

        //                        System.IO.File.Delete(Server.MapPath("Temp/" + array[z]));
        //                    }
        //                }
        //            }

        //        }


        //    }

        //    Session["imgname"] = null;
        //    Session["Tempimgname"] = null;
        //    Session["insertname"] = null;
        //    Session["Tempinsertname"] = null;
        //    hiddencalendar.Value = "0";

        //    //  txtappby.Enabled = false;
        //    // txtaudit.Enabled = false;
        //    txtrono.Enabled = false;
        //    txtrodate.Enabled = false;
        //    txtcaption.Enabled = false;
        //    drpbillstatus.Enabled = false;
        //    drprostatus.Enabled = false;
        //    txtagency.Enabled = false;
        //    txtclient.Enabled = false;
        //    txtagencyaddress.Enabled = false;
        //    txtclientadd.Enabled = false;
        //    drpagscode.Enabled = false;
        //    txtdockitno1.Enabled = false;
        //    txtexecname.Enabled = false;
        //    txtexeczone.Enabled = false;
        //    txtproduct.Enabled = false;
        //    drpbrand.Enabled = false;
        //    txtkeyno.Enabled = false;
        //    txtbillremark.Enabled = false;
        //    txtprintremark.Enabled = false;
        //    drppackage.Enabled = false;
        //    txtinsertion.Enabled = false;
        //    txtdummydate.Enabled = false;
        //    txtrepeatingdate.Enabled = false;
        //    drpbooktype.Enabled = false;
        //    drpadcategory.Enabled = false;
        //    drpadsubcategory.Enabled = false;

        //    drpadcat3.Enabled = false;
        //    drpadcat4.Enabled = false;
        //    drpadcat5.Enabled = false;

        //    drpcolor.Enabled = false;
        //    drpuom.Enabled = false;
        //    drppageposition.Enabled = false;
        //    drppagetype.Enabled = false;
        //    txtpageno.Enabled = false;
        //    drpadstype.Enabled = false;
        //    //txtadsizetypeheight.Enabled = false;
        //    // txtadsizetypewidth.Enabled = false;
        //    txtratecode.Enabled = false;
        //    drpscheme.Enabled = false;
        //    //   drpschemepck.Enabled = false;
        //    drpcurrency.Enabled = false;
        //    txtagreedrate.Enabled = false;
        //    txtagreedamt.Enabled = false;
        //    txtspedisc.Enabled = false;
        //    txtspacedisc.Enabled = false;
        //    txtextracharges.Enabled = false;
        //    txtdatetime.Enabled = false;
        //    txtrepeatingdate.Enabled = false;
        //    txtadsize1.Enabled = false;
        //    txtadsize2.Enabled = false;
        //    txttotalarea.Enabled = false;
        //    txtcardrate.Enabled = false;
        //    txtcardamt.Enabled = false;
        //    txtdiscount.Enabled = false;
        //    txtdiscpre.Enabled = false;
        //    txtrepeatingdate.Enabled = false;
        //    drpbillcycle.Enabled = false;
        //    drprevenue.Enabled = false;
        //    drppaymenttype.Enabled = false;
        //    txtbillheight.Enabled = false;
        //    txtbillwidth.Enabled = false;
        //    drpbillto.Enabled = false;
        //    txtinvoice.Enabled = false;
        //    txtvts.Enabled = false;
        //    txtbilladdress.Enabled = false;
        //    txttradedisc.Enabled = false;
        //    txtagencyoutstand.Enabled = false;

        //    txtcolum.Enabled = false;
        //    // txtbillcolumn.Enabled = false;
        //    // txtbillarea.Enabled = false;
        //    txtspediscper.Enabled = false;
        //    txtspadiscper.Enabled = false;
        //    drpboxcode.Enabled = false;
        //    drpboxcode.SelectedValue = "0";
        //    txtboxno.Enabled = false;
        //    txtboxno.Text = "";
        //    chkage.Enabled = false;
        //    chkage.Checked = false;
        //    chkclie.Enabled = false;
        //    chkclie.Checked = false;
        //    drpvarient.Enabled = false;
        //    txtagencypaymode.Enabled = false;
        //    drpmatsta.Enabled = false;
        //    drpmatsta.SelectedValue = "0";
        //    drpvarient.SelectedValue = "0";
        //    txtboxaddress.Text = "";
        //    txtbillamt.Text = "";
        //    txtpageamt.Text = "";
        //    txtpremper.Text = "";
        //    txtgrossamt.Text = "";
        //    drppageprem.SelectedValue = "0";


        //    // txtappby.Text = "";
        //    //txtaudit.Text = "";
        //    txtcolum.Text = "";
        //    //txtbillcolumn.Text = "";
        //    ////txtbillarea.Text = "" = "";
        //    txtspediscper.Text = "";
        //    txtspadiscper.Text = "";
        //    txtrono.Text = "";
        //    txtrodate.Text = "";
        //    txtcaption.Text = "";
        //    drpbillstatus.SelectedValue = "0";
        //    drprostatus.SelectedValue = "0";
        //    txtagency.Text = "";
        //    txtclient.Text = "";
        //    txtagencyaddress.Text = "";
        //    txtclientadd.Text = "";
        //    drpagscode.SelectedValue = "0";
        //    txtdockitno1.Text = "";
        //    txtexecname.Text = "";
        //    txtexeczone.Text = "";
        //    txtproduct.Text = "";
        //    drpbrand.SelectedValue = "0";
        //    txtkeyno.Text = "";
        //    txtbillremark.Text = "";
        //    txtprintremark.Text = "";
        //    // drppackage.SelectedValue = "0";
        //    txtinsertion.Text = "";
        //    txtdummydate.Text = "";
        //    txtrepeatingdate.Text = "";
        //    drpbooktype.SelectedValue = "0";
        //    drpadcategory.SelectedValue = "0";
        //    drpadsubcategory.SelectedValue = "0";

        //    drpadcat3.SelectedValue = "0";
        //    drpadcat4.SelectedValue = "0";
        //    drpadcat5.SelectedValue = "0";

        //    drpcolor.SelectedValue = "0";
        //    drpuom.SelectedValue = "0";
        //    drppageposition.SelectedValue = "0";
        //    drppagetype.SelectedValue = "0";
        //    txtpageno.Text = "";
        //    drpadstype.SelectedValue = "0";
        //    // txtadsizetypeheight.Text = "";
        //    //txtadsizetypewidth.Text = "";
        //    txtratecode.SelectedValue = "0";
        //    drpscheme.Text = "";
        //    //  drpschemepck.SelectedValue = "0";
        //    drpcurrency.SelectedValue = "0";
        //    txtagreedrate.Text = "";
        //    txtagreedamt.Text = "";
        //    txtspedisc.Text = "";
        //    txtspacedisc.Text = "";
        //    txtextracharges.Text = "";
        //    txtagencytype.Text = "";
        //    txtagencystatus.Text = "";
        //    //txtagencypaymode.Items.Clear();
        //    txtagencypaymode.Items.Clear();
        //    txtadsize1.Text = "";
        //    txtadsize2.Text = "";
        //    txttotalarea.Text = "";
        //    txtcardrate.Text = "";
        //    txtcardamt.Text = "";
        //    txtdiscount.Text = "";
        //    txtdiscpre.Text = "";
        //    txtrepeatingdate.Text = "";
        //    drpbillcycle.SelectedValue = "0";
        //    drprevenue.SelectedValue = "0";
        //    // drppaymenttype.Items.Clear();
        //    drppaymenttype.Items.Clear();
        //    txtbillheight.Text = "";
        //    txtbillwidth.Text = "";
        //    //drpbillto.SelectedValue = "0";
        //    drpbillto.Items.Clear();
        //    txtinvoice.Text = "";
        //    txtvts.Text = "";
        //    txtbilladdress.Text = "";
        //    txttradedisc.Text = "";
        //    txtagencyoutstand.Text = "";
        //    txtcreditperiod.Text = "";
        //    //txtciobookid.Text = "";


        //    //grd_SpaceCheck.Visible = false;
        //  //  ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz0", "document.getElementById('drpinsertion').options.length=0;document.getElementById('drpedition').options.length=0;document.getElementById('divspace').style.display='none';document.getElementById('tblinsert').innerHTML='';document.getElementById('Panel1').innerHTML='<DIV id=Divn1 style=\"BORDER-RIGHT: thin groove; BORDER-TOP: thin groove; FONT-SIZE: 6pt; VISIBILITY: hidden; BORDER-LEFT: thin groove; WIDTH: 60px; BORDER-BOTTOM: thin groove; POSITION: absolute; HEIGHT: 80px\"><IMG class=drag id=Image1 style=\"BORDER-RIGHT: 1px solid; BORDER-TOP: 1px solid; VISIBILITY: hidden; BORDER-LEFT: 1px solid; BORDER-BOTTOM: 1px solid\" src=\"\"> </DIV><DIV id=Divpg1 style=\"BORDER-RIGHT: thin groove; BORDER-TOP: thin groove; FONT-SIZE: 8pt; LEFT: 14px; VISIBILITY: hidden; BORDER-LEFT: thin groove; WIDTH: 20px; BORDER-BOTTOM: thin groove; POSITION: absolute; TOP: 46px; HEIGHT: 10px\"></DIV>';", true);
        //    ScriptManager.RegisterClientScriptBlock(this, typeof(Booking_master), "zz0", "document.getElementById('drpinsertion').options.length=0;document.getElementById('drpedition').options.length=0;document.getElementById('divspace').style.display='none';document.getElementById('Panel1').innerHTML='';", true);

        //    btnExecute_Click(sender, e);

        //    DataSet objDataSetxml1 = new DataSet();
        //    // Read in the XML file
        //    objDataSetxml1.ReadXml(Server.MapPath("XML/errorMessage.xml"));
        //    //message = objDataSetxml1.Tables[0].Rows[0].ItemArray[0].ToString();
        //    message = "Data Saved Sucessfully with CIO Id " + ciobookid + "";



        //    // message = "Value saved";
        //    AspNetMessageBox(message);
        //    // getbuttoncheck(formname);
        //}

    }
    [Ajax.AjaxMethod]
    public DataSet IssuePageDetails(string pdate, string pubcode, string centercode, string editioncode, string suppcode, string ppageno, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objIssuePageDetails = new NewAdbooking.Classes.BookingMaster();
            ds = objIssuePageDetails.clsIssuePageDetails(pdate, pubcode, centercode, editioncode, suppcode, ppageno);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objIssuePageDetails = new NewAdbooking.classesoracle.BookingMaster();
            ds = objIssuePageDetails.clsIssuePageDetails(pdate, pubcode, centercode, editioncode, suppcode, ppageno, dateformat);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet getCurrentBooking(string ciobookid, string iRowid, string ins_id)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objgetCurrentBooking = new NewAdbooking.Classes.BookingMaster();
            ds = objgetCurrentBooking.clsgetCurrentBooking(ciobookid, iRowid, ins_id);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objgetCurrentBooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = objgetCurrentBooking.clsgetCurrentBooking(ciobookid, iRowid, ins_id);
        }
        else
        {
        }
        return ds;
    }



    [Ajax.AjaxMethod]
    public void UpdateBooking_AdDummy(string ciobookid, string iRowid, string ins_id, string pdate, string ppub, string pbkfor, string pedition, string psecpub, string pcolour, string psplpage, string padtype, string ppageno, string adstatus, string adfilename, double adheight, double adwidth)
    {
        // DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objUpdateBooking_AdDummy = new NewAdbooking.Classes.BookingMaster();
            objUpdateBooking_AdDummy.clsUpdateBooking_AdDummy(ciobookid, iRowid, ins_id, pdate, ppub, pbkfor, pedition, psecpub, pcolour, psplpage, padtype, ppageno, adstatus, adfilename, adheight, adwidth);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objUpdateBooking_AdDummy = new NewAdbooking.classesoracle.BookingMaster();
            objUpdateBooking_AdDummy.clsUpdateBooking_AdDummy(ciobookid, iRowid, ins_id, pdate, ppub, pbkfor, pedition, psecpub, pcolour, psplpage, padtype, ppageno, adstatus, adfilename, adheight, adwidth);
        }
        else
        {
        }
        // return ds;
    }
    [Ajax.AjaxMethod]
    public void UpdatePage_Booking(string ciobookid, string iRowid, string ppageno)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objUpdatePage_Booking = new NewAdbooking.Classes.BookingMaster();
            objUpdatePage_Booking.clsUpdatePage_Booking(ciobookid, iRowid, ppageno);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objUpdatePage_Booking = new NewAdbooking.classesoracle.BookingMaster();
            objUpdatePage_Booking.clsUpdatePage_Booking(ciobookid, iRowid, ppageno);
        }
        else
        {
        }
    }
    [Ajax.AjaxMethod]
    public DataSet getPremPage(string premcode, string id)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objUpdatePage_Booking = new NewAdbooking.Classes.BookingMaster();
            ds = objUpdatePage_Booking.getPremPage(premcode, id);
            // return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objPagePremium = new NewAdbooking.classesoracle.BookingMaster();
            ds = objPagePremium.getPremPage(premcode, id);

        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet getSupplementName(string compcode, string id_buttonText)
    {
        DataSet ds = new DataSet();
        NewAdbooking.Classes.BookingMaster objgetSupplementName = new NewAdbooking.Classes.BookingMaster();
        ds = objgetSupplementName.clsgetSupplementName(compcode, id_buttonText);
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet GetCityCode(string compcode, string editioncode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objGetCityCode = new NewAdbooking.Classes.BookingMaster();
            ds = objGetCityCode.clsGetCityCode(compcode, editioncode);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objGetCityCode = new NewAdbooking.classesoracle.BookingMaster();
            ds = objGetCityCode.clsGetCityCode(compcode, editioncode);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet ExistingBookingVolume(string compcode, string currdate, string edition_Text, string premium, string adpage)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objExistingBookingVolume = new NewAdbooking.Classes.BookingMaster();
            ds = objExistingBookingVolume.clsExistingBookingVolume(compcode, currdate, edition_Text, premium, adpage);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objExistingBookingVolume = new NewAdbooking.classesoracle.BookingMaster();
            ds = objExistingBookingVolume.clsExistingBookingVolume(compcode, currdate, edition_Text, premium, adpage);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet PremiumCode(string compcode, string pubcode, string editioncode, string adPremium)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objPremiumCode = new NewAdbooking.Classes.BookingMaster();
            ds = objPremiumCode.clsPremiumCode(compcode, pubcode, editioncode, adPremium);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objPremiumCode = new NewAdbooking.classesoracle.BookingMaster();
            ds = objPremiumCode.clsPremiumCode(compcode, pubcode, editioncode, adPremium);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet ExistingBookingSize(string compcode, string currdate, string pubcode, string centercode, string editioncode, string suppcode, string premium, string adpage)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objExistingBookingSize = new NewAdbooking.Classes.BookingMaster();
            ds = objExistingBookingSize.clsExistingBookingSize(compcode, currdate, pubcode, centercode, editioncode, suppcode, premium, adpage);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objExistingBookingSize = new NewAdbooking.classesoracle.BookingMaster();
            ds = objExistingBookingSize.clsExistingBookingSize(compcode, currdate, pubcode, centercode, editioncode, suppcode, premium, adpage);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet BookingEditionCode(string compcode, string edition_Text)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objEditionCode = new NewAdbooking.Classes.BookingMaster();
            ds = objEditionCode.clsBookingEditionCode(compcode, edition_Text);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objEditionCode = new NewAdbooking.classesoracle.BookingMaster();
            ds = objEditionCode.clsBookingEditionCode(compcode, edition_Text);
        }
        return ds;
    }
    public string getDate(string dateformat, string dateValue)
    {
        //splitting of date
        string dateReturn = "";
        if (dateValue != "")
        {
            char[] splitterfrom = { '/' };
            string[] myarrayfrom = dateValue.Split(splitterfrom);
            string dd, mm, yyyy;
            if (dateformat == "dd/mm/yyyy")
            {
                //for from date
                dd = myarrayfrom[0];
                mm = myarrayfrom[1];
                yyyy = myarrayfrom[2];

                dateReturn = mm + "/" + dd + "/" + yyyy;


            }
            //else if (dateformat == "yyyy/mm/dd")
            //{
            //    yyyy = myarrayfrom[0];
            //    mm = myarrayfrom[1];
            //    dd = myarrayfrom[2];

            //    dateReturn = mm + "/" + dd + "/" + yyyy;
            //}
            else
            {
                dateReturn = dateValue;
            }
        }
        return dateReturn;
    }


    [Ajax.AjaxMethod]
    public DataSet bindadcat3(string adcat3, string compcode, string value)
    {
        DataSet dacat = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();

            dacat = getadcat3.getvalfromadcat3(adcat3, compcode, value);
            return dacat;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

            dacat = getadcat3.getvalfromadcat3(adcat3, compcode, value);
            return dacat;
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();

            dacat = getadcat3.getvalfromadcat3(adcat3, compcode, value);
            return dacat;

        }

    }
    [Ajax.AjaxMethod]
    public DataSet getRetainerComm(string reatinername, string compcode)
    {
        DataSet dacat = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();

            dacat = getadcat3.getRetainerComm(reatinername, compcode);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();

            dacat = getadcat3.getRetainerComm(reatinername, compcode);

        }
        return dacat;
    }
    //*6Aug
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindRetainer(string compcode, string reatinername)
    {
        DataSet dsret = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getRetain = new NewAdbooking.Classes.BookingMaster();

            dsret = getRetain.getretainer(compcode, reatinername);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getRetain = new NewAdbooking.classesoracle.BookingMaster();

            dsret = getRetain.getretainer(compcode, reatinername,Session["center"].ToString());

        }
        return dsret;
    }
    [Ajax.AjaxMethod]
    public DataSet get_rate(string noofinsertion, string dateformat, string compcode, string uom, string adtype, string currency, string ratecode, string clientcode, string uomdesc, string agencycode, string newcode, string center, string ratepremtype, string premium, string schemetype)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getrate = new NewAdbooking.Classes.BookingMaster();
            ds = getrate.get_rate_qbc(noofinsertion, dateformat, compcode, uom, adtype, currency, ratecode, clientcode, uomdesc, agencycode, newcode, center, ratepremtype, premium, schemetype);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getrate = new NewAdbooking.classesoracle.BookingMaster();
            ds = getrate.get_rate_qbc(noofinsertion, dateformat, compcode, uom, adtype, currency, ratecode, clientcode, uomdesc, agencycode, newcode, center, ratepremtype, premium, schemetype);
        }
        else
        {

        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet bindcolorForGrid(string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Contract bindcolor = new NewAdbooking.Classes.Contract();
            ds = bindcolor.colorbind(compcode, userid);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Contract bindcolor = new NewAdbooking.classesoracle.Contract();
                ds = bindcolor.colorbind(compcode, userid);
            }
            else
            {
                NewAdbooking.classmysql.Contract bindcolor = new NewAdbooking.classmysql.Contract();
                ds = bindcolor.colorbind(compcode, userid);
            }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet bindpagePositioninGrid(string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.bindPagePosition(compcode);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
                ds = clsbooking.bindPagePosition(compcode);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
                ds = clsbooking.bindPagePosition(compcode);
            }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet advcatinGrid(string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bind = new NewAdbooking.Classes.BookingMaster();
            ds = bind.advdatacategory(compcode, "DI0");
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bind = new NewAdbooking.classesoracle.BookingMaster();
                ds = bind.advdatacategory(compcode, "DI0");
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster bind = new NewAdbooking.classmysql.BookingMaster();
                ds = bind.advdatacategory(compcode, "DI0");
            }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet getadsubcat_grid(string compcode, string adcat)
    {
        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.CombinationMaster cls_comb = new NewAdbooking.Classes.CombinationMaster();
            da = cls_comb.advdatasubcatcat(compcode, adcat);
            return da;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.CombinationMaster cls_comb = new NewAdbooking.classesoracle.CombinationMaster();
                da = cls_comb.advdatasubcatcat(compcode, adcat);
                return da;
            }
            else
            {
                NewAdbooking.classmysql.CombinationMaster cls_comb = new NewAdbooking.classmysql.CombinationMaster();
                da = cls_comb.advdatasubcatcat(compcode, adcat);
                return da;
            }
    }

    [Ajax.AjaxMethod]
    public DataSet getBookingIdNo(string compcode, string auto, string no, string cioid)
    {
        DataSet da = new DataSet();
        if (no == "0" || no == "1" || no == "2")
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster autocode = new NewAdbooking.Classes.BookingMaster();
                da = autocode.autogenrated(compcode, auto, no);
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.BookingMaster autocode = new NewAdbooking.classesoracle.BookingMaster();
                    da = autocode.autogenrated(compcode, auto, no);

                }
                else
                {
                    NewAdbooking.classmysql.BookingMaster autocode = new NewAdbooking.classmysql.BookingMaster();
                    da = autocode.autogenrated(compcode, auto, no);
                }
        }

        else if (no == "3")
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.BookingMaster objMaxReceipt_No = new NewAdbooking.Classes.BookingMaster();
                da = objMaxReceipt_No.clsMaxReceipt();
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster objMaxReceipt_No = new NewAdbooking.classesoracle.BookingMaster();
                da = objMaxReceipt_No.clsMaxReceipt(cioid);
            }
            else
            {

            }
        }
        return da;
    }

    [Ajax.AjaxMethod]
    public string getdateCHK(string dateformat, string date)
    {
        datesave getdatechk = new datesave();
        string ret = getdatechk.getDate(dateformat, date);
        return ret;
    }

    [Ajax.AjaxMethod]
    public DataSet chkwalkinClient(string client, string compcode)
    {
        DataSet dcl = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster chkclient = new NewAdbooking.Classes.BookingMaster();
            dcl = chkclient.forwalkclient(client, compcode);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster chkclient = new NewAdbooking.classesoracle.BookingMaster();
                dcl = chkclient.forwalkclient(client, compcode);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster chkclient = new NewAdbooking.classmysql.BookingMaster();
                dcl = chkclient.forwalkclient(client, compcode);
            }
        return dcl;
    }

    [Ajax.AjaxMethod]
    public DataSet bookidchk(string compcode, string cioid, string agency, string agencycode, string rono, string val,string keyno)
    {
        DataSet dck = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster chkbookid = new NewAdbooking.Classes.BookingMaster();
            dck = chkbookid.bookidchk(compcode, cioid, agency, agencycode, rono, "0");
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster chkbookid = new NewAdbooking.classesoracle.BookingMaster();
                dck = chkbookid.bookidchk(compcode, cioid, agency, agencycode, rono, "0",keyno);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster chkbookid = new NewAdbooking.classmysql.BookingMaster();
                dck = chkbookid.bookidchk(compcode, cioid, agency, agencycode, rono, "0");
            }
        return dck;
    }

    [Ajax.AjaxMethod]
    public DataSet chkrategroup(string color, string adcategory, string subcategory, string package, string ratecode, string startdate, string currency, string adtype, string compcode, string agency, string client, string dateformat)
    {
        DataSet dgr = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster chkrategrupcode = new NewAdbooking.Classes.BookingMaster();
            dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, adtype, compcode, agency, client, dateformat);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster chkrategrupcode = new NewAdbooking.classesoracle.BookingMaster();
                dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, adtype, compcode, agency, client, dateformat);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster chkrategrupcode = new NewAdbooking.classmysql.BookingMaster();
                dgr = chkrategrupcode.chkrategroup(color, adcategory, subcategory, package, ratecode, startdate, currency, adtype, compcode, agency, client);
            }
        return dgr;
    }

    //[Ajax.AjaxMethod]

    //public DataSet insertBooking(string adsizetype, string branch, string booked_by, string prevbook, string date_time, string ciobookid, string approvedby, string audit, string rono, string rodate, string caption, string billstatus, string rostatus, string agency, string client, string agencyaddress, string clientaddresses, string agencycode, string dockitno, string execname, string execzone, string product, string brand, string keyno, string billremark, string printremark, string package, string insertion, string startdate, string repeatdate, string adtype, string adcategory, string subcategory, string color, string uom, string pageposition, string pagetype, string pageno, string adsizheight, string adsizwidth, string ratecode, string scheme, string currency, string agreedrate, string agreedamt, string spedisc, string spacedisx, string compcode, string userid, string specialcharges, string agencytype, string agencystatus, string paymode, string agencredit, string cardrate, string cardamount, string discount, string discountper, string billaddress, string totarea, string billcycle, string revenuecenter, string billpay, string billheight, string billwidth, string billto, string invoices, string vts, string tradedisc, string agencyout, string boxcode, string boxno, string boxaddress, string boxagency, string boxclient, string bookingtype, string tfn, string coupan, string campaign, string bill_amt, string pageprem, string pageamt, string premper, string grossamt, string adsizcolumn, string billcolumn, string billarea, string specdiscper, string spacediscper, string paidins, string dealrate, string deviation, string varient, string contractname, string dealtyp, string cardname, string cardtype, string cardmonth, string cardyear, string cardno, string receiptno, string adscat3, string adscat4, string adscat5, string bgcolor, string bulletcode, string bulletprm, string material, string val1, string prev_cioid, string prev_receipt, string prev_ga, string val2, string val3, string val4, string val5, string val6, string val7, string val8, string dateformat, string retainer, string txtaddagencycommrate, string srtcancel, string auditstatus)
    //{
    //    DataSet dins = new DataSet();
    //    DataSet dscancel = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        //NewAdbooking.Classes.BookingMaster insert = new NewAdbooking.Classes.BookingMaster();
    //        //dins = insert.insertbooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, compcode, userid, specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, Convert.ToDecimal(billarea), specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, Convert.ToDecimal(prev_ga), "0", "0", "0", "0", "0", "0", "0", dateformat, retainer, txtaddagencycommrate, "");
    //        //if (srtcancel == "1")
    //        //{
    //        //    dscancel = insert.cancelbooking(prev_cioid);
    //        //}
    //        //dscancel.Dispose();

    //    }
    //    else
    //        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //        {
    //            NewAdbooking.classesoracle.BookingMaster insert = new NewAdbooking.classesoracle.BookingMaster();
    //            dins = insert.insertbooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, compcode, userid, specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, Convert.ToDecimal(billarea), specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, Convert.ToDecimal(prev_ga), "0", "0", "0", "0", "0", "0", "0", dateformat, retainer, txtaddagencycommrate, "");

    //            if (srtcancel == "1")
    //            {
    //                dscancel = insert.cancelbooking(prev_cioid);
    //            }
    //            dscancel.Dispose();

    //        }
    //        else
    //        {
    //            //NewAdbooking.classmysql.BookingMaster insert = new NewAdbooking.classmysql.BookingMaster();
    //            //dins = insert.insertbooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, compcode, userid, specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, Convert.ToDecimal(billarea), specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "", prev_cioid, prev_receipt, Convert.ToDecimal(prev_ga), "0", "0", "0", "0", "0", "0", "0");
    //            //if (srtcancel == "1")
    //            //{
    //            //    dscancel = insert.cancelbooking(prev_cioid);
    //            //}
    //            //dscancel.Dispose();
    //        }
    //    return dins;
    //}
    [Ajax.AjaxMethod]
    public void deleteid(string cioid, string compcode)
    {
        DataSet ddl = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster delid = new NewAdbooking.Classes.BookingMaster();
            ddl = delid.deleteid(cioid, compcode);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster delid = new NewAdbooking.classesoracle.BookingMaster();
                ddl = delid.deleteid(cioid, compcode);

            }
            else
            {
                NewAdbooking.classmysql.BookingMaster delid = new NewAdbooking.classmysql.BookingMaster();
                ddl = delid.deleteid(cioid, compcode);
            }
    }


    [Ajax.AjaxMethod]
    public void InsertintoTemp(string cioid, string compcode)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objInsertintoTemp = new NewAdbooking.classesoracle.BookingMaster();
            objInsertintoTemp.clsInsertintoTemp(cioid, compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objInsertintoTemp = new NewAdbooking.Classes.BookingMaster();
            objInsertintoTemp.clsInsertintoTemp(cioid, compcode);
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void Insert_rcpthdr(string compcode, string userid, string rcptno, string date_time, string chqno, string chqdate, string chqamt, string bankname, string ag_codesubcode, string ag_code, string ag_subcode, string ptype, string dateformat, string remarks)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objInsert_rcpthdr = new NewAdbooking.classesoracle.BookingMaster();
            objInsert_rcpthdr.clsInsert_rcpthdr(compcode, userid, Session["center"].ToString(), "RCR", rcptno, date_time, ptype, Session["center"].ToString(), "", chqamt, ag_codesubcode, "", chqno, chqdate, bankname, remarks, "", date_time, ag_code, ag_subcode, dateformat);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objInsert_rcpthdr = new NewAdbooking.Classes.BookingMaster();
            objInsert_rcpthdr.clsInsert_rcpthdr(compcode, userid, Session["center"].ToString(), "RCR", rcptno, date_time, ptype, Session["center"].ToString(), "", chqamt, ag_codesubcode, "", chqno, chqdate, bankname, remarks, "", date_time, ag_code, ag_subcode, dateformat);
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void Insert_rcptdet(string compcode, string userid, string rcptno, string date_time, string chqno, string chqdate, string chqamt, string bankname, string ag_codesubcode, string ag_code, string ag_subcode, string ptype, string dateformat, string remarks)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objInsert_rcptdet = new NewAdbooking.classesoracle.BookingMaster();
            objInsert_rcptdet.clsInsert_rcptdet(compcode, userid, Session["center"].ToString(), "RCR", rcptno, date_time, ptype, Session["center"].ToString(), "", chqamt, ag_codesubcode, chqno, chqdate, bankname, date_time, ag_code, ag_subcode, dateformat, remarks);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objInsert_rcptdet = new NewAdbooking.Classes.BookingMaster();
            objInsert_rcptdet.clsInsert_rcptdet(compcode, userid, Session["center"].ToString(), "RCR", rcptno, date_time, ptype, Session["center"].ToString(), "", chqamt, ag_codesubcode, chqno, chqdate, bankname, date_time, ag_code, ag_subcode, dateformat, remarks);
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void update_chqinfo(string compcode, string rcptno, string chqno, string chqdate, string chqamt, string bankname, string ag_codesubcode, string ag_code, string ag_subcode, string ppaymodres, string ptype, string date_time, string dateformat, string remarks)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objupdate_chqinfo = new NewAdbooking.classesoracle.BookingMaster();
            objupdate_chqinfo.clsupdate_chqinfo(compcode, rcptno, chqno, chqdate, chqamt, bankname, ag_codesubcode, ag_code, ag_subcode, ppaymodres, ptype, date_time, dateformat, remarks);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objupdate_chqinfo = new NewAdbooking.Classes.BookingMaster();
            objupdate_chqinfo.clsupdate_chqinfo(compcode, rcptno, chqno, chqdate, chqamt, bankname, ag_codesubcode, ag_code, ag_subcode, ppaymodres, ptype, date_time, dateformat, remarks, Session["center"].ToString(), Session["userid"].ToString());
        }
    }


    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void Insert_outstand(string compcode, string userid, string rcptno, string date_time, string chqno, string chqdate, string chqamt, string bankname, string ag_codesubcode, string ag_code, string ag_subcode, string ptype, string dateformat)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objInsert_outstand = new NewAdbooking.classesoracle.BookingMaster();
            objInsert_outstand.clsInsert_outstand(compcode, userid, Session["center"].ToString(), "RCR", rcptno, date_time, ptype, Session["center"].ToString(), "", chqamt, ag_codesubcode, date_time, ag_code, ag_subcode, dateformat);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objInsert_outstand = new NewAdbooking.Classes.BookingMaster();
            objInsert_outstand.clsInsert_outstand(compcode, userid, Session["center"].ToString(), "RCR", rcptno, date_time, ptype, Session["center"].ToString(), "", chqamt, ag_codesubcode, date_time, ag_code, ag_subcode, dateformat);
        }
    }

    [Ajax.AjaxMethod]
    public void deletefromtemp(string cioid, string compcode)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objdeletefromtemp = new NewAdbooking.classesoracle.BookingMaster();
            objdeletefromtemp.clsdeletefromtemp(cioid, compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster objdeletefromtemp = new NewAdbooking.Classes.BookingMaster();
            objdeletefromtemp.clsdeletefromtemp(cioid, compcode);
        }
    }

    [Ajax.AjaxMethod]
    public DataSet updatebooking(string adsizetype, string branch, string booked_by, string prevbook, string date_time, string ciobookid, string approvedby, string audit, string rono, string rodate, string caption, string billstatus, string rostatus, string agency, string client, string agencyaddress, string clientaddresses, string agencycode, string dockitno, string execname, string execzone, string product, string brand, string keyno, string billremark, string printremark, string package, string insertion, string startdate, string repeatdate, string adtype, string adcategory, string subcategory, string color, string uom, string pageposition, string pagetype, string pageno, string adsizheight, string adsizwidth, string ratecode, string scheme, string currency, string agreedrate, string agreedamt, string spedisc, string spacedisx, string compcode, string userid, string specialcharges, string agencytype, string agencystatus, string paymode, string agencredit, string cardrate, string cardamount, string discount, string discountper, string billaddress, string totarea, string billcycle, string revenuecenter, string billpay, string billheight, string billwidth, string billto, string invoices, string vts, string tradedisc, string agencyout, string boxcode, string boxno, string boxaddress, string boxagency, string boxclient, string bookingtype, string tfn, string coupan, string campaign, string bill_amt, string pageprem, string pageamt, string premper, string grossamt, string adsizcolumn, string billcolumn, string billarea, string specdiscper, string spacediscper, string paidins, string dealrate, string deviation, string varient, string contractname, string dealtyp, string cardname, string cardtype, string cardmonth, string cardyear, string cardno, string receiptno, string adscat3, string adscat4, string adscat5, string bgcolor, string bulletcode, string bulletprm, string material, string val1, string val2, string val3, string val4, string val5, string val6, string val7, string auditstatus, string retainer, string txtaddagencycommrate, string dateformat)
    {
        DataSet dup = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            //NewAdbooking.Classes.BookingMaster update = new NewAdbooking.Classes.BookingMaster();
            //dup = update.updatebooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, compcode, userid, specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, Convert.ToDecimal(billarea), specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "0", "0", "0", "0", "0", "0", "0", auditstatus, dateformat, retainer, txtaddagencycommrate, "");
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster update = new NewAdbooking.classesoracle.BookingMaster();
                dup = update.updatebookingdisp_bill(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, compcode, userid, specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, Convert.ToDecimal(billarea), specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "0", "0", "0", "0", "0", "0", "0", auditstatus, dateformat, retainer, txtaddagencycommrate, "");

            }
            else
            {
                //NewAdbooking.classmysql.BookingMaster update = new NewAdbooking.classmysql.BookingMaster();
                //dup = update.updatebooking(adsizetype, branch, booked_by, prevbook, date_time, ciobookid, approvedby, audit, rono, rodate, caption, billstatus, rostatus, agency, client, agencyaddress, clientaddresses, agencycode, dockitno, execname, execzone, product, brand, keyno, billremark, printremark, package, insertion, startdate, repeatdate, adtype, adcategory, subcategory, color, uom, pageposition, pagetype, pageno, adsizheight, adsizwidth, ratecode, scheme, currency, agreedrate, agreedamt, spedisc, spacedisx, compcode, userid, specialcharges, agencytype, agencystatus, paymode, agencredit, cardrate, cardamount, discount, discountper, billaddress, totarea, billcycle, revenuecenter, billpay, billheight, billwidth, billto, invoices, vts, tradedisc, agencyout, boxcode, boxno, boxaddress, boxagency, boxclient, bookingtype, tfn, coupan, campaign, bill_amt, pageprem, pageamt, premper, grossamt, adsizcolumn, billcolumn, Convert.ToDecimal(billarea), specdiscper, spacediscper, paidins, dealrate, deviation, varient, contractname, dealtyp, cardname, cardtype, cardmonth, cardyear, cardno, receiptno, adscat3, adscat4, adscat5, bgcolor, bulletcode, bulletprm, material, "0", "0", "0", "0", "0", "0", "0", auditstatus, dateformat);
            }
        return dup;
    }

    [Ajax.AjaxMethod]
    public DataSet executeBooking(string compcode, string ciobookid, string docno, string keyno, string rono, string agencycode, string client, string adtype, string dateformat)
    {
        DataSet executequery = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            //NewAdbooking.Classes.BookingMaster execute = new NewAdbooking.Classes.BookingMaster();
            //executequery = execute.executebooking(compcode, ciobookid, docno, keyno, rono, agencycode, client, adtype, dateformat);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster execute = new NewAdbooking.classesoracle.BookingMaster();
                executequery = execute.executebooking_bill(compcode, ciobookid, docno, keyno, rono, agencycode, client, adtype, dateformat);

            }
            else
            {
                //NewAdbooking.classmysql.BookingMaster execute = new NewAdbooking.classmysql.BookingMaster();
                //executequery = execute.executebooking(compcode, ciobookid, docno, keyno, rono, agencycode, client, adtype);
            }
        return executequery;
    }

    [Ajax.AjaxMethod]
    public DataSet bindsubagency(string agency, string compcode)
    {
        DataSet dsbsa = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindsubage = new NewAdbooking.Classes.BookingMaster();

            dsbsa = bindsubage.bindsubagency(agency, compcode);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bindsubage = new NewAdbooking.classesoracle.BookingMaster();

                dsbsa = bindsubage.bindsubagency(agency, compcode);

            }
            else
            {
                NewAdbooking.classmysql.BookingMaster bindsubage = new NewAdbooking.classmysql.BookingMaster();

                dsbsa = bindsubage.bindsubagency(agency, compcode);

            }
        return dsbsa;
    }

    [Ajax.AjaxMethod]
    public DataSet brandbind(string compcode, string product)
    {
        DataSet dsbrand = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster brandbind = new NewAdbooking.Classes.BookingMaster();
            dsbrand = brandbind.bindBrand(compcode, product);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster brandbind = new NewAdbooking.classesoracle.BookingMaster();
                dsbrand = brandbind.bindBrand(compcode, product);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster brandbind = new NewAdbooking.classmysql.BookingMaster();
                dsbrand = brandbind.bindBrand(compcode, product);
            }

        return dsbrand;
    }

    [Ajax.AjaxMethod]
    public DataSet varientbind(string compcode, string brand)
    {
        DataSet dva = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getvarient = new NewAdbooking.Classes.BookingMaster();
            dva = getvarient.bindvarient(brand, compcode);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster getvarient = new NewAdbooking.classesoracle.BookingMaster();
            dva = getvarient.bindvarient(brand, compcode);
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster getvarient = new NewAdbooking.classmysql.BookingMaster();
            dva = getvarient.bindvarient(brand, compcode);
        }
        return dva;
    }

    [Ajax.AjaxMethod]
    public DataSet bindpacforexe(string compcode, string listpck)
    {
        DataSet dsexecut = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindpacforexe = new NewAdbooking.Classes.BookingMaster();
            dsexecut = bindpacforexe.packagebindforexebook(compcode, listpck);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
                dsexecut = bindpacforexe.packagebindforexebook(compcode, listpck);

            }
            else
            {
                NewAdbooking.classmysql.BookingMaster bindpacforexe = new NewAdbooking.classmysql.BookingMaster();
                dsexecut = bindpacforexe.packagebindforexebook(compcode, listpck);
            }
        return dsexecut;
    }

    [Ajax.AjaxMethod]
    public DataSet getPackageInsert(string uom, string cioid)
    {
        DataSet dsinsert = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindpacforexe = new NewAdbooking.classesoracle.BookingMaster();
            dsinsert = bindpacforexe.getPackageInsertBILL(uom, cioid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            //NewAdbooking.Classes.BookingMaster bindpacforexe = new NewAdbooking.Classes.BookingMaster();
            //dsinsert = bindpacforexe.getPackageInsert(uom, cioid);
        }
        return dsinsert;
    }

    [Ajax.AjaxMethod]
    public DataSet ratebind(string adcat, string compcode)
    {
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindrate = new NewAdbooking.Classes.BookingMaster();
            dx = bindrate.ratebind(adcat, compcode);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bindrate = new NewAdbooking.classesoracle.BookingMaster();
                dx = bindrate.ratebind(adcat, compcode);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster bindrate = new NewAdbooking.classmysql.BookingMaster();
                dx = bindrate.ratebind(adcat, compcode);
            }
        return dx;
    }

    [Ajax.AjaxMethod]
    public DataSet getstatuspaymode(string agencycode, string agency, string compcode, string datetimeval, string dateformat, string adtype)
    {
        DataSet dch = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getsta = new NewAdbooking.Classes.BookingMaster();
            dch = getsta.getstatuspaymode(agencycode, agency, compcode, datetimeval, dateformat);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster getsta = new NewAdbooking.classesoracle.BookingMaster();
                dch = getsta.getstatuspaymode(agencycode, agency, compcode, datetimeval, dateformat, adtype);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster getsta = new NewAdbooking.classmysql.BookingMaster();
                dch = getsta.getstatuspaymode(agencycode, agency, compcode, datetimeval);
            }
        return dch;
    }

    [Ajax.AjaxMethod]
    public DataSet getbillval(string agency, string compcode)
    {
        DataSet dbt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getbillto = new NewAdbooking.Classes.BookingMaster();
            dbt = getbillto.getbillval(agency, compcode);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster getbillto = new NewAdbooking.classesoracle.BookingMaster();
                dbt = getbillto.getbillval(agency, compcode);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster getbillto = new NewAdbooking.classmysql.BookingMaster();
                dbt = getbillto.getbillval(agency, compcode);
            }
        return dbt;
    }
    [Ajax.AjaxMethod]
    public DataSet getvalfromadcat3(string agencysubcode, string compcode, string type)
    {
        DataSet dacat = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster getadcat3 = new NewAdbooking.Classes.BookingMaster();
            dacat = getadcat3.getvalfromadcat3(agencysubcode, compcode, type);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster getadcat3 = new NewAdbooking.classesoracle.BookingMaster();
                dacat = getadcat3.getvalfromadcat3(agencysubcode, compcode, type);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster getadcat3 = new NewAdbooking.classmysql.BookingMaster();
                dacat = getadcat3.getvalfromadcat3(agencysubcode, compcode, type);
            }
        return dacat;
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet gettheuom_desc(string compcode, string uom)
    {
        /*
        HttpContext.Current.Session["imgname"] = null;
        HttpContext.Current.Session["Tempimgname"] = null;
        HttpContext.Current.Session["insertname"] = null;
        HttpContext.Current.Session["Tempinsertname"] = null;

        HttpContext.Current.Session["imgname_logo"] = null;
        HttpContext.Current.Session["Tempimgname_logo"] = null;
        HttpContext.Current.Session["insertname_logo"] = null;
        HttpContext.Current.Session["Tempinsertname_logo"] = null;*/
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RateMaster binduom = new NewAdbooking.Classes.RateMaster();
            ds = binduom.getuom_desc(compcode, uom);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.RateMaster binduom = new NewAdbooking.classesoracle.RateMaster();
                ds = binduom.getuom_desc(compcode, uom);

            }
            else
            {
                NewAdbooking.classmysql.RateMaster binduom = new NewAdbooking.classmysql.RateMaster();
                ds = binduom.getuom_desc(compcode, uom);
            }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet get_validdates(string dateformat, string book_date, string pkgname, string adcat, string center, string pkgid, string pkgalias)
    {
        DataSet dvaid = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster chkpublishday = new NewAdbooking.Classes.BookingMaster();
            dvaid = chkpublishday.getvaliddate_qbc_New(dateformat, book_date, pkgname, adcat, center, "CL0", pkgid, pkgalias);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster chkpublishday = new NewAdbooking.classesoracle.BookingMaster();
                dvaid = chkpublishday.getvaliddate_qbc_New(dateformat, book_date, pkgname, adcat, center, "CL0", pkgid, pkgalias);
            }
            else
            {
                NewAdbooking.classmysql.BookingMaster chkpublishday = new NewAdbooking.classmysql.BookingMaster();
                dvaid = chkpublishday.getvaliddate_qbc(dateformat, book_date, pkgname);
            }
        return dvaid;
    }

    //cancel booked ad
    [Ajax.AjaxMethod]
    public void deleteBooking(string cioid)
    {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster cls_book = new NewAdbooking.Classes.BookingMaster();
            cls_book.deleteBooking(cioid);
            // cls_book.deleteBooking(cioid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster cls_book = new NewAdbooking.classesoracle.BookingMaster();
            cls_book.deleteBooking(cioid);
        }
    }

    [Ajax.AjaxMethod]
    public DataSet ChequeInfo(string compcode, string receipt)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster cls_book = new NewAdbooking.Classes.BookingMaster();
            ds = cls_book.clsChequeInfo(compcode, receipt);
            // cls_book.deleteBooking(cioid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster objChequeInfo = new NewAdbooking.classesoracle.BookingMaster();
            ds = objChequeInfo.clsChequeInfo(compcode, receipt);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public string checkCIOIDReference(string compcode, string cioid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster cls_booking = new NewAdbooking.classesoracle.BookingMaster();
            ds = cls_booking.checkCIOIDReference(compcode, cioid);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster cls_booking = new NewAdbooking.Classes.BookingMaster();
            ds = cls_booking.checkCIOIDReference(compcode, cioid);
        }
        string cio_ID = cioid;
        if (ds.Tables[0].Rows.Count > 0)
        {
            cio_ID = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        }
        return cio_ID;
    }
    [Ajax.AjaxMethod]
    public DataSet bindpageprem_J(string compcode)
    {
        DataSet dx = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.RateMaster bindrate = new NewAdbooking.Classes.RateMaster();
            dx = bindrate.premiumbind(compcode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.RateMaster bindrate = new NewAdbooking.classesoracle.RateMaster();
            dx = bindrate.premiumbind(compcode);
        }
        else
        {
            NewAdbooking.classmysql.RateMaster bindrate = new NewAdbooking.classmysql.RateMaster();
            dx = bindrate.premiumbind(compcode);
        }
        return dx;
    }
    [Ajax.AjaxMethod]
    public string getPkgEdition(string compcode, string combincode)
    {
        string edition = "1";
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster cls_book = new NewAdbooking.classesoracle.BookingMaster();
            DataSet ds = new DataSet();
            ds = cls_book.getPkgEdition_P(compcode, combincode);
            if (ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0].ItemArray[0] != null)
                {
                    edition = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                }
            }
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster cls_book = new NewAdbooking.Classes.BookingMaster();
            DataSet ds = new DataSet();
            ds = cls_book.getPkgEdition_P(compcode, combincode);
            if (ds.Tables[0].Rows.Count > 0)
            {
                if (ds.Tables[0].Rows[0].ItemArray[0] != null)
                {
                    edition = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                }
            }
        }
        return edition;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet getPrevBookId()
    {
        DataSet dprv = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster prev = new NewAdbooking.Classes.BookingMaster();

            dprv = prev.prevbooking(Session["compcode"].ToString(), Session["userid"].ToString(), "DI0");


        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster prev = new NewAdbooking.classesoracle.BookingMaster();

                dprv = prev.prevbooking(Session["compcode"].ToString(), Session["userid"].ToString(), "DI0");


            }
            else
            {
                NewAdbooking.classmysql.BookingMaster prev = new NewAdbooking.classmysql.BookingMaster();

                dprv = prev.prevbooking(Session["compcode"].ToString(), Session["userid"].ToString(), "DI0");


            }
        return dprv;
    }

}

