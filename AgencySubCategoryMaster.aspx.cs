using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class AgencySubCategoryMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {
        Response.Expires = -1;

        if (Session["compcode"] == null)
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }

        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenDateFormat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();



        Ajax.Utility.RegisterTypeForAjax(typeof(AgencySubCategoryMaster));
        

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        drpagencytype.Enabled = false;
        drpagencycat.Enabled = false;
        txtasccode.Enabled = false;
        txtascname.Enabled = false;
        txtalias.Enabled = false;
        //****work done by shweta***********************************************************
        //******************************XML FOR BUTTON**************************************
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));

        btnNew.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        //******************************XML for labels****************************************
        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/AgencySubCategory.xml"));
        AgencyType.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        AgencyCategory.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
        AgencySubCategoryCode.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();
        AgencySubCategoryName.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
        Alias.Text = ds1.Tables[0].Rows[0].ItemArray[4].ToString();
        

        if (!Page.IsPostBack)
        {
            agencytype();

            //agencycategoryname();

            txtasccode.Attributes.Add("OnChange", "javascript:return uppercase1();");
            txtalias.Attributes.Add("OnChange", "javascript:return uppercase2();");
            txtascname.Attributes.Add("onchange", "javascript:return autoornot();");
          
        
            drpagencytype.Attributes.Add("OnChange","javascript:return addagencycategory();");
              btnNew.Attributes.Add("OnClick", "javascript:return ascmNewclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return ascmSaveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return ascmModifyclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return ascmDeleteclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return ascmQueryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return ascmExecuteclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return ascmCancelclick('AgencySubCategoryMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return ascmfirstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return ascmpreviousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return ascmnextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return ascmlastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return ascmExitclick();");
         
                }

        // Put user code to initialize the page here
    }

    #region Web Form Designer generated code
     protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    //		public void agencytype()
     public void agencytype()
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencySubCategoryMaster name = new NewAdbooking.Classes.AgencySubCategoryMaster();
             ds = name.addagencytype();
             
         }

         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.AgencySubCategoryMaster name = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                 ds = name.addagencytype();
             }
         else
         {
             NewAdbooking.classmysql.AgencySubCategoryMaster name = new NewAdbooking.classmysql.AgencySubCategoryMaster();
             ds = name.addagencytype();

            
         }

     ListItem li1;
     li1 = new ListItem();
     li1.Text = "-Select Agency Type-";
     li1.Value = "0";
     li1.Selected = true;
     drpagencytype.Items.Add(li1);

     int i;
     for (i = 0; i < ds.Tables[0].Rows.Count; i++)
     {
         ListItem li;
         li = new ListItem();
         li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
         li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
         drpagencytype.Items.Add(li);
     }

    }

    //		public void agencycategoryname()
    /* public void agencycategoryname()
    {
        NewAdbooking.Classes.AgencySubCategoryMaster cat = new NewAdbooking.Classes.AgencySubCategoryMaster();
        DataSet ds = new DataSet();
        ds = cat.agencycategory();

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Agency Cat.-";
        li1.Value = "0";
        li1.Selected = true;
        drpagencycat.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpagencycat.Items.Add(li);
        }
    }*/

    [Ajax.AjaxMethod]
    //		public DataSet ascmsave(string companycode,string agency,string category,string code,string name,string alias,string UserId)
     public DataSet ascmsave(string companycode, string agency, string category, string code, string name, string alias, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencySubCategoryMaster save1 = new NewAdbooking.Classes.AgencySubCategoryMaster();

             ds = save1.ascmsave(companycode, agency, category, code, name, alias, UserId);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.AgencySubCategoryMaster save1 = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                 ds = save1.ascmsave(companycode, agency, category, code, name, alias, UserId);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.AgencySubCategoryMaster save1 = new NewAdbooking.classmysql.AgencySubCategoryMaster();
             ds = save1.ascmsave(companycode, agency, category, code, name, alias, UserId);
             return ds;
         }
    }

    [Ajax.AjaxMethod]
    public DataSet addcategory(string agencytype)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AgencySubCategoryMaster firstAgency = new NewAdbooking.Classes.AgencySubCategoryMaster();

            ds = firstAgency.addagencycat(agencytype);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString ()== "orcl")
            {
                NewAdbooking.classesoracle.AgencySubCategoryMaster firstAgency = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                ds = firstAgency.addagencycat(agencytype);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.AgencySubCategoryMaster firstAgency = new NewAdbooking.classmysql.AgencySubCategoryMaster();
            ds = firstAgency.addagencycat(agencytype);
            return ds;
        }

    }

    [Ajax.AjaxMethod]
    //		public DataSet ascmmodify(string companycode,string agency,string category,string code,string name,string alias,string UserId)
     public DataSet ascmmodify(string companycode, string agency, string category, string code, string name, string alias, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencySubCategoryMaster mod = new NewAdbooking.Classes.AgencySubCategoryMaster();

             ds = mod.ascmmodify(companycode, agency, category, code, name, alias, UserId);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.AgencySubCategoryMaster mod = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                 ds = mod.ascmmodify(companycode, agency, category, code, name, alias, UserId);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.AgencySubCategoryMaster mod = new NewAdbooking.classmysql.AgencySubCategoryMaster();
             ds = mod.ascmmodify(companycode, agency, category, code, name, alias, UserId);
             return ds;
         }
    }
    [Ajax.AjaxMethod]
    //		public DataSet ascmdelete(string companycode,string agency,string category,string code,string name,string alias,string UserId)
     public void ascmdelete(string companycode, string agency, string category, string code, string name, string alias, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencySubCategoryMaster del = new NewAdbooking.Classes.AgencySubCategoryMaster();

             ds = del.ascmdelete(companycode, agency, category, code, name, alias, UserId);
         }

             else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString ()== "orcl")
             {
                 NewAdbooking.classesoracle.AgencySubCategoryMaster del = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                 ds = del.ascmdelete(companycode, agency, category, code, name, alias, UserId);

             }
             else
             {
                 NewAdbooking.classmysql.AgencySubCategoryMaster del = new NewAdbooking.classmysql.AgencySubCategoryMaster();
                 ds = del.ascmdelete(companycode, agency, category, code, name, alias, UserId);
             }
       // return ds;
    }
    [Ajax.AjaxMethod]
    //		public DataSet ascmexecute(string companycode,string agency,string category,string code,string name,string alias,string UserId)
     public DataSet ascmexecute(string companycode, string agency, string category, string code, string name, string alias, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencySubCategoryMaster exe = new NewAdbooking.Classes.AgencySubCategoryMaster();

             ds = exe.ascmexecute(companycode, agency, category, code, name, alias, UserId);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.AgencySubCategoryMaster exe = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                 ds = exe.ascmexecute(companycode, agency, category, code, name, alias, UserId);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.AgencySubCategoryMaster exe = new NewAdbooking.classmysql.AgencySubCategoryMaster();
             ds = exe.ascmexecute(companycode, agency, category, code, name, alias, UserId);
             return ds;
         }
    }

    [Ajax.AjaxMethod]
    //		public DataSet ascmexecute1(string companycode,string agency,string category,string code,string name,string alias,string UserId)
     public DataSet ascmexecute1(string companycode, string agency, string category, string code, string name, string alias, string UserId)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencySubCategoryMaster exe1 = new NewAdbooking.Classes.AgencySubCategoryMaster();

             ds = exe1.ascmexecute1(companycode, agency, category, code, name, alias, UserId);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString ()== "orcl")
             {
                 NewAdbooking.classesoracle.AgencySubCategoryMaster exe1 = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                 ds = exe1.ascmexecute1(companycode, agency, category, code, name, alias, UserId);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.AgencySubCategoryMaster exe1 = new NewAdbooking.classmysql.AgencySubCategoryMaster();
             ds = exe1.ascmexecute1(companycode, agency, category, code, name, alias, UserId);
             return ds;
         }
    }

  /*  [Ajax.AjaxMethod]
    //		public DataSet ascmfirst(string companycode,string UserId)
     public DataSet ascmfirst(string companycode, string UserId)
    {
        NewAdbooking.Classes.AgencySubCategoryMaster fst = new NewAdbooking.Classes.AgencySubCategoryMaster();
        DataSet ds = new DataSet();
        ds = fst.ascmfirst(companycode, UserId);
        return ds;
    }

    [Ajax.AjaxMethod]
    //		public DataSet ascmprevious(string companycode,string UserId)
     public DataSet ascmprevious(string companycode, string UserId)
    {
        NewAdbooking.Classes.AgencySubCategoryMaster pre = new NewAdbooking.Classes.AgencySubCategoryMaster();
        DataSet ds = new DataSet();
        ds = pre.ascmprevious(companycode, UserId);
        return ds;
    }
    [Ajax.AjaxMethod]
    //		public DataSet ascmnext(string companycode,string UserId)
     public DataSet ascmnext(string companycode, string UserId)
    {
        NewAdbooking.Classes.AgencySubCategoryMaster next1 = new NewAdbooking.Classes.AgencySubCategoryMaster();
        DataSet ds = new DataSet();
        ds = next1.ascmnext(companycode, UserId);
        return ds;
    }
    [Ajax.AjaxMethod]
    //		public DataSet ascmlast(string companycode,string UserId)
     public DataSet ascmlast(string companycode, string UserId)
    {
        NewAdbooking.Classes.AgencySubCategoryMaster last = new NewAdbooking.Classes.AgencySubCategoryMaster();
        DataSet ds = new DataSet();
        ds = last.ascmlast(companycode, UserId);
        return ds;
    }
   * */

    [Ajax.AjaxMethod]
    //		public DataSet chkascmcode(string companycode,string UserId,string code)
     public DataSet chkascmcode(string companycode, string UserId, string code)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AgencySubCategoryMaster chkascm = new NewAdbooking.Classes.AgencySubCategoryMaster();

             ds = chkascm.chkascmcode(companycode, UserId, code);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString ()== "orcl")
             {
                 NewAdbooking.classesoracle.AgencySubCategoryMaster chkascm = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                 ds = chkascm.chkascmcode(companycode, UserId, code);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.AgencySubCategoryMaster chkascm = new NewAdbooking.classmysql.AgencySubCategoryMaster();

             ds = chkascm.chkascmcode(companycode, UserId, code);
             return ds;
         }
    }

    [Ajax.AjaxMethod]
    public DataSet chkascmcodename(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AgencySubCategoryMaster chk = new NewAdbooking.Classes.AgencySubCategoryMaster();

            ds = chk.countascmcode(str);
            return ds;
        }

        else
            if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString() =="orcl")
            {
                NewAdbooking.classesoracle.AgencySubCategoryMaster chk = new NewAdbooking.classesoracle.AgencySubCategoryMaster();

                ds = chk.countascmcode(str);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.AgencySubCategoryMaster chk = new NewAdbooking.classmysql.AgencySubCategoryMaster();
            ds = chk.countascmcode(str);
            return ds;
        }

    }

    
}