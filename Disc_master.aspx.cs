using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;

public partial class Disc_master : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
        }
        else
        {
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        Ajax.Utility.RegisterTypeForAjax(typeof(Disc_master));

//***********************************For Lables ***********************************************//
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/Disc_master.xml"));
        lbldisccode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lbldiscdes.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        lbladtype.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        lblstatus.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lbldisctyp.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lbldiscprm.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();

        //***********************************************************************//
        //*****************Code For Read the data from xml File******************//
        //*******************************For The Button**************************//
        //***********************************************************************//
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnnext.Enabled = false;
        btnprevious.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        txtdisccode.Enabled = false;
        txtdiscdes.Enabled = false;
        adtype.Enabled = false;
        drpstatus.Enabled = false;
        drpdisctyp.Enabled = false;
        txtdiscprm.Enabled = false;

        if (!Page.IsPostBack)
        {
            lbedit.Attributes.Add("OnClick", "javascript:return openedit();"); //for popup
            btnNew.Attributes.Add("OnClick", "javascript:return btnNewClick2();");
            btnSave.Attributes.Add("OnClick", "javascript:return saveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return btnModifyClick2();");
            btnDelete.Attributes.Add("OnClick", "javascript:return deleteclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return btnQueryClick2();");
            btnExecute.Attributes.Add("OnClick", "javascript:return btnExecuteClick2();");
            btnCancel.Attributes.Add("OnClick", "javascript:return btnCancelClick2('Disc_master');");
            btnfirst.Attributes.Add("OnClick", "javascript:return firstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return previousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return nextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return lastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return exitclick();");
            txtdiscdes.Attributes.Add("OnChange", "javascript:return autoornot();");
            txtdiscprm.Attributes.Add("onchange", "javascript:return chkprem();");
            drpdisctyp.Attributes.Add("onchange", "javascript:return chkprem();");
            bindadvtype();
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();

    }
    ////*******************************************************************************//
    ////*********************************Bind The Adv Type*******************************//
    ////*******************************************************************************//
    //public void bindedition()
    public void bindadvtype()
    {
        //regionhidden=hiddenregion.Value;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster advname = new NewAdbooking.Classes.AdCategoryMaster();

            ds = advname.adname(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster advname = new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = advname.adname(hiddencompcode.Value);
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster advname = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = advname.adname(hiddencompcode.Value);
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Ad Type--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        adtype.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            adtype.Items.Add(li);


        }
    }
    [Ajax.AjaxMethod]
    public DataSet chkcode(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Disc_master chk = new NewAdbooking.Classes.Disc_master();

            ds = chk.countcode(str);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Disc_master chk = new NewAdbooking.classesoracle.Disc_master();

                ds = chk.countcode(str);
                return ds;
            }
            else
            {
                //NewAdbooking.classmysql.CityMaster chk = new NewAdbooking.classmysql.CityMaster();

                //ds = chk.countcode(str);
                return ds;
            }

    }
  [Ajax.AjaxMethod]
    public DataSet chkdup(string compcode, string disccode, string discdes, string adtype)
  {
    DataSet ds=new DataSet();
      if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
      {
          NewAdbooking.Classes.Disc_master dis = new NewAdbooking.Classes.Disc_master();
          ds = dis.chkduplicate(compcode, disccode, discdes, adtype);
          return ds;
      }
      else if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
      {
          NewAdbooking.classesoracle.Disc_master dis=new NewAdbooking.classesoracle.Disc_master();
          ds = dis.chkduplicate(compcode, disccode, discdes, adtype);
          return ds;
      }
      else
      {
          return ds;
      }
  }
  [Ajax.AjaxMethod]
  public void save(string compcode, string disccode, string discdesc, string adtype, string status, string disctyp, string discprm, string userid)
  {
      DataSet ds = new DataSet();
      if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
      {
          NewAdbooking.Classes.Disc_master save1 = new NewAdbooking.Classes.Disc_master();

          ds = save1.savedata(compcode, disccode, discdesc, adtype, status, disctyp, discprm, userid);
      }
      else
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.Disc_master save1 = new NewAdbooking.classesoracle.Disc_master();

              ds = save1.savedata(compcode, disccode, discdesc, adtype, status, disctyp, discprm, userid);

          }
          else
          {
              //NewAdbooking.classmysql.productmaster savecode = new NewAdbooking.classmysql.productmaster();

              //ds = savecode.saveproduct(txtproductcode, txtprodsubcode, txtprodname, clientname, compcode, userid);
          }

  }
  [Ajax.AjaxMethod]
  public void update(string compcode, string disccode,string adtype, string status, string disctyp, string discprm)
  {
      DataSet ds = new DataSet();
      if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
      {
          NewAdbooking.Classes.Disc_master save1 = new NewAdbooking.Classes.Disc_master();

          ds = save1.updatedata(compcode, disccode, adtype, status, disctyp, discprm);

      }
      else
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.Disc_master save1 = new NewAdbooking.classesoracle.Disc_master();

              ds = save1.updatedata(compcode, disccode, adtype, status, disctyp, discprm);

          }
          else
          {
              //NewAdbooking.classmysql.productmaster savecode = new NewAdbooking.classmysql.productmaster();

              //ds = savecode.saveproduct(txtproductcode, txtprodsubcode, txtprodname, clientname, compcode, userid);
          }

  }
  [Ajax.AjaxMethod]
  public DataSet execute(string compcode,string disccode,string disdes,string adtyp,string stat,string disctyp,string disprem)
  {
      DataSet ds = new DataSet();
      if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
      {
          NewAdbooking.Classes.Disc_master disc = new NewAdbooking.Classes.Disc_master();

          ds = disc.exec(compcode, disccode, disdes, adtyp, stat, disctyp, disprem);
          return ds;

      }
      else
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.Disc_master disc = new NewAdbooking.classesoracle.Disc_master();

              ds = disc.exec(compcode, disccode, disdes, adtyp, stat, disctyp, disprem);

              return ds;

          }
          else
          {
              //NewAdbooking.classmysql.productmaster savecode = new NewAdbooking.classmysql.productmaster();

              //ds = savecode.saveproduct(txtproductcode, txtprodsubcode, txtprodname, clientname, compcode, userid);

              return ds;
          }

  }
  [Ajax.AjaxMethod]
  public void discdelete(string compcode, string disccode)
  {
      DataSet ds = new DataSet();
      if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
      {
          NewAdbooking.Classes.Disc_master disc = new NewAdbooking.Classes.Disc_master();

          ds = disc.del(compcode, disccode);

      }
      else
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.Disc_master disc = new NewAdbooking.classesoracle.Disc_master();

              ds = disc.del(compcode, disccode);

          }
          else
          {
              //NewAdbooking.classmysql.productmaster savecode = new NewAdbooking.classmysql.productmaster();

              //ds = savecode.saveproduct(txtproductcode, txtprodsubcode, txtprodname, clientname, compcode, userid);

          }

  }
}
