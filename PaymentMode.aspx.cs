using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class PaymentMode : System.Web.UI.Page
{

    int auto;
    protected void Page_Load(object sender, System.EventArgs e)
    {



        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/PaymentMode.xml"));
        lblpaymentmodecode.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        lblpaymentmode.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
        lblpayalias.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();
        lblcash.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();



         DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));

        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();


        Response.Expires = -1;
        if (Session["compcode"] == null)
        //if  ;
        {


            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        pageloadbtn();

        hiddenusername.Value = Session["Username"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();


        hiddenDateFormat.Value = Session["dateformat"].ToString();
        Ajax.Utility.RegisterTypeForAjax(typeof(PaymentMode));

        if (!Page.IsPostBack)
        {

           // txtpaycode.Attributes.Add("OnBlur", "javascript:return uppercase1();");
            btnNew.Attributes.Add("OnClick", "javascript:return NewClick11();");

            txtpayment.Attributes.Add("OnBlur", "javascript:return autoornot();");

            btnModify.Attributes.Add("OnClick", "javascript:return ModifyClick11();");
            btnQuery.Attributes.Add("OnClick", "javascript:return QueryClick11();");
            btnExecute.Attributes.Add("OnClick", "javascript:return ExecuteClick11();");
            btnCancel.Attributes.Add("OnClick", "javascript:return CancelClick11('PaymentMode');");
            //btnCancel.Attributes.Add("OnClick", "javascript:return CancelClick11();");
            btnSave.Attributes.Add("OnClick", "javascript:return SaveClick11();");
            btnfirst.Attributes.Add("OnClick", "javascript:return FirstClick11();");
            btnlast.Attributes.Add("OnClick", "javascript:return LastClick11();");
            btnprevious.Attributes.Add("OnClick", "javascript:return PreviousClick11();");
            btnnext.Attributes.Add("OnClick", "javascript:return NextClick11();");
            btnExit.Attributes.Add("OnClick", "javascript:return exitclick11();");
            btnDelete.Attributes.Add("OnClick", "javascript:return deleteclick11();");
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        // Put user code to initialize the page here
    }

    //		public void pageloadbtn()
        

     public void pageloadbtn()
    {
        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        txtpaycode.Enabled = false;
        txtpayment.Enabled = false;
        txtpayalias.Enabled = false;
    }

    #region Web Form Designer generated code
     protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion


    [Ajax.AjaxMethod]
    //		public DataSet chk(string paycode,string payname, string compcode, string userid )
     public DataSet chk(string paycode, string payname, string compcode, string userid)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.PaymentMode chk = new NewAdbooking.Classes.PaymentMode();

             ds = chk.checkpayment(paycode, payname, compcode, userid);
             return ds;
         }
         else
             if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="orcl")
             {
                 NewAdbooking.classesoracle.PaymentMode chk = new NewAdbooking.classesoracle.PaymentMode();

                 ds = chk.checkpayment(paycode, payname, compcode, userid);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.PaymentMode chk = new NewAdbooking.classmysql.PaymentMode();
             ds = chk.checkpayment(paycode, payname, compcode, userid);
             return ds;
         }

    }

    [Ajax.AjaxMethod]
    //		public void insert(string paycode,string payname, string compcode, string userid )
    public void insert(string paycode, string payname, string compcode, string userid, string alias,string cash)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.PaymentMode chk = new NewAdbooking.Classes.PaymentMode();

             ds = chk.insertpayment(paycode, payname, compcode, userid, alias,cash);
         }
             else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.PaymentMode chk = new NewAdbooking.classesoracle.PaymentMode();

                 ds = chk.insertpayment(paycode, payname, compcode, userid, alias,cash);
             }
             else
             {
                 NewAdbooking.classmysql.PaymentMode chk = new NewAdbooking.classmysql.PaymentMode();
                 ds = chk.insertpayment(paycode, payname, compcode, userid);
             }

    }

    [Ajax.AjaxMethod]
    //		public void modify(string paycode,string payname, string compcode, string userid )
    public void modify(string paycode, string payname, string compcode, string userid, string alias,string cash)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.PaymentMode chk = new NewAdbooking.Classes.PaymentMode();

             ds = chk.updatepayment(paycode, payname, compcode, userid, alias,cash);
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.PaymentMode chk = new NewAdbooking.classesoracle.PaymentMode();

                 ds = chk.updatepayment(paycode, payname, compcode, userid, alias,cash);
             }
         else
         {
             NewAdbooking.classmysql.PaymentMode chk = new NewAdbooking.classmysql.PaymentMode();
             ds = chk.updatepayment(paycode, payname, compcode, userid);
         }
    }


    [Ajax.AjaxMethod]
    //		public DataSet exe(string paycode,string payname, string compcode, string userid )
     public DataSet exe(string paycode, string payname, string compcode, string userid)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.PaymentMode chk = new NewAdbooking.Classes.PaymentMode();

             ds = chk.exepayment(paycode, payname, compcode, userid);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.PaymentMode chk = new NewAdbooking.classesoracle.PaymentMode();

                 ds = chk.exepayment(paycode, payname, compcode, userid);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.PaymentMode chk = new NewAdbooking.classmysql.PaymentMode();
             ds = chk.exepayment(paycode, payname, compcode, userid);
             return ds;
         }

    }



    [Ajax.AjaxMethod]
    //		public void del( string compcode, string userid ,string paycode)
     public void del(string compcode, string userid, string paycode)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.PaymentMode chk = new NewAdbooking.Classes.PaymentMode();

             ds = chk.delpayment(compcode, userid, paycode);
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {


                 NewAdbooking.classesoracle.PaymentMode chk = new NewAdbooking.classesoracle.PaymentMode();

                 ds = chk.delpayment(compcode, userid, paycode);
             }
         else
         {
             NewAdbooking.classmysql.PaymentMode chk = new NewAdbooking.classmysql.PaymentMode();
             ds = chk.delpayment(compcode, userid, paycode);
         }

    }


    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public void del( string compcode, string userid ,string paycode)
    public DataSet payment_auto(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.PaymentMode chk = new NewAdbooking.Classes.PaymentMode();

            ds = chk.paymentauto(str,Session["compcode"].ToString());

            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.PaymentMode chk = new NewAdbooking.classesoracle.PaymentMode();

                ds = chk.paymentauto(str, Session["compcode"].ToString());

                return ds;
            }
        else
        {
            NewAdbooking.classmysql.PaymentMode chk = new NewAdbooking.classmysql.PaymentMode();
            ds = chk.paymentauto(str, Session["compcode"].ToString());

            return ds;
        }

    }

  










  
}