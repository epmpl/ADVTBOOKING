using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class ProductCategory : System.Web.UI.Page
{
    string formname = "ProductCategory";
    static int FlagStatus, fpnl;
    static string saveormodify;
    string message;
    static DataSet executepro = new DataSet();
    static string dproalias, dprodesc, dprocode, dproind;
    string chkprodductname;
    NewAdbooking.Classes.productcategory execute = new NewAdbooking.Classes.productcategory();

    protected void Page_Load(object sender, EventArgs e)
    {

        Response.Expires = -1;

        if (Session["compcode"] == null)
        {
            d1.Text = "<script>alert('session Expired');window.close();</script>";
            return;
        }

        formname = "ProductCategory";
        hiddenusername.Value = Session["username"].ToString();

        hiddenauto.Value = Session["autogenerated"].ToString();

        if (Session["autogenerated"].ToString() == "1")
        {

            txtproductcode.Enabled = false;

        }

        Ajax.Utility.RegisterTypeForAjax(typeof(ProductCategory));


        DataSet objDataSet = new DataSet();
        objDataSet.ReadXml(Server.MapPath("XML/productcategory.xml"));
        lbproductcat.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        lbproddesc.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        laalias.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        lbindustry.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();

        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        
        
        if (!Page.IsPostBack)
        {
            pop_industry();
            getbuttoncheck(formname);
            btnSave.Attributes.Add("onclick", "javascript:return saveproduct();");
            btnDelete.Attributes.Add("onclick", "return confirm('Are you sure you wish to delete this?');");
            btnExit.Attributes.Add("onclick", "javascript:return closeproduct();");
            txtprodesc.Attributes.Add("OnChange", "javascript:return autogen();");
            btnQuery.Attributes.Add("OnClick", "javascript:return chkquery1();");
            btnModify.Attributes.Add("OnClick", "javascript:return update1();");
           // drpindustry.Attributes.Add("OnChange", "javascript:return autogen();");
            txtalias.Attributes.Add("OnBlur", "javascript:return capsAlias();");
            txtproductcode.Attributes.Add("OnBlur", "javascript:return capsCode();");
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
    }
    public void pop_industry()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.productcategory Ind_Name = new NewAdbooking.Classes.productcategory();
            ds = Ind_Name.bind_industry(Session["compcode"].ToString());
          
        }

        else

            if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="orcl")
            {
                NewAdbooking.classesoracle.productcategory Ind_Name = new NewAdbooking.classesoracle.productcategory();
                ds = Ind_Name.bind_industry(Session["compcode"].ToString());

            }
        else
        {
            NewAdbooking.classmysql.productcategory Ind_Name = new NewAdbooking.classmysql.productcategory();
            ds = Ind_Name.bind_industry(Session["compcode"].ToString());
          
        }

        ListItem li1;
        drpindustry.Items.Clear();
        li1 = new ListItem();
        li1.Text = "---Select Industry---";
        li1.Value = "0";
        li1.Selected = true;
        drpindustry.Items.Add(li1);
        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpindustry.Items.Add(li);
        }
    }

    //////////this code is for the button permission

    public void getbuttoncheck(string formname)
    {
        DataSet butt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.classlibraryforbutton getpermission = new NewAdbooking.Classes.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.classlibraryforbutton getpermission = new NewAdbooking.classesoracle.classlibraryforbutton();
                butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);

            }
            else
            {
                NewAdbooking.classmysql.classlibraryforbutton getpermission = new NewAdbooking.classmysql.classlibraryforbutton();
                butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);

            }

            string id = butt.Tables[0].Rows[0].ItemArray[0].ToString();
            if (id != "0")
            {
                if (id == "0" || id == "8")
                {
                    FlagStatus = 0;

                    btnNew.Enabled = false;
                    btnQuery.Enabled = false;
                    btnExecute.Enabled = false;
                    btnCancel.Enabled = false;
                    btnExit.Enabled = false;
                    btnDelete.Enabled = false;
                    btnModify.Enabled = false;

                    btnSave.Enabled = false;
                    btnModify.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;



                   


                }
                if (id == "1" || id == "9")
                {
                    btnNew.Enabled = true;
                    btnQuery.Enabled = true;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnExecute.Enabled = false;

                    btnSave.Enabled = false;
                    btnModify.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    FlagStatus = 1;

                }
                if (id == "2" || id == "10")
                {

                    btnNew.Enabled = false;
                    btnExecute.Enabled = false;
                    btnQuery.Enabled = true;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    //a//btnModify.Enabled = true;
                    btnModify.Enabled = false;

                    btnSave.Enabled = false;
                    //a// btnfirst.Enabled = true;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExit.Enabled = true;
                    FlagStatus = 2;


                }
                if (id == "3" || id == "11")
                {
                    btnNew.Enabled = true;
                    btnQuery.Enabled = true;
                    btnExecute.Enabled = false;
                    btnDelete.Enabled = false;
                    btnModify.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;


                    btnSave.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;

                    FlagStatus = 3;



                }
                if (id == "4" || id == "12")
                {
                    btnNew.Enabled = false;
                    btnQuery.Enabled = true;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExecute.Enabled = false;

                    btnNew.Enabled = false;
                    btnExecute.Enabled = false;
                    btnDelete.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;


                    btnModify.Enabled = false;

                    btnSave.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    FlagStatus = 4;



                }
                if (id == "5" || id == "13")
                {
                    btnNew.Enabled = true;
                    btnSave.Enabled = false;
                    btnQuery.Enabled = true;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExecute.Enabled = false;
                    btnModify.Enabled = false;
                    FlagStatus = 5;


                }
                if (id == "6" || id == "14")
                {
                    btnNew.Enabled = false;
                    btnSave.Enabled = false;
                    btnQuery.Enabled = true;
                    btnModify.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExecute.Enabled = false;

                    FlagStatus = 6;
                }
                if (id == "7" || id == "15")
                {
                    btnNew.Enabled = true;
                    btnSave.Enabled = false;
                    btnQuery.Enabled = true;
                    btnModify.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExecute.Enabled = false;
                    FlagStatus = 7;

                }
            }
       
     




    }

    public void chkstatus(int FlagStatus)
    {
        if (FlagStatus == 0 || FlagStatus == 8)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = false;



        }
        if (FlagStatus == 1 || FlagStatus == 9)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = true;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;

        }
        if (FlagStatus == 2 || FlagStatus == 10)
        {
            btnExecute.Enabled = true;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnNew.Enabled = false;
            btnCancel.Enabled = true;
            btnExecute.Enabled = false;
            btnModify.Enabled = false;
            btnExit.Enabled = true;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;


        }

        if (FlagStatus == 3 || FlagStatus == 11)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

        if (FlagStatus == 4 || FlagStatus == 12)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 5 || FlagStatus == 13)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 6 || FlagStatus == 14)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 7 || FlagStatus == 15)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }


    }

    public void updateStatus()
    {
        chkstatus(FlagStatus);
        if (FlagStatus == 2 || FlagStatus == 3)
        {
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;
            btnDelete.Enabled = false;
        }
        if (FlagStatus == 4)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 5)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 6 || FlagStatus == 7)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
    }
    ///////////////////////////////////////////////////////////////////////////////////////////////////////////
    protected void btnNew_Click1(object sender, EventArgs e)
    {
        //save.Value = "0";
        query.Value = "0";
        pnew.Value = "1";
        //modify.Value = "2";
        drpindustry.SelectedIndex = 0;
            txtproductcode.Text = "";
            txtprodesc.Text = "";
            txtalias.Text = "";
            
          saveormodify = "0";

            if (Session["autogenerated"].ToString() == "1")
            {
                txtproductcode.Enabled = false;
            }
            else
            {
                txtproductcode.Enabled = true;
            }
            txtprodesc.Enabled = true;
            txtalias.Enabled = true;
            drpindustry.Enabled = true;

            chkstatus(FlagStatus);
            btnSave.Enabled = true;
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnimage();
            
                ScriptManager1.SetFocus(drpindustry);
        
           
           
    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        pnew.Value = "0";
        //    save.Value = "0";
        query.Value = "0";
        //    pnew.Value = "1";
        //    modify.Value = "2";
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(ProductCategory), "abc", "alert('session Expired');window.close();", true);
            return;
        }
        string productcode = txtproductcode.Text;
        string productdescription = txtprodesc.Text;
        string alias = txtalias.Text;
        string industry = drpindustry.Text;
        if (saveormodify == "0")
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.productcategory getcode = new NewAdbooking.Classes.productcategory();
                ds = getcode.chkcode(productcode, productdescription, industry, Session["compcode"].ToString());

            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.productcategory getcode = new NewAdbooking.classesoracle.productcategory();
                    ds = getcode.chkcode(productcode, productdescription, industry, Session["compcode"].ToString());
                }
  


                else
                {
                    NewAdbooking.classmysql.productcategory getcode = new NewAdbooking.classmysql.productcategory();
                    ds = getcode.chkcode(productcode, productdescription, industry, Session["compcode"].ToString());

                }
            if (ds.Tables[0].Rows.Count > 0)
            {
                message = "Product Code Already Exist";//of " + productdescription + " ";
                AspNetMessageBox(message);

                return;

            }
            else if (ds.Tables[1].Rows.Count > 0)
            {
                message = "Product Name Already Exist with Selected Industry";//of " + productdescription + " ";
                AspNetMessageBox(message);

                return;

            }
            else
            {
               
                DataSet di = new DataSet();
                string err = "";
                try
                {
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                        NewAdbooking.Classes.productcategory insertthe = new NewAdbooking.Classes.productcategory();

                        di = insertthe.insertedvalue(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);
                    }
                    else
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                        {
                            NewAdbooking.classesoracle.productcategory insertthe = new NewAdbooking.classesoracle.productcategory();

                            di = insertthe.insertedvalue(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);

                        }
                        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
                        {
                            string procedureName = "insertproductcat_insertproductcat_p";
                            string[] parameterValueArray = { Session["compcode"].ToString(), Session["userid"].ToString(), productcode, productdescription, alias, industry };
                            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                            di = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                        }
                        //else
                        //{
                        //    NewAdbooking.classmysql.productcategory insertthe = new NewAdbooking.classmysql.productcategory();

                        //    di = insertthe.insertedvalue(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);

                        //}
                }

                catch (Exception k1)
                {
                    err = k1.Message;
                }
                string productcode1 = "Inserted Product " + productcode;
                clsconnection dconnect = new clsconnection();
                string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Product','" + err.Replace("'", "''") + "','Product Created','" + productcode1;
                sqldd = sqldd + "',";
                sqldd = sqldd + "'" + Request.ServerVariables["REMOTE_ADDR"] + "')";
                dconnect.executenonquery1(sqldd);

                //   message = "Data Saved Sucessfully ";
                DataSet ds1 = new DataSet();
                ds1.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                message = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
                AspNetMessageBox(message);
                //AspNetMessageBox(message);

                txtalias.Text = "";
                txtprodesc.Text = "";
                txtproductcode.Text = "";
                drpindustry.SelectedIndex = 0;

                txtproductcode.Enabled = false;
                txtprodesc.Enabled = false;
                txtalias.Enabled = false;
                drpindustry.Enabled = false;

                //AspNetMessageBox(message);
                getbuttoncheck(formname);
                btnimage();
                return;


            }



        }
        /////////////////for modify
        else
        {
            //  query.Value = "2";
            //check duplicay in modify mode
            if (hiddenchkprodname.Value == txtprodesc.Text)
            {
                DataSet du = new DataSet();
                string err = "";
                try
                {
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                        NewAdbooking.Classes.productcategory upadte1 = new NewAdbooking.Classes.productcategory();
                        du = upadte1.updatepro(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);
                        txtalias.Enabled = false;
                        txtprodesc.Enabled = false;
                        txtproductcode.Enabled = false;
                        drpindustry.Enabled = false;
                        executepro.Tables[0].Rows[fpnl].ItemArray[0] = txtproductcode.Text;
                        executepro.Tables[0].Rows[fpnl].ItemArray[1] = txtprodesc.Text;
                        executepro.Tables[0].Rows[fpnl].ItemArray[2] = txtalias.Text;
                        executepro.Tables[0].Rows[fpnl].ItemArray[6] = drpindustry.Text;

                        NewAdbooking.Classes.productcategory execute = new NewAdbooking.Classes.productcategory();
                        executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());
                        DataSet ds = new DataSet();
                        ds = executepro;



                        updateStatus();
                        DataSet ds2 = new DataSet();
                        ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                        message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
                        AspNetMessageBox(message);

                        if (fpnl == 0)
                        {
                            btnfirst.Enabled = false;
                            btnprevious.Enabled = false;

                        }

                        if (fpnl == executepro.Tables[0].Rows.Count - 1)
                        {
                            btnlast.Enabled = false;
                            btnnext.Enabled = false;

                        }
                        ScriptManager1.SetFocus(btnModify);
                        //return;
                    }

                    else
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                        {
                            NewAdbooking.classesoracle.productcategory upadte1 = new NewAdbooking.classesoracle.productcategory();
                            du = upadte1.updatepro(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);
                            txtalias.Enabled = false;
                            txtprodesc.Enabled = false;
                            txtproductcode.Enabled = false;
                            drpindustry.Enabled = false;
                            executepro.Tables[0].Rows[fpnl].ItemArray[0] = txtproductcode.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[1] = txtprodesc.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[2] = txtalias.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[6] = drpindustry.Text;

                            NewAdbooking.classesoracle.productcategory execute = new NewAdbooking.classesoracle.productcategory();
                            executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());
                            DataSet ds = new DataSet();
                            ds = executepro;



                            updateStatus();
                            DataSet ds2 = new DataSet();
                            ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                            message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
                            AspNetMessageBox(message);

                            if (fpnl == 0)
                            {
                                btnfirst.Enabled = false;
                                btnprevious.Enabled = false;

                            }

                            if (fpnl == executepro.Tables[0].Rows.Count - 1)
                            {
                                btnlast.Enabled = false;
                                btnnext.Enabled = false;

                            }
                            ScriptManager1.SetFocus(btnModify);
                            //return;
                        }
                        else
                        {
                            NewAdbooking.classmysql.productcategory upadte1 = new NewAdbooking.classmysql.productcategory();
                            du = upadte1.updatepro(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);
                            txtalias.Enabled = false;
                            txtprodesc.Enabled = false;
                            txtproductcode.Enabled = false;
                            drpindustry.Enabled = false;
                            executepro.Tables[0].Rows[fpnl].ItemArray[0] = txtproductcode.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[1] = txtprodesc.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[2] = txtalias.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[6] = drpindustry.Text;

                            NewAdbooking.classmysql.productcategory execute = new NewAdbooking.classmysql.productcategory();

                            executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());
                            DataSet ds = new DataSet();
                            ds = executepro;



                            updateStatus();
                            DataSet ds2 = new DataSet();
                            ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                            message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
                            AspNetMessageBox(message);

                            if (fpnl == 0)
                            {
                                btnfirst.Enabled = false;
                                btnprevious.Enabled = false;

                            }

                            if (fpnl == executepro.Tables[0].Rows.Count - 1)
                            {
                                btnlast.Enabled = false;
                                btnnext.Enabled = false;

                            }
                            ScriptManager1.SetFocus(btnModify);
                            // return;
                        }

                }



                catch (Exception k2)
                {
                    err = k2.Message;
                }
                string productcode2 = "Modified Product " + productcode;
                clsconnection dconnect = new clsconnection();
                string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Product','" + err.Replace("'", "''") + "','Product Updated','" + productcode2;
                sqldd = sqldd + "',";
                sqldd = sqldd + "'" + Request.ServerVariables["REMOTE_ADDR"] + "')";
                dconnect.executenonquery1(sqldd);
                btnimage();
                return;
            }
            else
            {
                DataSet dd = new DataSet();
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.productcategory getcode = new NewAdbooking.Classes.productcategory();
                    dd = getcode.chkcode(productcode, productdescription, industry, Session["compcode"].ToString());

                }
                else
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.productcategory getcode = new NewAdbooking.classesoracle.productcategory();
                        dd = getcode.chkcode(productcode, productdescription, industry, Session["compcode"].ToString());
                    }
                    else
                    {
                        NewAdbooking.classmysql.productcategory getcode = new NewAdbooking.classmysql.productcategory();
                        dd = getcode.chkcode(productcode, productdescription, industry, Session["compcode"].ToString());

                    }
                 if (dd.Tables[1].Rows.Count > 0)
                {
                    message = "Product Name Already Exist with Selected Industry";//of " + productdescription + " ";
                    AspNetMessageBox(message);

                    return;

                }
                else
                {
                    DataSet du = new DataSet();
                    string err = "";
                    try
                    {
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                        {
                            NewAdbooking.Classes.productcategory upadte1 = new NewAdbooking.Classes.productcategory();
                            du = upadte1.updatepro(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);
                            txtalias.Enabled = false;
                            txtprodesc.Enabled = false;
                            txtproductcode.Enabled = false;
                            drpindustry.Enabled = false;
                            executepro.Tables[0].Rows[fpnl].ItemArray[0] = txtproductcode.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[1] = txtprodesc.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[2] = txtalias.Text;
                            executepro.Tables[0].Rows[fpnl].ItemArray[6] = drpindustry.Text;

                            NewAdbooking.Classes.productcategory execute = new NewAdbooking.Classes.productcategory();
                            executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());
                            DataSet ds = new DataSet();
                            ds = executepro;



                            updateStatus();
                            DataSet ds2 = new DataSet();
                            ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                            message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
                            AspNetMessageBox(message);

                            if (fpnl == 0)
                            {
                                btnfirst.Enabled = false;
                                btnprevious.Enabled = false;

                            }

                            if (fpnl == executepro.Tables[0].Rows.Count - 1)
                            {
                                btnlast.Enabled = false;
                                btnnext.Enabled = false;

                            }
                            ScriptManager1.SetFocus(btnModify);
                            //return;
                        }

                        else
                            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                            {
                                NewAdbooking.classesoracle.productcategory upadte1 = new NewAdbooking.classesoracle.productcategory();
                                du = upadte1.updatepro(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);
                                txtalias.Enabled = false;
                                txtprodesc.Enabled = false;
                                txtproductcode.Enabled = false;
                                drpindustry.Enabled = false;
                                executepro.Tables[0].Rows[fpnl].ItemArray[0] = txtproductcode.Text;
                                executepro.Tables[0].Rows[fpnl].ItemArray[1] = txtprodesc.Text;
                                executepro.Tables[0].Rows[fpnl].ItemArray[2] = txtalias.Text;
                                executepro.Tables[0].Rows[fpnl].ItemArray[6] = drpindustry.Text;

                                NewAdbooking.classesoracle.productcategory execute = new NewAdbooking.classesoracle.productcategory();
                                executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());
                                DataSet ds = new DataSet();
                                ds = executepro;



                                updateStatus();
                                DataSet ds2 = new DataSet();
                                ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                                message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
                                AspNetMessageBox(message);

                                if (fpnl == 0)
                                {
                                    btnfirst.Enabled = false;
                                    btnprevious.Enabled = false;

                                }

                                if (fpnl == executepro.Tables[0].Rows.Count - 1)
                                {
                                    btnlast.Enabled = false;
                                    btnnext.Enabled = false;

                                }
                                ScriptManager1.SetFocus(btnModify);
                                //return;
                            }
                            else
                            {
                                NewAdbooking.classmysql.productcategory upadte1 = new NewAdbooking.classmysql.productcategory();
                                du = upadte1.updatepro(productcode, productdescription, alias, Session["compcode"].ToString(), Session["userid"].ToString(), industry);
                                txtalias.Enabled = false;
                                txtprodesc.Enabled = false;
                                txtproductcode.Enabled = false;
                                drpindustry.Enabled = false;
                                executepro.Tables[0].Rows[fpnl].ItemArray[0] = txtproductcode.Text;
                                executepro.Tables[0].Rows[fpnl].ItemArray[1] = txtprodesc.Text;
                                executepro.Tables[0].Rows[fpnl].ItemArray[2] = txtalias.Text;
                                executepro.Tables[0].Rows[fpnl].ItemArray[6] = drpindustry.Text;

                                NewAdbooking.classmysql.productcategory execute = new NewAdbooking.classmysql.productcategory();

                                executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());
                                DataSet ds = new DataSet();
                                ds = executepro;



                                updateStatus();
                                DataSet ds2 = new DataSet();
                                ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                                message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
                                AspNetMessageBox(message);

                                if (fpnl == 0)
                                {
                                    btnfirst.Enabled = false;
                                    btnprevious.Enabled = false;

                                }

                                if (fpnl == executepro.Tables[0].Rows.Count - 1)
                                {
                                    btnlast.Enabled = false;
                                    btnnext.Enabled = false;

                                }
                                ScriptManager1.SetFocus(btnModify);
                                // return;
                            }

                    }



                    catch (Exception k2)
                    {
                        err = k2.Message;
                    }
                    string productcode2 = "Modified Product " + productcode;
                    clsconnection dconnect = new clsconnection();
                    string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Product','" + err.Replace("'", "''") + "','Product Updated','" + productcode2;
                    sqldd = sqldd + "',";
                    sqldd = sqldd + "'" + Request.ServerVariables["REMOTE_ADDR"] + "')";
                    dconnect.executenonquery1(sqldd);
                    btnimage();
                    return;
                }
            }
           
        }
    }
    protected void btnModify_Click(object sender, EventArgs e)
    {
        
        //save.Value = "0";
        query.Value = "0";
         pnew.Value = "0";
        //modify.Value = "2";
        txtproductcode.Enabled = false;
        txtprodesc.Enabled = true;
        txtalias.Enabled = true;
        drpindustry.Enabled = true;
            saveormodify = "1";
        hiddenchkprodname.Value = txtprodesc.Text;
       
      //  chkprodductname = txtprodesc.Text;
        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnQuery.Enabled = false;
        btnimage();
        ScriptManager1.SetFocus(btnSave);
    }
    protected void btnQuery_Click1(object sender, EventArgs e)
    {
        fpnl = 0;
        txtalias.Text = "";
        txtprodesc.Text = "";
        txtproductcode.Text = "";
        drpindustry.SelectedIndex = 0;
        query.Value = "1";
        pnew.Value = "0";

        
            txtalias.Enabled = true;
            txtprodesc.Enabled = true;
            txtproductcode.Enabled = true;
            drpindustry.Enabled = true;
      

        chkstatus(FlagStatus);

        btnQuery.Enabled = false;
        btnExecute.Enabled = true;
        btnSave.Enabled = false;
        btnimage();
    }
    protected void btnExecute_Click(object sender, EventArgs e)
    {
        //save.Value = "0";
        query.Value = "0";
        pnew.Value = "0";
        //modify.Value = "2";
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(ProductCategory), "abc", "alert('session Expired');window.close();", true);
            return;
        }
        string productcode = txtproductcode.Text;
        dprocode = productcode;
        string alias = txtalias.Text;
        dproalias = alias;
        string proddesc = txtprodesc.Text;
        dprodesc = proddesc;
        string industry = drpindustry.Text;
        dproind = industry;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.productcategory chkexecute = new NewAdbooking.Classes.productcategory();
            executepro = chkexecute.executequery(productcode, alias, proddesc, Session["compcode"].ToString(), industry);

        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.productcategory chkexecute = new NewAdbooking.classesoracle.productcategory();
                executepro = chkexecute.executequery(productcode, alias, proddesc, Session["compcode"].ToString(), industry);

            }
            else
            {
                NewAdbooking.classmysql.productcategory chkexecute = new NewAdbooking.classmysql.productcategory();
                executepro = chkexecute.executequery(productcode, alias, proddesc, Session["compcode"].ToString(), industry);

            }
            if (executepro.Tables[0].Rows.Count == 0)
            {

                message = "Your Search Produced No Results";
                AspNetMessageBox(message);
                chkstatus(FlagStatus);


                updateStatus();
                getbuttoncheck(formname);
                txtalias.Text = "";
                txtprodesc.Text = "";
                txtproductcode.Text = "";
                drpindustry.SelectedIndex = 0;
                txtproductcode.Enabled = false;
                txtprodesc.Enabled = false;
                txtalias.Enabled = false;
                drpindustry.Enabled = false;
                btnimage();
                ScriptManager1.SetFocus(btnNew);
                return;



            }
            else
            {
                txtproductcode.Text = executepro.Tables[0].Rows[0].ItemArray[0].ToString();
                txtprodesc.Text = executepro.Tables[0].Rows[0].ItemArray[1].ToString();
                txtalias.Text = executepro.Tables[0].Rows[0].ItemArray[2].ToString();
                pop_industry();
                if (drpindustry.Items.FindByValue(executepro.Tables[0].Rows[0].ItemArray[6].ToString()) != null)
                    drpindustry.SelectedValue = executepro.Tables[0].Rows[0].ItemArray[6].ToString();
                else
                    drpindustry.SelectedValue = null;
                txtproductcode.Enabled = false;
                txtprodesc.Enabled = false;
                txtalias.Enabled = false;
                drpindustry.Enabled = false;
             

            }

            updateStatus();
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = true;
            btnlast.Enabled = true;

            if (executepro.Tables[0].Rows.Count == 1)
            {
                btnnext.Enabled = false;
                btnlast.Enabled = false;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;



            }


            btnimage();
        ScriptManager1.SetFocus(btnModify);

    }
    protected void btnCancel_Click1(object sender, EventArgs e)
    {
        pnew.Value = "0";
        txtalias.Text = "";
        txtproductcode.Text = "";
        txtprodesc.Text = "";
        drpindustry.SelectedIndex = 0;
        hiddenauto.Value = "";
        query.Value = "0";
        chkstatus(FlagStatus);

        getbuttoncheck(formname);
        

        btnSave.Enabled = false;
        txtalias.Enabled = false;
        txtprodesc.Enabled = false;
        txtproductcode.Enabled = false;
        drpindustry.Enabled = false;
        //ScriptManager.RegisterClientScriptBlock(this, typeof(ProductCategory), "aa", "document.getElementById('btnNew').focus();", true);
        btnimage();
        ScriptManager1.SetFocus(btnNew);



    }
    protected void btnfirst_Click(object sender, EventArgs e)
    {
        fpnl = 0;
        query.Value = "0";
        DataSet ds = new DataSet();
        ds = executepro;

        txtproductcode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        txtprodesc.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        txtalias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        if (drpindustry.Items.FindByValue(ds.Tables[0].Rows[0].ItemArray[6].ToString()) != null)
            drpindustry.SelectedValue = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        else
            drpindustry.SelectedValue = null;
        updateStatus();

        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = true;
        btnlast.Enabled = true;
        btnimage();

    }
    protected void btnprevious_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = executepro;
        query.Value = "0";
        // fpnl--;
        int count = ds.Tables[0].Rows.Count - 1;

        fpnl--;

        if (fpnl != -1)
        {
            if (fpnl >= 0 || fpnl <= count)
            {
                txtproductcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                txtprodesc.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                if (drpindustry.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[6].ToString()) != null)
                    drpindustry.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[6].ToString();
                else
                    drpindustry.SelectedValue = null;
                
                updateStatus();

                btnfirst.Enabled = true;
                btnlast.Enabled = true;
                btnprevious.Enabled = true;
                btnnext.Enabled = true;
            }
            else
            {
                btnnext.Enabled = true;
                btnlast.Enabled = true;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;

            }
        }
        else
        {
            btnnext.Enabled = true;
            btnlast.Enabled = true;
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;

        }
        if (fpnl == 0)
        {
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = true;
            btnlast.Enabled = true;

        }
        btnimage();
    }
    protected void btnnext_Click(object sender, EventArgs e)
    {

        DataSet ds = new DataSet();
        ds = executepro;
        int count = ds.Tables[0].Rows.Count - 1;
        fpnl++;
        query.Value = "0";

        if (fpnl != -1 && fpnl >= 0)
        {
            if (fpnl <= count)
            {
                txtproductcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                txtprodesc.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                if (drpindustry.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[6].ToString()) != null)
                    drpindustry.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[6].ToString();
                else
                    drpindustry.SelectedValue = null;
                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }

            else
            {
                btnnext.Enabled = false;
                btnlast.Enabled = false;
                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }
        }
        else
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        if (fpnl == count)
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        btnimage();
    }

    protected void btnlast_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = executepro;
        int count = ds.Tables[0].Rows.Count;
        fpnl = count - 1;
        query.Value = "0";

        txtproductcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
        txtprodesc.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
        txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
        if (drpindustry.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[6].ToString()) != null)
            drpindustry.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[6].ToString();
        else
            drpindustry.SelectedValue = null;
        updateStatus();

        btnfirst.Enabled = true;
        btnprevious.Enabled = true;
        btnlast.Enabled = false;
        btnnext.Enabled = false;

        btnimage();


    }

    protected void btnDelete_Click(object sender, EventArgs e)
    {
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(ProductCategory), "abc", "alert('session Expired');window.close();", true);
            return;
        }
        string code = txtproductcode.Text;
        //string name = txtprodesc.Text;
        //string alias = txtalias.Text;
        query.Value = "0";
        DataSet ds1 = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.productcategory del = new NewAdbooking.Classes.productcategory();

                ds1 = del.deleteproduct(code, Session["compcode"].ToString());


                NewAdbooking.Classes.productcategory execute = new NewAdbooking.Classes.productcategory();
                executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.productcategory del = new NewAdbooking.classesoracle.productcategory();

                    ds1 = del.deleteproduct(code, Session["compcode"].ToString());


                    NewAdbooking.classesoracle.productcategory execute = new NewAdbooking.classesoracle.productcategory();
                    executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());

                }
                else
                {
                    NewAdbooking.classmysql.productcategory del = new NewAdbooking.classmysql.productcategory();

                    ds1 = del.deleteproduct(code, Session["compcode"].ToString());


                    NewAdbooking.classmysql.productcategory execute = new NewAdbooking.classmysql.productcategory();
                    executepro = execute.executequery(dprocode, dproalias, dprodesc, Session["compcode"].ToString(), dproind);//, Session["userid"].ToString());


                }
        }
        catch (Exception k3)
        {
            err = k3.Message;
        }
        string code1 = "Deleted Product " + code;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Product','" + err.Replace("'", "''") + "','Product Deleted','" + code1;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + Request.ServerVariables["REMOTE_ADDR"] + "')";
        dconnect.executenonquery1(sqldd);
        DataSet ds3 = new DataSet();
        ds3.ReadXml(Server.MapPath("XML/errorMessage.xml"));
        message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
        AspNetMessageBox(message);
            int a = executepro.Tables[0].Rows.Count;
            if (a <= 0)
            {
                //if (a < 0)
                //{
                    message = "No more data is here to be deleted";
                    //AspNetMessageBox(message);
                    ScriptManager.RegisterClientScriptBlock(this, typeof(ProductCategory), "enable", "alert('" + message + "');", true);
                //}
                //else
                //{
                //    DataSet ds23 = new DataSet();
                //    ds23.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                //    message = ds23.Tables[0].Rows[0].ItemArray[2].ToString();
                //    AspNetMessageBox(message);
                //}
                chkstatus(FlagStatus);


                updateStatus();
                getbuttoncheck(formname);
                txtalias.Text = "";
                txtprodesc.Text = "";
                txtproductcode.Text = "";
                drpindustry.SelectedIndex = 0;
                btnimage();
                return;

            }
            else if (fpnl == -1 || fpnl <= a)
            {
                DataSet ds = new DataSet();

                ds = executepro;
                txtproductcode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
                txtprodesc.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
                txtalias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
                if (drpindustry.Items.FindByValue(ds.Tables[0].Rows[0].ItemArray[6].ToString()) != null)
                    drpindustry.SelectedValue = ds.Tables[0].Rows[0].ItemArray[6].ToString();
                else
                    drpindustry.SelectedValue = null;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;
                if (a == 1)
                {
                    btnnext.Enabled = false;
                    btnlast.Enabled = false;
                }
                else
                {
                    btnnext.Enabled = true;
                    btnlast.Enabled = true;
                }
                fpnl = 0;
            }

            else
            {
                DataSet ds = new DataSet();
                ds = executepro;
                txtproductcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                txtprodesc.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                if (drpindustry.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[6].ToString()) != null)
                    drpindustry.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[6].ToString();
                else
                    drpindustry.SelectedValue = null;
                //drpindustry.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[6].ToString();
            }
            btnimage();
        
     

    }
    protected void btnExit_Click(object sender, EventArgs e)
    {
        //Response.Write("<script>window.close();</script>");
    }
    protected void AspNetMessageBox(string strMessage)
    {
        //strMessage = adminResource.GetStringFromResource(strMessage);
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(ProductCategory), "ShowAlert", strAlert, true);
    }


    //private void chkmendetory()
    //{
    //    if (lbproductcat.Text.IndexOf("*") >= 0)
    //    {
    //        hiddenquery.Value = "1";
    //    }
    //    else
    //    {
    //        hiddenquery.Value = "0";
    //    }

    //    if (lbproddesc.Text.IndexOf("*") >= 0)
    //    {
    //        hiddenproddesc.Value = "1";
    //    }
    //    else
    //    {
    //        hiddenproddesc.Value = "0";
    //    }

    //    if (laalias.Text.IndexOf("*") >= 0)
    //    {
    //        hiddenalias.Value = "1";

    //    }
    //    else
    //    {
    //        hiddenalias.Value = "0";
    //    }





    //}



    //protected void txtprodesc_TextChanged(object sender, EventArgs e)
    //{
    //    string str = txtprodesc.Text;
    //    NewAdbooking.Classes.productcategory auto = new NewAdbooking.Classes.productcategory();
    //    DataSet objdata = new DataSet();
    //    objdata = auto.autocode(str);

    //    //  txtalias.Text.Clone = txtprodesc.Text;
    //    // txtalias.
    //    //  txtalias.TextChanged += txtprodesc.Text.;

    //    if (Session["autogenerated"].ToString() == "1")
    //    {
    //        autogenerated();
    //    }
    //    txtalias.Text = txtprodesc.Text;

    //}

    //public void autogenerated()
    //{
    //    txtproductcode.Enabled = false;
    //    string str = txtprodesc.Text;
    //    string newstr;
    //    NewAdbooking.Classes.productcategory auto = new NewAdbooking.Classes.productcategory();
    //    DataSet objdata = new DataSet();
    //    objdata = auto.autocode(str);

    //    if (objdata.Tables[0].Rows.Count != 0)
    //    {



    //        message = "This Name is Already assigned";
    //        AspNetMessageBox(message);


    //    }
    //    else
    //    {
    //        string x = objdata.Tables[0].Rows[0].ItemArray[0].ToString();
    //        int y = Convert.ToInt32(x);
    //           y++;

    //         txtproductcode.Text=;

    //        if (objdata.Tables[1].Rows.Count == 0)
    //        {

    //            newstr = "";

    //        }
    //        else
    //        {
    //            newstr = objdata.Tables[1].Rows[0].prod_cat_code;
    //        }
    //        if (newstr != null)
    //        {
    //            int code = newstr.Split[2, 4];
    //            code++;
    //            txtproductcode.Text = str.Split[0, 2] + code;

    //        }

    //        else
    //        {
    //            txtproductcode.Text = str.Split[0, 2] + "0";

    //        }


    // }

    [Ajax.AjaxMethod]

    public DataSet adchkadvcode(string str, string indus, string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.productcategory auto = new NewAdbooking.Classes.productcategory();

            ds = auto.autocode(str, indus);
            return ds;
        }

        else
         if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="orcl")
         {
             NewAdbooking.classesoracle.productcategory auto = new NewAdbooking.classesoracle.productcategory();

             ds = auto.autocode(str, indus);
             return ds;
         }
        else
        {
            NewAdbooking.classmysql.productcategory auto = new NewAdbooking.classmysql.productcategory();
            ds = auto.autocode(str, indus);
            return ds;
        }


    }
    public void btnimage()
    {
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        else
            btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        else
            btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        else
            btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        else
            btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        else
            btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        else
            btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        else
            btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        else
            btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        else
            btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        else
            btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        else
            btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        else
            btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();
    }

}
  




