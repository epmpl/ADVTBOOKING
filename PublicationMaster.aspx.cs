using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class PublicationMaster : System.Web.UI.Page
{

    string pubcode;

    NewAdbooking.Classes.PublicationMaster PuMst = new NewAdbooking.Classes.PublicationMaster();
    NewAdbooking.Classes.PublicationMaster multcity = new NewAdbooking.Classes.PublicationMaster();
    DataSet executepagetype = new DataSet();

    protected void Page_Load(object sender, System.EventArgs e)
    {
        //Response.Expires = -1;
        //if (Session["compcode"] == null)
        //{
        //    //Response.Redirect("login.aspx");
        //    Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
        //    return;

        //}
        // Put user code to initialize the page here

        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";

        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();


            ////Response.Redirect("login.aspx");
            //Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            //return;
        }

        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;

        }

        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];

        hiddenusername.Value = Session["Username"].ToString();

        //This code reads the label name from the xml file
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/publicationmaster.xml"));
        lbpubcode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lbpubname.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        lbalias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        lblanguage.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lbContactPerson.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lbFaxNo.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();

        lbPriority.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        lbstart.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        lbphoneno.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        lbemailid.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        lbselectpubday.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lbCountry.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();
        lbcity.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
        lbgutter.Text = ds.Tables[0].Rows[0].ItemArray[13].ToString();
        lbcolspc.Text = ds.Tables[0].Rows[0].ItemArray[14].ToString();
        lblrotime.Text = ds.Tables[0].Rows[0].ItemArray[15].ToString();
        lblhr.Text = ds.Tables[0].Rows[0].ItemArray[16].ToString();
        lblmin.Text = ds.Tables[0].Rows[0].ItemArray[17].ToString();
        lblproduction.Text = ds.Tables[0].Rows[0].ItemArray[18].ToString();
        lbldaybefore.Text = ds.Tables[0].Rows[0].ItemArray[19].ToString();
        lblmrv.Text = ds.Tables[0].Rows[0].ItemArray[23].ToString();
        /*change ankur*/
        lbnoofcol.Text = ds.Tables[0].Rows[0].ItemArray[20].ToString();
        ///////////////////////////////////////////////////////////////
        lbpublisher.Text = ds.Tables[0].Rows[0].ItemArray[21].ToString();
        lblprefix.Text = ds.Tables[0].Rows[0].ItemArray[22].ToString();
        lblmobno.Text = ds.Tables[0].Rows[0].ItemArray[24].ToString();
        DataSet comm_nam = new DataSet();
        // Read in the XML file
        comm_nam.ReadXml(Server.MapPath("XML/Comm_detail.xml"));
        lblintegration.Text = comm_nam.Tables[0].Rows[0].ItemArray[12].ToString();
        lblsrvcacc.Text = ds.Tables[0].Rows[0].ItemArray[25].ToString();
        lblsubsrvacc.Text = ds.Tables[0].Rows[0].ItemArray[26].ToString();
        if (ds.Tables.Count > 1)
        {
            if (ds.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
            {
                lbCountry.Attributes.Add("style", "display:none");
                txtcountry.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[1].ToString() == "hide")
            {
                lbstart.Attributes.Add("style", "display:none");
                datelbl.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[2].ToString() == "hide")
            {
                tr1.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[4].ToString() == "hide")
            {
                tr2.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[6].ToString() == "hide")
            {
                lbPriority.Attributes.Add("style", "display:none");
                txtpriority.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[7].ToString() == "hide")
            {
                tr3.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[9].ToString() == "hide")
            {
                tr4.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[11].ToString() == "hide")
            {
                tr5.Attributes.Add("style", "display:none");
            }
        }

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnnext.Enabled = false;
        btnprevious.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        txtpubname.Enabled = false;
        txtpubcode.Enabled = false;
        txtpubalias.Enabled = false;
        txtcontactperson.Enabled = false;
        txtpriority.Enabled = false;
        txtfaxno.Enabled = false;
        txtfaxno1.Enabled = false;
        txtphoneno.Enabled = false;
        txtphone2.Enabled = false;
        txtemailid.Enabled = false;
        txteshtabdate.Enabled = false;
        drplanguage.Enabled = false;
        drpcity.Enabled = false;
        txtcountry.Enabled = false;
        txtgutter.Enabled = false;
        txtcolspc.Enabled = false;
        txthr.Enabled = false;
        txtmin.Enabled = false;
        txtproduction.Enabled = false;
        drpublisher.Enabled = false;
        txtmrv.Enabled = false;
        txtmobno.Enabled = false;


        hiddencompcode.Value = Session["compcode"].ToString();
        userid1.Value = Session["userid"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddendateformat.Value = Session["dateformat"].ToString();

        Ajax.Utility.RegisterTypeForAjax(typeof(PublicationMaster));

       // multicity();
       // countryname();
        // addcit();
        preodicity();
        publicationtype();
        bindpublisher();
        if (!Page.IsPostBack)
        {
            btnNew.Attributes.Add("OnClick", "javascript:return newclick1();");
            btnSave.Attributes.Add("OnClick", "javascript:return saveclicknew();");
            btnModify.Attributes.Add("OnClick", "javascript:return clickmodify1();");
            btnQuery.Attributes.Add("OnClick", "Javascript:return clickquery1();");
            btnCancel.Attributes.Add("OnClick", "javascript:return clickcancle1('PublicationMaster');");
            btnExecute.Attributes.Add("onClick", "javascript:return clickexecute1();");
            btnfirst.Attributes.Add("OnClick", "javascript:return clickfirst1();");
            btnlast.Attributes.Add("OnClick", "javascript:return clicklast1();");
            btnnext.Attributes.Add("OnClick", "javascript:return clicknext1();");
            btnprevious.Attributes.Add("OnClick", "javascript:return clickprevious1();");
            btnDelete.Attributes.Add("OnClick", "javascript:return pubdelete1();");
            btnExit.Attributes.Add("OnClick", "javascript:return clickexit();");

            addlang();
          
            CheckBox8.Attributes.Add("OnClick", "javascript:return checkedunchecked('CheckBox8');");
            txtpubcode.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtpubcode');");
            txtpubname.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtpubname');");
            txtpubalias.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtpubalias');");
            txtcontactperson.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtcontactperson');");
            txtemailid.Attributes.Add("OnBlur", "javascript:return saurabhClientEmailCheck('txtemailid');");
            txtsrvcacc.Attributes.Add("onkeydown", "javascript:return fillservicecode(event);");
            lstservicecode.Attributes.Add("onkeydown", "javascript:return onclickservice(event);");
            lstservicecode.Attributes.Add("onclick", "javascript:return onclickservice(event);");


            txtsubsrvcacc.Attributes.Add("onkeydown", "javascript:return fillsubservicecode(event);");
            lstsubservicecode.Attributes.Add("onkeydown", "javascript:return onclicksubservice(event);");
            lstsubservicecode.Attributes.Add("onclick", "javascript:return onclicksubservice(event);");
            txtpriority.Attributes.Add("onBlur", "javascript:return chkPriority();");
           //txtpubname.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtpubname');");
          //  txtpubname.Attributes.Add("OnChange", "javascript:return fillvalue();");

            txtpubname.Attributes.Add("OnBlur", "javascript:return autoornot();");

            txtgutter.Attributes.Add("OnChange", "javascript:return checkgutter();");// for decimal enteries
            txtcolspc.Attributes.Add("OnChange", "javascript:return checkcol();");
            txtmin.Attributes.Add("OnChange", "javascript:return chkmin();");
            txtmobno.Attributes.Add("OnBlur", "javascript:return chkmobile();");
           // txtpriority.Attributes.Add("onchange", "javascript:return bla();");

            //chkHPriority1.Attributes.Add("OnClick", "javascript:return chkPriority();");

            CheckBox1.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox2.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox3.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox4.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox5.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox6.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox7.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");



            txteshtabdate.Attributes.Add("OnBlur", "javascript:return checkdate(this);");

          //  txtcountry.Attributes.Add("OnChange", "javascript:return addcount();");

            //  drpcity.Attributes.Add("OnChange", "javascript:addregcity();");

            //d1 = multcity.chkmulticity(Session["compcode"].ToString(), Session["userid"].ToString(), pubcode);
            //if (d1.Tables[0].Rows.Count > 0)
            //{
            //    //btnupdate.Visible=true;
            //    // btnupdate.Enabled = true;
            //    //btnsubmit.Visible=false;
            //    //btnsubmit.Enabled=true;
            //    multicity();
            //}

                //CheckBox1.Attributes.Add("OnClick","javascript:return disablecheck();");
                //CheckBox2.Attributes.Add("OnClick","javascript:return disablecheck();");
                //CheckBox3.Attributes.Add("OnClick","javascript:return disablecheck();");
                //CheckBox4.Attributes.Add("OnClick","javascript:return disablecheck();");
                //CheckBox5.Attributes.Add("OnClick","javascript:return disablecheck();");
                //CheckBox6.Attributes.Add("OnClick","javascript:return disablecheck();");
                //CheckBox7.Attributes.Add("OnClick","javascript:return disablecheck();");
                //CheckBox8.Attributes.Add("OnClick","javascript:return disablecheck();");

                //CheckBox2.Attributes.Add("disabled","disabled");
                //CheckBox3.Attributes.Add("disabled","disabled");
                //CheckBox4.Attributes.Add("disabled","disabled");
                //CheckBox5.Attributes.Add("disabled","disabled");
                //CheckBox6.Attributes.Add("disabled","disabled");
                //CheckBox7.Attributes.Add("disabled","disabled");
                //CheckBox8.Attributes.Add("disabled","disabled");
                //check();

            
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
    }
    #region Web Form Designer generated code
     protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);

    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    //		public DataSet addlang()
     public DataSet addlang()
    {
        drplanguage.Items.Clear();
        DataSet ds = new DataSet();
          string[] parameterValueArray = new string[] {hiddencompcode.Value};
         if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
    {
       
        NewAdbooking.Classes.PublicationMaster PMst = new NewAdbooking.Classes.PublicationMaster();
        ds = PMst.addlang(hiddencompcode.Value);
    }

    else
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "PubAddLanguage.PubAddLanguage_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
         else
    {
        NewAdbooking.classmysql.PublicationMaster PMst = new NewAdbooking.classmysql.PublicationMaster();
        ds = PMst.addlang(hiddencompcode.Value);


    } if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             string procedureName = "PubAddLanguage.PubAddLanguage_p";
             NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "----Select Language----";
        li1.Value = "0";
        li1.Selected = true;
        drplanguage.Items.Add(li1);

        if (ds.Tables.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                drplanguage.Items.Add(li);
            }
        }

        return ds;
    }

    [Ajax.AjaxMethod]
    //		public DataSet publicationcheck(string compcode,string pubcode,string userid)
     public DataSet publicationcheck(string compcode, string pubcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.PublicationMaster chk = new NewAdbooking.Classes.PublicationMaster();
            
            ds = chk.publicationcheck(compcode, pubcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.PublicationMaster chk = new NewAdbooking.classesoracle.PublicationMaster();

                ds = chk.publicationcheck(compcode, pubcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.PublicationMaster chk = new NewAdbooking.classmysql.PublicationMaster();

            ds = chk.publicationcheck(compcode, pubcode, userid);
            return ds;
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    
    
    //		public void  pubsave1(string hiddencompcode,string txtpubcode,string txtpubname,string txtpubalias,string drplanguage,string txtpriority,string txteshtabdate,string txtcontactperson,string txtphoneno,string txtfaxno,string txtemailid,string userid1)
        /*change ankur*/
    public void pubsave1(string hiddencompcode, string txtpubcode, string txtpubname, string txtpubalias, string drplanguage, string txtpriority, string txteshtabdate, string txtcontactperson, string txtphoneno, string txtfaxno, string txtemailid, string userid1, string pubtype, string preocity, string txtphone2, string txtfaxno1, string txtgutter, string txtcolspc, string hr, string mint, string prod, string noofcol, string publish_code, string ip,string prefix,string MRV,string mobileno, string integration, string acc_cd, string sacc_cd)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.PublicationMaster pmst = new NewAdbooking.Classes.PublicationMaster();
                /*change ankur*/
                ds = pmst.pubsave(hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, txtpriority, txteshtabdate, txtcontactperson, txtphoneno, txtfaxno, txtemailid, userid1, pubtype, preocity, txtphone2, txtfaxno1, txtgutter, txtcolspc, hr, mint, prod, noofcol, publish_code, prefix, MRV, mobileno, acc_cd, sacc_cd);
                /////////////////////////
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.PublicationMaster pmst = new NewAdbooking.classesoracle.PublicationMaster();
                    /*change ankur*/
                    ds = pmst.pubsave(hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, txtpriority, txteshtabdate, txtcontactperson, txtphoneno, txtfaxno, txtemailid, userid1, pubtype, preocity, txtphone2, txtfaxno1, txtgutter, txtcolspc, hr, mint, prod, noofcol, publish_code, prefix, MRV, integration,mobileno, acc_cd, sacc_cd);

                }
                else
                {
                    NewAdbooking.classmysql.PublicationMaster pmst = new NewAdbooking.classmysql.PublicationMaster();

                    ds = pmst.pubsave(hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, txtpriority, txteshtabdate, txtcontactperson, txtphoneno, txtfaxno, txtemailid, userid1, pubtype, preocity, txtphone2, txtfaxno1, txtgutter, txtcolspc, hr, mint, prod, noofcol, publish_code, prefix, MRV, integration, mobileno, acc_cd, sacc_cd);

                }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string txtpubcode2 = "Inserted code " + txtpubcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid1"] + "','Publication','" + err.Replace("'", "''") + "','Publication Creation','" + txtpubcode2;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        //return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet fill_subService(string pcompcode, string pssac_code, string psac_code, string pssac_name, string pcode, string pfreez_flag, string pcreated_by, string pdateformat, string ptrn_type, string extra1, string extra2, string extra3, string extra4, string extra5, string extra6, string extra7, string extra8, string extra9, string extra10)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { pcompcode, pssac_code, psac_code, pssac_name, pcode, pfreez_flag, pcreated_by, pdateformat, ptrn_type, extra1, extra2, extra3, extra4, extra5, extra6, extra7, extra8, extra9, extra10 };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "fa_sub_sac_ins_upd_del";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "fa_sub_sac_ins_upd_del";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "fa_sub_sac_ins_upd_del";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet fill_Service(string pcompcode, string psac_code, string psac_name, string pcreated_by, string pcode, string pfreez_flag, string pdateformat, string ptrn_type, string extra1, string extra2, string extra3, string extra4, string extra5, string extra6, string extra7, string extra8, string extra9, string extra10)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { pcompcode, psac_code, psac_name, pcreated_by, pcode, pfreez_flag, pdateformat, ptrn_type, extra1, extra2, extra3, extra4, extra5, extra6, extra7, extra8, extra9, extra10 };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "fa_sac_ins_upd_del";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "fa_sac_ins_upd_del";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "fa_sac_ins_upd_del1";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

   [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet pubmodify1(string hiddencompcode,string txtpubcode,string txtpubname,string txtpubalias,string drplanguage,string txtpriority,string txteshtabdate,string txtcontactperson,string txtphoneno,string txtfaxno,string txtemailid,string userid1)//ip2,moblieno, userid,, prefix, MRV, integration
        /*change ankur*/
    public DataSet pubmodify1(string hiddencompcode, string txtpubcode, string txtpubname, string txtpubalias, string drplanguage, string txtpriority, string txteshtabdate, string txtcontactperson, string txtphoneno, string txtfaxno, string txtemailid, string userid1, string pubtype, string preocity, string txtphone2, string txtfaxno1, string txtgutter, string txtcolspc, string hr, string mint, string prod, string noofcol, string publish_code, string ip, string prefix, string MRV, string moblieno,string integration, string pacc_cd, string psacc_cd)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            //DataSet ds = new DataSet();// langcode, priority, txtdob, contaperson, phone,    
            //fax, emailid, pubtype, preocity, phone2, fax2, gut, colspc, hr, mint, prod, noofcol, publishercode,  prefix, MRV,  integration, pacc_cd, psacc_cd
                                                                                                                                                                                                                                                                           
           
            if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
            {
                string[] parameterValueArray = new string[] { hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, txtpriority, txteshtabdate, txtcontactperson, txtphoneno, txtfaxno, txtemailid,userid1, pubtype, preocity, txtphone2, txtfaxno1, txtgutter, txtcolspc, hr, mint, prod, noofcol, publish_code, prefix, MRV, moblieno, pacc_cd, psacc_cd };
                string procedureName = "pub_modify";
                NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                string[] parameterValueArray = new string[] { hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, txtpriority, txteshtabdate, txtcontactperson, txtphoneno, txtfaxno, txtemailid, pubtype, preocity, txtphone2, txtfaxno1, txtgutter, txtcolspc, hr, mint, prod, noofcol, publish_code, prefix, MRV, integration, pacc_cd, psacc_cd };
                string procedureName = "pub_modify.pub_modify_p";
                NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string[] parameterValueArray = new string[] { hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, txtpriority, txteshtabdate, txtcontactperson, txtphoneno, txtfaxno, txtemailid, pubtype, preocity, txtphone2, txtfaxno1, txtgutter, txtcolspc, hr, mint, prod, noofcol, publish_code, prefix, MRV, integration, pacc_cd, psacc_cd };
                string procedureName = "pub_modify_pub_modify_p";
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            //else
            //{
               
            //    NewAdbooking.classmysql.PublicationMaster obj = new NewAdbooking.classmysql.PublicationMaster();

            //    ds = obj.pubmodify(hiddencompcode, pubcode, txtpubname, txtpubalias, drplanguage, txtpriority, txteshtabdate, txtcontactperson, txtphoneno, txtfaxno, txtemailid, userid1, pubtype, preocity, txtphone2, txtfaxno1, txtgutter, txtcolspc, hr, mint, prod, noofcol, publish_code, prefix, MRV, integration);
            //}
            return ds;
        }
        catch(Exception e)
        {
            err=e.Message;
        }
        string txtpubcode3 = "Modified code " + txtpubcode;
    clsconnection dconnect = new clsconnection();
    string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid1"] + "','Publication','" + err.Replace("'", "''") + "','Publication Updation','" + txtpubcode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;
    }


    [Ajax.AjaxMethod]
    //	public DataSet pubexecute1(string hiddencompcode,string txtpubcode,string txtpubname,string txtpubalias,string drplanguage,string userid1)
   //     public DataSet pubexecute1(string hiddencompcode,string txtpubcode, string txtpubname, string txtpubalias, string drplanguage, string preocity)
    public DataSet pubexecute1(string hiddencompcode, string txtpubcode, string txtpubname, string txtpubalias, string drplanguage, string pubtype, string preocity)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.PublicationMaster execute = new NewAdbooking.Classes.PublicationMaster();
         
            ds = execute.pubexecute(hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, pubtype, preocity);//, userid1
         
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.PublicationMaster execute = new NewAdbooking.classesoracle.PublicationMaster();

                ds = execute.pubexecute(hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, pubtype, preocity);//, userid1

                return ds;
            }
        else
        {
            NewAdbooking.classmysql.PublicationMaster execute = new NewAdbooking.classmysql.PublicationMaster();

            ds = execute.pubexecute(hiddencompcode, txtpubcode, txtpubname, txtpubalias, drplanguage, pubtype, preocity);//, userid1

            return ds;
        }
    }

    [Ajax.AjaxMethod]
    //	public DataSet selectpublication()
     public DataSet selectpublication()
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {

             NewAdbooking.Classes.PublicationMaster pmst = new NewAdbooking.Classes.PublicationMaster();
             
             ds = pmst.selectpublication();
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.PublicationMaster pmst = new NewAdbooking.classesoracle.PublicationMaster();

                 ds = pmst.selectpublication();
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.PublicationMaster pmst = new NewAdbooking.classmysql.PublicationMaster();

             ds = pmst.selectpublication();
             return ds;
         }
    }


    [Ajax.AjaxMethod]
    //	public DataSet selectpubdaysave1(string hiddencompcode,string txtpubcode,string CheckBox1,string CheckBox2,string CheckBox3,string CheckBox4,string CheckBox5,string CheckBox6,string CheckBox7,string CheckBox8,string userid1)
     public DataSet selectpubdaysave1(string hiddencompcode, string txtpubcode, string CheckBox1, string CheckBox2, string CheckBox3, string CheckBox4, string CheckBox5, string CheckBox6, string CheckBox7, string CheckBox8, string userid1)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {

             NewAdbooking.Classes.PublicationMaster pmst = new NewAdbooking.Classes.PublicationMaster();
            
             ds = pmst.selectpubdaysave(hiddencompcode, txtpubcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.PublicationMaster pmst = new NewAdbooking.classesoracle.PublicationMaster();

                 ds = pmst.selectpubdaysave(hiddencompcode, txtpubcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.PublicationMaster pmst = new NewAdbooking.classmysql.PublicationMaster();

             ds = pmst.selectpubdaysave(hiddencompcode, txtpubcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
             return ds;
         }
    }

    [Ajax.AjaxMethod]
    //	public DataSet checkpubcode1(string hiddencompcode,string txtpubcode,string userid1)
     public DataSet checkpubcode1(string hiddencompcode, string txtpubcode, string userid1)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {

             NewAdbooking.Classes.PublicationMaster pmst = new NewAdbooking.Classes.PublicationMaster();
           
             ds = pmst.checkpubcode(hiddencompcode, txtpubcode, userid1);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.PublicationMaster pmst = new NewAdbooking.classesoracle.PublicationMaster();

                 ds = pmst.checkpubcode(hiddencompcode, txtpubcode, userid1);
                 return ds;
             
             
             }
         else
         {

             NewAdbooking.classmysql.PublicationMaster pmst = new NewAdbooking.classmysql.PublicationMaster();

             ds = pmst.checkpubcode(hiddencompcode, txtpubcode, userid1);
             return ds;
         }
    }


    [Ajax.AjaxMethod]
    //	public DataSet selectpubdaymodify1(string hiddencompcode,string txtpubcode,string CheckBox1,string CheckBox2,string CheckBox3,string CheckBox4,string CheckBox5,string CheckBox6,string CheckBox7,string CheckBox8,string userid1)
     public DataSet selectpubdaymodify1(string hiddencompcode, string txtpubcode, string CheckBox1, string CheckBox2, string CheckBox3, string CheckBox4, string CheckBox5, string CheckBox6, string CheckBox7, string CheckBox8, string userid1)
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {

             NewAdbooking.Classes.PublicationMaster pmst = new NewAdbooking.Classes.PublicationMaster();
             
             ds = pmst.selectpubdaymodify(hiddencompcode, txtpubcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
             return ds;
         }

         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.PublicationMaster pmst = new NewAdbooking.classesoracle.PublicationMaster();

                 ds = pmst.selectpubdaymodify(hiddencompcode, txtpubcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.PublicationMaster pmst = new NewAdbooking.classmysql.PublicationMaster();

             ds = pmst.selectpubdaymodify(hiddencompcode, txtpubcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
             return ds;
         }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //	public DataSet pubdelete1(string hiddencompcode,string txtpubcode,string userid1)
     public DataSet pubdelete1(string hiddencompcode, string txtpubcode,string ip)
     {
         DataSet ds = new DataSet();
         string err = "";
         try
         {
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {

                 NewAdbooking.Classes.PublicationMaster pmst = new NewAdbooking.Classes.PublicationMaster();

                 ds = pmst.pubdelete(hiddencompcode, txtpubcode);
                 //    return ds;
             }
             else
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {
                     NewAdbooking.classesoracle.PublicationMaster pmst = new NewAdbooking.classesoracle.PublicationMaster();

                     ds = pmst.pubdelete(hiddencompcode, txtpubcode);
                         //  return ds;
                 }
                 else
                 {
                     NewAdbooking.classmysql.PublicationMaster pmst = new NewAdbooking.classmysql.PublicationMaster();

                     ds = pmst.pubdelete(hiddencompcode, txtpubcode);
                     //return ds;
                 }
         }
         catch (Exception e)
         {
             err = e.Message;
         }
         string txtpubcode1 = "Deleted code " + txtpubcode;

         clsconnection dconnect = new clsconnection();
         string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid1"] + "','Publication ','" + err.Replace("'", "''") + "','Publication Delete','" + txtpubcode1;
         sqldd = sqldd + "',";
         sqldd = sqldd + "'" + ip + "')";
         dconnect.executenonquery1(sqldd);
         return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet chkPubPriority(string compCode,string priority)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.PublicationMaster pmst = new NewAdbooking.Classes.PublicationMaster();
           
            ds = pmst.chkPriority(compCode, priority);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.PublicationMaster pmst = new NewAdbooking.classesoracle.PublicationMaster();

                ds = pmst.chkPriority(compCode, priority);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.PublicationMaster pmst = new NewAdbooking.classmysql.PublicationMaster();

            ds = pmst.chkPriority(compCode, priority);
            return ds;
        }
    }


    //	public void check()
     public void check()
    {
        CheckBox1.Enabled = false;
        CheckBox2.Enabled = false;
        CheckBox3.Enabled = false;
        CheckBox4.Enabled = false;
        CheckBox5.Enabled = false;
        CheckBox6.Enabled = false;
        CheckBox7.Enabled = false;
        CheckBox8.Enabled = false;
    }

    protected void CheckBox1_Load(object sender, System.EventArgs e)
    {
        CheckBox1.Attributes.Add("OnLoad", "javascript:return disablecheck();");
        

    }

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }

    protected void hiddenuserid_ServerChange(object sender, System.EventArgs e)
    {

    }


    [Ajax.AjaxMethod]
    public DataSet chkpublicationmast(/*string cod,*/string str)
    {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {

             NewAdbooking.Classes.PublicationMaster chk = new NewAdbooking.Classes.PublicationMaster();

             ds = chk.publicationmastr(/*cod,*/str);
             return ds;
         }
         else
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 NewAdbooking.classesoracle.PublicationMaster chk = new NewAdbooking.classesoracle.PublicationMaster();

                 ds = chk.publicationmastr(/*cod,*/str);
                 return ds;
             }
         else
         {
             NewAdbooking.classmysql.PublicationMaster chk = new NewAdbooking.classmysql.PublicationMaster();

             ds = chk.publicationmastr(/*cod,*/str);
             return ds;

         }


    }

    public void publicationtype()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            //regionhidden=hiddenregion.Value;
            NewAdbooking.Classes.PublicationMaster Publicationtype = new NewAdbooking.Classes.PublicationMaster();
            
            ds = Publicationtype.publicationtype();
        }
            else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.PublicationMaster Publicationtype = new NewAdbooking.classesoracle.PublicationMaster();

                ds = Publicationtype.publicationtype();
            }
            else
            {
                NewAdbooking.classmysql.PublicationMaster Publicationtype = new NewAdbooking.classmysql.PublicationMaster();

                ds = Publicationtype.publicationtype();

            }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--Select Publication--";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        txtcountry.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            txtcountry.Items.Add(li);


        }

    }


    public void preodicity()
    {
        //regionhidden=hiddenregion.Value;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.PublicationMaster preodicity = new NewAdbooking.Classes.PublicationMaster();

            ds = preodicity.preodicityname(Session["compcode"].ToString());
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.PublicationMaster preodicity = new NewAdbooking.classesoracle.PublicationMaster();

                ds = preodicity.preodicityname(Session["compcode"].ToString());
            }
        else
        {

            NewAdbooking.classmysql.PublicationMaster preodicity = new NewAdbooking.classmysql.PublicationMaster();

            ds = preodicity.preodicityname(Session["compcode"].ToString());
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "---Select Periodicity---";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpcity.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpcity.Items.Add(li);


        }

    }


    // ---- bind publisher-----

    public void bindpublisher()
    {
        drpublisher.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.PublicationMaster bind = new NewAdbooking.Classes.PublicationMaster();
            ds = bind.publisher(hiddencompcode.Value);
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.PublicationMaster bind = new NewAdbooking.classesoracle.PublicationMaster();

                ds = bind.publisher(hiddencompcode.Value);
            }
            else
            {
                NewAdbooking.classmysql.PublicationMaster bind = new NewAdbooking.classmysql.PublicationMaster();

                ds = bind.publisher(hiddencompcode.Value);
            }
        ListItem li = new ListItem();
        li.Text = "---Select Publisher---";
        li.Value = "0";
        li.Selected = true;
        drpublisher.Items.Add(li);

        int x;

        for (x = 0; x < ds.Tables[0].Rows.Count; x++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[x].ItemArray[1].ToString();
            li1.Value = ds.Tables[0].Rows[x].ItemArray[0].ToString();
            drpublisher.Items.Add(li1);

        }

    }



    //[Ajax.AjaxMethod]
    //public DataSet addcity(string preocity)
    //{
    //    DataSet ds1 = new DataSet();
    //    ds1 = PuMst.pubcity(preocity);
    //    return ds1;
    //}

    //public DataSet addcit()
    //{
    //    NewAdbooking.Classes.Master multicity = new NewAdbooking.Classes.Master();
    //    drpcity.Items.Clear();
    //    DataSet ds = new DataSet();
    //    ds = multicity.addcity();
    //    int i;
    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = "------Select City------";
    //    li1.Value = "0";
    //    li1.Selected = true;
    //    drpcity.Items.Add(li1);

    //    if (ds.Tables.Count > 0)
    //    {
    //        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //        {
    //            ListItem li;
    //            li = new ListItem();
    //            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //            li.Value = ds.Tables[0].Rows[i].ItemArray[5].ToString();
    //            drpcity.Items.Add(li);
    //        }

    //    }

    //    return ds;
    //}




    //public void multicity()
    //{
    //
    // NewAdbooking.Classes.PublicationMaster multcity = new NewAdbooking.Classes.PublicationMaster();
   // DataSet d1 = new DataSet();
    //
//
//
    //
    //    string sizecode = d1.Tables[0].Rows[0].ItemArray[0].ToString();
    //    string listcode = d1.Tables[0].Rows[0].ItemArray[1].ToString();

    //    int i;
    //    char[] splitter = { ',' };



    //    string[] myarray = listcode.Split(splitter);

    //    for (i = 0; i <= myarray.Length - 1; i++)
    //    {
    //        if (myarray[i] != "")
    //        {
    //            if (myarray[i] != "0")
    //            {


    //                drpcity.Items.FindByValue(myarray[i]).Selected = true;
    //                drpcity.Items.FindByValue("0").Selected = false;

    //            }
    //        }
    //    }



    //}

   // public DataSet submit()
   // {
   //     string abc;
   //     foreach (ListItem li in drpcity.Items)
   //     {
   //         if (li.Selected == true)
   //         {

   //             if (li.Value != "")
   //             {
   //                 abc = abc + li.Value + "";

                
   //             }
            
   //         }
        
   //     }
        
   //          //string ab = abc;
   //          //NewAdbooking.Classes.PublicationMaster pubcity = new NewAdbooking.Classes.PublicationMaster();
   //          //DataSet da = new DataSet();
   //          //da = pubcity.pubsave(Session["compcode"].ToString(), Session["userid"].ToString(), txtpubcode, ab);
   //          //return da;

   //}





    //[Ajax.AjaxMethod]
   // public void 
    //protected void btnsubmit_Click(object sender, System.EventArgs e)
    //{
    //    string abc = "";
    //    foreach (ListItem li in ListBox1.Items)
    //    {

    //        if (li.Selected == true)
    //        {
    //            if (li.Value != "")
    //            {

    //                abc = abc + li.Value + ",";
    //            }

    //        }
    //    }



    //    string ab = abc;
    //    NewAdbooking.Classes.PublicationMaster submitcit = new NewAdbooking.Classes.PublicationMaster();
    //    DataSet ds = new DataSet();
    //    ds = submitcit.pubsave(Session["compcode"].ToString(), Session["userid"].ToString(), txtpubcode, ab);

    //    btnsubmit.Visible = false;
    //    btnupdate.Visible = true;
    //    btnsubmit.Enabled = false;
    //    btnupdate.Enabled = true;
    //}
    //protected void btnupdate_Click(object sender, System.EventArgs e)
    //{
    //    string abc = "";
    //    foreach (ListItem li in ListBox1.Items)
    //    {

    //        if (li.Selected == true)
    //        {

    //            if (li.Value != "0")
    //            {
    //                abc = abc + li.Value + ",";
    //            }


    //        }
    //    }
    //    string ab = abc;
    //    NewAdbooking.Classes.bulletmaster updatebull = new NewAdbooking.Classes.bulletmaster();
    //    DataSet ds = new DataSet();
    //    ds = updatebull.listboxbullupdate(Session["compcode"].ToString(), Session["userid"].ToString(), bulletcode, ab);
    //}

    //*****************************************************

    //public void countryname()
    //{
    //    txtcountry.Items.Clear();
    //    NewAdbooking.Classes.Master name = new NewAdbooking.Classes.Master();
    //    DataSet ds = new DataSet();
    //    ds = name.adcountryname();

    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = "-----Select Country-----";
    //    li1.Value = "0";
    //    li1.Selected = true;
    //    txtcountry.Items.Add(li1);

    //    int i;
    //    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //    {
    //        ListItem li;
    //        li = new ListItem();
    //        li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //        li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //        txtcountry.Items.Add(li);
    //    }
    //}

    //[Ajax.AjaxMethod]
    //public DataSet addcou(string txtcountry)
    //{
    //    NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();
    //    DataSet ds = new DataSet();
    //    ds = firstAgency.countcity(txtcountry);
    //    return ds;
    //}





    protected void btnNew_Click(object sender, EventArgs e)
    {

    }
}