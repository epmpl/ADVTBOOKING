using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class CountryMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {
        Response.Expires = -1;
        if (Session["compcode"] == null)
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenDateFormat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();


        Ajax.Utility.RegisterTypeForAjax(typeof(CountryMaster));

        //***********************************************************************//
        //*****************Code For Read the data from xml File******************//
        //*******************************For The Button**************************//
        //***********************************************************************//

        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        //********************************For Label****************************************/
        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/countrymaster.xml"));

        lbcountrycode .Text = ds.Tables[0].Rows[0].ItemArray[0].ToString() ;
        lbcountryname .Text = ds.Tables[0].Rows[0].ItemArray[1].ToString() ;
        lbalias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString() ;
        
        //***************************************************************************
        DataSet comm_nam = new DataSet();
        // Read in the XML file
        comm_nam.ReadXml(Server.MapPath("XML/Comm_detail.xml"));
        lblintegration.Text = comm_nam.Tables[0].Rows[0].ItemArray[12].ToString();

        
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        txtcountrycode.Enabled = false;
        txtcountryname.Enabled = false;
        txtcountryalias.Enabled = false;
        btnNew.Focus();
        if (!Page.IsPostBack)
        {
            txtcountrycode.Attributes.Add("OnBlur", "javascript:return uppercase1();");
            txtcountryalias.Attributes.Add("OnBlur", "javascript:return uppercase2();");
            txtcountryname.Attributes.Add("Onchange", "javascript:return autoornot();");
            //***************************Function Of Button Call from Java Script*************************
            btnNew.Attributes.Add("OnClick", "javascript:return CountryNewclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return CountrySaveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return CountryModifyclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return CountryDeleteclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return CountryQueryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return CountryExecuteclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return CountryCancelclick('CountryMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return Countryfirstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return Countrypreviousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return Countrynextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return Countrylastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return CountryExitclick();");
        }

        // Put user code to initialize the page here
    }

    #region Web Form Designer generated code
    protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Save the data through the Ajax^^^^^^//
    //*******************************************************************************************//

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet Advsave(string companycode,string code,string name,string alias,string UserId)
    public DataSet Advsave(string companycode, string code, string name, string alias, string UserId , string ip, string integration)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
        
        string[] parameterValueArray = new string[] { companycode, code, name, alias, UserId, integration };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Countrymaster_Save";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Countrymaster_Save.Countrymaster_Save_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "COUNTRYMASTER_SAVE_COUNTRYMASTER_SAVE_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        
        }
        return ds;
        }
       catch (Exception e)
        {
            err = e.Message;
        }
       clsconnection dconnect = new clsconnection();
       string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Country','" + err.Replace("'", "''") + "','Country Creation','" + name;
        sqldd = sqldd  + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;

        
    }

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Update the data through the Ajax^^^^^//
    //*******************************************************************************************//

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet Advmodify(string companycode,string code,string name,string alias,string UserId)
    public DataSet Advmodify(string companycode, string code, string name, string alias, string UserId, string ip, string integration)
    {
        DataSet ds = new DataSet();
         string err = "";
        try
         {
             string[] parameterValueArray = new string[] { companycode, code, name, alias, integration };
             if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
             {
                 string procedureName = "Countrymaster_Modify";
                 NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                 ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
             }
             else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
             {
                 string procedureName = "Countrymaster_Modify.Countrymaster_Modify_p";
                 NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                 ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
             }
             else
             {
                 string procedureName = "COUNTRYMASTER_MODIFY_COUNTRYMASTER_MODIFY_P";
                 NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                 ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

             }
             return ds;
         }
         catch (Exception e)
         {
             err = e.Message;
         }
         clsconnection dconnect = new clsconnection();
         string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Country','" + err.Replace("'", "''") + "','Country Modification','" + name;
         sqldd = sqldd + "',";
         sqldd = sqldd + "'" + ip + "')";
         dconnect.executenonquery1(sqldd);
         return ds;

    }

    //*********************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Delete the data through the Ajax^^^^^//
    //*********************************************************************************************//

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet Advdelete(string companycode,string code,string name,string alias,string UserId)
    public void Advdelete(string companycode, string code, string name, string alias, string UserId, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
         {
            string[] parameterValueArray = new string[] { companycode, code, name, alias};
            if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
            {
                string procedureName = "Countrymaster_Delete";
                NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                string procedureName = "Countrymaster_Delete.Countrymaster_Delete_p";
                NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else
            {
                string procedureName = "COUNTRYMASTER_DELETE_COUNTRYMASTER_DELETE_P";
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

            }
 
        }
       catch (Exception e)
        {
            err = e.Message;
        }
       clsconnection dconnect = new clsconnection();
       string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Country','" + err.Replace("'", "''") + "','Country Deletion','" + name;
        sqldd = sqldd  + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        //return ds;
    }

    //*********************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Execute the data through the Ajax^^^^^//
    //*********************************************************************************************//

    [Ajax.AjaxMethod]
    //		public DataSet Advexecute(string companycode,string code,string name,string alias,string UserId)
    public DataSet Advexecute(string companycode, string code, string name, string alias, string UserId, string integration)
    {
        DataSet ds = new DataSet();

        string[] parameterValueArray = new string[] { companycode, code, name, alias, integration};
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Countrymaster_Execute";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Countrymaster_Execute.Countrymaster_Execute_P";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "COUNTRYMASTER_EXECUTE_COUNTRYMASTER_EXECUTE_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
        return ds;
    }

    //[Ajax.AjaxMethod]
    ////		public DataSet Advexecute1(string companycode,string code,string name,string alias,string UserId)
    //public DataSet Advexecute1(string companycode, string code, string name, string alias, string UserId)
    //{
    //    DataSet ds = new DataSet();

    //    string[] parameterValueArray = new string[] { companycode, code, name, alias };
    //    if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        string procedureName = "Countrymaster_Execute";
    //        NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
    //        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
    //    }
    //    else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
    //    {
    //        string procedureName = "Countrymaster_Execute.Countrymaster_Execute_P";
    //        NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
    //        ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
    //    }
    //    return ds;
    //}
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^^^//
    //**************************After Click The First,Privious,Next,Last*************************//
    //*******************************************************************************************//

    [Ajax.AjaxMethod]
    //		public DataSet Advfirst()
    public DataSet Advfirst()
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Countryfpnl";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Countryfpnl.Countryfpnl_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "Countryfpnl";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
        return ds;
    }


    [Ajax.AjaxMethod]
    //		public DataSet chkcountrycode(string companycode,string UserId,string code)
    public DataSet chkcountrycode(string companycode, string UserId, string code, string name)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { code, companycode, UserId, name };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "checkcountry";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "checkcountry.checkcountry_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "CHECKCOUNTRY_CHECKCOUNTRY_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    //*********************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Auto Generate Code through the Ajax^^^^^//
    //*********************************************************************************************//
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet chkcode(string str)
    {
        DataSet ds = new DataSet();
        string code = "";
        string comp_code = Session["compcode"].ToString();
        if (str.Length > 2)
        {
            code = str.Substring(0, 2);
        }
        else
        {
            code = str;
        }
        string[] parameterValueArray = new string[] { str,code, comp_code  };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "chkcountrycodename";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "chkcountrycodename.chkcountrycodename_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "chkcountrycodename_chkcountrycodename_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

   
}