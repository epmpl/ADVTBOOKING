using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class ROapproval : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;

        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddendateformat.Value = Session["DateFormat"].ToString();
            //hiddenauto.Value = Session["autogenerated"].ToString();
            //hiddensolorate.Value = Session["solorate"].ToString();
        }

        else
        {

            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;

        }

        Ajax.Utility.RegisterTypeForAjax(typeof(ROapproval));
        //********************************For Label****************************************/
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/ROapproval.xml"));

        lbagency.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lbclient.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        lbexecutive.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnSubmit.Text= ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lblvfrm.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lblvalidtill.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        //txtagency.Text = "";
        //txtclient.Text = "";
        //txtexecname.Text = "";
        txtagency.Focus();
        if (!Page.IsPostBack)
        {
            lstagency.Attributes.Add("onclick", "javascript:return insertagency();");
            lstclient.Attributes.Add("onclick", "javascript:return insertagency();");
            lstexec.Attributes.Add("onclick", "javascript:return insertagency();");
        }
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindagencyname(string compcode, string userid, string agency)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindagenname = new NewAdbooking.Classes.BookingMaster();
            ds = bindagenname.bindagency(compcode, userid, agency,"0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindagenname = new NewAdbooking.classesoracle.BookingMaster();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            }
            else
            {
                ds = bindagenname.bindagency(compcode, userid, agency, "0");
            }
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bindagenname = new NewAdbooking.classmysql.BookingMaster();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            }
            else
            {
                ds = bindagenname.bindagency(compcode, userid, agency, "0");
            }
        }
        return ds;



    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindclientname(string compcode, string client)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.getClientName(compcode, client);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            if (Session["FILTER"].ToString() == "D")
            {
                NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
                ds = clsbooking.getClientName(compcode, client, Session["revenue"].ToString());
            }
            else
            {
                NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
                ds = clsbooking.getClientName(compcode, client, "0");
            }
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.getClientName(compcode, client);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    //		public DataSet distselect(string compcode,string userid,string statcode,string distcode)
    public DataSet opendata(string bookid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            //NewAdbooking.Classes.CityMaster select = new NewAdbooking.Classes.CityMaster();

            //ds = select.distselect(compcode, userid, statcode, distcode);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.ROapproval open = new NewAdbooking.classesoracle.ROapproval();

                ds = open.getInsertDetail_app_mobile(bookid);
                return ds;
            }
            else
            {
                //NewAdbooking.classmysql.CityMaster select = new NewAdbooking.classmysql.CityMaster();

                //ds = select.distselect(compcode, userid, statcode, distcode);
                return ds;
            }

    }
 
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindExec(string compcode, string execname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.getExec(compcode, execname, "0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = clsbooking.getExec(compcode, execname, "0", Session["revenue"].ToString());
            }
            else
            {
                ds = clsbooking.getExec(compcode, execname, "0", "0");
            }
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = clsbooking.getExec(compcode, execname, "0", Session["revenue"].ToString());
            }
            else
            {
                ds = clsbooking.getExec(compcode, execname, "0", "0");
            }
        }
        return ds;



    }
    protected void btnSubmit_Click(object sender, EventArgs e)
    {
        DataSet ds1 = fetchdata();
        DataGrid2.CurrentPageIndex = 0;
       DataGrid2.DataSource = ds1;
       DataGrid2.DataBind();
    }
    protected void DataGrid2_PageIndexChanged(object source, DataGridPageChangedEventArgs e)
    {
        DataGrid2.CurrentPageIndex = e.NewPageIndex;
        DataSet ds1 = fetchdata();
        DataGrid2.DataSource = ds1;
        DataGrid2.DataBind();
    }
    private DataSet fetchdata()
    {
        string agency1 = txtagency.Text;
        string client1 = txtclient.Text;
        string executive1 = txtexecname.Text;
        string agency;
        string client;
        string executive;
        string dateformat = hiddendateformat.Value;
        if (agency1 != "")
            agency = agency1.Split('(', ')')[1];
        else
            agency = agency1;
        if (client1 != "")
            client = client1.Split('(', ')')[1];
        else
            client = client1;
        if (executive1 != "")
            executive = executive1.Split('(', ')')[1];
        else
            executive = executive1;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ROapproval griddata = new NewAdbooking.Classes.ROapproval();
            ds = griddata.addvalue(agency, client, executive, Session["compcode"].ToString(), Session["userid"].ToString(), txtvalidityfrom.Text, txttilldate.Text, dateformat);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.ROapproval griddata = new NewAdbooking.classesoracle.ROapproval();
            ds = griddata.addvalue(agency, client, executive, Session["compcode"].ToString(), Session["userid"].ToString(), txtvalidityfrom.Text, txttilldate.Text, dateformat);
        }
        else
        {
            //NewAdbooking.classmysql.ROapproval griddata = new NewAdbooking.classmysql.ROapproval();
            //ds = griddata.addvalue(compcode,tabname,trxtype,username,date1);
        }
        return ds;
    }
    protected void DataGrid2_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    protected void DataGrid2_ItemDataBound(object sender, DataGridItemEventArgs e)
    {
        if (e.Item.Cells[11].Text != "Accept Data" || e.Item.Cells[12].Text != "Reject Data")
        {
            string bkid = e.Item.Cells[0].Text;
            e.Item.Cells[0].Text = "<a style=\"cursor:hand;color:blue\"  onClick=\"openbooking1('" + bkid + "')\">" + bkid + "</a>";
            e.Item.Cells[11].Text = "<input type=button value=Approve onclick=\"openremark('" + bkid + "','Y')\" >";
            e.Item.Cells[12].Text = "<input type=button value=Reject onclick=\"openremark('" + bkid + "','N')\" />";
        }
    }
}
