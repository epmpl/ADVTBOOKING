using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class Pageparametermaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {
        // Put user code to initialize the page here
        Response.Expires = -1;
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();

        }
        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        

        Ajax.Utility.RegisterTypeForAjax(typeof(Pageparametermaster));
        hiddenusername.Value = Session["Username"].ToString();
        
        navigation();
        drpPubName.Enabled = false;

        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.Text = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();
     
   

        DataSet objDataSetlb = new DataSet();
        objDataSetlb.ReadXml(Server.MapPath("XML/Pageparametermaster.xml"));
        AdType.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[0].ToString();
        PageParameterCode.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[1].ToString();
        Publication.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[2].ToString();
        Edition.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[3].ToString();
        AdCategory.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[4].ToString();
        Color.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[5].ToString();
        PageNo.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[6].ToString();
        ColumnNo.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[7].ToString();
        AdMaxSize.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[8].ToString();
        UOM.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[9].ToString();
        Remarks.Text = objDataSetlb.Tables[0].Rows[0].ItemArray[10].ToString();
      
  


        if (!Page.IsPostBack)
        {
            addadvtype();
            addcolor();
            //addedition();
            addcategory();
            adduom();
            addPub();
            btnNew.Attributes.Add("OnClick", "javascript:return newclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return modifyclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return queryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return executeclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return cancelclick('Pageparametermaster');");
            btnExit.Attributes.Add("OnClick", "javascript:return exitclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return saveclick();");
            btnfirst.Attributes.Add("OnClick", "javascript:return firstclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return lastclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return previousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return nextclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return deleteclick();");
            txtpagecode.Attributes.Add("OnChange", "javascript:return uppercase('txtpagecode');");
            txtremarks.Attributes.Add("OnChange", "javascript:return uppercase('txtremarks');");
            drpPubName.Attributes.Add("OnChange", "javascript:return addcount();");

            txtadvsize.Attributes.Add("OnChange","javascript:return checkadsize();");
            

          
        }
    }

    public void addadvtype()
    {

        DataSet ds = new DataSet();
        if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.Adsize bindtype = new NewAdbooking.Classes.Adsize();
       
        ds = bindtype.typebind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Adsize bindtype = new NewAdbooking.classesoracle.Adsize();
            ds = bindtype.typebind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.Adsize bindtype = new NewAdbooking.classmysql.Adsize();

            ds = bindtype.typebind(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select-----";
        li1.Value = "0";
        li1.Selected = true;
        drpadvtype.Items.Add(li1);
        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpadvtype.Items.Add(li);
        }
    }

    public void addcolor()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.Adsize bindcolor = new NewAdbooking.Classes.Adsize();

            ds = bindcolor.colorbind(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Adsize bindcolor = new NewAdbooking.classesoracle.Adsize();

            ds = bindcolor.colorbind(Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.Adsize bindcolor = new NewAdbooking.classmysql.Adsize();

            ds = bindcolor.colorbind();
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Color-----";
        li1.Value = "0";
        li1.Selected = true;
        drpcolor.Items.Add(li1);
        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpcolor.Items.Add(li);
        }
    }



    public void addPub()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.EditorMaster PubName = new NewAdbooking.Classes.EditorMaster();

            ds = PubName.Pub(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.EditorMaster PubName = new NewAdbooking.classesoracle.EditorMaster();
            ds = PubName.Pub(hiddencompcode.Value);
        }
        else
        {

            NewAdbooking.classmysql.EditorMaster PubName = new NewAdbooking.classmysql.EditorMaster();

            ds = PubName.Pub(hiddencompcode.Value);
        }
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "---Select Publication---";
        li1.Value = "0";
        li1.Selected = true;
        drpPubName.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpPubName.Items.Add(li);
        }
    }



    /*public void addedition()
    {
        NewAdbooking.Classes.Adsize bindedition = new NewAdbooking.Classes.Adsize();
        DataSet ds = new DataSet();
        ds = bindedition.editionbind(Session["compcode"].ToString(), Session["userid"].ToString());

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "--------Select Edition--------";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpedition.Items.Add(li1);
        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpedition.Items.Add(li);
        }
    }*/
    public void addcategory()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.Adsize bindlistbox = new NewAdbooking.Classes.Adsize();
            
            ds = bindlistbox.listboxbind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Adsize bindlistbox = new NewAdbooking.classesoracle.Adsize();
            ds = bindlistbox.listboxbind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.Adsize bindlistbox = new NewAdbooking.classmysql.Adsize();

            ds = bindlistbox.listboxbind(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        ListItem li1;
        //ListItem li2;
        li1 = new ListItem();
        li1.Text = "--------Select Category--------";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpadvcategory.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpadvcategory.Items.Add(li);
        }
    }

    public void adduom()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter binduom = new NewAdbooking.Classes.pageparameter();
            
            ds = binduom.uombind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter binduom = new NewAdbooking.classesoracle.pageparameter();

            ds = binduom.uombind(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.pageparameter binduom = new NewAdbooking.classmysql.pageparameter();

            ds = binduom.uombind(Session["compcode"].ToString(), Session["userid"].ToString());
        }

        ListItem li1;
        //ListItem li2;
        li1 = new ListItem();
        li1.Text = "--Select --";
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        drpuom.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpuom.Items.Add(li);
        }
    }

    #region Web Form Designer generated code
    override protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion

    [Ajax.AjaxMethod]
    public DataSet checkpagecode(string pagecode, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter check = new NewAdbooking.Classes.pageparameter();
            
            ds = check.checkpage(pagecode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter check = new NewAdbooking.classesoracle.pageparameter();
            ds = check.checkpage(pagecode, compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.pageparameter check = new NewAdbooking.classmysql.pageparameter();
            ds = check.checkpage(pagecode, compcode, userid);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
    public DataSet savecode(string drpadvtype, string txtpagecode, string drpedition, string drocolor, string txtpageno, string txtadvsize, string txtcolno, string drpuom, string txtremarks, string compcode, string userid, string drpadvcategory,string pub)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter savepage = new NewAdbooking.Classes.pageparameter();
            
            ds = savepage.savepageparam(drpadvtype, txtpagecode, drpedition, drocolor, txtpageno, txtadvsize, txtcolno, drpuom, txtremarks, compcode, userid, drpadvcategory, pub);


            return ds;

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter savepage = new NewAdbooking.classesoracle.pageparameter();
            ds = savepage.savepageparam(drpadvtype, txtpagecode, drpedition, drocolor, txtpageno, txtadvsize, txtcolno, drpuom, txtremarks, compcode, userid, drpadvcategory, pub);


            return ds;
        }
        else
        {
            NewAdbooking.classmysql.pageparameter savepage = new NewAdbooking.classmysql.pageparameter();

            ds = savepage.savepageparam(drpadvtype, txtpagecode, drpedition, drocolor, txtpageno, txtadvsize, txtcolno, drpuom, txtremarks, compcode, userid, drpadvcategory, pub);


            return ds;
        }

    }
    [Ajax.AjaxMethod]
    public DataSet execute(string drpadvtype, string txtpagecode, string drpedition, string drpadvcategory, string drocolor, string txtpageno, string txtadvsize, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter executepage = new NewAdbooking.Classes.pageparameter();
        
            ds = executepage.executepagepara(drpadvtype, txtpagecode, drpedition, drpadvcategory, drocolor, txtpageno, txtadvsize, compcode, userid);


            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter executepage = new NewAdbooking.classesoracle.pageparameter();
            ds = executepage.executepagepara(drpadvtype, txtpagecode, drpedition, drpadvcategory, drocolor, txtpageno, txtadvsize, compcode, userid);


            return ds;
        }
        else
        {
            NewAdbooking.classmysql.pageparameter executepage = new NewAdbooking.classmysql.pageparameter();

            ds = executepage.executepagepara(drpadvtype, txtpagecode, drpedition, drpadvcategory, drocolor, txtpageno, txtadvsize, compcode, userid);


            return ds;
        }


    }

    [Ajax.AjaxMethod]
    public DataSet first()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter firstpage = new NewAdbooking.Classes.pageparameter();            
            ds = firstpage.pagefirst();
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter firstpage = new NewAdbooking.classesoracle.pageparameter();
            ds = firstpage.pagefirst();
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.pageparameter firstpage = new NewAdbooking.classmysql.pageparameter();
            ds = firstpage.pagefirst();
            return ds;
        }


    }

    [Ajax.AjaxMethod]
    public DataSet update(string drpadvtype, string txtpagecode, string drpedition, string drocolor, string txtpageno, string txtadvsize, string txtcolno, string drpuom, string txtremarks, string compcode, string userid, string drpadvcategory,string pub)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter updatepage = new NewAdbooking.Classes.pageparameter();            
            ds = updatepage.updatepageparam(drpadvtype, txtpagecode, drpedition, drocolor, txtpageno, txtadvsize, txtcolno, drpuom, txtremarks, compcode, userid, drpadvcategory, pub);

            return ds;

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter updatepage = new NewAdbooking.classesoracle.pageparameter();
            ds = updatepage.updatepageparam(drpadvtype, txtpagecode, drpedition, drocolor, txtpageno, txtadvsize, txtcolno, drpuom, txtremarks, compcode, userid, drpadvcategory, pub);

            return ds;
        }

        else
        {
            NewAdbooking.classmysql.pageparameter updatepage = new NewAdbooking.classmysql.pageparameter();
            ds = updatepage.updatepageparam(drpadvtype, txtpagecode, drpedition, drocolor, txtpageno, txtadvsize, txtcolno, drpuom, txtremarks, compcode, userid, drpadvcategory, pub);
            return ds;
        }

    }
    [Ajax.AjaxMethod]
    public DataSet deletepage(string pagecode, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter delete = new NewAdbooking.Classes.pageparameter();            
            ds = delete.deletepageparam(pagecode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter delete = new NewAdbooking.classesoracle.pageparameter();
            ds = delete.deletepageparam(pagecode, compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.pageparameter delete = new NewAdbooking.classmysql.pageparameter();
            ds = delete.deletepageparam(pagecode, compcode, userid);
            return ds;
        }


    }

    [Ajax.AjaxMethod]
    public DataSet chkpagecode()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter chk = new NewAdbooking.Classes.pageparameter();         
            ds = chk.chkpagecode();
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter chk = new NewAdbooking.classesoracle.pageparameter();
            ds = chk.chkpagecode();
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.pageparameter chk = new NewAdbooking.classmysql.pageparameter();
            ds = chk.chkpagecode();
            return ds;

        }

    }

    [Ajax.AjaxMethod]
    public DataSet addedition(string pubname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.pageparameter chkv = new NewAdbooking.Classes.pageparameter();            
            ds = chkv.addedition(pubname);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.pageparameter chkv = new NewAdbooking.classesoracle.pageparameter();
            ds = chkv.addedition(pubname);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.pageparameter chkv = new NewAdbooking.classmysql.pageparameter();

            ds = chkv.addedition(pubname);
            return ds;
        }
    } 

    public void navigation()
    {
        btnNew.Enabled = true;
        btnNew.Focus();
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

    }

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }

}