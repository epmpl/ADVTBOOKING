using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class Agent_master : System.Web.UI.Page
	{
    
		NewAdbooking.Classes.Master inscomp=new NewAdbooking.Classes.Master();
		string username,userid,state;
		static int z=0;
		//protected System.Web.UI.WebControls.Label Label1;
		protected System.Web.UI.WebControls.Label Label30;
		protected System.Web.UI.WebControls.Label Label9;
		protected System.Web.UI.WebControls.Label Label31;
		protected System.Web.UI.WebControls.Label Label23;
		protected System.Web.UI.WebControls.Label Label25;
		protected System.Web.UI.WebControls.Label Label29;
		protected System.Web.UI.WebControls.Label Label34;
		protected System.Web.UI.WebControls.LinkButton LinkButton1;
		string regionhidden;
		string dateformat,id;
		protected System.Web.UI.WebControls.Label tP1;
		protected System.Web.UI.WebControls.Label Label37;
		protected System.Web.UI.WebControls.Label Label38;
		protected System.Web.UI.WebControls.Label Label39;
		protected System.Web.UI.WebControls.Label Label40;
		protected System.Web.UI.WebControls.Label Label43;
		protected System.Web.UI.WebControls.Label Label44;
		public string tree="";

    string message;

    protected void Page_Load(object sender, System.EventArgs e)
    {


        hdnmobiledetail.Value = ConfigurationSettings.AppSettings["mobileformat"].ToString();
        // Put user code to initialize the page here
        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";
        
        
        
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            dateformat = Session["dateformat"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            UserLabel.Value = Session["Username"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
        }
        else
        {
            Response.Write("<script>alert('Your session has been expired');window.close();</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        //This code reads the label name from the xml file
        DataSet objDataSet = new DataSet();
        // Read in the XML file
        objDataSet.ReadXml(Server.MapPath("XML/Agencymaster.xml"));
        AgencyType.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        AgencyCode.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        AgencyCategory.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        SubAgencyCode.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        agcode.Text = objDataSet.Tables[0].Rows[0].ItemArray[43].ToString();
        agsubcode.Text = objDataSet.Tables[0].Rows[0].ItemArray[44].ToString();
        AgencySubCategory.Text = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        ServiceTaxACNo.Text = objDataSet.Tables[0].Rows[0].ItemArray[5].ToString();
        AgencyName.Text = objDataSet.Tables[0].Rows[0].ItemArray[6].ToString();
        Alias.Text = objDataSet.Tables[0].Rows[0].ItemArray[7].ToString();
        Address1.Text = objDataSet.Tables[0].Rows[0].ItemArray[8].ToString();
        Street.Text = objDataSet.Tables[0].Rows[0].ItemArray[9].ToString();
        AgencyMailID.Text = objDataSet.Tables[0].Rows[0].ItemArray[10].ToString();
        City.Text = objDataSet.Tables[0].Rows[0].ItemArray[11].ToString();
        PinCode.Text = objDataSet.Tables[0].Rows[0].ItemArray[12].ToString();
        District.Text = objDataSet.Tables[0].Rows[0].ItemArray[13].ToString();
        astate.Text = objDataSet.Tables[0].Rows[0].ItemArray[14].ToString();
        Country.Text = objDataSet.Tables[0].Rows[0].ItemArray[15].ToString();
        Region.Text = objDataSet.Tables[0].Rows[0].ItemArray[16].ToString();
        Phone.Text = objDataSet.Tables[0].Rows[0].ItemArray[17].ToString();
        Fax.Text = objDataSet.Tables[0].Rows[0].ItemArray[18].ToString();
        mrvregio.Text = objDataSet.Tables[0].Rows[0].ItemArray[19].ToString();
        Url.Text = objDataSet.Tables[0].Rows[0].ItemArray[20].ToString();
        Buisness.Text = objDataSet.Tables[0].Rows[0].ItemArray[21].ToString();
        EnrolmentDate.Text = objDataSet.Tables[0].Rows[0].ItemArray[22].ToString();
        MRVReferenceNo.Text = objDataSet.Tables[0].Rows[0].ItemArray[23].ToString() + "&nbsp;&nbsp;";
        NoofVTS.Text = objDataSet.Tables[0].Rows[0].ItemArray[24].ToString();
        CreditDays.Text = objDataSet.Tables[0].Rows[0].ItemArray[25].ToString();
        Creditlimit.Text = objDataSet.Tables[0].Rows[0].ItemArray[26].ToString();
        PanNo.Text = objDataSet.Tables[0].Rows[0].ItemArray[27].ToString();
        TanNo.Text = objDataSet.Tables[0].Rows[0].ItemArray[28].ToString();
        BillTO.Text = objDataSet.Tables[0].Rows[0].ItemArray[29].ToString();
        AgencyHO.Text = objDataSet.Tables[0].Rows[0].ItemArray[30].ToString();
        Representative.Text = objDataSet.Tables[0].Rows[0].ItemArray[31].ToString();
        SubAgencyHO.Text = objDataSet.Tables[0].Rows[0].ItemArray[32].ToString();
        Status.Text = objDataSet.Tables[0].Rows[0].ItemArray[33].ToString();
        StatusDate.Text = objDataSet.Tables[0].Rows[0].ItemArray[34].ToString();
        StatusReason.Text = objDataSet.Tables[0].Rows[0].ItemArray[35].ToString();
        Alert.Text = objDataSet.Tables[0].Rows[0].ItemArray[36].ToString();
        Remarks.Text = objDataSet.Tables[0].Rows[0].ItemArray[37].ToString();
        Parent.Text = objDataSet.Tables[0].Rows[0].ItemArray[38].ToString();
        Zone.Text = objDataSet.Tables[0].Rows[0].ItemArray[39].ToString();
        Address2.Text = objDataSet.Tables[0].Rows[0].ItemArray[40].ToString();
        Address3.Text = objDataSet.Tables[0].Rows[0].ItemArray[41].ToString();
        rategroup.Text = objDataSet.Tables[0].Rows[0].ItemArray[45].ToString();
        //lbluserid.Text = objDataSet.Tables[0].Rows[0].ItemArray[46].ToString();
        lbldepocode.Text = objDataSet.Tables[0].Rows[0].ItemArray[46].ToString();
        lbltaluka.Text = objDataSet.Tables[0].Rows[0].ItemArray[47].ToString();
        lblbranch.Text = objDataSet.Tables[0].Rows[0].ItemArray[48].ToString();
        lblbillf.Text = objDataSet.Tables[0].Rows[0].ItemArray[49].ToString();
        lbloldagen.Text = objDataSet.Tables[0].Rows[0].ItemArray[50].ToString();
        lblbooktype.Text = objDataSet.Tables[0].Rows[0].ItemArray[51].ToString();
        lblvat.Text = objDataSet.Tables[0].Rows[0].ItemArray[52].ToString();
        lblraterevise.Text = objDataSet.Tables[0].Rows[0].ItemArray[53].ToString();
        btnshowremark.Text = objDataSet.Tables[0].Rows[0].ItemArray[54].ToString();
        lbEdition_wise_Billing.Text = objDataSet.Tables[0].Rows[0].ItemArray[55].ToString();
        lblexecutive.Text = objDataSet.Tables[0].Rows[0].ItemArray[56].ToString();
        lblemail.Text = objDataSet.Tables[0].Rows[0].ItemArray[57].ToString();
        agdesig.Text = objDataSet.Tables[0].Rows[0].ItemArray[58].ToString();
        creditlimitdays.Text = objDataSet.Tables[0].Rows[0].ItemArray[59].ToString();
        crlimitfromdate.Text = objDataSet.Tables[0].Rows[0].ItemArray[60].ToString();
        recoverylimit.Text = objDataSet.Tables[0].Rows[0].ItemArray[61].ToString();
        lblbilflag.Text = objDataSet.Tables[0].Rows[0].ItemArray[64].ToString();
        lblsubsubagcd.Text = objDataSet.Tables[0].Rows[0].ItemArray[65].ToString();

        AgencyMailIDcc.Text = objDataSet.Tables[0].Rows[0].ItemArray[62].ToString();
        		/*............For intrest Calulation On Increase...........................*/

        intrestcalc.Text = objDataSet.Tables[0].Rows[0].ItemArray[63].ToString();
        lblsapcode.Text = objDataSet.Tables[0].Rows[0].ItemArray[66].ToString();
        lblsecure.Text = objDataSet.Tables[0].Rows[0].ItemArray[67].ToString();
        lblgstus.Text = objDataSet.Tables[0].Rows[0].ItemArray[68].ToString();
        lblgstdt.Text = objDataSet.Tables[0].Rows[0].ItemArray[69].ToString();
        lblgst.Text = objDataSet.Tables[0].Rows[0].ItemArray[70].ToString();
        lblgstclty.Text = objDataSet.Tables[0].Rows[0].ItemArray[76].ToString();
        lblarnno.Text = objDataSet.Tables[0].Rows[0].ItemArray[77].ToString();
        lblgstprovid.Text = objDataSet.Tables[0].Rows[0].ItemArray[78].ToString();

        lblretainer.Text = objDataSet.Tables[0].Rows[0].ItemArray[71].ToString();
        lblbnkcheque.Text = objDataSet.Tables[0].Rows[0].ItemArray[72].ToString();
        lblbondrecvd.Text = objDataSet.Tables[0].Rows[0].ItemArray[73].ToString();
        lblkyc.Text = objDataSet.Tables[0].Rows[0].ItemArray[74].ToString();
        lbladdproof.Text = objDataSet.Tables[0].Rows[0].ItemArray[75].ToString();
        
        /*............For intrest Calulation On Increase...........................*/


        lblselectcode.Text = objDataSet.Tables[4].Rows[0].ItemArray[0].ToString();
        if (objDataSet.Tables.Count > 2)
        {
            if (objDataSet.Tables[2].Rows[0].ItemArray[0].ToString() == "hide")
            {
                rategroup.Attributes.Add("style", "display:none");
                drprate.Attributes.Add("style", "display:none");
            }
            if (objDataSet.Tables[2].Rows[0].ItemArray[1].ToString() == "hide")
            {
                lbldepocode.Attributes.Add("style", "display:none");
                txtdepocode.Attributes.Add("style", "display:none");
            }
            if (objDataSet.Tables[2].Rows[0].ItemArray[2].ToString() == "hide")
            {
                agtr.Attributes.Add("style", "display:none");
            }
            if (objDataSet.Tables[2].Rows[0].ItemArray[4].ToString() == "hide")
            {
                agtr1.Attributes.Add("style", "display:none");
            }
            //if (objDataSet.Tables[2].Rows[0].ItemArray[6].ToString() == "hide")
            //{
            //    lab.Attributes.Add("style", "display:none");
            //    AgencyCategory.Attributes.Add("style", "display:none");
            //    drpagecate.Attributes.Add("style", "display:none");
            //}
            if (objDataSet.Tables[2].Rows[0].ItemArray[6].ToString() == "hide")
            {
                AgencySubCategory.Attributes.Add("style", "display:none");
                drpagescat.Attributes.Add("style", "display:none");
            }
        }
        //This code reads the label name from the xml file
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        hiddenpermission.Value = "";

        Ajax.Utility.RegisterTypeForAjax(typeof(Agent_master));
               
        hiddenusername.Value = Session["Username"].ToString();
        
        btnNew.Focus();
        //ScriptManager.regis
        //ScriptManager.RegisterClientScriptBlock(this, typeof(Agent_master), "zz", "focussau()", true);
               
        if (Session["Username"] == null)
        {
            Response.Write("<script>alert('Your session has been expired');window.close();</script>");
            return;
        }
        else
        {
            
            username = Session["Username"].ToString();
            userid = Session["userid"].ToString();
        }
        
        txtagenname.ReadOnly = false;

        lbcommdetail.Enabled=false;
        lbbankdetail.Enabled = false;
        lbstatusdetail.Enabled = false;
        lbbankmast.Enabled = false;
        lbpaymode.Enabled = false;
        lbcontactdetails.Enabled = false;
        btnNew.Focus();
        //ScriptManager.RegisterClientScriptBlock(this,
        
        if (!Page.IsPostBack)
        {

            filldrprate();
            bindbookingtype();
            drprate.SelectedValue = Session["ratecode"].ToString();
            hiddenratecode.Value = Session["ratecode"].ToString();
            Bindretainer();

            //this is to call the function for a dropdown 
           // selectcode.Attributes.Add("onkeypress", "return keySort(this);");

            /////////////////////////////////////////////////////

            attachment1.Attributes.Add("OnClick", "javascript:return openkyc();");

            mrvregion.Attributes.Add("onkeydown", "javascript:return fillmrv(event);");
            mrvregion.Attributes.Add("onkeypress", "javascript:return fillmrv(event);");
            lstmrv.Attributes.Add("onclick", "javascript:return clickmrv(event);");
            lstmrv.Attributes.Add("onkeydown", "javascript:return clickmrv(event);");






            drpparent.Attributes.Add("Onchange", "javascript:return enableddisabled();");
            btnshowremark.Attributes.Add("OnClick", "javascript:return openremarkpopup();");
            biltodrp.Attributes.Add("Onchange", "javascript:return changacagency();");
            txtcredit.Attributes.Add("onChange", "javascript:return chklimit();");
            txtbusineedate.Attributes.Add("onChange", "javascript:return checkdate(this);  ");
            drpgstatus.Attributes.Add("onChange", "javascript:return checkmandatory();");
            //txtenrolldate.Attributes.Add("onkeypress", "javascript:return false; ");
            //txtbusineedate.Attributes.Add("onkeypress", "javascript:return false; ");
            lstagency1.Attributes.Add("onclick", "javascript:return insertagency(event);");
           // lstagency1.Attributes.Add("OnBlur", "javascript:return setcode();");
            txtenrolldate.Attributes.Add("OnBlur", "javascript:return check_dat()");

            txtenrolldate.Attributes.Add("onChange", "javascript:return checkdate(this); ");
            btnNew.Attributes.Add("OnClick", "javascript:return newclick();  ");
            btnCancel.Attributes.Add("OnClick", "javascript:return cancelclick();");
            
            btnSave.Attributes.Add("OnClick", "javascript:return saveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return modifyclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return queryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return fillexecute11();");
            btnfirst.Attributes.Add("OnClick", "javascript:return firstclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return lastclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return nextclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return previousclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return deleteagency();");
            lbcontactdetails.Attributes.Add("OnClick", "javascript:return contact();");
            btnExit.Attributes.Add("OnClick", "javascript:return exitclick();");
            txtaddress1.Attributes.Add("OnChange", "javascript:return uppercase14();");
            txtaddress2.Attributes.Add("OnChange", "javascript:return uppercase15();");
            lstagency.Attributes.Add("onkeypress", "return keySort(this);");
            lstagency.Attributes.Add("onclick", "javascript:return insertagency(event);");
            
            lbcommdetail.Attributes.Add("OnClick", "javascript:return commission();");
            lbbankdetail.Attributes.Add("OnClick", "javascript:return bank();");
            lbstatusdetail.Attributes.Add("OnClick", "javascript:return status123();");
            lbbankmast.Attributes.Add("OnClick", "javascript:return bankmast();");
            
         //   txturl.Attributes.Add("OnBlur", "javascript:return check_it()");
            txtmail.Attributes.Add("OnBlur", "javascript:return checkEmail();");

            txtmailcc.Attributes.Add("OnBlur", "javascript:return checkEmailcc();");
            txtadd.Attributes.Add("OnBlur", "javascript:return uppercase4();");
            txtstreet.Attributes.Add("OnBlur", "javascript:return uppercase5();");
            txtstacno.Attributes.Add("OnBlur", "javascript:return uppercase6();");

            txtagencyho.Attributes.Add("OnBlur", "javascript:return uppercase8();");
            txtsugagencyho.Attributes.Add("OnBlur", "javascript:return uppercase9();");
            txtmryrefno.Attributes.Add("OnBlur", "javascript:return uppercase10();");
            txtnoofvts.Attributes.Add("OnBlur", "javascript:return uppercase11();");
            txtpan.Attributes.Add("OnBlur", "javascript:return uppercase12();");
            txttan.Attributes.Add("OnBlur", "javascript:return uppercase13();");
            mrvregion.Attributes.Add("OnBlur", "javascript:return uppercaseregion();");
            txtpincode.Attributes.Add("OnBlur", "javascript:return uppercasepin();");
            lbpaymode.Attributes.Add("OnClick", "javascript:return paymode();");
            
            //txtagencode.Attributes.Add("OnBlur", "javascript:return uppercase();");

            txtagencode.Attributes.Add("OnBlur", "javascript:return chkUserCode();");
            txtsagencycode.Attributes.Add("OnBlur", "javascript:return chkbindbillto();"); 
            //txtsagencycode.Attributes.Add("OnBlur", "javascript:return uppercase2();");
            txtalias.Attributes.Add("OnBlur", "javascript:return uppercase1();");
            
            txtagenname.Attributes.Add("OnBlur", "javascript:return autoornot();");

            txtremarks.Attributes.Add("OnBlur", "javascript:return Upperremarks('txtremarks')");
            txtalert.Attributes.Add("OnBlur", "javascript:return Upperremarks('txtalert')");
            txtstatus2.Attributes.Add("OnBlur", "javascript:return Upperremarks('txtstatus2')");
            
          
            drpparent.Attributes.Add("OnBlur", "javascript:return chk();");


            //drpagetyp.Attributes.Add("OnChange", "javascript:return enabledisable();");
           // selectcode.Attributes.Add("OnChange", "javascript:return setcode();");
            txtbill.Attributes.Add("OnChange", "javascript:return setbilltocode();");
            selectcode.Attributes.Add("OnBlur","javascript:return setfocus();");

            btnagencysearch.Attributes.Add("OnClick", "javascript:return searchagency();");
            txtgstin.Attributes.Add("OnBlur", "javascript:return chkgstno();");
            btnagencyname.Attributes.Add("onclick", "javascript:return agencyname();");
            close3.Attributes.Add("OnClick", "javascript:return closediv();");

            Button1.Attributes.Add("onclick", "javascript:return close1();");
            txtphone2.Attributes.Add("OnChange", "javascript:mobileno(this.id);");
            txtfax1.Attributes.Add("OnChange", "javascript:mobileno(this.id);");

            txtgstclty.Attributes.Add("onkeydown", "javascript:return fillgstclient(event);");
            lstgstclty.Attributes.Add("onkeydown", "javascript:return fillgst(event);");
            lstgstclty.Attributes.Add("onclick", "javascript:return fillgst(event);");
            addbranch();
            addregion();
            addzone();
            addagent();
       //     addagencycategory();
            countryname();
            binduserid();
            addrepresentative();
            fillcurtyp();
            Bindexecutive();
            bindemail();

            enable();

            txtcountry.Attributes.Add("OnChange", "javascript:return addcount(this);");
            drpcity.Attributes.Add("OnChange", "javascript:addregcity();");
            drpagetyp.Attributes.Add("OnChange", "javascript:fillcreditdays();");
            drpagecate.Attributes.Add("OnChange", "javascript:addsubcategory(this);");
            txtpan.Attributes.Add("OnChange", "javascript:checkduplicacy();");
            btnNew.Visible = true;
            ///////////////add by anuja
            linkuom.Attributes.Add("OnClick", "javascript:return uomprmisn();");
            ////////////////////////end
            DateTime da = DateTime.Now;
            
            string formname = "Agent_master";
            DataSet dz = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();
              
                dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, formname);
            }
            else
                if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="orcl")
                {
                    NewAdbooking.classesoracle.Master checkform = new NewAdbooking.classesoracle.Master();

                    dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, formname);
                }
                else
                {
                    NewAdbooking.classmysql.Master checkform = new NewAdbooking.classmysql.Master();

                    dz = checkform.formpermission(hiddencompcode.Value, hiddenuserid.Value, formname);
                }

                if (dz.Tables[0].Rows.Count > 0)
                {
                    id = dz.Tables[0].Rows[0].ItemArray[0].ToString();
                    if (id == "0" || id == "8")
                    {
                        hiddenpermission.Value = "zero";
                        Response.Write("<script>alert('You Are Not Authorised To See This Form');</script>");
                        return;
                    }
                    if (id == "1" || id == "9")
                    {
                        one();

                    }
                    if (id == "2" || id == "10")
                    {
                        two();
                    }
                    if (id == "3" || id == "11")
                    {
                        three();
                    }
                    if (id == "4" || id == "12")
                    {
                        four();
                    }
                    if (id == "5" || id == "13")
                    {
                        five();
                    }
                    if (id == "6" || id == "14")
                    {
                        six();
                    }
                    if (id == "7" || id == "15")
                    {
                        seven();
                    }
                }

                
           
           

            Session["bankmaster"] = null;
            Session["bankdetail"] = null;
            Session["commdetail"] = null;
            Session["statussave"] = null;
            Session["contactdetail"] = null;
            Session["paymodeagency"] = null;

           
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
    }

    public void bindbookingtype()
    {
        DataSet billtyp = new DataSet();
        billtyp.ReadXml(Server.MapPath("XML/billcycle.xml"));
        bktype.Items.Clear();
        int i;
        //ListItem li1;
        //li1 = new ListItem();
        //li1.Text = "Select Booking Type";
        //li1.Value = "0";
        //li1.Selected = true;
        //bktype.Items.Add(li1);

        for (i = 0; i < billtyp.Tables[3].Columns.Count - 1; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = billtyp.Tables[3].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li.Value = billtyp.Tables[3].Rows[0].ItemArray[i].ToString();

            bktype.Items.Add(li);

        }
    }


    public void bindemail()
    {
        DataSet billtyp = new DataSet();
        billtyp.ReadXml(Server.MapPath("XML/agencymaster.xml"));
        drpemail.Items.Clear();
        int i;
        //ListItem li1;
        //li1 = new ListItem();
        //li1.Text = "Select Booking Type";
        //li1.Value = "0";
        //li1.Selected = true;
        //bktype.Items.Add(li1);

        for (i = 0; i < billtyp.Tables[3].Columns.Count - 1; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = billtyp.Tables[3].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li.Value = billtyp.Tables[3].Rows[0].ItemArray[i].ToString();

            drpemail.Items.Add(li);

        }
    }



    public void Bindexecutive()
    {

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
            ds = clsbooking.getExecbooking(hiddencompcode.Value, "", "0", "0", "");
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                FourCPlus.AdBooking.BookingMaster.Sql.BookingMaster clsbooking = new FourCPlus.AdBooking.BookingMaster.Sql.BookingMaster();
                ds = clsbooking.getExecbooking(hiddencompcode.Value, "", "0", "");
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "WEBSP_GETEXECBOOKING_websp_getexecbooking_p";
                string[] parameterValueArray = { hiddencompcode.Value, "", "0", "0", "" };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Executive Name-";
        li1.Value = "0";
        li1.Selected = true;
        Libexecutive.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            Libexecutive.Items.Add(li);


        }

    }







    //************* bind branch********************//
    public void addbranch()
    {
        drpbranch.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvertisementMaster name = new NewAdbooking.Classes.AdvertisementMaster();

            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvertisementMaster name = new NewAdbooking.classesoracle.AdvertisementMaster();
            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
        }
        else
        {
            NewAdbooking.classmysql.AdvertisementMaster name = new NewAdbooking.classmysql.AdvertisementMaster();

            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());

        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-----Select Branch-----";
        li1.Value = "0";
        li1.Selected = true;
        drpbranch.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpbranch.Items.Add(li);
        }
    }


    public void binduserid()
    {
        DataSet ds=new DataSet ();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master logindetail = new NewAdbooking.Classes.Master();

            ds = logindetail.binduserid(Session["compcode"].ToString());

        }

        else
            if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle .Master logindetail = new NewAdbooking.classesoracle.Master();

              ds = logindetail.binduserid(Session["compcode"].ToString());
            }

            else{

                NewAdbooking.classmysql.Master logindetail = new NewAdbooking.classmysql.Master();
                ds = logindetail.binduserid(Session["compcode"].ToString());

            }
            ListItem li1;
            li1 = new ListItem();
            li1.Text = "--Select UserId--";
            li1.Value = "0";
            li1.Selected = true;
            drpuserid.Items.Add(li1);

            int i;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drpuserid.Items.Add(li);
            }
       
      
    }
    public void filldrprate()
    {
        drprate.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master name = new NewAdbooking.Classes.Master();

            ds = name.filrategroup(hiddencompcode.Value);
            }

        else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master name = new NewAdbooking.classesoracle.Master();

                ds = name.filrategroup(hiddencompcode.Value);

            }
            else
            {
                NewAdbooking.classmysql.Master name = new NewAdbooking.classmysql.Master();

                ds = name.filrategroup(hiddencompcode.Value);

            }

            ListItem li1;
            li1 = new ListItem();
            li1.Text = "--Select Rate Group--";
            li1.Value = "0";
            li1.Selected = true;
            drprate.Items.Add(li1);

            int i;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drprate.Items.Add(li);
            }
        
      
    }

        public void countryname()
        {
            txtcountry.Items.Clear();
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master name = new NewAdbooking.Classes.Master();

                ds = name.adcountryname(Session["compcode"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle .Master name = new NewAdbooking.classesoracle.Master();

                    ds = name.adcountryname(Session["compcode"].ToString());
                }
                else
                {
                    NewAdbooking.classmysql.Master name = new NewAdbooking.classmysql.Master();
                    ds = name.adcountryname(Session["compcode"].ToString());
                }

                ListItem li1;
                li1 = new ListItem();
                li1.Text = "-----Select Country-----";
                li1.Value = "0";
                li1.Selected = true;
                txtcountry.Items.Add(li1);

                int i;
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                    li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                    txtcountry.Items.Add(li);
                }
            
          
        }
    public void addzone()
    {
        drpzone.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master name = new NewAdbooking.Classes.Master();

            ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master name = new NewAdbooking.classesoracle.Master();
                ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());
            }
            else
            {
                NewAdbooking.classmysql.Master name = new NewAdbooking.classmysql.Master();
                ds = name.adzone(Session["userid"].ToString(), Session["compcode"].ToString());

            }

            ListItem li1;
            li1 = new ListItem();
            li1.Text = "-----Select zone-----";
            li1.Value = "0";
            li1.Selected = true;
            drpzone.Items.Add(li1);

            if (ds.Tables[0].Rows.Count > 0)
            {
                drpzone.Enabled = true;
                int i;
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                    li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                    drpzone.Items.Add(li);

                }
            }
            else
            {
                if (hiddensaurabh.Value == "1")
                {
                    message = "There is no matching value for Region";
                    AspNetMessageBox(message);
                    drpzone.Enabled = false;
                    return;
                }
            }
        
      
        drpzone.Focus();
    }


    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet chkagencycode(string comp, string type, string agencycode, string agencysubcode, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master cate = new NewAdbooking.Classes.Master();

            ds = cate.checkagencycode(comp, type, agencycode, agencysubcode, extra1, extra2);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master cate = new NewAdbooking.classesoracle.Master();

                ds = cate.checkagencycode(comp, type, agencycode, agencysubcode, extra1, extra2);
                return ds;
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "CheckSavedAgencyCode";
                string[] parameterValueArray = { comp, type, agencycode, agencysubcode, extra1, extra2 };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
        //else
        //{
        //    NewAdbooking.classmysql.Master cate = new NewAdbooking.classmysql.Master();
        //    ds = cate.filcat(comp);
        //    return ds;
        //}

        return ds;
    }



        [Ajax.AjaxMethod]

        public DataSet addreg(string values)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master region = new NewAdbooking.Classes.Master();

                ds = region.addregion(values);
                return ds;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master region = new NewAdbooking.classesoracle.Master();

                ds = region.addregion(values);
                return ds;
              
            }

            else
            {
                NewAdbooking.classmysql.Master region = new NewAdbooking.classmysql.Master();
                ds = region.addregion(values);
                return ds;
            }
        }

        //drop down of city

        public DataSet addcit()
        {
            drpcity.Items.Clear();
            DataSet ds = new DataSet();
            ds = inscomp.addcity();
            int i;
            ListItem li1;
            li1 = new ListItem();
            li1.Text = "--Select City--";
            li1.Value = "0";
            li1.Selected = true;
            drpcity.Items.Add(li1);
            if (ds.Tables.Count > 0)
            {
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                    li.Value = ds.Tables[0].Rows[i].ItemArray[5].ToString();
                    state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                    drpcity.Items.Add(li);
                }

            }
            return ds;
        }

        public void addregion()
        {           
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master region = new NewAdbooking.Classes.Master();

                ds = region.add();
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master region = new NewAdbooking.classesoracle.Master();

                    ds = region.add();
                }
                else
                {
                    NewAdbooking.classmysql.Master region = new NewAdbooking.classmysql.Master();

                    ds = region.add();
                }
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "--Select Region--";
                li1.Value = "0";
                li1.Selected = true;
                drpregion.Items.Add(li1);
                if (ds.Tables[0].Rows.Count > 0)
                {
                    drpregion.Enabled = true;
                    int i;
                    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        ListItem li;
                        li = new ListItem();
                        li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                        li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                        drpregion.Items.Add(li);
                    }
                }
                else
                {
                    if (hiddensaurabh.Value == "1")
                    {
                        message = "There is no matching value for Region";
                        AspNetMessageBox(message);
                        drpregion.Enabled = false;
                        return;
                    }
                }
           
           
            drpregion.Focus();
        }
        
        public void addagencysubcategory()
        {
            DataSet ds = new DataSet();
            drpagescat.Items.Clear();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master subcategory = new NewAdbooking.Classes.Master();              

                ds = subcategory.subcategory(Session["compcode"].ToString(), Session["userid"].ToString());
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master subcategory = new NewAdbooking.classesoracle.Master();

                    ds = subcategory.subcategory(Session["compcode"].ToString(), Session["userid"].ToString());

                }
                else
                {
                    NewAdbooking.classmysql.Master subcategory = new NewAdbooking.classmysql.Master();

                    ds = subcategory.subcategory(Session["compcode"].ToString(), Session["userid"].ToString());

                }
                int i;
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "-Select AgencySub Cat.-";
                li1.Value = "0";
                li1.Selected = true;
                drpagescat.Items.Add(li1);

                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        ListItem li;
                        li = new ListItem();
                        li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                        li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                        drpagescat.Items.Add(li);
                    }
                }
            
           
        }

        public void addrepresentative()
        {
            DataSet ds = new DataSet();
            drprepres.Items.Clear();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master represe = new NewAdbooking.Classes.Master();

                ds = represe.representative(Session["compcode"].ToString(), Session["userid"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master represe = new NewAdbooking.classesoracle.Master();

                    ds = represe.representative(Session["compcode"].ToString(), Session["userid"].ToString());

                }
                else
                {
                    NewAdbooking.classmysql.Master represe = new NewAdbooking.classmysql.Master();
                    ds = represe.representative(Session["compcode"].ToString(), Session["userid"].ToString());

                }

                int i;
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "-Select Representative-";
                li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                li1.Selected = true;
                drprepres.Items.Add(li1);

                if (ds.Tables[0].Rows.Count > 0)
                {
                    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        ListItem li;
                        li = new ListItem();
                        li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                        li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                        //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                        drprepres.Items.Add(li);
                    }

                }
            
          

        }

        public void addagencycategory()
        {
            DataSet ds = new DataSet();
            drpagecate.Items.Clear();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master agencycategory = new NewAdbooking.Classes.Master();
                ds = agencycategory.addagency(Session["compcode"].ToString(), Session["userid"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master agencycategory = new NewAdbooking.classesoracle.Master();
                    ds = agencycategory.addagency(Session["compcode"].ToString(), Session["userid"].ToString());

                }
                else
                {
                    NewAdbooking.classmysql.Master agencycategory = new NewAdbooking.classmysql.Master();
                    ds = agencycategory.addagency(Session["compcode"].ToString(), Session["userid"].ToString());

                }
                int i;
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "--Select Category--";
                li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                li1.Selected = true;
                drpagecate.Items.Add(li1);

                if (ds.Tables.Count > 0)
                {
                    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        ListItem li;
                        li = new ListItem();
                        li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                        li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                        //state = ds.Tables[0].Rows[i].ItemArray[2].ToString();
                        drpagecate.Items.Add(li);
                    }

                }
           
           


        }

    public void fillcurtyp()
    {

        drpcurtyp.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master agencycategory = new NewAdbooking.Classes.Master();

            ds = agencycategory.filcur(Session["compcode"].ToString(), Session["userid"].ToString());
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master agencycategory = new NewAdbooking.classesoracle.Master();

                ds = agencycategory.filcur(Session["compcode"].ToString(), Session["userid"].ToString());

            }
            else
            {
                NewAdbooking.classmysql.Master agencycategory = new NewAdbooking.classmysql.Master();

                ds = agencycategory.filcur(Session["compcode"].ToString(), Session["userid"].ToString());

            }
            int i;
            ListItem li1;
            li1 = new ListItem();
            li1.Text = "Currency";
            li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
            li1.Selected = true;
            drpcurtyp.Items.Add(li1);

            if (ds.Tables.Count > 0)
            {
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                    li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();

                    drpcurtyp.Items.Add(li);
                }

            }
        
   


    }

        public void addagent()
        {
            drpagetyp.Items.Clear();
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master agent = new NewAdbooking.Classes.Master();


                ds = agent.addagent_typ(Session["userid"].ToString(), Session["compcode"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master agent = new NewAdbooking.classesoracle.Master();


                    ds = agent.addagent_typ(Session["userid"].ToString(), Session["compcode"].ToString());

                }
                else
                {
                    NewAdbooking.classmysql.Master agent = new NewAdbooking.classmysql.Master();
                    ds = agent.addagent_typ(Session["userid"].ToString(), Session["compcode"].ToString());

                }
                int i;
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "--Select Agency Type--";
                li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
                li1.Selected = true;
                drpagetyp.Items.Add(li1);

                if (ds.Tables.Count > 0)
                {
                    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                    {
                        ListItem li;
                        li = new ListItem();
                        li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                        li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                        drpagetyp.Items.Add(li);
                    }

                }
           
           

        }


        #region Web Form Designer generated code
        override protected void OnInit(EventArgs e)
        {
            //
            // CODEGEN: This call is required by the ASP.NET Web Form Designer.
            //
            InitializeComponent();
            base.OnInit(e);
        }

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
            //this.btnSave.Click += new System.EventHandler(btnSave_Click);
            this.hiddenpermission.ServerChange += new System.EventHandler(this.hiddenpermission_ServerChange);
            this.hiddenusername.ServerChange += new System.EventHandler(this.hiddenusername_ServerChange);
            this.ID = "Form1";
           // this.Load += new System.EventHandler(this.Page_Load);

        }
        #endregion

        //	

        public void addtxtstate()
        {
            //txtstate.Text=drpcity.SelectedValue.ToString();
            //txtstate.Text=state;
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master state = new NewAdbooking.Classes.Master();
                da = state.addstate(drpregion.SelectedValue.ToString());
            }

                 else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master state = new NewAdbooking.classesoracle.Master();
                    da = state.addstate(drpregion.SelectedValue.ToString());
                }
                else
                {
                    NewAdbooking.classmysql.Master state = new NewAdbooking.classmysql.Master();
                    da = state.addstate(drpregion.SelectedValue.ToString());
                }
            txtstate.Text = da.Tables[0].Rows[0].ItemArray[0].ToString();


        }
    
        public void addtxtdistrict()
        {
            DataSet dl = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master dist = new NewAdbooking.Classes.Master();
                dl = dist.adddist(drpregion.SelectedValue.ToString());
            }

                 else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master dist = new NewAdbooking.classesoracle.Master();
                    dl = dist.adddist(drpregion.SelectedValue.ToString());
                }
                else
                {
                    NewAdbooking.classmysql.Master dist = new NewAdbooking.classmysql.Master();
                    dl = dist.adddist(drpregion.SelectedValue.ToString());
                }
            txtdistrict.Text = dl.Tables[0].Rows[0].ItemArray[0].ToString();

        }
    
    [Ajax.AjaxMethod]
    public DataSet category(string comp)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master cate = new NewAdbooking.Classes.Master();

            ds = cate.filcat(comp);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master cate = new NewAdbooking.classesoracle.Master();

            ds = cate.filcat(comp);
            return ds;
            }
        else
        {
            NewAdbooking.classmysql.Master cate = new NewAdbooking.classmysql.Master();
            ds = cate.filcat(comp);
            return ds;
        }
    }


    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindagencyname(string compcode, string userid, string agency, string fla)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "";
            //NewAdbooking.Classes.BookingMaster bindagenname = new NewAdbooking.Classes.BookingMaster();

            string[] parameterValueArray = { compcode, userid, agency, Session["revenue"].ToString() };
            string[] parameterValueArray1 = { compcode, userid, agency, Session["center"].ToString() };
            string[] parameterValueArray2 = { compcode, userid, agency, "0" };

            if (Session["FILTER"].ToString() == "D")
            {
                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, Session["revenue"].ToString());
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            }

            else if (Session["FILTER"].ToString() == "P")
            {

                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray1);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, Session["center"].ToString());
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray1);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, Session["center"].ToString());
            }
            else
            {
                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray2);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, "0");
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray2);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, "0");
            }
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.BookingMaster bindagenname = new NewAdbooking.classesoracle.BookingMaster();
                if (ConfigurationSettings.AppSettings["CLIENTNAME"].ToString() == "DJ")
                {
                    ds = bindagenname.bindagency_DJ(compcode, userid, agency, Session["revenue"].ToString(), Session["revenue"].ToString(), Session["CENTERDJ"].ToString(), Session["LOGINDJ"].ToString(), Session["PUBLICATIONDJ"].ToString());
                }
                else if (Session["FILTER"].ToString() == "D")
                {
                    if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                        ds = bindagenname.bind10agency(compcode, userid, agency, Session["revenue"].ToString());
                    else
                        ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
                }

                else if (Session["FILTER"].ToString() == "P")
                {
                    if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                        ds = bindagenname.bind10agency(compcode, userid, agency, Session["center"].ToString());
                    else
                        ds = bindagenname.bindagency(compcode, userid, agency, Session["center"].ToString());
                }
                else
                {
                    if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                        ds = bindagenname.bind10agency(compcode, userid, agency, "0");
                    else
                        ds = bindagenname.bindagency(compcode, userid, agency, "0");
                }

            }
        else
        {
            NewAdbooking.classmysql.BookingMaster bindagenname = new NewAdbooking.classmysql.BookingMaster();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            }
            else
            {
                ds = bindagenname.bindagency(compcode, userid, agency, "0");
            }

        }
        return ds;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindagencyname1(string compcode, string userid, string agency, string fla, string parent)
    {
        string procedureName = "";
        string[] parameterValueArray = { compcode, userid, agency, Session["revenue"].ToString() };
        string[] parameterValueArray1 = { compcode, userid, agency, Session["center"].ToString() };
        string[] parameterValueArray2 = { compcode, userid, agency, "0" };
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            //    NewAdbooking.Classes.BookingMaster bindagenname = new NewAdbooking.Classes.BookingMaster();
            //    if (Session["FILTER"].ToString() == "D")
            //    {
            //        if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //            ds = bindagenname.bind10agency(compcode, userid, agency, Session["revenue"].ToString());
            //        else
            //            ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            //    }

            //    else if (Session["FILTER"].ToString() == "P")
            //    {
            //        if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //            ds = bindagenname.bind10agency(compcode, userid, agency, Session["center"].ToString());
            //        else
            //            ds = bindagenname.bindagency(compcode, userid, agency, Session["center"].ToString());
            //    }
            //    else if (parent=="E")
            //    {
            //        if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //            ds = bindagenname.bind10agency(compcode, userid, agency, Session["center"].ToString());
            //        else
            //            ds = bindagenname.bindagencyextra(compcode, userid, agency, Session["center"].ToString());
            //    }
            //    else
            //    {
            //        if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //            ds = bindagenname.bind10agency(compcode, userid, agency, "0");
            //        else
            //            ds = bindagenname.bindagency(compcode, userid, agency, "0");
            //    }
            //}


            if (Session["FILTER"].ToString() == "D")
            {
                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, Session["revenue"].ToString());
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            }

            else if (Session["FILTER"].ToString() == "P")
            {

                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray1);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, Session["center"].ToString());
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray1);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, Session["center"].ToString());
            }
            else
            {
                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray2);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, "0");
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray2);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, "0");
            }
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            //    NewAdbooking.classesoracle.BookingMaster bindagenname = new NewAdbooking.classesoracle.BookingMaster();
            //    if (ConfigurationSettings.AppSettings["CLIENTNAME"].ToString() == "DJ")
            //    {
            //        ds = bindagenname.bindagency_DJ(compcode, userid, agency, Session["revenue"].ToString(), Session["revenue"].ToString(), Session["CENTERDJ"].ToString(), Session["LOGINDJ"].ToString(), Session["PUBLICATIONDJ"].ToString());
            //    }
            //    else if (Session["FILTER"].ToString() == "D")
            //    {
            //        if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //            ds = bindagenname.bind10agency_new(compcode, userid, agency, Session["revenue"].ToString());
            //        else
            //            ds = bindagenname.bindagency_new(compcode, userid, agency, Session["revenue"].ToString());
            //    }

            //    else if (Session["FILTER"].ToString() == "P")
            //    {
            //        if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //            ds = bindagenname.bind10agency_new(compcode, userid, agency, Session["center"].ToString());
            //        else
            //            ds = bindagenname.bindagency_new(compcode, userid, agency, Session["center"].ToString());
            //    }
            //    else
            //    {
            //        if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //            ds = bindagenname.bind10agency_new(compcode, userid, agency, "0");
            //        else
            //            ds = bindagenname.bindagency_new(compcode, userid, agency, "0");
            //    }
            if (Session["FILTER"].ToString() == "D")
            {
                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, Session["revenue"].ToString());
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            }

            else if (Session["FILTER"].ToString() == "P")
            {

                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray1);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, Session["center"].ToString());
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray1);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, Session["center"].ToString());
            }
            else
            {
                if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
                {
                    procedureName = "bind10agencyforbooking";
                    NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray2);
                }
                //ds = bindagenname.bind10agency(compcode, userid, agency, "0");
                else
                {
                    procedureName = "bindagencyforbooking";
                    NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray2);
                }
                //ds = bindagenname.bindagency(compcode, userid, agency, "0");
            }

        }
        else
        {
            //NewAdbooking.classmysql.BookingMaster bindagenname = new NewAdbooking.classmysql.BookingMaster();
            //if (Session["FILTER"].ToString() == "D")
            //{
            //    if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //        ds = bindagenname.bind10agency(compcode, userid, agency, Session["revenue"].ToString());
            //    else
            //        ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            //}

            //else if (Session["FILTER"].ToString() == "P")
            //{
            //    if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //        ds = bindagenname.bind10agency(compcode, userid, agency, Session["center"].ToString());
            //    else
            //        ds = bindagenname.bindagency(compcode, userid, agency, Session["center"].ToString());
            //}
            //else if (parent == "E")
            //{
            //    if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //        ds = bindagenname.bind10agency(compcode, userid, agency, Session["center"].ToString());
            //    else
            //        ds = bindagenname.bindagencyextra(compcode, userid, agency, Session["center"].ToString());
            //}
            //else
            //{
            //    if (ConfigurationSettings.AppSettings["agencyf2"].ToString() == "Y" && fla == "Y")
            //        ds = bindagenname.bind10agency(compcode, userid, agency, "0");
            //    else
            //        ds = bindagenname.bindagency(compcode, userid, agency, "0");
            //}



        }
        return ds;
    }
     [Ajax.AjaxMethod]
    public DataSet subcat(string subcat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master cate = new NewAdbooking.Classes.Master();

            ds = cate.filsubcat(subcat);
            return ds;
        }

            else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master cate = new NewAdbooking.classesoracle.Master();

                ds = cate.filsubcat(subcat);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.Master cate = new NewAdbooking.classmysql.Master();
            ds = cate.filsubcat(subcat);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
     public void save(string comp, string drpagecate, string txtagencode, string txtsagencycode, string txtagenname, string drpagescat, string txtstatus2, string txtalias, string mrvregion, string drpregion, string txtphone1, string txtalert, string txtremarks, string txtadd, string txtstreet, string txtdistrict, string txtcountry, string txtphone2, string txtmail, string txttan, string txtpan, string drpress, string txtbill, string drpagetype, string txtpincode, string txtstate, string txtfax, string txtenrolldate, string txtnoofvts, string drpcity, string txtbussinessdate, string txtmyrefno, string txtcredit, string txtsacno, string txtsagencycod, string txturl, string txtcrlimit, string txtagenho, string txtsubagenho, string userid, string type, string zone, string address1, string address2, string curtype, string acagen, string fax2, string rategrp, string paymode, string qbcuserid, string dateformat, string depocode, string taluka, string ip, string branchcode, string hdstatecode, string hddistcode, string billfreq, string oldagen, string booktype, string vat, string age_desig)
    {
        //NewAdbooking.Classes.Master agentmastersave = new NewAdbooking.Classes.Master();
        //DataSet ds = new DataSet();
        //ds = agentmastersave.saveagent(comp, drpagetype, drpagecate, drpagescat, txtagencode, txtagenname, txtalias, txtagenho, txtadd, txtstreet, drpcity, mrvregion, txtdistrict, txtstate, txtcountry, txtphone2, txtmail, txtfax, txturl, txtbussinessdate, txtenrolldate, txtmyrefno, txtnoofvts, txtcredit, txtpan, txttan, txtsagencycod, paymode, txtstatus2, txtremarks, userid, txtsubagenho, txtsacno, txtbill, txtalert, txtcrlimit, txtphone1, drpress, txtpincode, drpregion, type, zone, address1, address2, curtype, acagen, fax2, rategrp);
    }

    [Ajax.AjaxMethod]
    public string checkcode(string agencode, string compcode, string userid, string type,string subcode)
        {
            string flag = "y";
            string falg1 = "n";
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master checkcode = new NewAdbooking.Classes.Master();

                da = checkcode.agencycode(agencode, compcode, userid, type, subcode);

                if (da.Tables[0].Rows.Count > 0)
                {

                    return flag;
                }
                
            }

            else
                if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="orcl")
                {
                    NewAdbooking.classesoracle.Master checkcode = new NewAdbooking.classesoracle.Master();

                    da = checkcode.agencycode(agencode, compcode, userid, type, subcode);

                    if (da.Tables[0].Rows.Count > 0)
                    {

                        return flag;
                    }
                }
            else
            {
                NewAdbooking.classmysql.Master checkcode = new NewAdbooking.classmysql.Master();
                da = checkcode.agencycode(agencode, compcode, userid, type, subcode);

                if (da.Tables[0].Rows.Count > 0)
                {

                    return flag;
                }
                return falg1;
            }
        return falg1;
        }

        [Ajax.AjaxMethod]
        public string commcheck(string agencode, string compcode, string userid,string subagency)
        {
            string flag = "y";
            string falg1 = "n";
               DataSet db = new DataSet();
               if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
               {
                   NewAdbooking.Classes.pop checkpay = new NewAdbooking.Classes.pop();

                   db = checkpay.commcheck(agencode, compcode, userid, subagency);
                   if (db.Tables[0].Rows.Count > 0)
                   {
                       return flag;
                   }
                   return falg1;
               }

               else
                   if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="orcl")
                   {
                       NewAdbooking.classesoracle.pop checkpay = new NewAdbooking.classesoracle.pop();

                       db = checkpay.commcheck(agencode, compcode, userid, subagency);
                       if (db.Tables[0].Rows.Count > 0)
                       {
                           return flag;
                       }
                       return falg1;
                   }
               else
               {
                   NewAdbooking.classmysql.pop checkpay = new NewAdbooking.classmysql.pop();
                   db = checkpay.commcheck(agencode, compcode, userid, subagency);
                   if (db.Tables[0].Rows.Count > 0)
                   {
                       return flag;
                   }
                   return falg1;
               }
        }

    [Ajax.AjaxMethod]
    public string paycheck1(string subagencode, string compcode, string userid, string agencycode)
        {
            string flag = "y";
            string falg1 = "n";
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.pop checkpay = new NewAdbooking.Classes.pop();

                da = checkpay.paycheck(subagencode, compcode, userid, agencycode);
                if (da.Tables[0].Rows.Count > 0)
                {
                    return flag;
                }
                return falg1;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.pop checkpay = new NewAdbooking.classesoracle.pop();

                    da = checkpay.paycheck(subagencode, compcode, userid, agencycode);
                    if (da.Tables[0].Rows.Count > 0)
                    {
                        return flag;
                    }
                    return falg1;
                }
            else
            {
                NewAdbooking.classmysql.pop checkpay = new NewAdbooking.classmysql.pop();
                da = checkpay.paycheck(subagencode, compcode, userid, agencycode);
                if (da.Tables[0].Rows.Count > 0)
                {
                    return flag;
                }
                return falg1;
            }
        }

        [Ajax.AjaxMethod]
        public string statuscheck(string agencode, string compcode, string userid)
        {
            string flag = "y";
            string falg1 = "n";
            DataSet d1 = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.pop checkstatus = new NewAdbooking.Classes.pop();

                d1 = checkstatus.status(agencode, compcode, userid);

                if (d1.Tables[0].Rows.Count > 0)
                {

                    return flag;
                }

                return falg1;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.pop checkstatus = new NewAdbooking.classesoracle.pop();

                    d1 = checkstatus.status(agencode, compcode, userid);

                    if (d1.Tables[0].Rows.Count > 0)
                    {

                        return flag;
                    }

                    return falg1;
                }
            else
            {
                NewAdbooking.classmysql.pop checkstatus = new NewAdbooking.classmysql.pop();
                d1 = checkstatus.status(agencode, compcode, userid);

                if (d1.Tables[0].Rows.Count > 0)
                {

                    return flag;
                }

                return falg1;
            }
        }




    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
        //public void modify(string comp, string drpagecate, string txtagencode, string txtsagencycode, string txtagenname, string drpagescat, string txtstatus2, string txtalias, string mrvregion, string drpregion, string txtphone1, string txtalert, string txtremarks, string txtadd, string txtstreet, string txtdistrict, string txtcountry, string txtphone2, string txtmail, string txttan, string txtpan, string drpress, string txtbill, string drpagetype, string txtpincode, string txtstate, string txtfax, string txtenrolldate, string txtnoofvts, string drpcity, string txtbussinessdate, string txtmyrefno, string txtcredit, string txtsacno, string txtsagencycod, string txturl, string txtcrlimit, string txtagenho, string txtsubagenho, string userid, string statusdetail, string statusdate, string paymode, string pincode, string stacno, string type, string zone, string address1, string address2, string curtype, string acagen, string txtfax1, string rategrp, string qbcuserid, string dateformat, string depocode, string taluka, string ip, string branchcode, string hdstatecode, string hddistcode, string billfreq, string oldagen, string booktype, string vat, string raterevise, string insertremark, string editionwisebilling, string executive, string email, string age_desig, string creditdays, string creditlimitdays, string recoverylimit, string emailidcc, string kycattach, string intrestcalculation, string bilflag,string sapcode,string securty,string gsttaus,string gstdt,string gstin)
        public void modify(string comp, string drpagecate, string txtagencode, string txtsagencycode, string txtagenname, string drpagescat, string txtstatus2, string txtalias, string mrvregion, string drpregion, string txtphone1, string txtalert, string txtremarks, string txtadd, string txtstreet, string txtdistrict, string txtcountry, string txtphone2, string txtmail, string txttan, string txtpan, string drpress, string txtbill, string drpagetype, string txtpincode, string txtstate, string txtfax, string txtenrolldate, string txtnoofvts, string drpcity, string txtbussinessdate, string txtmyrefno, string txtcredit, string txtsacno, string txtsagencycod, string txturl, string txtcrlimit, string txtagenho, string txtsubagenho, string userid, string statusdetail, string statusdate, string paymode, string pincode, string stacno, string type, string zone, string address1, string address2, string curtype, string acagen, string txtfax1, string rategrp, string qbcuserid, string dateformat, string depocode, string taluka, string ip, string branchcode, string hdstatecode, string hddistcode, string billfreq, string oldagen, string booktype, string vat, string raterevise, string insertremark, string editionwisebilling, string executive, string email, string age_desig, string creditdays, string creditlimitdays, string recoverylimit, string emailidcc, string kycattach, string intrestcalculation, string bilflag, string sapcode, string securty, string gsttaus, string gstdt, string gstin, string retainer, string blankcheque, string Securitybond, string kycapp, string addproof,string gstatus,string gstclty,string gstarno,string gstprovid)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master modifyagency = new NewAdbooking.Classes.Master();

                //ds = modifyagency.agencymodify(comp, drpagetype, drpagecate, drpagescat, txtagencode, txtagenname, txtalias, txtagenho, txtadd, txtstreet, drpcity, mrvregion, txtdistrict, txtstate, txtcountry, txtphone2, txtmail, txtfax, txturl, txtbussinessdate, txtenrolldate, txtmyrefno, txtnoofvts, txtcredit, txtpan, txttan, txtsagencycod, paymode, txtstatus2, txtremarks, userid, statusdate, txtsubagenho, txtsagencycode, txtbill, txtalert, txtcrlimit, txtphone1, drpregion, drpress, pincode, stacno, type, zone, address1, address2, curtype, acagen, txtfax1, rategrp, qbcuserid, dateformat, depocode, taluka, branchcode, hdstatecode, hddistcode, billfreq, oldagen, booktype, vat, raterevise, insertremark, editionwisebilling, executive, email, age_desig, creditdays, creditlimitdays, recoverylimit, emailidcc, kycattach, intrestcalculation, bilflag, sapcode, securty, gsttaus, gstdt, gstin, retainer, blankcheque, Securitybond, kycapp, addproof,gstatus,gstclty,gstarno,gstprovid);

            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master modifyagency = new NewAdbooking.classesoracle.Master();

                    //ds = modifyagency.agencymodify(comp, drpagetype, drpagecate, drpagescat, txtagencode, txtagenname, txtalias, txtagenho, txtadd, txtstreet, drpcity, mrvregion, txtdistrict, txtstate, txtcountry, txtphone2, txtmail, txtfax, txturl, txtbussinessdate, txtenrolldate, txtmyrefno, txtnoofvts, txtcredit, txtpan, txttan, txtsagencycod, paymode, txtstatus2, txtremarks, userid, statusdate, txtsubagenho, txtsagencycode, txtbill, txtalert, txtcrlimit, txtphone1, drpregion, drpress, pincode, stacno, type, zone, address1, address2, curtype, acagen, txtfax1, rategrp, qbcuserid, dateformat, depocode, taluka, branchcode, hdstatecode, hddistcode, billfreq, oldagen, booktype, vat, raterevise, insertremark, editionwisebilling, executive, email, age_desig, creditdays, creditlimitdays, recoverylimit, emailidcc, kycattach, intrestcalculation, bilflag, sapcode, securty, gsttaus, gstdt, gstin, retainer, blankcheque, Securitybond, kycapp, addproof, gstatus, gstclty, gstarno, gstprovid);

                }
                else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
                {
                    string procedureName = "websp_agencymodify_websp_agencymodify_p";
                    string[] parameterValueArray = { comp, drpagetype, drpagecate, drpagescat, txtagencode, txtagenname, txtalias, txtagenho, type, txtadd, txtstreet, drpcity, mrvregion, txtdistrict, txtstate, txtcountry, txtphone2, txtfax, txtfax, txtmail, txturl, txtbussinessdate, txtenrolldate, txtnoofvts, txtcredit, txtpan, txttan, stacno, paymode, txtstatus2, txtremarks, userid, txtmyrefno, txtsubagenho, txtsagencycode, txtbill, txtalert, txtcrlimit, txtphone1, drpregion, drpress, pincode, stacno, zone, address1, address2, curtype, acagen, rategrp, qbcuserid, depocode, taluka, branchcode, hddistcode, hdstatecode, billfreq, oldagen, booktype, vat, raterevise, insertremark, editionwisebilling, executive, email, age_desig, creditdays, creditlimitdays, recoverylimit, emailidcc, kycattach, intrestcalculation, sapcode, bilflag, null, securty, gsttaus, gstdt, gstin, retainer, blankcheque, Securitybond, kycapp, addproof, gstatus, gstclty, gstarno, gstprovid };
                    NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
                //else
                //{
                //    //string bstd = getDate(dateformat, txtbussinessdate);
                //    //string enrd = getDate(dateformat, txtenrolldate);

                //    NewAdbooking.classmysql.Master modifyagency = new NewAdbooking.classmysql.Master();
                //    ds = modifyagency.agencymodify(comp, drpagetype, drpagecate, drpagescat, txtagencode, txtagenname, txtalias, txtagenho, txtadd, txtstreet, drpcity, mrvregion, txtdistrict, txtstate, txtcountry, txtphone2, txtmail, txtfax, txturl, txtbussinessdate, txtenrolldate, txtmyrefno, txtnoofvts, txtcredit, txtpan, txttan, txtsagencycod, paymode, txtstatus2, txtremarks, userid, statusdate, txtsubagenho, txtsagencycode, txtbill, txtalert, txtcrlimit, txtphone1, drpregion, drpress, pincode, stacno, type, zone, address1, address2, curtype, acagen, txtfax1, rategrp, qbcuserid, dateformat, depocode, taluka, branchcode, hdstatecode, hddistcode, billfreq);
                //}
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Agency','" + err.Replace("'", "''") + "','Agency Modification','" + txtagenname ;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        //ds=agentmastersave.fagent(comp,drpagetype,drpagecate,drpagescat,txtagencode,txtagenname,txtalias,txtagenho,txtadd,txtstreet,drpcity,mrvregion,txtdistrict,txtstate,txtcountry,txtphone2,txtmail,txtfax,txturl,txtbussinessdate,txtenrolldate,txtmyrefno,txtnoofvts,txtcredit,txtpan,txttan,txtsagencycod,paymode,txtstatus2,txtremarks,userid,txtsubagenho,txtsagencycode,txtbill,txtalert,txtcrlimit,txtphone1,drpress,txtpincode,drpregion);


    }


        [Ajax.AjaxMethod]
        public string searchexecute(string drpagecate, string txtagencode, string txtsagencycode, string txtagenname, string alias, string drpagescat, string compcode, string userid, string city, string drpagetyp)
        {
            string y = "y";
            string n = "n";
            DataSet da = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master checkagentcode = new NewAdbooking.Classes.Master();

                da = checkagentcode.chkagent(compcode, userid, txtagencode, txtsagencycode, txtagenname, alias, drpagetyp, drpagecate, txtsagencycode, city);

                if (da.Tables[0].Rows.Count > 0)
                {
                    return y;

                }
                return n;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master checkagentcode = new NewAdbooking.classesoracle.Master();

                    da = checkagentcode.chkagent(compcode, userid, txtagencode, txtsagencycode, txtagenname, alias, drpagetyp, drpagecate, txtsagencycode, city);

                    if (da.Tables[0].Rows.Count > 0)
                    {
                        return y;

                    }
                    return n;
                }
            else
                {
                    NewAdbooking.classmysql.Master checkagentcode = new NewAdbooking.classmysql.Master();
                    da = checkagentcode.chkagent(compcode, userid, txtagencode, txtsagencycode, txtagenname, alias, drpagetyp, drpagecate, txtsagencycode, city);

                if (da.Tables[0].Rows.Count > 0)
                {
                    return y;

                }
                return n;
            }


        }

        [Ajax.AjaxMethod]
        public DataSet executeagency(string drpagecate, string txtagencode, string txtsagencycode, string txtagenname, string alias, string drpagescat, string compcode, string userid, string city, string drpagetyp, string count, string branchcode, string billfreq)
        {
            z = 0;
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master execute = new NewAdbooking.Classes.Master();

                ds = execute.executeagency(compcode, userid, txtagencode, txtsagencycode, txtagenname, alias, drpagetyp, drpagecate, drpagescat, city, count, branchcode, billfreq);

                return ds;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master execute = new NewAdbooking.classesoracle.Master();

                    ds = execute.executeagency(compcode, userid, txtagencode, txtsagencycode, txtagenname, alias, drpagetyp, drpagecate, drpagescat, city, count, branchcode, billfreq);

                    return ds;
                }
            else
            {
                NewAdbooking.classmysql.Master execute = new NewAdbooking.classmysql.Master();
                ds = execute.executeagency(compcode, userid, txtagencode, txtsagencycode, txtagenname, alias, drpagetyp, drpagecate, drpagescat, city, count, branchcode, billfreq);

                return ds;
            }


        }

        [Ajax.AjaxMethod]
        public DataSet first(string compcode, string userid, string txtagencycode)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                z = 0;

                return ds;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                    ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                    z = 0;

                    return ds;
                }
            else
            {
                NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();

                ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                z = 0;

                return ds;
            }


        }

        [Ajax.AjaxMethod]
        public DataSet last(string compcode, string userid, string txtagencycode)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                z = 0;

                return ds;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                    ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                    z = 0;

                    return ds;
                }
            else
            {
                NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();

                ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                z = 0;

                
            }
            return ds;

        }

        [Ajax.AjaxMethod]
        public DataSet next(string compcode, string userid, string txtagencycode)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                z = 0;

                
            }

                else
                if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="orcl")
                {
                    NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                    ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                    z = 0;
                }
            else
            {
                NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
                ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                z = 0;

                //return ds;
            }
            return ds;


        }

        [Ajax.AjaxMethod]
        public DataSet previous(string compcode, string userid, string txtagencycode)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                z = 0;

                
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                    ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                    z = 0;
                }
            else
            {
                NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
                ds = firstAgency.firstquery(compcode, userid, txtagencycode);
                z = 0;

                
            }
            return ds;


        }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void deleteagency(string compcode, string userid, string txtagencycode, string subagency, string codesubcode,string ip)
        {
            DataSet ds = new DataSet();
            string err = "";
            try
            {
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                {
                    NewAdbooking.Classes.Master delete = new NewAdbooking.Classes.Master();

                    ds = delete.agentdelete(compcode, userid, txtagencycode, subagency, codesubcode);
                }
                else
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.Master delete = new NewAdbooking.classesoracle.Master();

                        ds = delete.agentdelete(compcode, userid, txtagencycode, subagency, codesubcode);
                    }
                    else
                    {
                        NewAdbooking.classmysql.Master delete = new NewAdbooking.classmysql.Master();
                        ds = delete.agentdelete(compcode, userid, txtagencycode, subagency, codesubcode);
                    }
            }
            catch (Exception k)
            {
                err = k.Message;
            }
            clsconnection dconnect = new clsconnection();
            string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','Agency','" + err.Replace("'", "''") + "','Agency Delete','" + txtagencycode;
            sqldd = sqldd + "',";
            sqldd = sqldd + "'" + ip + "')";
            dconnect.executenonquery1(sqldd);
           
        }

    [Ajax.AjaxMethod]
    public DataSet SubAgencyBind(string agency, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master bindsub = new NewAdbooking.Classes.Master();

            ds = bindsub.SubAgencyBind(agency, compcode, userid);

            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master bindsub = new NewAdbooking.classesoracle.Master();

                ds = bindsub.SubAgencyBind(agency, compcode, userid);

                return ds;
            }
        else
        {
            NewAdbooking.classmysql.Master bindsub = new NewAdbooking.classmysql.Master();
            ds = bindsub.SubAgencyBind(agency, compcode, userid);

            return ds;
        }
        return ds;


    }


    [Ajax.AjaxMethod]

    public DataSet user(string agencode, string subagencode, string compcode, string userid, string agenname,string qbc)
    {
        //agenname=drpparent.Text.ToString();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master bindlistwithagencycode = new NewAdbooking.Classes.Master();

            ds = bindlistwithagencycode.usercode(agencode, subagencode, compcode, userid, agenname, qbc);
            
        }

            else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master bindlistwithagencycode = new NewAdbooking.classesoracle.Master();

                ds = bindlistwithagencycode.usercode(agencode, subagencode, compcode, userid, agenname, qbc);

            }


        else
        {
            NewAdbooking.classmysql.Master bindlistwithagencycode = new NewAdbooking.classmysql.Master();
            ds = bindlistwithagencycode.usercode(agencode, subagencode, compcode, userid, agenname, qbc);
            
        }
        return ds;
    }


        public void enable()
        {

            btnNew.Enabled = true;
            btnSave.Enabled = false;
            btnCancel.Enabled = true;
            btnQuery.Enabled = true;
            btnExit.Enabled = true;
            btnModify.Enabled = false;
            btnExecute.Enabled = false;
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = false;
            btnlast.Enabled = false;

            btnDelete.Enabled = false;
            textbill.Enabled = false;
            drpcurtyp.Enabled = false;

            drpagetyp.Enabled = false;
            drpagescat.Enabled = false;
            drpagecate.Enabled = false;
            drpregion.Enabled = false;
            txtagencode.Enabled = false;
            drpcity.Enabled = false;
            biltodrp.Enabled = false;
            //string url="www.4cplus.com";
            txtstacno.Enabled = false;
            txtagenname.Enabled = false;

            txtdepocode.Enabled = false;

            txtalias.Enabled = false;
            txtadd.Enabled = false;
            txtstreet.Enabled = false;
            txtmail.Enabled = false;
            txtpincode.Enabled = false;
            txtdistrict.Enabled = false;
            txtstate.Enabled = false;
            txtcountry.Enabled=false;
            txtphone1.Enabled = false;
            txtphone1.Enabled = false;
            txtphone2.Enabled = false;
            txtfax.Enabled = false;
            txtfax1.Enabled = false;
            txtmryrefno.Enabled = false;
            txtnoofvts.Enabled = false;
            txtcredit.Enabled = false;
            txttan.Enabled = false;
            txtpan.Enabled = false;
            txtbill.Enabled = false;
            drprepres.Enabled = false;
            txtstatus.Enabled = false;
            txtstatusdate.Enabled = false;
            txtstatus2.Enabled = false;
            txtalert.Enabled = false;
            txtremarks.Enabled = false;

            drpzone.Enabled = false;
            drpparent.Enabled = false;

            txturl.Enabled = false;
            mrvregion.Enabled = false;
            txtcrlimit.Enabled = false;
            txtagencyho.Enabled = false;
            txtsugagencyho.Enabled = false;
            txtaddress1.Enabled=false;
            txtaddress2.Enabled = false;
            txtsagencycode.Enabled = false;
            txtbusineedate.Enabled = false;
            txtenrolldate.Enabled = false;
            drpbillf.Enabled = false;
            drpEdition_wise_Billing.Enabled = false;
            lbbankdetail.Enabled = false;
            lbbankmast.Enabled = false;
            lbcommdetail.Enabled = false;
            lbcontactdetails.Enabled = false;
            lbpaymode.Enabled = false;
            lbstatusdetail.Enabled = false;


            txtcreditlimitdays.Enabled = false;
            txtcrlimitfromdate.Enabled = false;
            txtrecoverylimit.Enabled = false;
            txtsapcode.Enabled = true;
            txtsecure.Enabled = true;

            drpregion.Enabled = false;
            drpzone.Enabled = false;
            drpbranch.Enabled = false;
            txtoldagen.Enabled = false;
            bktype.Enabled = false;
            drpcalc.Enabled = false;
            //chkvat.Enabled = false;
            chkraterevise.Checked = false;


            if (id == "6")
            {
                btnNew.Enabled = false;
            }

        }

        private void btnSave_Click(object sender, System.EventArgs e)
        {

        }



        public void one()
        {
            btnNew.Enabled = true;


            btnQuery.Enabled = false;
            hiddenpermission.Value = "1";

        }

        public void two()
        {

          



            btnNew.Enabled = false;
            hiddenpermission.Value = "2";

        }
        public void three()
        {

          

            btnNew.Enabled = true;
            hiddenpermission.Value = "3";

        }

        public void four()
        {
            btnNew.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            hiddenpermission.Value = "4";

        }

        public void five()
        {
            btnNew.Enabled = true;


            hiddenpermission.Value = "5";

        }

        public void six()
        {
            btnNew.Enabled = false;
            hiddenpermission.Value = "6";

        }
        public void seven()
        {
        }

        private void hiddenpermission_ServerChange(object sender, System.EventArgs e)
        {

        }





        //		

        [Ajax.AjaxMethod]
        public DataSet submitpermission(string hiddencompcode, string hiddenuserid, string formname)
        {
            DataSet dz = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();

                dz = checkform.formpermission(hiddencompcode, hiddenuserid, formname);
                return dz;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master checkform = new NewAdbooking.classesoracle.Master();

                    dz = checkform.formpermission(hiddencompcode, hiddenuserid, formname);
                    return dz;
                }
            else
            {
                NewAdbooking.classmysql.Master checkform = new NewAdbooking.classmysql.Master();
                dz = checkform.formpermission(hiddencompcode, hiddenuserid, formname);
                return dz;
            }
        }


        [Ajax.AjaxMethod]
        public DataSet addcou(string txtcountry)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.countcity(txtcountry);
                return ds;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                    ds = firstAgency.countcity(txtcountry);
                    return ds;
                }
            else
            {
                NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
                ds = firstAgency.countcity(txtcountry);
                return ds;
            }
        }

    [Ajax.AjaxMethod]
    public DataSet credday(string agtype)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

            ds = firstAgency.credfil(agtype);
            
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                ds = firstAgency.credfil(agtype);
            }
        else
        {
            NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
            ds = firstAgency.credfil(agtype);
            
        }
        return ds;
    }

        [Ajax.AjaxMethod]
        public DataSet chkcode(string str, string type)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.countcode(str, type);
                
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                       NewAdbooking.classesoracle .Master firstAgency = new NewAdbooking.classesoracle.Master();

                ds = firstAgency.countcode(str, type);
                }
            else
            {
                NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
                ds = firstAgency.countcode(str, type);
                
            }
            return ds;
        }

        [Ajax.AjaxMethod]
        public DataSet chksubcode(string str, string agencode, string type)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.countsubcode(str, agencode, type);
                return ds;
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                    ds = firstAgency.countsubcode(str, agencode, type);
                    return ds;
                }
            else
            {
                NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
                ds = firstAgency.countsubcode(str, agencode, type);
                return ds;
            }
            return ds;


        }


        [Ajax.AjaxMethod]
        public DataSet chkag(string agencode)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.chk(agencode);
                return ds;
            }

                else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle .Master firstAgency = new NewAdbooking.classesoracle.Master();

                ds = firstAgency.chk(agencode);
                return ds;
                }
            else
            {
                NewAdbooking.classmysql.Master firstAgency = new NewAdbooking.classmysql.Master();
                ds = firstAgency.chk(agencode);
                
            }
            return ds;

        }







        [Ajax.AjaxMethod]
        public DataSet fillmrv(string compcode, string dateformat, string userid, string extra1, string extra2, string extra3, string extra4, string extra5)
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Master firstAgency = new NewAdbooking.Classes.Master();

                ds = firstAgency.fillmrv1(compcode, dateformat, userid, extra1, extra2, extra3, extra4, extra5);
                return ds;
            }

            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.Master firstAgency = new NewAdbooking.classesoracle.Master();

                    ds = firstAgency.fillmrv1(compcode, dateformat, userid, extra1, extra2, extra3, extra4, extra5);
                    return ds;
                }
                else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
                {
                    string procedureName = "agency_mrv_region_bind";
                    string[] parameterValueArray = { compcode, dateformat, userid, extra1, extra2, extra3, extra4, extra5 };
                    NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                    ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                }
                
            return ds;

        }
















        private void hiddenusername_ServerChange(object sender, System.EventArgs e)
        {

        }





    protected void txtcountry_SelectedIndexChanged(object sender, EventArgs e)
    {

    }
    protected void drpcity_SelectedIndexChanged(object sender, EventArgs e)
    {

    }
    protected void txtbill_SelectedIndexChanged(object sender, EventArgs e)
    {

    }

    //code for bill to
    [Ajax.AjaxMethod]
    public DataSet bindbillto(string agencyname, string comcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master billto = new NewAdbooking.Classes.Master();

            ds = billto.bindbill(agencyname, comcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master billto = new NewAdbooking.classesoracle.Master();

                ds = billto.bindbill(agencyname, comcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.Master billto = new NewAdbooking.classmysql.Master();
            ds = billto.bindbill(agencyname, comcode, userid);
            
        }
        return ds;


    }

    [Ajax.AjaxMethod]
    public DataSet subho(string subagencode, string comcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master billto = new NewAdbooking.Classes.Master();

            ds = billto.fillsubho(subagencode, comcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master billto = new NewAdbooking.classesoracle.Master();

                ds = billto.fillsubho(subagencode, comcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.Master billto = new NewAdbooking.classmysql.Master();
            ds = billto.fillsubho(subagencode, comcode, userid);
            
        }
        return ds;
    }



    [Ajax.AjaxMethod]

  public DataSet bindagencycode(string agenname,string compcode,string userid)
    {
        //agenname=drpparent.Text.ToString();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master bindlistwithagencycode = new NewAdbooking.Classes.Master();

            ds = bindlistwithagencycode.bindagencycode(agenname, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master bindlistwithagencycode = new NewAdbooking.classesoracle.Master();

                ds = bindlistwithagencycode.bindagencycode(agenname, compcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.Master bindlistwithagencycode = new NewAdbooking.classmysql.Master();
            ds = bindlistwithagencycode.bindagencycode(agenname, compcode, userid);
            
        }
        return ds;

       


        }
    protected void AspNetMessageBox(string strMessage)
    {
        //strMessage = adminResource.GetStringFromResource(strMessage);
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(Agent_master), "ShowAlert", strAlert, true);
    }

    protected void hiddenauto_ServerChange(object sender, EventArgs e)
    {

    }

    protected void btnSave_Click2(object sender, EventArgs e)
    {
        /*string compcode = Session["compcode"].ToString();
        string agencytype = drpagetyp.SelectedValue;
        ///*agentcategory	NULL
        //agentcategory2	NULL
        string agentcategory = drpagecate.SelectedValue;
        string agentcategory2 = drpagescat.SelectedValue;
        string agentcode = agencode.Text;
        string agentname = txtagenname.Text;
        string alias = txtalias.Text;
        string agencyho = txtagencyho.Text;
        string address = txtadd.Text;
        string street = txtstreet.Text;
        string city = dcity.Text;
        string taluka = dtaluka.Text;
        string district = tdistrict.Text;
        string state = tstate.Text;
        string country = txtcountry.SelectedValue;
        string phone = txtphone2.Text;
        string fax = txtfax.Text;
        string mail = txtmail.Text;
        string url = txturl.Text;
        string bussinessstartdate = txtbusineedate.Text;
        string enrolldate = txtenrolldate.Text;
        string mrerefferenceno = txtmryrefno.Text;
        string novts = txtnoofvts.Text;
        string credit = txtcredit.Text;
        string pan = txtpan.Text;
        string tan = txttan.Text;
        string stacno = txtstacno.Text;

        string status = txtstatus2.Text;
        string remarks = txtremarks.Text;
        string userid = Session["userid"].ToString();

        string subagencyho = txtsugagencyho.Text;
        string agencycode = subagencode.Text;

        string billto = biltodrp.SelectedValue;
        string alert = txtalert.Text;
        string creditlimit = txtcrlimit.Text;
        string code = txtphone1.Text;
        string representative = drprepres.SelectedValue;
        string branchcode = drpbranch.SelectedValue;
        string pin = txtpincode.Text;

        string zip = "";

        string region = drpregion.SelectedValue;

        string type = drpparent.SelectedValue;

        string zone = drpzone.SelectedValue;
        string address1 = txtaddress1.Text;
        string address2 = txtaddress2.Text;
        string curtype = drpcurtyp.Text;
        string acagen = tbill.Text;
        string fax2 = txtfax1.Text;
        string rategrp = drprate.SelectedValue;

        string paymode = "0";
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master agentmastersave = new NewAdbooking.Classes.Master();

            ds = agentmastersave.saveagent(compcode, agentcategory, agentcategory2, agencytype, agentcode, agentname, alias, agencyho, address, street, city, district, state, country, phone, fax, mail, url, bussinessstartdate, enrolldate, mrerefferenceno, novts, credit, pan, tan, stacno, status, remarks, userid, subagencyho, agencycode, billto, alert, creditlimit, code, representative, pin, region, type, zone, address1, address2, curtype, acagen, fax2, rategrp, paymode, drpuserid.SelectedValue, Session["dateformat"].ToString(), taluka,"",branchcode,hiddenstatecode,hiddendistcode);

        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master agentmastersave = new NewAdbooking.classesoracle.Master();

                ds = agentmastersave.saveagent(compcode, agentcategory, agentcategory2, agencytype, agentcode, agentname, alias, agencyho, address, street, city, district, state, country, phone, fax, mail, url, bussinessstartdate, enrolldate, mrerefferenceno, novts, credit, pan, tan, stacno, status, remarks, userid, subagencyho, agencycode, billto, alert, creditlimit, code, representative, pin, region, type, zone, address1, address2, curtype, acagen, fax2, rategrp, paymode, drpuserid.SelectedValue, Session["dateformat"].ToString(), taluka, branchcode, hiddenstatecode, hiddendistcode);

            }
            else
            {
                NewAdbooking.classmysql.Master agentmastersave = new NewAdbooking.classmysql.Master();

                ds = agentmastersave.saveagent(compcode, agentcategory, agentcategory2, agencytype, agentcode, agentname, alias, agencyho, address, street, city, district, state, country, phone, fax, mail, url, bussinessstartdate, enrolldate, mrerefferenceno, novts, credit, pan, tan, stacno, status, remarks, userid, subagencyho, agencycode, billto, alert, creditlimit, code, representative, pin, region, type, zone, address1, address2, curtype, acagen, fax2, rategrp, paymode, drpuserid.SelectedValue, Session["dateformat"].ToString(), taluka, branchcode, hiddenstatecode, hiddendistcode);

            }

            if ((Session["commdetail"] == "") || (Session["commdetail"] == null))
            {
            }
            else
            {
                DataSet db1 = (DataSet)Session["commdetail"];
                int er1 = db1.Tables[0].Rows.Count;
                int gf1 = db1.Tables.Count;
                for (int b = 0; b <= gf1 - 1; b++)
                {
                    string txtefffrom = db1.Tables[b].Rows[0].ItemArray[0].ToString();
                    string txtefftill = db1.Tables[b].Rows[0].ItemArray[1].ToString();
                    string txtcommrate = db1.Tables[b].Rows[0].ItemArray[2].ToString();
                    string drpcommdetail = db1.Tables[b].Rows[0].ItemArray[3].ToString();
                    string drpadtype = db1.Tables[b].Rows[0].ItemArray[4].ToString();
                    string adcomm = db1.Tables[b].Rows[0].ItemArray[7].ToString();
                    DataSet ds1 = new DataSet();
                    if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
                    {
                    NewAdbooking.Classes.pop comminsert = new NewAdbooking.Classes.pop();
                    
                    int comm_r = Convert.ToInt32(txtcommrate);
                    ds1 = comminsert.insertcomm(txtefffrom, txtefftill, Convert.ToString(comm_r), drpcommdetail, compcode, userid, agentcode, agencycode, dateformat, drpadtype, adcomm);
                    }
                    else
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                        {
                            NewAdbooking.classesoracle.pop comminsert = new NewAdbooking.classesoracle.pop();
                    
                    int comm_r = Convert.ToInt32(txtcommrate);
                    ds1 = comminsert.insertcomm(txtefffrom, txtefftill, Convert.ToString(comm_r), drpcommdetail, compcode, userid, agentcode, agencycode, dateformat, drpadtype,adcomm);

                        }
                        else
                        {
                            NewAdbooking.classmysql.pop comminsert = new NewAdbooking.classmysql.pop();

                            int comm_r = Convert.ToInt32(txtcommrate);
                            ds1 = comminsert.insertcomm(txtefffrom, txtefftill, Convert.ToString(comm_r), drpcommdetail, compcode, userid, agentcode, agencycode, dateformat, drpadtype, adcomm);

                        }
                }
            }

            if ((Session["statussave"] == "") || (Session["statussave"] == null))
            {
            }
            else
            {
                DataSet db1 = (DataSet)Session["statussave"];
                int er1 = db1.Tables[0].Rows.Count;
                int gf1 = db1.Tables.Count;
                for (int b = 0; b <= gf1 - 1; b++)
                {
                    string txtfrom = db1.Tables[b].Rows[0].ItemArray[1].ToString();
                    string txtto = db1.Tables[b].Rows[0].ItemArray[2].ToString();
                    string circular = db1.Tables[b].Rows[0].ItemArray[3].ToString();
                    string drpstatus = db1.Tables[b].Rows[0].ItemArray[0].ToString();
                    string txtremark = db1.Tables[b].Rows[0].ItemArray[4].ToString();
                    DataSet ds2 = new DataSet();
                    if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
                    {
                    NewAdbooking.Classes.pop statusinsert = new NewAdbooking.Classes.pop();
                   
                    ds2 = statusinsert.insertstatus(drpstatus, txtfrom, txtto, circular, txtremark, compcode, userid, agentcode, agencycode);
                    }
                    else
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                      NewAdbooking.classesoracle.pop statusinsert = new NewAdbooking.classesoracle.pop();
                   
                    ds2 = statusinsert.insertstatus(drpstatus, txtfrom, txtto, circular, txtremark, compcode, userid, agentcode, agencycode,dateformat);

                    }
                    else
                    {
                        NewAdbooking.classmysql.pop statusinsert = new NewAdbooking.classmysql.pop();

                        ds2 = statusinsert.insertstatus(drpstatus, txtfrom, txtto, circular, txtremark, compcode, userid, agentcode, agencycode, dateformat);

                    }


                }

            }


            if ((Session["bankdetail"] == "") || (Session["bankdetail"] == null))
            {
            }
            else
            {
                DataSet db2 = (DataSet)Session["bankdetail"];
                int er1 = db2.Tables[0].Rows.Count;
                int gf1 = db2.Tables.Count;
                for (int b = 0; b <= gf1 - 1; b++)
                {
                    string txtbgno = db2.Tables[b].Rows[0].ItemArray[0].ToString();
                    string txtbgdate = db2.Tables[b].Rows[0].ItemArray[1].ToString();
                    string txtamount = db2.Tables[b].Rows[0].ItemArray[2].ToString();
                    string txtbank = db2.Tables[b].Rows[0].ItemArray[4].ToString();
                    string txtvaliditydate = db2.Tables[b].Rows[0].ItemArray[3].ToString();
                    DataSet ds2 = new DataSet();

                    if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
                    {
                    NewAdbooking.Classes.pop bankinsert = new NewAdbooking.Classes.pop();
                   
                    ds2 = bankinsert.insertbank(txtbgno, txtbgdate, txtamount, txtbank, txtvaliditydate, compcode, userid, agentcode, agencycode);
                    }
                    else
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                        {
                            NewAdbooking.classesoracle.pop bankinsert = new NewAdbooking.classesoracle.pop();

                            ds2 = bankinsert.insertbank(txtbgno, txtbgdate, txtamount, txtbank, txtvaliditydate, compcode, userid, agentcode, agencycode,dateformat);

                        }
                        else
                        {
                            NewAdbooking.classmysql.pop bankinsert = new NewAdbooking.classmysql.pop();

                            ds2 = bankinsert.insertbank(txtbgno, txtbgdate, txtamount, txtbank, txtvaliditydate, compcode, userid, agentcode, agencycode, dateformat);

                        }


                }

            }

            if ((Session["bankmaster"] == "") || (Session["bankmaster"] == null))
            {
            }
            else
            {
                DataSet db4 = (DataSet)Session["bankmaster"];
                int er1 = db4.Tables[0].Rows.Count;
                int gf1 = db4.Tables.Count;
                for (int b = 0; b <= gf1 - 1; b++)
                {
                    string bankname = db4.Tables[b].Rows[0].ItemArray[0].ToString();
                    string branch = db4.Tables[b].Rows[0].ItemArray[1].ToString();
                    string country1 = db4.Tables[b].Rows[0].ItemArray[2].ToString();
                    string city1 = db4.Tables[b].Rows[0].ItemArray[3].ToString();
                    string accountno = db4.Tables[b].Rows[0].ItemArray[4].ToString();
                    string bankno = db4.Tables[b].Rows[0].ItemArray[5].ToString();
                    //string accountno = db4.Tables[b].Rows[0].ItemArray[6].ToString();

                    DataSet ds4 = new DataSet();
                    if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
                    {
                    NewAdbooking.Classes.bankmaster ins = new NewAdbooking.Classes.bankmaster();
                    
                    ds4 = ins.insertdata(bankname, branch, country1, city1, bankno, accountno, compcode, userid, agentcode, agencycode);

                    }
                    else
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                        {
                            NewAdbooking.classesoracle.bankmaster ins = new NewAdbooking.classesoracle.bankmaster();

                            ds4 = ins.insertdata(bankname, branch, country1, city1, bankno, accountno, compcode, userid, agentcode, agencycode);

                        }
                        else
                        {
                            NewAdbooking.classmysql.bankmaster ins = new NewAdbooking.classmysql.bankmaster();

                            ds4 = ins.insertdata(bankname, branch, country1, city1, bankno, accountno, compcode, userid, agentcode, agencycode);

                        }


                }

            }

            if ((Session["contactdetail"] == "") || (Session["contactdetail"] == null))
            {
            }
            else
            {
                DataSet db5 = (DataSet)Session["contactdetail"];
                int er1 = db5.Tables[0].Rows.Count;
                int gf1 = db5.Tables.Count;
                for (int b = 0; b <= gf1 - 1; b++)
                {
                    string contactperson = db5.Tables[b].Rows[0].ItemArray[0].ToString();
                    string txtdesignation = db5.Tables[b].Rows[0].ItemArray[1].ToString();
                    string drprole = db5.Tables[b].Rows[0].ItemArray[2].ToString();
                    string txtdob = db5.Tables[b].Rows[0].ItemArray[3].ToString();
                    string txtphoneno = db5.Tables[b].Rows[0].ItemArray[4].ToString();
                    string txtext = db5.Tables[b].Rows[0].ItemArray[5].ToString();
                    string txtfaxno = db5.Tables[b].Rows[0].ItemArray[6].ToString();
                    string mail1 = db5.Tables[b].Rows[0].ItemArray[7].ToString();

                    DataSet ds6 = new DataSet();
                    if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
                    {
                    NewAdbooking.Classes.pop contactinsert = new NewAdbooking.Classes.pop();                  

                    ds6 = contactinsert.insertcontact(contactperson, txtdesignation, drprole, txtdob, txtphoneno, txtext, txtfaxno, mail1, userid, agentcode, agencycode, compcode, id);
                    }
                    else
                        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.pop contactinsert = new NewAdbooking.classesoracle.pop();
                        ds6 = contactinsert.insertcontact(contactperson, txtdesignation, drprole, txtdob, txtphoneno, txtext, txtfaxno, mail1, userid, agentcode, agencycode, compcode, id,Session["dateformat"].ToString());

                    }
                        else
                        {
                            NewAdbooking.classmysql.pop contactinsert = new NewAdbooking.classmysql.pop();
                            ds6 = contactinsert.insertcontact(contactperson, txtdesignation, drprole, txtdob, txtphoneno, txtext, txtfaxno, mail1, userid, agentcode, agencycode, compcode, id, Session["dateformat"].ToString());

                        }
                }
            }

            if ((Session["paymodeagency"] == "") || (Session["paymodeagency"] == null))
            {
            }
            else
            {

                DataSet ds7 = new DataSet();
                if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
                {
                NewAdbooking.Classes.pop CustCode = new NewAdbooking.Classes.pop();
               

                CustCode.insertpay(agentcode, compcode, userid, agencycode, Session["paymodeagency"].ToString());
                }
                else
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                NewAdbooking.classesoracle .pop CustCode = new NewAdbooking.classesoracle.pop();
               

                CustCode.insertpay(agentcode, compcode, userid, agencycode, Session["paymodeagency"].ToString());
 
                    }
                    else
                    {
                        NewAdbooking.classmysql.pop CustCode = new NewAdbooking.classmysql.pop();


                        CustCode.insertpay(agentcode, compcode, userid, agencycode, Session["paymodeagency"].ToString());
 

                      
                    }
              

            }

        
      
        

        Session["bankmaster"] = "";
        Session["bankdetail"] = "";
        Session["commdetail"] = "";
        Session["statussave"] = "";
        Session["contactdetail"] = "";
        Session["paymodeagency"] = "";

        message = "Data Saved Successfully";
        AspNetMessageBox(message);

        drpagetyp.SelectedValue = "0";
        drpagescat.SelectedValue = "0";
        drpagecate.SelectedValue = "0";
        drpregion.SelectedValue = "0";
        txtagencode.Text = "";
        drpcity.SelectedValue = "0";
        biltodrp.SelectedValue = "0";

        txtstacno.Text = "";
        txtagenname.Text = "";
        txtalias.Text = "";
        txtadd.Text = "";
        txtstreet.Text = "";
        txtmail.Text = "";
        txtpincode.Text = "";
        txtdistrict.Text = "";
        txtstate.Text = "";
        txtcountry.SelectedValue = "0";
        txtphone1.Text = "";

        txtphone2.Text = "";
        txtfax.Text = "";
        txtfax1.Text = "";
        txtmryrefno.Text = "";
        txtnoofvts.Text = "";
        txtcredit.Text = "";
        txttan.Text = "";
        txtpan.Text = "";
        txtbill.SelectedValue = "0";
        drprepres.SelectedValue = "0";
        txtstatus.Text = "";
        txtstatusdate.Text = "";
        txtstatus2.Text = "";
        txtalert.Text = "";
        txtremarks.Text = "";

        drpzone.SelectedValue = "0";
        drpparent.SelectedValue = "0";
        txturl.Text = "";
        mrvregion.Text = "";
        txtcrlimit.Text = "";
        txtagencyho.Text = "";
        txtsugagencyho.Text = "";
        txtaddress1.Text = "";
        txtaddress2.Text = "";
        txtsagencycode.Text = "";
        txtbusineedate.Text = "";
        txtenrolldate.Text = "";

        btnNew.Enabled = true;
        btnQuery.Enabled = true;
        btnCancel.Enabled = true;
        btnExit.Enabled = true;

        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnExecute.Enabled = false;
        btnfirst.Enabled = false;
        btnnext.Enabled = false;
        btnprevious.Enabled = false;
        btnlast.Enabled = false;*/

    }


    protected void btnNew_Click(object sender, EventArgs e)
    {

    }

    [Ajax.AjaxMethod]

    public void adusersave(string agencycode, string depocode, string genno)
    {
        //DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master adusersave = new NewAdbooking.Classes.Master();

            adusersave.saveaduser(agencycode, depocode, genno);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master adusersave = new NewAdbooking.classesoracle.Master();

            adusersave.saveaduser(agencycode, depocode, genno);
            //return ds;

        }
        else
        {
            NewAdbooking.classmysql.Master adusersave = new NewAdbooking.classmysql.Master();

            adusersave.saveaduser(agencycode, depocode, genno);

        }
    }
    [Ajax.AjaxMethod]
    public DataSet chkAgencyName (string agname,string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master talubibd3 = new NewAdbooking.Classes.Master();

            ds = talubibd3.chkdupagency(agname,compcode);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master talubibd3 = new NewAdbooking.classesoracle.Master();

                ds = talubibd3.chkdupagency(agname, compcode);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.Master talubibd3 = new NewAdbooking.classmysql.Master();
                ds = talubibd3.chkdupagency(agname, compcode);
                return ds;

            }
       
    }
    [Ajax.AjaxMethod]

    public DataSet talubibd3(string talukabind)
    {
        //agenname=drpparent.Text.ToString();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master talubibd3 = new NewAdbooking.Classes.Master();

            ds = talubibd3.bindtalu(talukabind);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master talubibd3 = new NewAdbooking.classesoracle.Master();

                ds = talubibd3.bindtalu(talukabind);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.Master talubibd3 = new NewAdbooking.classmysql.Master();
                ds = talubibd3.bindtalu(talukabind);
                return ds;
            }
        




    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public void blankSession()
    {
        Session["paymodeagency"]=null;
        Session["MySelectedValue"]=null;
        Session["commdetail"]=null;
        Session["statussave"]=null;
        Session["bankdetail"]=null;
        Session["contactdetail"]=null;
        Session["bankmaster"] = null;
    }

    [Ajax.AjaxMethod]
    public DataSet chkDupUser(string agcode, string compcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master ms = new NewAdbooking.Classes.Master();

            ds = ms.chkdupagencycode(agcode, compcode);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master ms = new NewAdbooking.classesoracle.Master();

                ds = ms.chkdupagencycode(agcode, compcode);
                return ds;
            }
            else
            {
                NewAdbooking.classmysql.Master ms = new NewAdbooking.classmysql.Master();
                ds = ms.chkdupagencycode(agcode, compcode);
                return ds;
            }
       
    }

    //-----------------check commission detail popup in modify mode--------------------------//
    [Ajax.AjaxMethod]
    public DataSet checkcommpaydetail(string agencode, string compcode, string userid, string subagencode)
    {
        DataSet db = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
          //  NewAdbooking.Classes.pop checkpay = new NewAdbooking.Classes.pop();

          //  db = checkpay.commpaycheck(agencode, compcode, userid, subagencode);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
           // NewAdbooking.classesoracle.pop checkpay = new NewAdbooking.classesoracle.pop();
          // db = checkpay.commpaycheck(agencode, compcode, userid, subagencode);
        }
        else
        {
           // NewAdbooking.classmysql.pop checkpay = new NewAdbooking.classmysql.pop();
         //   db = checkpay.commcheck(agencode, compcode, userid, subagencode);
        }
        return db;
    }
    //---------------------------------------------------------------------------------------//

    public string getDate(string dateformat, string dateValue)
    {
        //splitting of date
        string dateReturn = "";
        if (dateValue != "")
        {
            char[] splitterfrom = { '/' };
            string[] myarrayfrom = dateValue.Split(splitterfrom);
            string dd, mm, yyyy;
            if (dateformat == "dd/mm/yyyy")
            {
                //for from date
                dd = myarrayfrom[0];
                mm = myarrayfrom[1];
                yyyy = myarrayfrom[2];

                dateReturn = mm + "/" + dd + "/" + yyyy;


            }
            //else if (dateformat == "yyyy/mm/dd")
            //{
            //    yyyy = myarrayfrom[0];
            //    mm = myarrayfrom[1];
            //    dd = myarrayfrom[2];

            //    dateReturn = mm + "/" + dd + "/" + yyyy;
            //}
            else
            {
                dateReturn = dateValue;
            }
        }
        return dateReturn;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public string addclientname(string page, string datetime, string value)
    {
        DataSet dag = new DataSet();
        string nameadd = "";
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master getagenameaddress = new NewAdbooking.Classes.Master();

            dag = getagenameaddress.getClientNameadd(page, Session["compcode"].ToString(), value, "");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master getagenameaddress = new NewAdbooking.classesoracle.Master();

            dag = getagenameaddress.getClientNameadd(page, Session["compcode"].ToString(), value, "");
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "bindagencyforagency";
            string[] parameterValueArray = { Session["compcode"].ToString(),page,value,"" };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            dag = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //else
        //{
        //    NewAdbooking.classmysql.BookingMaster getagenameaddress = new NewAdbooking.classmysql.BookingMaster();

        //    dag = getagenameaddress.getClientNameadd(page, Session["compcode"].ToString(), value, date, Session["dateformat"].ToString());

        //}

        if (dag.Tables[0].Rows.Count > 0)
        {
            string clientname = dag.Tables[0].Rows[0].ItemArray[1].ToString();
            string code = dag.Tables[0].Rows[0].ItemArray[0].ToString();
            string address = dag.Tables[0].Rows[0].ItemArray[2].ToString();
            //if (drpparent.SelectedValue== "E")
            //{
                string subcode = dag.Tables[0].Rows[0].ItemArray[3].ToString();
            //}
            if (address == "null")
                address = "";
            //string agentypename = dag.Tables[1].Rows[0].ItemArray[0].ToString();
            //string agenstatus = dag.Tables[2].Rows[0].ItemArray[0].ToString();
            //string credit = dag.Tables[3].Rows[0].ItemArray[0].ToString();
            //string rategroup = dag.Tables[4].Rows[0].ItemArray[0].ToString();
            //string comm = dag.Tables[5].Rows[0].ItemArray[0].ToString();
            //string pay = dag.Tables[6].Rows[0].ItemArray[0].ToString();

            nameadd = clientname + "(" + code + ")" + "+" +"(" + subcode + ")"+ "+" + address ;
            //Response.Write(nameadd);
            //Response.End();


        }
        return nameadd;



    }

    [Ajax.AjaxMethod]
    public DataSet btnagencyname_Click(string compcode, string agencyname, string userid,string datefomat1)
    {

        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master databind = new NewAdbooking.Classes.Master();
            da = databind.agencybind(compcode, agencyname, userid, datefomat1);
            return da;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master databind = new NewAdbooking.classesoracle.Master();
            da = databind.agencybind(compcode, agencyname, userid, datefomat1);
            return da;
        }
         else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
       {
           string procedureName = "AD_AGENCY_BIND_P";
           string[] parameterValueArray = { compcode, agencyname, userid, datefomat1 };
           NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
           da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
       }


        //Divgrid1.Attributes.Add("style", "display:block;");
        return da;
    }


    [Ajax.AjaxMethod]
    public DataSet Checkduplicay1(string compcode, string branchcode, string Agencyname, string panno)
    {

        DataSet da = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master databind = new NewAdbooking.Classes.Master();
            da = databind.Checkduplicay2(compcode, branchcode, Agencyname, panno);
            return da;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master databind = new NewAdbooking.classesoracle.Master();
            da = databind.Checkduplicay2(compcode, branchcode, Agencyname, panno);
            return da;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "chkpanclientagency";
            string[] parameterValueArray = { compcode, branchcode, Agencyname, panno };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            da = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        //Divgrid1.Attributes.Add("style", "display:block;");
        return da;
    }


    [Ajax.AjaxMethod]
    public DataSet addagencycategorybind(string agtypcod)
    {
        DataSet ds = new DataSet();
       
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master agencycategory = new NewAdbooking.Classes.Master();
            ds = agencycategory.addcategorybind(agtypcod);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Master agencycategory = new NewAdbooking.classesoracle.Master();
                ds = agencycategory.bindagencat(agtypcod);

            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "bindagencytype_bindagencytype_p";
                string[] parameterValueArray = { agtypcod };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
           
        return ds;
       
    }



    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindagencynamefromadd(string compcode, string userid, string agency, string agencyaddress)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster bindagenname = new NewAdbooking.Classes.BookingMaster();
            ds = bindagenname.bindagencyfromadd(compcode, userid, agency, Session["revenue"].ToString(), agencyaddress);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.BookingMaster bindagenname = new NewAdbooking.classesoracle.BookingMaster();
            ds = bindagenname.bindagencyfromadd(compcode, userid, agency, Session["revenue"].ToString(), agencyaddress);

        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "bindnew_agencyfromadd";
            string[] parameterValueArray = { compcode, userid, agency, Session["revenue"].ToString(), agencyaddress };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            //NewAdbooking.classmysql.BookingMaster bindagenname = new NewAdbooking.classmysql.BookingMaster();
            ////ds = bindagenname.bindagencyfromadd(compcode, userid, agency, Session["revenue"].ToString(), agencyaddress);
            //ds = bindagenname.bindagencyfromadd(compcode, userid, agency, agencyaddress);

        }
        return ds;



    }



    public void Bindretainer()
    {

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "BINDRETAINER";
            string[] parameterValueArray = { hiddencompcode.Value };
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                string procedureName = "BINDRETAINER";
                string[] parameterValueArray = { hiddencompcode.Value };
                NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "BINDRETAINER";
                string[] parameterValueArray = { hiddencompcode.Value };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Retainer Name-";
        li1.Value = "0";
        li1.Selected = true;
        liretainer.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            liretainer.Items.Add(li);


        }

    }


    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.ReadWrite)]
    public void setSessionre(string agentcategory, string agentcategory2, string agencytype, string agentcode, string agentname, string alias, string agencyho, string address, string street, string city, string district, string state, string country, string phone, string fax, string mail, string url, string bussinessstartdate, string enrolldate, string mrerefferenceno, string novts, string credit, string pan, string tan, string stacno, string status, string remarks, string subagencyho, string agencycode, string billto, string alert, string creditlimit, string code, string representative, string pin, string region, string type, string zone, string address1, string address2, string curtype, string acagen, string fax2, string rategrp, string paymode, string qbcuserid, string taluka, string mrvregion, string branchcode, string hdstatecode, string hddistcode, string billfreq, string oldagen, string booktype, string vat, string raterevise, string editionwisebilling, string Libexecutive, string email, string age_desig, string mrv, string creditdays, string creditlimitdays, string recoverylimit, string mailidcc, string kyc_attach, string intrestcalculation, string bilflag, string subsubcd, string sapcode, string security, string gstus, string gstdt, string gstin, string Retain, string blankcheque, string Securitybond, string kycapp, string addproof,string gstatus,string gstcltyp,string gsrarno,string gstprovid)
    {
        Session["agentcategory1"] = agentcategory;
        Session["agentcategory2"] = agentcategory2;
        Session["agencytype"] = agencytype;
        Session["agentcode"] = agentcode;
        Session["agentname"] = agentname;
        Session["alias"] = alias;
        Session["agencyho"] = agencyho;
        Session["address"] = address;
        Session["street"] = street;
        Session["city"] = city;
        Session["district"] = district;
        Session["state"] = state;
        Session["country"] = country;
        Session["phone"] = phone;
        Session["fax"] = fax;
        Session["mail"] = mail;
        Session["url"] = url;
        Session["bussinessstartdate"] = bussinessstartdate;
        Session["enrolldate"] = enrolldate;
        Session["mrerefferenceno"] = mrerefferenceno;
        Session["novts"] = novts;
        Session["credit"] = credit;
        Session["pan"] = pan;
        Session["tan"] = tan;
        Session["stacno"] = stacno;
        Session["status"] = status;
        Session["remarks"] = remarks;
        Session["subagencyho"] = subagencyho;
        Session["agencycode"] = agencycode;
        Session["billto"] = billto;
        Session["alert"] = alert;
        Session["creditlimit"] = creditlimit;
        Session["code"] = code;
        Session["representative"] = representative;
        Session["pin"] = pin;
        Session["region"] = region;
        Session["type"] = type;
        Session["zone"] = zone;
        Session["address1"] = address1;
        Session["address2"] = address2;
        Session["curtype"] = curtype;
        Session["acagen"] = acagen;
        Session["fax2"] = fax2;
        Session["rategrp"] = rategrp;
        Session["paymode"] = paymode;
        Session["userid12"] = qbcuserid;
        Session["taluka"] = taluka;
        Session["mrvregion"] = mrvregion;
        Session["branchcode"] = branchcode;
        Session["hdstatecode"] = hdstatecode;
        Session["hddistcode"] = hddistcode;
        Session["billfreq"] = billfreq;
        Session["oldagen"] = oldagen;
        Session["booktype"] = booktype;
        Session["vat"] = vat;
        Session["raterevise"] = raterevise;
        Session["editionwisebilling"] = editionwisebilling;
        Session["Libexecutive"] = Libexecutive;
        Session["email"] = email;
        Session["age_desig"] = age_desig;
        Session["mrv"] = mrv;
        Session["creditdays"] = creditdays;
        Session["creditlimitdays"] = creditlimitdays;
        Session["recoverylimit"] = recoverylimit;
        Session["mailidcc"] = mailidcc;
        Session["kyc_attach"] = kyc_attach;
        Session["intrestcalculation"] = intrestcalculation;
        Session["bilflag"] = bilflag;
        Session["subsubcd"] = subsubcd;
        Session["sapcode"] = sapcode;
        Session["security"] = security;
        Session["gstus"] = gstus;
        Session["gstdt"] = gstdt;
        Session["gstin"] = gstin;
        Session["Retain"] = Retain;
        Session["blankcheque"] = blankcheque;
        Session["Securitybond"] = Securitybond;
        Session["kycapp"] = kycapp;
        Session["addproof"] = addproof;
        Session["gstatus"] = gstatus;
        Session["gstcltyp"] = gstcltyp;
        Session["gstarno"] = gsrarno;
        Session["gstprovid"]=gstprovid;

    }

    [Ajax.AjaxMethod]
    public DataSet fill_gst(string compcode, string  chargetypecode)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compcode, chargetypecode };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            string procedureName = "BindGstClientType";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "BindGstClientType";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "BindGstClientType";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet chkgstno(string comp_code, string unit_code, string gstin, string state_code, string pan_no, string type, string extra1, string extra2, string extra3, string extra4, string extra5)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { comp_code, unit_code, gstin, state_code, pan_no, type, extra1, extra2, extra3, extra4, extra5 };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "gstinvalidate";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "gstinvalidate";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            /*string procedureName = "gstinvalidate";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);*/
            NewAdbooking.classmysql.Master ms = new NewAdbooking.classmysql.Master();
            ds = ms.chkgstno(comp_code, unit_code, gstin, state_code, pan_no, type, extra1, extra2, extra3, extra4, extra5);
        }
        return ds;
    }




}


