using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class AdvPagePositionMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {


        //Response.Expires = -1;

        //if (Session["compcode"] == null)
        //{
        //    //Response.Redirect("login.aspx");
        //    Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
        //    return;
        //}
        Response.Expires = -1;
        if (Session["compcode"] != null)
        {
           // userid.Value = Session["userid"].ToString();
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
        }

        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;

        }
        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddendateformat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();


        Ajax.Utility.RegisterTypeForAjax(typeof(AdvPagePositionMaster));


        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
       // multi.Enabled = false;
        premcode.Enabled = false;
        dradvtyp.Enabled = false;
        drpadvcat.Enabled = false;
        drpublication.Enabled = false;
        drpedition.Enabled = false;
        drpsupplement.Enabled = false;
        dcolor.Enabled = false;
        drpadvsizedesc.Enabled = false;
        txtpage.Enabled = false;
        drprategrp.Enabled = false;
        drpspecialposition.Enabled = false;
        drpremium.Enabled = false;
        txtpremium.Enabled = false;
        txtvalid.Enabled = false;
        txtvalidtill.Enabled = false;
        txtpremname.Enabled = false;
        txtpageheading.Enabled = false;
       // rd1.Enabled = false;
       // rd2.Enabled = false;

        /*CheckBox1.Enabled = false;
        CheckBox2.Enabled = false;
        CheckBox3.Enabled = false;
        CheckBox4.Enabled = false;
        CheckBox5.Enabled = false;
        CheckBox6.Enabled = false;
        CheckBox7.Enabled = false;
        CheckBox8.Enabled = false;*/
				

        //****work done by shweta***********************************************************
        //******************************XML FOR BUTTON**************************************
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));

        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        //******************************XML for labels****************************************
        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/AdvPagePositionMaster.xml"));
        PremiumCode.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString() ;
        AdvType.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString() ;
        AdvCategory.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString() ;
        publication.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
        edition.Text = ds1.Tables[0].Rows[0].ItemArray[4].ToString();
        Color.Text = ds1.Tables[0].Rows[0].ItemArray[5].ToString() ;
        AdvSizeDescription.Text = ds1.Tables[0].Rows[0].ItemArray[6].ToString() ;
        PageNo.Text = ds1.Tables[0].Rows[0].ItemArray[7].ToString() ;
        RateGroup.Text = ds1.Tables[0].Rows[0].ItemArray[8].ToString() ;
        SpecialPosition.Text = ds1.Tables[0].Rows[0].ItemArray[9].ToString() ;
        premium.Text = ds1.Tables[0].Rows[0].ItemArray[10].ToString() ;
        ValidFrom.Text = ds1.Tables[0].Rows[0].ItemArray[11].ToString() ;
        ValidTill.Text = ds1.Tables[0].Rows[0].ItemArray[12].ToString();
        premname.Text = ds1.Tables[0].Rows[0].ItemArray[13].ToString();
        supplement.Text = ds1.Tables[0].Rows[0].ItemArray[14].ToString();
        premiumday.Text = ds1.Tables[0].Rows[0].ItemArray[15].ToString();
        SUN.Text = ds1.Tables[0].Rows[0].ItemArray[16].ToString();
        MON.Text = ds1.Tables[0].Rows[0].ItemArray[17].ToString();
        TUE.Text = ds1.Tables[0].Rows[0].ItemArray[18].ToString();
        WED.Text = ds1.Tables[0].Rows[0].ItemArray[19].ToString();
        THU.Text = ds1.Tables[0].Rows[0].ItemArray[20].ToString();
        FRI.Text = ds1.Tables[0].Rows[0].ItemArray[21].ToString();
        SAT.Text = ds1.Tables[0].Rows[0].ItemArray[22].ToString();
        ALL.Text = ds1.Tables[0].Rows[0].ItemArray[23].ToString();
        lbpageheading.Text = ds1.Tables[0].Rows[0].ItemArray[24].ToString();
        if (ds1.Tables.Count > 1)
        {
            if (ds1.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
            {
                AdvType.Attributes.Add("style", "display:none");
                dradvtyp.Attributes.Add("style", "display:none");
            }
            if (ds1.Tables[1].Rows[0].ItemArray[1].ToString() == "hide")
            {
                AdvCategory.Attributes.Add("style", "display:none");
                drpadvcat.Attributes.Add("style", "display:none");
            }
            if (ds1.Tables[1].Rows[0].ItemArray[2].ToString() == "hide")
            {
                Color.Attributes.Add("style", "display:none");
                dcolor.Attributes.Add("style", "display:none");
            }
            if (ds1.Tables[1].Rows[0].ItemArray[3].ToString() == "hide")
            {
                supplement.Attributes.Add("style", "display:none");
                drpsupplement.Attributes.Add("style", "display:none");
            }
            if (ds1.Tables[1].Rows[0].ItemArray[4].ToString() == "hide")
            {
                RateGroup.Attributes.Add("style", "display:none");
                drprategrp.Attributes.Add("style", "display:none");
            }
            if (ds1.Tables[1].Rows[0].ItemArray[5].ToString() == "hide")
            {
                AdvSizeDescription.Attributes.Add("style", "display:none");
                drpadvsizedesc.Attributes.Add("style", "display:none");
            }
            if (ds1.Tables[1].Rows[0].ItemArray[6].ToString() == "hide")
            {
                SpecialPosition.Attributes.Add("style", "display:none");
                drpspecialposition.Attributes.Add("style", "display:none");
                rd1.Attributes.Add("style", "display:none");

                rd2.Attributes.Add("style", "display:none");
                
            }
            if (ds1.Tables[1].Rows[0].ItemArray[7].ToString() == "hide")
            {
                tddays.Attributes.Add("style", "display:none");
                //SUN.Attributes.Add("style", "display:none");
                //CheckBox1.Attributes.Add("style", "display:none");
            }
        }

        hiddenprem.Value = Session["premtype"].ToString();
     
        if (!Page.IsPostBack)
        {
            addadvtype();
            //addadvcat();
            addpublication();
            addadvsizedesc();
            addcolor();
            addrategrp();
            addspecialposition();
            bindrem();

            //agencycategoryname();
            //txtasccode.Attributes.Add("OnChange", "javascript:return uppercase1();");
            //txtascname.Attributes.Add("OnChange", "javascript:return uppercase2();");
            //txtalias.Attributes.Add("OnChange", "javascript:return uppercase3();");
            txtvalid.Attributes.Add("OnBlur", "javascript:return checkdate(this);");
            txtvalidtill.Attributes.Add("OnBlur", "javascript:return checkdate(this);");
          //  txtpremname.Attributes.Add("OnChange", "javascript:return advautogenerate();");
            txtpremname.Attributes.Add("OnChange", "javascript:return advautogenerate();");
            drpremium.Attributes.Add("OnChange", "javascript:return clerprem();");
            CheckBox8.Attributes.Add("OnClick", "javascript:return checkedunchecked('CheckBox8');");
           // multi.Attributes.Add("OnClick", "javascript:return multiple()");

            drpublication.Attributes.Add("Onblur", "javascript:return addedition();");
            drpedition.Attributes.Add("OnChange", "javascript:return addsupplement();");
            drpsupplement.Attributes.Add("OnChange", "javascript:return selectpubdayedit();");

            //txtpremium.Attributes.Add("onkeypress", "javascript:return checkpr();");
            txtpremium.Attributes.Add("onchange", "javascript:return allamountbullet(txtpremium);");
           
         /**************Som******************/
            dradvtyp.Attributes.Add("OnChange", "javascript:return category()");
         /***************************************/  
            rd1.Attributes.Add("OnClick", "javascript:return chkradio();");
            rd2.Attributes.Add("OnClick", "javascript:return chkradio();");

            txtpage.Attributes.Add("onchange", "javascript:return bla();");

           
            
            

            btnNew.Attributes.Add("OnClick", "javascript:return advpageNewclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return advpageSaveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return advpageModifyclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return advpageDeleteclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return advpageQueryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return advpageExecuteclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return advpageCancelclick('AdvPagePositionMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return advpagefirstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return advpagepreviousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return advpagenextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return advpagelastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return advpageExitclick();");

            CheckBox1.Attributes.Add("OnClick","javascript:return fillcheckbox2();");
            CheckBox2.Attributes.Add("OnClick", "javascript:return fillcheckbox2();");
            CheckBox3.Attributes.Add("OnClick", "javascript:return fillcheckbox2();");
            CheckBox4.Attributes.Add("OnClick", "javascript:return fillcheckbox2();");
            CheckBox5.Attributes.Add("OnClick", "javascript:return fillcheckbox2();");
            CheckBox6.Attributes.Add("OnClick", "javascript:return fillcheckbox2();");
            CheckBox7.Attributes.Add("OnClick", "javascript:return fillcheckbox2();");

           // txtpremium.Attributes.Add("OnChange", "Javascript:return Checkpercent();");

         }
         if (btnNew.Enabled == false)
             btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
         if (btnSave.Enabled == false)
             btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
         if (btnModify.Enabled == false)
             btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
         if (btnQuery.Enabled == false)
             btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
         if (btnExecute.Enabled == false)
             btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
         if (btnCancel.Enabled == false)
             btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
         if (btnfirst.Enabled == false)
             btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
         if (btnprevious.Enabled == false)
             btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
         if (btnnext.Enabled == false)
             btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
         if (btnlast.Enabled == false)
             btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
         if (btnDelete.Enabled == false)
             btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
         if (btnExit.Enabled == false)
             btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        // Put user code to initialize the page here
    }
    public void bindrem()
    {
        DataSet prem = new DataSet();
        prem.ReadXml(Server.MapPath("XML/advpage.xml"));
        txtpageheading.Items.Clear();
        int i;
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Heading-";
        li1.Value = "0";
        li1.Selected = true;
        txtpageheading.Items.Add(li1);

        for (i = 0; i < prem.Tables[0].Columns.Count - 1; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = prem.Tables[0].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li.Value = prem.Tables[0].Rows[0].ItemArray[i].ToString();
            txtpageheading.Items.Add(li);

        }

    }
    public void addadvtype()
    {
        DataSet ds = new DataSet();
        if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.AdvPagePositionMaster name = new NewAdbooking.Classes.AdvPagePositionMaster();
        
        ds = name.addadvtype();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster name = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = name.addadvtype();
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster name = new NewAdbooking.classmysql.AdvPagePositionMaster();
            ds = name.addadvtype();
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "---Select Ad Type---";
        li1.Value = "0";
        li1.Selected = true;
        dradvtyp.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            dradvtyp.Items.Add(li);
        }
    }

    [Ajax.AjaxMethod]
    public DataSet addadvcat(string adtypcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster name = new NewAdbooking.Classes.AdvPagePositionMaster();

            ds = name.addadvcat(adtypcode);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster name = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = name.addadvcat1(adtypcode);
           
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster name = new NewAdbooking.classmysql.AdvPagePositionMaster();
            ds = name.addadvcat(adtypcode);
            return ds;
        }

        //ListItem li1;
        //li1 = new ListItem();
        //li1.Text = "-Select Ad Category-";
        //li1.Value = "0";
        //li1.Selected = true;
        //drpadvcat.Items.Add(li1);

        //int i;
        //for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        //{
        //    ListItem li;
        //    li = new ListItem();
        //    li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
        //    li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
        //    drpadvcat.Items.Add(li);
        //}
        return ds;
    }
    /*
    public void addpublication()
    {
        NewAdbooking.Classes.AdvPagePositionMaster name = new NewAdbooking.Classes.AdvPagePositionMaster();
        DataSet ds = new DataSet();
        ds = name.addpublication();

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Combination-";
        li1.Value = "0";
        li1.Selected = true;
        drppublication.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drppublication.Items.Add(li);
        }
    }*/

    public void addpublication()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster name = new NewAdbooking.Classes.AdvPagePositionMaster();
           
            ds = name.addpublication();
          
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster name = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = name.addpublication();
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster name = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = name.addpublication();

        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Publication-";
        li1.Value = "0";
        li1.Selected = true;
        drpublication.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpublication.Items.Add(li);
        }
    }

    public void addadvsizedesc()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster name = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = name.addadvsizedesc();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster name = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = name.addadvsizedesc();
        }
        else
        {

            NewAdbooking.classmysql.AdvPagePositionMaster name = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = name.addadvsizedesc();
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Ad Size Description-";
        li1.Value = "0";
        li1.Selected = true;
        drpadvsizedesc.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpadvsizedesc.Items.Add(li);
        }
    }

    public void addcolor()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster name = new NewAdbooking.Classes.AdvPagePositionMaster();
          
            ds = name.addcolor();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster name = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = name.addcolor();
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster name = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = name.addcolor();
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Color-";
        li1.Value = "0";
        li1.Selected = true;
        dcolor.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            dcolor.Items.Add(li);
        }
    }

    public void addrategrp()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster name = new NewAdbooking.Classes.AdvPagePositionMaster();
          
            ds = name.addrategrp();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster name = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = name.addrategrp();
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster name = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = name.addrategrp();

        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Rate Group-";
        li1.Value = "0";
        li1.Selected = true;
        drprategrp.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drprategrp.Items.Add(li);
        }
    }

    public void addspecialposition()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster name = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = name.addspecialposition();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster name = new NewAdbooking.classesoracle.AdvPagePositionMaster();
             ds = name.addspecialposition();
        
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster name = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = name.addspecialposition();
        }

        ListItem li1;
        li1 = new ListItem();
        li1.Text = "-Select Position-";
        li1.Value = "0";
        li1.Selected = true;
        drpspecialposition.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpspecialposition.Items.Add(li);
        }
    }


    [Ajax.AjaxMethod]
      public DataSet addeditionquery(string publication)
      {
          DataSet ds = new DataSet();
          if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
          {

              NewAdbooking.Classes.AdvPagePositionMaster adv1 = new NewAdbooking.Classes.AdvPagePositionMaster();
              
              ds = adv1.addeditquery(publication);
              return ds;
          }
          else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
          {
              NewAdbooking.classesoracle.AdvPagePositionMaster adv1 = new NewAdbooking.classesoracle.AdvPagePositionMaster();
              ds = adv1.addeditquery(publication);
              return ds;
          }
          else
          {
              NewAdbooking.classmysql.AdvPagePositionMaster adv1 = new NewAdbooking.classmysql.AdvPagePositionMaster();

              ds = adv1.addeditquery(publication);
              return ds;
          }
      }


    [Ajax.AjaxMethod]
    public DataSet addsupplementquery(string edition,string publication)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster adv1 = new NewAdbooking.Classes.AdvPagePositionMaster();
           
            ds = adv1.addsuppquery(edition, publication);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster adv1 = new NewAdbooking.classesoracle.AdvPagePositionMaster();

            ds = adv1.addsuppquery(edition, publication);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster adv1 = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = adv1.addsuppquery(edition, publication);
            return ds;

        }








    }
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Save the data through the Ajax^^^^^^//
    //*******************************************************************************************//
    [Ajax.AjaxMethod]
    //		public DataSet ascmsave(string companycode,string agency,string category,string code,string name,string alias,string UserId)
    public DataSet advpagesave(string companycode, string premiumcode,string premiumname,string advtype, string advcategory, string publication, string edition,string supplement, string color, string advsizedesc, string pageno, string rategrp, string position, string premium, string txtpremium, string validtill, string validfrm, string UserId,string solus, string pageheading)


    {   

         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {

             NewAdbooking.Classes.AdvPagePositionMaster save1 = new NewAdbooking.Classes.AdvPagePositionMaster();
             ds = save1.advpagesave1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, color, advsizedesc, pageno, rategrp, position, premium, txtpremium, validtill, validfrm, UserId, solus, pageheading);
             return ds;
         }
         else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             NewAdbooking.classesoracle.AdvPagePositionMaster save1 = new NewAdbooking.classesoracle.AdvPagePositionMaster();
             ds = save1.advpagesave1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, color, advsizedesc, pageno, rategrp, position, premium, txtpremium, validtill, validfrm, UserId, solus, pageheading);
             return ds;
         }
         else
         {
             NewAdbooking.classmysql.AdvPagePositionMaster save1 = new NewAdbooking.classmysql.AdvPagePositionMaster();
             ds = save1.advpagesave1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, color, advsizedesc, pageno, rategrp, position, premium, txtpremium, validtill, validfrm, UserId, solus, pageheading);
             return ds;
         }
    }
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Update the data through the Ajax^^^^^//
    //*******************************************************************************************//
    [Ajax.AjaxMethod]
    //		public DataSet ascmsave(string companycode,string agency,string category,string code,string name,string alias,string UserId)
    public DataSet  advpagemodify(string companycode, string premiumcode,string premiumname, string advtype, string advcategory, string publication, string edition,string supplement, string color, string advsizedesc, string pageno, string rategrp, string position, string premium,string txtpremium, string validtill, string validfrm, string UserId,string solus, string pageheadinging)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster save1 = new NewAdbooking.Classes.AdvPagePositionMaster();

            ds = save1.advpagemodify1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, color, advsizedesc, pageno, rategrp, position, premium, txtpremium, validtill, validfrm, UserId, solus, pageheadinging);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster save1 = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = save1.advpagemodify1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, color, advsizedesc, pageno, rategrp, position, premium, txtpremium, validtill, validfrm, UserId, solus, pageheadinging);
            return ds;
        }

        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster save1 = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = save1.advpagemodify1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, color, advsizedesc, pageno, rategrp, position, premium, txtpremium, validtill, validfrm, UserId, solus, pageheadinging);
            return ds;
        }
    }
    [Ajax.AjaxMethod]
    //		public DataSet chkascmcode(string companycode,string UserId,string code)
    public DataSet chkadvpagecode(string companycode, string UserId, string premiumcode, string adtype, string premiumname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster chkadv = new NewAdbooking.Classes.AdvPagePositionMaster();

            ds = chkadv.chkadvpagecode(companycode, UserId, premiumcode, adtype, premiumname);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster chkadv = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = chkadv.chkadvpagecode(companycode, UserId, premiumcode, adtype, premiumname);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster chkadv = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = chkadv.chkadvpagecode(companycode, UserId, premiumcode, adtype, premiumname);
            return ds;
        }
    }

    //*********************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Execute the data through the Ajax^^^^^//
    //*********************************************************************************************//
    [Ajax.AjaxMethod]
    //AdvPagePositionMaster.advpageexecute(companycode,premiumcode,advtype,advcategory,publication,edition,advsizedesc,UserId,color,pageno,rategrp,position,premium);
    //public DataSet ascmexecute(string companycode,string agency,string category,string code,string name,string alias,string UserId)
    public DataSet advpageexecute(string companycode, string premiumcode,string premiumname, string advtype, string advcategory, string publication, string edition,string supplement, string advsizedesc, string UserId, string color, string pageno, string rategrp, string position, string premium)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster exe = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = exe.advpageexecute1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, advsizedesc, UserId, color, pageno, rategrp, position, premium);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster exe = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = exe.advpageexecute1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, advsizedesc, UserId, color, pageno, rategrp, position, premium);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster exe = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = exe.advpageexecute1(companycode, premiumcode, premiumname, advtype, advcategory, publication, edition, supplement, advsizedesc, UserId, color, pageno, rategrp, position, premium);
            return ds;
        }
    }
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^^^//
            //**************************After Click The First*************************//
    //*******************************************************************************************//
  /*  [Ajax.AjaxMethod]
    //		public DataSet ascmfirst(string companycode,string UserId)
    public DataSet advpagefirst(string companycode, string UserId)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster fst = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = fst.advpagefirst(companycode, UserId);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster fst = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = fst.advpagefirst(companycode, UserId);
            return ds;
        }
    }*/
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^^^//
            //**************************After Click The Privious*************************//
    //*******************************************************************************************//
  /*  [Ajax.AjaxMethod]
    //		public DataSet ascmprevious(string companycode,string UserId)
    public DataSet advpageprevious(string companycode, string UserId)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster pre = new NewAdbooking.Classes.AdvPagePositionMaster();
         
            ds = pre.advpageprevious(companycode, UserId);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster pre = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = pre.advpageprevious(companycode, UserId);
            return ds;
        }
    }*/
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^^^//
            //**************************After Click The Next*************************//
    //*******************************************************************************************//
   /* [Ajax.AjaxMethod]
    //		public DataSet ascmnext(string companycode,string UserId)
    public DataSet advpagenext(string companycode, string UserId)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster next1 = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = next1.advpagenext(companycode, UserId);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster next1 = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = next1.advpagenext(companycode, UserId);
            return ds;
        }
    }*/

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^^^//
               //**************************After Click The Last*************************//
    //*******************************************************************************************//
   /* [Ajax.AjaxMethod]
    //		public DataSet ascmlast(string companycode,string UserId)
    public DataSet advpagelast(string companycode, string UserId)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster last = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = last.advpagelast(companycode, UserId);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster last = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = last.advpagelast(companycode, UserId);
            return ds;
        }
    }
    */

    [Ajax.AjaxMethod]
    //	public DataSet selectpubdaysave1(string hiddencompcode,string txtpubcode,string CheckBox1,string CheckBox2,string CheckBox3,string CheckBox4,string CheckBox5,string CheckBox6,string CheckBox7,string CheckBox8,string userid1)
    public DataSet selectpremiumdaysave1(string hiddencompcode, string premcode, string CheckBox1, string CheckBox2, string CheckBox3, string CheckBox4, string CheckBox5, string CheckBox6, string CheckBox7, string CheckBox8, string userid1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster pmst = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = pmst.selectpremiumdaysave(hiddencompcode, premcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster pmst = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = pmst.selectpremiumdaysave(hiddencompcode, premcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster pmst = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = pmst.selectpremiumdaysave(hiddencompcode, premcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
    //	public DataSet checkpubcode1(string hiddencompcode,string txtpubcode,string userid1)
    public DataSet checkeditcode(string hiddencompcode, string editcode, string userid1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster pmst = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = pmst.checkeditcode(hiddencompcode, editcode, userid1);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster pmst = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = pmst.checkeditcode(hiddencompcode, editcode, userid1);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster pmst = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = pmst.checkeditcode(hiddencompcode, editcode, userid1);
            return ds;

        }
    }
  
          [Ajax.AjaxMethod]
    //	public DataSet checkpubcode1(string hiddencompcode,string txtpubcode,string userid1)
    public DataSet checkpremiumcode(string hiddencompcode, string premcode, string userid1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster pmst = new NewAdbooking.Classes.AdvPagePositionMaster();
            ds = pmst.checkpremcode(hiddencompcode, premcode, userid1);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster pmst = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = pmst.checkpremcode(hiddencompcode, premcode, userid1);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster pmst = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = pmst.checkpremcode(hiddencompcode, premcode, userid1);
            return ds;

        }

    }
    [Ajax.AjaxMethod]
    //	public DataSet checkpubcode1(string hiddencompcode,string txtpubcode,string userid1)
    public DataSet checksuppcode(string hiddencompcode, string suppcode, string userid1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster pmst = new NewAdbooking.Classes.AdvPagePositionMaster();
            
            ds = pmst.checksuppcode(hiddencompcode, suppcode, userid1);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster pmst = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = pmst.checksuppcode(hiddencompcode, suppcode, userid1);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster pmst = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = pmst.checksuppcode(hiddencompcode, suppcode, userid1);
            return ds;
        }

    }  

    [Ajax.AjaxMethod]
    //	public DataSet selectpubdaymodify1(string hiddencompcode,string txtpubcode,string CheckBox1,string CheckBox2,string CheckBox3,string CheckBox4,string CheckBox5,string CheckBox6,string CheckBox7,string CheckBox8,string userid1)
    public DataSet selectpremiumdaymodify1(string hiddencompcode, string premcode, string CheckBox1, string CheckBox2, string CheckBox3, string CheckBox4, string CheckBox5, string CheckBox6, string CheckBox7, string CheckBox8, string userid1)
    {   DataSet ds = new DataSet();
    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    {

        NewAdbooking.Classes.AdvPagePositionMaster pmst = new NewAdbooking.Classes.AdvPagePositionMaster();

        ds = pmst.selectpremiumdaymodify(hiddencompcode, premcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
        return ds;
    }
    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    {
        NewAdbooking.classesoracle.AdvPagePositionMaster pmst = new NewAdbooking.classesoracle.AdvPagePositionMaster();
        ds = pmst.selectpremiumdaymodify(hiddencompcode, premcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
        return ds;
    }
    else
    {
        NewAdbooking.classmysql.AdvPagePositionMaster pmst = new NewAdbooking.classmysql.AdvPagePositionMaster();

        ds = pmst.selectpremiumdaymodify(hiddencompcode, premcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
        return ds;

    }
    }


    //*********************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Auto Generate Code through the Ajax^^^^^//
    //*********************************************************************************************//
   [Ajax.AjaxMethod]
    public DataSet chkadvpageautocode(string strpremname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdvPagePositionMaster chk = new NewAdbooking.Classes.AdvPagePositionMaster();
         
            ds = chk.autopagecode(strpremname);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster chk = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = chk.autopagecode(strpremname);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster chk = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = chk.autopagecode(strpremname);
            return ds;
        }

    }
    //*********************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Delete the data through the Ajax^^^^^//
    //*********************************************************************************************//

    [Ajax.AjaxMethod]
    public void advpagedelete(string companycode, string premiumcode, string UserId)
    // string advtype, string advcategory, string publication, string pkgname, string color, string advsizedesc, string pageno, string rategrp, string position, string premium, string txtpremium, )
    {   
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.AdvPagePositionMaster del = new NewAdbooking.Classes.AdvPagePositionMaster();

            ds = del.advpagedelete1(companycode, premiumcode, UserId);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdvPagePositionMaster del = new NewAdbooking.classesoracle.AdvPagePositionMaster();
            ds = del.advpagedelete1(companycode, premiumcode, UserId);
        }
        else
        {
            NewAdbooking.classmysql.AdvPagePositionMaster del = new NewAdbooking.classmysql.AdvPagePositionMaster();

            ds = del.advpagedelete1(companycode, premiumcode, UserId);


        }
        // return ds;
    }


    //[Ajax.AjaxMethod]
    //public DataSet advpagedelete(string companycode, string premiumcode,string UserId)
    //    // string advtype, string advcategory, string publication, string edition, string color, string advsizedesc, string pageno, string rategrp, string position, string premium, string txtpremium, )
    //{
    //    NewAdbooking.Classes.AdvPagePositionMaster del = new NewAdbooking.Classes.AdvPagePositionMaster();
    //    DataSet ds = new DataSet();
    //    ds = del.advpagedelete(companycode, premiumcode, UserId);//advtype, advcategory, publication, edition, color, advsizedesc, pageno, rategrp, position, premium, txtpremium, UserId);//, txtfrom, txtto);
    //   // return ds;
    //}


    //[Ajax.AjaxMethod]
    ////companycode,premiumcode,UserId
    //public DataSet selectpremiumdaydelete(string companycode, string premiumcode, string UserId)
    //{
    //    NewAdbooking.Classes.AdvPagePositionMaster pmst = new NewAdbooking.Classes.AdvPagePositionMaster();
    //    DataSet ds = new DataSet();
    //    ds = pmst.selectpremiumdaydelete(companycode, premiumcode, UserId);
    //   return ds;
    //}

    ////[Ajax.AjaxMethod]
    //////		public DataSet ascmexecute(string companycode,string agency,string category,string code,string name,string alias,string UserId)
    ////public DataSet advpagemultidelete(string companycode, string premiumcode, string UserId)
    ////{
    ////    NewAdbooking.Classes.AdvPagePositionMaster del1 = new NewAdbooking.Classes.AdvPagePositionMaster();
    ////    DataSet ds = new DataSet();
    ////    ds = del1.advpagemultidelete(companycode, premiumcode,  UserId);
    ////    return ds;
    ////}

    #region Web Form Designer generated code
    override protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion




   
}
