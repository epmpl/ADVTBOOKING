using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class AdCategoryMaster : System.Web.UI.Page
{
    static int z = 0;
    string message;
  // static  string adcatcode = txtadcate.Text;
    protected void Page_Load(object sender, System.EventArgs e)
    {

       // Response.Expires = -1;

        // Put user code to initialize the page here

        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";

        

        if (Session["compcode"] != null)
        {
            userid1.Value = Session["userid"].ToString();
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
        }

        else
        {
            //Response.Redirect("login.aspx");
            d1.Text = "<script>alert('session Expired');window.close();</script>";
            return;
        
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        Ajax.Utility.RegisterTypeForAjax(typeof(AdCategoryMaster));
        
        hiddenusername.Value = Session["Username"].ToString();
        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenDateFormat.Value = Session["dateformat"].ToString();


        //checkformandatory();


        //***********************************************************************//
        //*****************Code For Read the data from xml File******************//
        //*******************************For The Button**************************//
        //***********************************************************************//
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();

        //********************************For Label****************************************/
        
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/Adcategorymaster.xml"));
        lbadvcatcode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lbadvcatname.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        lbalias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        lbregclient.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lbadcatday.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lbdetails.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        lbadtype.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        Status.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        lbrotime.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        lbhr.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        lbmin.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lbproduction.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();
        lblpreod.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
       // lbfocusday.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        if (ds.Tables.Count > 1)
        {
            if (ds.Tables[1].Rows[0].ItemArray[0].ToString() == "hide")
            {
                lbregclient.Attributes.Add("style", "display:none");
                drpregclient.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[1].ToString() == "hide")
            {
                lbdetails.Attributes.Add("style", "display:none");
               // drpregclient.Attributes.Add("style", "display:none");
            }
            if (ds.Tables[1].Rows[0].ItemArray[2].ToString() == "hide")
            {
                Table5.Attributes.Add("style", "display:none");
                // drpregclient.Attributes.Add("style", "display:none");
            }
        }
        //**************************************************************

        DataSet dz = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Master checkform = new NewAdbooking.Classes.Master();

            dz = checkform.formpermission(hiddencomcode.Value, hiddenuserid.Value, "adsubcat1");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Master checkform = new NewAdbooking.classesoracle.Master();
            dz = checkform.formpermission(hiddencomcode.Value, hiddenuserid.Value, "adsubcat1");
        }
     
        else
        {
            NewAdbooking.classmysql.Master checkform = new NewAdbooking.classmysql.Master();
            dz = checkform.formpermission(hiddencomcode.Value, hiddenuserid.Value, "adsubcat1");
        }
        if (dz.Tables[0].Rows.Count <= 0)
        {
            Response.Write("<script>alert('You Are Not Authorised To See This Form');</script>");
            //Server.Transfer("EnterPage.aspx");
            Response.Write("<script>window.close();</script>");
            return;
        }
            if (dz.Tables[0].Rows[0].ItemArray[0].ToString() == "0" || dz.Tables[0].Rows[0].ItemArray[0].ToString() == "8")
        {
            Response.Write("<script>alert('You Are Not Authorised To See This Form');</script>");
            Response.Write("<script>window.close();</script>");
            //Server.Transfer("EnterPage.aspx");
        }
        else
        {
            string id = dz.Tables[0].Rows[0].ItemArray[0].ToString();
            if (id == "1" || id == "9")
            {

                //btnNew.Enabled = true;
                //btnQuery.Enabled = false;
                //btnDelete.Enabled = false;
                //btnSave.Enabled = false;
                //btnExecute.Enabled = false;
                //btnCancel.Enabled = true;
                //btnModify.Enabled = false;

                //btnfirst.Enabled = false;
                //btnnext.Enabled = false;
                //btnprevious.Enabled = false;
                //btnlast.Enabled = false;
                //btnExit.Enabled = true;

                btnNew.Enabled = true;
                btnQuery.Enabled = false;
       //  hiddenpermission.Value = "1";



            }
            if (id == "2" || id == "10")
            {

                //btnNew.Enabled = false;
                //btnQuery.Enabled = true;
                //btnDelete.Enabled = false;
                //btnSave.Enabled = false;
                //btnExecute.Enabled = false;
                //btnCancel.Enabled = true;
                //btnModify.Enabled = false;

                //btnfirst.Enabled = false;
                //btnnext.Enabled = false;
                //btnprevious.Enabled = false;
                //btnlast.Enabled = false;
                //btnExit.Enabled = true;

                btnNew.Enabled = false;
           // hiddenpermission.Value = "2";



            }
            if (id == "3" || id == "11")
            {

                //btnNew.Enabled = true;
                //btnQuery.Enabled = true;
                //btnDelete.Enabled = false;
                //btnSave.Enabled = false;
                //btnExecute.Enabled = false;
                //btnCancel.Enabled = true;
                //btnModify.Enabled = false;

                //btnfirst.Enabled = false;
                //btnnext.Enabled = false;
                //btnprevious.Enabled = false;
                //btnlast.Enabled = false;
                //btnExit.Enabled = true;

                btnNew.Enabled = true;
             //hiddenpermission.Value = "3";


            }
            if (id == "4" || id == "12")
            {

                //btnNew.Enabled = false;
                //btnQuery.Enabled = true;
                //btnDelete.Enabled = false;
                //btnSave.Enabled = false;
                //btnExecute.Enabled = false;
                //btnCancel.Enabled = true;
                //btnModify.Enabled = false;

                //btnfirst.Enabled = false;
                //btnnext.Enabled = false;
                //btnprevious.Enabled = false;
                //btnlast.Enabled = false;
                //btnExit.Enabled = true;

                btnNew.Enabled = false;
                btnCancel.Enabled = true;
                btnModify.Enabled = false;
           // hiddenpermission.Value = "4";


            }
            if (id == "5" || id == "13")
            {
                //btnNew.Enabled = true;
                //btnQuery.Enabled = true;
                //btnDelete.Enabled = false;
                //btnSave.Enabled = false;
                //btnExecute.Enabled = false;
                //btnCancel.Enabled = true;
                //btnModify.Enabled = false;

                //btnfirst.Enabled = false;
                //btnnext.Enabled = false;
                //btnprevious.Enabled = false;
                //btnlast.Enabled = false;
                //btnExit.Enabled = true;
                btnNew.Enabled = true;
                btnQuery.Enabled = false;

               // hiddenpermission.Value = "5";

            }
            if (id == "6" || id == "14")
            {
                //btnNew.Enabled = false;
                //btnQuery.Enabled = true;
                //btnDelete.Enabled = false;
                //btnSave.Enabled = false;
                //btnExecute.Enabled = false;
                //btnCancel.Enabled = true;
                //btnModify.Enabled = false;

                //btnfirst.Enabled = false;
                //btnnext.Enabled = false;
                //btnprevious.Enabled = false;
                //btnlast.Enabled = false;
                //btnExit.Enabled = true;
                btnNew.Enabled = false;
               //hiddenpermission.Value = "6";


            }
            if (id == "7" || id == "15")
            {
                //btnNew.Enabled = true;
                //btnQuery.Enabled = true;
                //btnDelete.Enabled = false;
                //btnSave.Enabled = false;
                //btnExecute.Enabled = false;
                //btnCancel.Enabled = true;
                //btnModify.Enabled = false;

                //btnfirst.Enabled = false;
                //btnnext.Enabled = false;
                //btnprevious.Enabled = false;
                //btnlast.Enabled = false;
                //btnExit.Enabled = true;

               // hiddenpermission.Value = "7";

            }

        }


        btnNew.Focus();
        //These function call on pageload for the Binding//
       // bindedition();
        pagedef();
        //bindadvtype();
        if (!Page.IsPostBack)
        {
           
            bindadvtype();
            bindregclient();
            //***************************Function Of Button Call from Java Script*************************
            btnNew.Attributes.Add("onClick", "javascript:return newadcat();");
            btnSave.Attributes.Add("onClick", "javascript:return saveadcat();");
            btnModify.Attributes.Add("onClick", "javascript:return modifyadcat();");
            btnQuery.Attributes.Add("onClick", "javascript:return queryadcat();");
            btnExecute.Attributes.Add("onClick", "javascript:return executeadcat();");
            btnCancel.Attributes.Add("onClick", "javascript:return canceladcat('AdCategoryMaster');");
            btnDelete.Attributes.Add("onClick", "javascript:return deleteadcat();");
            btnfirst.Attributes.Add("onClick", "javascript:return firstadcat();");
            btnprevious.Attributes.Add("onClick", "javascript:return previousadcat();");
            btnnext.Attributes.Add("onClick", "javascript:return nextadcat();");
            btnlast.Attributes.Add("onClick", "javascript:return lastadcat();");
            btnExit.Attributes.Add("onClick", "javascript:return exitadcat();");

            //***************************Function Of Label Call from Java Script*************************
            //txtadvcatcode.Attributes.Add("OnBlur", "javascript:return UpperCase('txtadvcatcode')");
            //txtalias.Attributes.Add("OnBlur", "javascript:return UpperCase('txtalias')");
            //txtcatname.Attributes.Add("OnBlur", "javascript:return UpperCase('txtcatname')");
          //  drpednname.Attributes.Add("OnBlur", "javascript:return UpperCase('drpednname')");
            CheckBox8.Attributes.Add("OnClick", "javascript:return checkedunchecked('CheckBox8');");

            CheckBox1.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox2.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox3.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox4.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox5.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox6.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");
            CheckBox7.Attributes.Add("OnClick", "javascript:return fillchk_chkbox();");

          // drpednname.Attributes.Add("OnChange", "javascript:return editionday();");

            txtadvcatcode.Attributes.Add("OnChange", "javascript:return userdefineonly();");
            txtcatname.Attributes.Add("OnChange", "javascript:return autogenerate();");
            txtadvcatcode.Attributes.Add("OnBlur", "javascript:return capsCode('txtadvcatcode');");
            txtalias.Attributes.Add("OnBlur", "javascript:return capsCode('txtalias');");
            lbdetails.Attributes.Add("OnClick", "javascript:return category();");
            txtpreod.Attributes.Add("onkeypress", "javascript:return numeric(event)");
            txtldgenday.Attributes.Add("onkeypress", "javascript:return numeric(event)");

            txt1.Attributes.Add("onblur", "javascript:return txtckeckvalue(this.id,event);");
            txt2.Attributes.Add("onblur", "javascript:return txtckeckvalue(this.id,event);");
            txt3.Attributes.Add("onblur", "javascript:return txtckeckvalue(this.id,event);");
            txt4.Attributes.Add("onblur", "javascript:return txtckeckvalue(this.id,event);");
            txt5.Attributes.Add("onblur", "javascript:return txtckeckvalue(this.id,event);");
            txt6.Attributes.Add("onblur", "javascript:return txtckeckvalue(this.id,event);");
            txt7.Attributes.Add("onblur", "javascript:return txtckeckvalue(this.id,event);");

        }

        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();

        // Put user code to initialize the page here
    }

    #region Web Form Designer generated code
     protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion





    //		public void pagedef()
    public void bindregclient()
    {
        ListItem li1;
        li1 = new ListItem();
        li1.Text = "Select";
        li1.Value = "0";
      
        drpregclient.Items.Add(li1);
        li1 = new ListItem();
        li1.Text = "Yes";
        li1.Value = "Y";
     
        drpregclient.Items.Add(li1);
        li1 = new ListItem();
        li1.Text = "No";
        li1.Value = "N";
     
        drpregclient.Items.Add(li1);
    }
     public void pagedef()
    {
        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        txtadvcatcode.Enabled = false;
        txtalias.Enabled = false;
        txtcatname.Enabled = false;
        adtype.Enabled = false;
        lbdetails.Enabled = false;
        txtfilename.Enabled = false;
        drpstatus.Enabled = false;
        //drpednname.Enabled=false;
       // drpednname.Enabled = false;
        //drpfocusday.Enabled = false;

    }

    ////*******************************************************************************//
    ////*********************************Bind The Editon*******************************//
    ////*******************************************************************************//
    ////        public void bindedition()
    //// public void bindedition()
    ////{
    ////    //regionhidden=hiddenregion.Value;
    ////    NewAdbooking.Classes.SupplimentMaster SubPubName = new NewAdbooking.Classes.SupplimentMaster();
    ////    DataSet ds = new DataSet();
    ////    ds = SubPubName.SubPub();
    ////    ListItem li1;
    ////    li1 = new ListItem();
    ////    li1.Text = "---Select---";
    ////    li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
    ////    li1.Selected = true;
    ////    drpednname.Items.Add(li1);

    ////    int i;
    ////    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    ////    {
    ////        ListItem li;
    ////        li = new ListItem();
    ////        li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    ////        li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    ////        drpednname.Items.Add(li);


    ////    }

    ////}

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Save the data through the Ajax^^^^^^//
    //*******************************************************************************************//
    [Ajax.AjaxMethod]
    //		public void advcatinsert(string compcode,string userid,string adcatcode,string catalias,string catname,string catediname,string focusday)
    //public void advcatinsert(string compcode, string userid, string adcatcode, string catalias, string catname, string catediname, string focusday)

     public void advcatinsert(string compcode, string userid, string adcatcode, string catalias, string catname, string advtype, string regclient, string filename, string status, string productivity, string hrs, string min, string preodicity, string discount, string amount, string ffdiscount, string ffdamount, string casdisc, string cshdiscamount, string ldgenday, string ldgenflag, string eddiscflag) 
     {
         DataSet ds = new DataSet();
         if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
         {
             NewAdbooking.Classes.AdCategoryMaster insert = new NewAdbooking.Classes.AdCategoryMaster();
             ds = insert.advcatinsert1(compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, preodicity, discount, amount, ffdiscount, ffdamount, casdisc, cshdiscamount, ldgenday, ldgenflag, eddiscflag);//, catediname);
         }
         else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             NewAdbooking.classesoracle.AdCategoryMaster insert = new NewAdbooking.classesoracle.AdCategoryMaster();
             //ds = insert.advcatinsert1(compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, preodicity, discount, amount, ffdiscount, ffdamount, casdisc, cshdiscamount);
         }
         else
         {
             //NewAdbooking.classmysql.AdCategoryMaster insert = new NewAdbooking.classmysql.AdCategoryMaster();
           //  ds = insert.advcatinsert1(compcode, userid, adcatcode, catalias, catname, advtype, regclient);
             string procedureName = "advinsert";
             string[] parameterValueArray = { compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, null, null };
             NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }


     }

 
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Update the data through the Ajax^^^^^//
    //*******************************************************************************************//
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public void advcatupdate(string compcode,string userid,string adcatcode,string catalias,string catname,string catediname,string focusday)
    public void advcatupdate(string compcode, string userid, string adcatcode, string catalias, string catname, string advtype, string regclient, string ip, string filename, string status, string productivity, string hrs, string min, string preodicity, string discount, string amount, string ffdiscount, string ffdamount, string casdisc, string cshdiscamount, string extra1, string extra2, string ldgenday, string ldgenflag, string eddiscflag)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.AdCategoryMaster update = new NewAdbooking.Classes.AdCategoryMaster();

                ds = update.advcatupdate1(compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, preodicity, discount, amount, ffdiscount, ffdamount, casdisc, cshdiscamount, ldgenday, ldgenflag,eddiscflag);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.AdCategoryMaster update = new NewAdbooking.classesoracle.AdCategoryMaster();
              ds = update.advcatupdate1(compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, preodicity, discount, amount, ffdiscount, ffdamount, casdisc, cshdiscamount, extra1, extra2,ldgenday, ldgenflag,eddiscflag);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "ADVUPDATE_ADVUPDATE_P";
                //string[] parameterValueArray = { compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, preodicity, discount, amount, ffdiscount, ffdamount, casdisc, cshdiscamount, extra1, extra2, ldgenday, ldgenflag, eddiscflag };
                string[] parameterValueArray = { compcode, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, null, null, preodicity, ffdiscount, amount, casdisc, ffdamount, casdisc, cshdiscamount, ldgenday, ldgenflag, eddiscflag };
             
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            }

            //else
            //{
            //    NewAdbooking.classmysql.AdCategoryMaster update = new NewAdbooking.classmysql.AdCategoryMaster();
            //    ds = update.advcatupdate1(compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, preodicity, discount, amount, ffdiscount, ffdamount, casdisc, cshdiscamount, extra1, extra2, ldgenday, ldgenflag, eddiscflag);
            //}
        }
        catch (Exception e)
        {
            err = e.Message;

        }
        string adcatcode2 = "Modified Ad Category " + adcatcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Ad Category','" + err.Replace("'", "''") + "','Ad Category Updated','" + adcatcode2;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        //return ds;

    }


    //*********************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Execute the data through the Ajax^^^^^//
    //*********************************************************************************************//
   
    [Ajax.AjaxMethod]
    //		public string advcatexecute(string compcode,string userid,string adcatcode,string catalias,string catname,string catediname,string focusday)
    public string advcatexecute(string compcode, string userid, string adcatcode, string catalias, string catname, string advtype)//, string catediname)
    {
        DataSet ds = new DataSet();
        string flag;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster update = new NewAdbooking.Classes.AdCategoryMaster();
            ds = update.advcatexecute(compcode, userid, adcatcode, catalias, catname, advtype);//, catediname);
            if (ds.Tables[0].Rows.Count > 0)
            {
                flag = "pass";

            }
            else
            {
                flag = "fail";
            }
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster update = new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = update.advcatexecute(compcode, userid, adcatcode, catalias, catname, advtype);//, catediname);
            if (ds.Tables[0].Rows.Count > 0)
            {
                flag = "pass";

            }
            else
            {
                flag = "fail";
            }
        }

        else 
        {
            string procedureName = "ADVCATEXEC_ADVCATEXEC_P";
            string[] parameterValueArray = { compcode,"", adcatcode, catalias, catname, advtype};
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            if (ds.Tables[0].Rows.Count > 0)
            {
                flag = "pass";

            }
            else
            {
                flag = "fail";
            }
            return flag;
        }
        return flag;
        //else
        //{
        //    NewAdbooking.classmysql.AdCategoryMaster update = new NewAdbooking.classmysql.AdCategoryMaster();
        //    ds = update.advcatexecute(compcode, userid, adcatcode, catalias, catname, advtype);//, catediname);
        //    if (ds.Tables[0].Rows.Count > 0)
        //    {
        //        flag = "pass";

        //    }
        //    else
        //    {
        //        flag = "fail";
        //    }
        //}

     
    }

    [Ajax.AjaxMethod]
    //		public DataSet advcatexecute12(string compcode,string userid,string adcatcode,string catalias,string catname,string catediname,string focusday)
    public DataSet advcatexecute12(string compcode, string userid, string adcatcode, string catalias, string catname, string advtype)//, string catediname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster first = new NewAdbooking.Classes.AdCategoryMaster();

            ds = first.advcatexecute12(compcode, userid, adcatcode, catalias, catname, advtype);

            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster first = new NewAdbooking.classesoracle.AdCategoryMaster();

            ds = first.advcatexecute12(compcode, userid, adcatcode, catalias, catname, advtype);

            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "ADVCATEXEC_ADVCATEXEC_P";
            string[] parameterValueArray = { compcode, adcatcode, catalias, catname, advtype, "" };
            
	
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            return ds;
        }
        //else
        //{
        //    NewAdbooking.classmysql.AdCategoryMaster first = new NewAdbooking.classmysql.AdCategoryMaster();
        //    ds = first.advcatexecute12(compcode, userid, adcatcode, catalias, catname, advtype);
        //    return ds;
        //}
        return ds;
    }
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^//
               //**************************After Click The First****************//
    //*******************************************************************************************//
   /* [Ajax.AjaxMethod]
    //		public DataSet firstclick(string compcode,string userid)
     public DataSet firstclick(string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster first = new NewAdbooking.Classes.AdCategoryMaster();

            ds = first.advcatfirst(compcode, userid);

            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster first = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = first.advcatfirst(compcode, userid);
            return ds;
        }

    }*/
    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^//
             //**************************After Click The Last Button****************//
    //*******************************************************************************************//
 /*  [Ajax.AjaxMethod]
    //		public DataSet lastclick(string compcode,string userid)
     public DataSet lastclick(string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster last = new NewAdbooking.Classes.AdCategoryMaster();

            ds = last.advcatlast(compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster last = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = last.advcatlast(compcode, userid);
            return ds;
        }

    }*/

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^//
              //**************************After Click The Previuos****************//
    //*******************************************************************************************//
  /*  [Ajax.AjaxMethod]
    //		public DataSet preclick(string compcode,string userid)
     public DataSet preclick(string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster previous = new NewAdbooking.Classes.AdCategoryMaster();

            ds = previous.advcatpre(compcode, userid);
            z = 0;
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster previous = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = previous.advcatpre(compcode, userid);
            z = 0;
            return ds;
        }

    }*/

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^//
                   //*********************After Click The Next Button****************//
    //*******************************************************************************************//
  /*  [Ajax.AjaxMethod]
    //		public DataSet nextclick(string compcode,string userid)
     public DataSet nextclick(string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster next = new NewAdbooking.Classes.AdCategoryMaster();

            ds = next.advcatnext(compcode, userid);
            //z=0;
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster next = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = next.advcatnext(compcode, userid);
            return ds;
        }

    }*/

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Delete the data From DataBAse ^^^^^//
    //**************************************through the Ajax*************************************//
    //*******************************************************************************************//
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet delete1(string compcode,string adcatcode,string userid)
     public void delete1(string compcode, string adcatcode, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.AdCategoryMaster delete = new NewAdbooking.Classes.AdCategoryMaster();

                ds = delete.advcatdel(compcode, adcatcode);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.AdCategoryMaster delete = new NewAdbooking.classesoracle.AdCategoryMaster();
                ds = delete.advcatdel(compcode, adcatcode);
            }
            else
            {
                NewAdbooking.classmysql.AdCategoryMaster delete = new NewAdbooking.classmysql.AdCategoryMaster();
                ds = delete.advcatdel(compcode, adcatcode);
            }
            //z=0;
            //   return ds;

        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string adcatcode3 = "Deleted Ad Category " + adcatcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Ad Category','" + err.Replace("'", "''") + "','Ad Category Deleted','" + adcatcode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
    }

    

    //*********************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Auto Generate Code through the Ajax^^^^^//
    //*********************************************************************************************//
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet adchkadvcode( string str,string adtype)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster chk = new NewAdbooking.Classes.AdCategoryMaster();

            ds = chk.countadcatcode(str,adtype,Session["compcode"].ToString());
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster chk = new NewAdbooking.classesoracle.AdCategoryMaster();

            ds = chk.countadcatcode(str, Session["compcode"].ToString());
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster chk = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = chk.countadcatcode(str,Session["compcode"].ToString());
            return ds;
        }

    }

    [Ajax.AjaxMethod]
    public DataSet ckkusercode(string adcatcode, string catname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster chk1 = new NewAdbooking.Classes.AdCategoryMaster();

            ds = chk1.ckkusercode(adcatcode, catname);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster chk1 = new NewAdbooking.classesoracle.AdCategoryMaster();

            ds = chk1.ckkusercode(adcatcode, catname);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster chk1 = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = chk1.ckkusercode(adcatcode, catname);
            return ds;
        }

    }
  
    //*****************************Coding of Selection For The Day***********************************************

    //******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Save the data through the Ajax^^^^^//
    //***********************************Of Publication Day*************************************//
    //******************************************************************************************//
    [Ajax.AjaxMethod]
    //	public DataSet selectpubdaysave1(string hiddencompcode,string txtpubcode,string CheckBox1,string CheckBox2,string CheckBox3,string CheckBox4,string CheckBox5,string CheckBox6,string CheckBox7,string CheckBox8,string userid1)
    public DataSet selectaddaysave1(string hiddencompcode, string adcatcode, string CheckBox1, string CheckBox2, string CheckBox3, string CheckBox4, string CheckBox5, string CheckBox6, string CheckBox7, string CheckBox8, string userid1)
    {
        DataSet ds = new DataSet();
        
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.AdCategoryMaster adsave = new NewAdbooking.Classes.AdCategoryMaster();

                ds = adsave.selectaddaysave(hiddencompcode, adcatcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
                 return ds;
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.AdCategoryMaster adsave = new NewAdbooking.classesoracle.AdCategoryMaster();

                ds = adsave.selectaddaysave(hiddencompcode, adcatcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
                  return ds;
            }
            else
            {
                NewAdbooking.classmysql.AdCategoryMaster adsave = new NewAdbooking.classmysql.AdCategoryMaster();
                ds = adsave.selectaddaysave(hiddencompcode, adcatcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
                return ds;
            }
        
    }

    [Ajax.AjaxMethod]
    //	public DataSet checkpubcode1(string hiddencompcode,string txtpubcode,string userid1)
    public DataSet checkadcode1(string hiddencompcode, string adcatcode, string userid1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster adcheck = new NewAdbooking.Classes.AdCategoryMaster();

            ds = adcheck.checkadcode(hiddencompcode, adcatcode, userid1);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster adcheck = new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = adcheck.checkadcode(hiddencompcode, adcatcode, userid1);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster adcheck = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = adcheck.checkadcode(hiddencompcode, adcatcode, userid1);
            return ds;
        }
    }

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For Modify the data through the Ajax^^^^//
    //***********************************Of Publication Day*************************************//
    //*******************************************************************************************//
    [Ajax.AjaxMethod]
    //	public DataSet selectpubdaymodify1(string hiddencompcode,string txtpubcode,string CheckBox1,string CheckBox2,string CheckBox3,string CheckBox4,string CheckBox5,string CheckBox6,string CheckBox7,string CheckBox8,string userid1)
    public DataSet selectaddaymodify1(string hiddencompcode, string adcatcode, string CheckBox1, string CheckBox2, string CheckBox3, string CheckBox4, string CheckBox5, string CheckBox6, string CheckBox7, string CheckBox8, string userid1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster admodify = new NewAdbooking.Classes.AdCategoryMaster();

            ds = admodify.selectaddaymodify(hiddencompcode, adcatcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster admodify = new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = admodify.selectaddaymodify(hiddencompcode, adcatcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster admodify = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = admodify.selectaddaymodify(hiddencompcode, adcatcode, CheckBox1, CheckBox2, CheckBox3, CheckBox4, CheckBox5, CheckBox6, CheckBox7, CheckBox8, userid1);
            return ds;
        }
    }


    //[Ajax.AjaxMethod]
    //public DataSet editionday(string drpednname)
    //{
    //    NewAdbooking.Classes.AdCategoryMaster  editday= new NewAdbooking.Classes.AdCategoryMaster();
    //    DataSet ds = new DataSet();
    //    ds = editday.editionday(drpednname);
    //    return ds;

    
    //}

    //*******************************************************************************************//
    //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^This Is For The Disable The Check Box On Page Load^^^^^^^^^//
    //*******************************************************************************************//
    //	public void check()
    public void check()
    {
        CheckBox1.Enabled = false;
        CheckBox2.Enabled = false;
        CheckBox3.Enabled = false;
        CheckBox4.Enabled = false;
        CheckBox5.Enabled = false;
        CheckBox6.Enabled = false;
        CheckBox7.Enabled = false;
        CheckBox8.Enabled = false;
    }

    protected void CheckBox1_Load(object sender, System.EventArgs e)
    {
        CheckBox1.Attributes.Add("OnLoad", "javascript:return disablecheck();");

    }

    protected void hiddenusername_ServerChange(object sender, System.EventArgs e)
    {

    }
    ////*******************************************************************************//
    ////*********************************Bind The Adv Type*******************************//
    ////*******************************************************************************//
            //public void bindedition()
     public void bindadvtype()
    {
        //regionhidden=hiddenregion.Value;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster advname = new NewAdbooking.Classes.AdCategoryMaster();

            ds = advname.adname(hiddencompcode.Value);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster advname = new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = advname.adname(hiddencompcode.Value);
        }
        else
        {
            NewAdbooking.classmysql.AdCategoryMaster advname = new NewAdbooking.classmysql.AdCategoryMaster();
            ds = advname.adname(hiddencompcode.Value);
        }
            ListItem li1;
            li1 = new ListItem();
            li1.Text = "--Select Ad Type--";
            li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
            li1.Selected = true;
            adtype.Items.Add(li1);

            int i;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                adtype.Items.Add(li);


            }
        }
       
   


    private void checkformandatory()
    {
        if (lbadtype.Text.IndexOf("*") >= 0)
        {
            hiddendrpadtype.Value = "1";
        }
        else
        {
            hiddendrpadtype.Value = "0";
        }
        if (lbadvcatname.Text.IndexOf("*") >= 0)
        {
            hiddenadname.Value = "1";
        }
        else
        {
            hiddenadname.Value = "0";
        }
        if (lbalias.Text.IndexOf("*") >= 0)
        {
            hiddenadalias.Value = "1";
        }
        else
        {
            hiddenadalias.Value = "0";
        }
    }


    protected void btnSave_Click(object sender, EventArgs e)
    {
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(AdCategoryMaster), "abc", "alert('session Expired');window.close();", true);
            return;
        }
        string compcode = Session["compcode"].ToString();
        string userid = Session["userid"].ToString();
        string adcatcode = txtadcate.Value;
        string catalias = txtalias.Text;
        string catname = txtcatname.Text;
        string advtype = adtype.SelectedValue;
        string regclient = drpregclient.SelectedValue;
        string filename = txtfilename.Text;
        string status = drpstatus.SelectedValue;
        string productivity = txtproduction.Text;
        string hrs = txthr.Text;
        string min = txtmin.Text;
        string preodicity = txtpreod.Text;
        string discount = drpdiscount.SelectedValue;
        string amount = txtamount.Text;
        string ffdiscount = drpffdis.SelectedValue;
        string ffdamount = txtffdisc.Text;
        string casdisc = drpcsdis.SelectedValue;
        string cshdiscamount = txtcsdisc.Text;
        string ldgenday = txtldgenday.Text;
        string ldgenflag = drpldgenflag.SelectedValue;
        string eddiscflag = drpeddiscflag.SelectedValue;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster insert = new NewAdbooking.Classes.AdCategoryMaster();
            ds = insert.advcatinsert1(compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, preodicity, discount, amount, ffdiscount, ffdamount, casdisc, cshdiscamount,ldgenday,ldgenflag,eddiscflag);
            if (Session["editionsave"] == "" || Session["editionsave"] == null)
            {
            }
            else
            {
                DataSet db = (DataSet)Session["editionsave"];
                int er = db.Tables[0].Rows.Count;
                int gf = db.Tables.Count;
                for (int b = 0; b <= gf - 1; b++)
                {
                    // string edition = db.Tables[b].Rows[0].ItemArray[0].ToString();
                    string edition = db.Tables[b].Rows[0].ItemArray[0].ToString();
                    string chk1 = db.Tables[b].Rows[0].ItemArray[1].ToString();
                    string chk2 = db.Tables[b].Rows[0].ItemArray[2].ToString();
                    string chk3 = db.Tables[b].Rows[0].ItemArray[3].ToString();
                    string chk4 = db.Tables[b].Rows[0].ItemArray[4].ToString();
                    string chk5 = db.Tables[b].Rows[0].ItemArray[5].ToString();
                    string chk6 = db.Tables[b].Rows[0].ItemArray[6].ToString();
                    string chk7 = db.Tables[b].Rows[0].ItemArray[7].ToString();
                    string chk8 = db.Tables[b].Rows[0].ItemArray[8].ToString();

                    DataSet ds1 = new DataSet();
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                        NewAdbooking.Classes.AdCategoryMaster edsubmit = new NewAdbooking.Classes.AdCategoryMaster();
                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);
                    }
                    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.AdCategoryMaster edsubmit = new NewAdbooking.classesoracle.AdCategoryMaster();
                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);
                    }
                    else
                    {
                        NewAdbooking.classmysql.AdCategoryMaster edsubmit = new NewAdbooking.classmysql.AdCategoryMaster();

                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);


                    }

                }
            }
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster insert=new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = insert.advcatinsert1(compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, preodicity, discount, amount, ffdiscount, ffdamount, casdisc, cshdiscamount, ldgenday,ldgenflag,eddiscflag);
            if (Session["editionsave"] == "" || Session["editionsave"] == null)
            {

            }
                   else
            {
                DataSet db = (DataSet)Session["editionsave"];
                int er = db.Tables[0].Rows.Count;
                int gf = db.Tables.Count;
                for (int b = 0; b <= gf - 1; b++)
                {
                    // string edition = db.Tables[b].Rows[0].ItemArray[0].ToString();
                    string edition = db.Tables[b].Rows[0].ItemArray[0].ToString();
                    string chk1 = db.Tables[b].Rows[0].ItemArray[1].ToString();
                    string chk2 = db.Tables[b].Rows[0].ItemArray[2].ToString();
                    string chk3 = db.Tables[b].Rows[0].ItemArray[3].ToString();
                    string chk4 = db.Tables[b].Rows[0].ItemArray[4].ToString();
                    string chk5 = db.Tables[b].Rows[0].ItemArray[5].ToString();
                    string chk6 = db.Tables[b].Rows[0].ItemArray[6].ToString();
                    string chk7 = db.Tables[b].Rows[0].ItemArray[7].ToString();
                    string chk8 = db.Tables[b].Rows[0].ItemArray[8].ToString();

                    DataSet ds1 = new DataSet();
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                        NewAdbooking.Classes.AdCategoryMaster edsubmit = new NewAdbooking.Classes.AdCategoryMaster();
                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);
                    }
                    else if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.AdCategoryMaster edsubmit = new NewAdbooking.classesoracle.AdCategoryMaster();
                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);
                    }
                    else
                    {
                        NewAdbooking.classmysql.AdCategoryMaster edsubmit = new NewAdbooking.classmysql.AdCategoryMaster();
                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);
                    }
                }
            }
        }
        else
        {
          //  NewAdbooking.classmysql.AdCategoryMaster insert = new NewAdbooking.classmysql.AdCategoryMaster();
           // ds = insert.advcatinsert1(compcode, userid, adcatcode, catalias, catname, advtype, regclient);

            string procedureName = "advinsert";
            string[] parameterValueArray = { compcode, userid, adcatcode, catalias, catname, advtype, regclient, filename, status, productivity, hrs, min, null, null };
           NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
           ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
     
            if (Session["editionsave"] == "" || Session["editionsave"] == null)
            {
            }
            else
            {
                DataSet db = (DataSet)Session["editionsave"];
                int er = db.Tables[0].Rows.Count;
                int gf = db.Tables.Count;
                for (int b = 0; b <= gf - 1; b++)
                {
                    // string edition = db.Tables[b].Rows[0].ItemArray[0].ToString();
                    string edition = db.Tables[b].Rows[0].ItemArray[0].ToString();
                    string chk1 = db.Tables[b].Rows[0].ItemArray[1].ToString();
                    string chk2 = db.Tables[b].Rows[0].ItemArray[2].ToString();
                    string chk3 = db.Tables[b].Rows[0].ItemArray[3].ToString();
                    string chk4 = db.Tables[b].Rows[0].ItemArray[4].ToString();
                    string chk5 = db.Tables[b].Rows[0].ItemArray[5].ToString();
                    string chk6 = db.Tables[b].Rows[0].ItemArray[6].ToString();
                    string chk7 = db.Tables[b].Rows[0].ItemArray[7].ToString();
                    string chk8 = db.Tables[b].Rows[0].ItemArray[8].ToString();

                    DataSet ds1 = new DataSet();
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                        NewAdbooking.Classes.AdCategoryMaster edsubmit = new NewAdbooking.Classes.AdCategoryMaster();
                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);
                    }
                    else if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                    {
                        NewAdbooking.classesoracle.AdCategoryMaster edsubmit = new NewAdbooking.classesoracle.AdCategoryMaster();
                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);
                    }
                    else
                    {
                        NewAdbooking.classmysql.AdCategoryMaster edsubmit = new NewAdbooking.classmysql.AdCategoryMaster();
                        ds1 = edsubmit.editionsubmit(compcode, userid, adcatcode, edition, chk1, chk2, chk3, chk4, chk5, chk6, chk7, chk8);
                    }
                }
            }
        }
        Session["editionsave"] = null;

        message = "Data Saved Successfully";
        AspNetMessageBox(message);

        btnNew.Enabled = true;
        btnQuery.Enabled = true;
        btnCancel.Enabled = true;
        btnExit.Enabled = true;

        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnExecute.Enabled = false;
        btnfirst.Enabled = false;
        btnnext.Enabled = false;
        btnprevious.Enabled = false;
        btnlast.Enabled = false;

        txtadcate.Value = "";
        txtalias.Text = "";
        txtcatname.Text = "";
        adtype.SelectedValue = "0";
        txthr.Text = "";
        txtmin.Text = "";
        txtproduction.Text = "";

        CheckBox1.Enabled = false;
        CheckBox2.Enabled = false;
        CheckBox3.Enabled = false;
        CheckBox4.Enabled = false;
        CheckBox5.Enabled = false;
        CheckBox6.Enabled = false;
        CheckBox7.Enabled = false;
        CheckBox8.Enabled = false;

        CheckBox1.Checked = false;
        CheckBox2.Checked = false;
        CheckBox3.Checked = false;
        CheckBox4.Checked = false;
        CheckBox5.Checked = false;
        CheckBox6.Checked = false;
        CheckBox7.Checked = false;
        CheckBox8.Checked = false;

    }
    protected void AspNetMessageBox(string strMessage)
    {
        //strMessage = adminResource.GetStringFromResource(strMessage);
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(AdCategoryMaster ), "ShowAlert", strAlert, true);
    }


    [Ajax.AjaxMethod]
    public DataSet selectadtxtsave1(string hiddencompcode, string adcatcode, string txt1, string txt2, string txt3, string txt4, string txt5, string txt6, string txt7, string userid1)
    {
        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster adsave = new NewAdbooking.Classes.AdCategoryMaster();

            ds = adsave.selectadtxtsave(hiddencompcode, adcatcode, txt1, txt2, txt3, txt4, txt5, txt6, txt7,  userid1);
           
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster adsave = new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = adsave.selectadtxtsave(hiddencompcode, adcatcode, txt1, txt2, txt3, txt4, txt5, txt6, txt7, userid1);

        }
        else
        {
            string procedureName = "slelectadcattxtsave_slelectadcattxtsave_p";
            string[] parameterValueArray = { hiddencompcode, adcatcode, txt1, txt2, txt3, txt4, txt5, txt6, txt7, userid1 };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;

    }

    [Ajax.AjaxMethod]
    public DataSet selectadtxtmodify1(string hiddencompcode, string adcatcode, string txt1, string txt2, string txt3, string txt4, string txt5, string txt6, string txt7, string userid1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster admodify = new NewAdbooking.Classes.AdCategoryMaster();
            ds = admodify.slelectadtxtmodify(hiddencompcode, adcatcode, txt1, txt2, txt3, txt4, txt5, txt6, txt7, userid1);
           
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster admodify = new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = admodify.slelectadtxtmodify(hiddencompcode, adcatcode, txt1, txt2, txt3, txt4, txt5, txt6, txt7, userid1);

        }
        else
        {
            string procedureName = "slelectadcattxtsave_slelectadtxtmodify_new";
            string[] parameterValueArray = { hiddencompcode, adcatcode, userid1 };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
            return ds;
     
    }


    [Ajax.AjaxMethod]
    public DataSet checkadtxt(string hiddencompcode, string adcatcode, string userid1)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.AdCategoryMaster adcheck = new NewAdbooking.Classes.AdCategoryMaster();

            ds = adcheck.checkadtxt(hiddencompcode, adcatcode, userid1);
           
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.AdCategoryMaster adcheck = new NewAdbooking.classesoracle.AdCategoryMaster();
            ds = adcheck.checkadtxt(hiddencompcode, adcatcode, userid1);

        }
        else
        {
            string procedureName = "slelectadcattxtsave_checkadtxt";
            string[] parameterValueArray = { hiddencompcode, adcatcode, userid1 };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }



}