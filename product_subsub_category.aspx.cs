using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class product_subsub_category : System.Web.UI.Page
{


    string formname = "product_subsub_category";
    static int FlagStatus, fpnl, flag;
    static string saveormodify;
    string message;
    static DataSet subproexecute = new DataSet();
    static string exesubsubcode, exesubsubname, exesubalias,exedrpsubsub, exeprosubdes;
    string compcode, userid;
    NewAdbooking.Classes.product_subsub_category execute = new NewAdbooking.Classes.product_subsub_category();

    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            compcode = hiddencompcode.Value;
            userid = hiddenuserid.Value;

        }

        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>alert(\"Your Session  Been Expired\");window.close();</script>");
            return;
        }


        formname = "product_subsub_category";
        btnNew.Focus();
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();


        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/pro_subsub_mast.xml"));
        lbproductdescription.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        lbprosubdeccription.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
        lbprosubsubcode.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();
        lbsubsubprodes.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
        lbalias.Text = ds1.Tables[0].Rows[0].ItemArray[4].ToString();

        
        hiddenauto.Value = Session["autogenerated"].ToString();

        //if (Session["autogenerated"].ToString() == "1")
        //{

        //    txtprosubsubcode .Enabled = false;

        //}
        mandatory();
        Ajax.Utility.RegisterTypeForAjax(typeof(product_subsub_category));

        hiddenusername.Value = Session["Username"].ToString();
      
        if (!Page.IsPostBack)
        {

            drpsubproduct.Enabled = false;
            drpproduct.Enabled = false;
            txtalias.Enabled = false;
            txtprosubsubcode.Enabled = false;
            txtprosubsubname.Enabled = false;
            bindproduct();
            //bindproduct();
            getbuttoncheck(formname);

            btnSave.Attributes.Add("onclick", "javascript:return saveproduct();");
            btnExit.Attributes.Add("ONClick", "javascript:return exitclick();");
            txtprosubsubname.Attributes.Add("onchange", "javascript:return autoornot();");
            btnQuery.Attributes.Add("OnClick", "javascript:return chkquery();");
            btnDelete .Attributes.Add("onclick", "return confirm ('Are you sure you wish to delete this?')");
            //btnNew.Attributes.Add("OnClick", "javascript:return newclick();");


        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();

    }

    public void bindproduct()
    {
        drpproduct.Items.Clear();
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.product_subsub_category bind = new NewAdbooking.Classes.product_subsub_category();

            ds = bind.productdes(hiddencompcode.Value);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.product_subsub_category bind = new NewAdbooking.classesoracle.product_subsub_category();

                ds = bind.productdes(hiddencompcode.Value);

            }
            else
            {
                NewAdbooking.classmysql.product_subsub_category bind = new NewAdbooking.classmysql.product_subsub_category();

                ds = bind.productdes(hiddencompcode.Value);

            }

            ListItem li = new ListItem();
            li.Text = "--Select Product--";
            li.Value = "0";
            li.Selected = true;
            drpproduct.Items.Add(li);

            int x;

            for (x = 0; x < ds.Tables[0].Rows.Count; x++)
            {
                ListItem li1 = new ListItem();
                li1.Text = ds.Tables[0].Rows[x].ItemArray[1].ToString();
                li1.Value = ds.Tables[0].Rows[x].ItemArray[0].ToString();
                drpproduct.Items.Add(li1);

            }
        
       
    }
    protected void btnNew_Click1(object sender, EventArgs e)
    {
        query.Value = "1";
        drpproduct.SelectedValue = "0";
        drpsubproduct.SelectedValue = "0";
        txtprosubsubcode.Text = "";
        txtprosubsubname.Text = "";
        txtalias.Text = "";

        // hiddenauto.Value = "1";

        saveormodify = "0";

        if (hiddenauto.Value == "1")
        {
            txtprosubsubcode.Enabled = false;
        }
        else
        {
            txtprosubsubcode.Enabled = true;
        }
       
        txtalias.Enabled = true;
        txtprosubsubname.Enabled = true;
        drpproduct.Enabled = true;
        drpsubproduct.Enabled = true;

        

        //btnNew.Attributes.Add("OnClick", "javascript:return newclick();");

       
        //if (hiddenauto.Value == "1")
        //{
        //  drpproduct .Focus(
        //}
        //else
        //{
        //    txtprosubsubcode.Enabled = true;
        //}


        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnNew.Enabled = false;
        btnQuery.Enabled = false;
        ScriptManager.RegisterClientScriptBlock(this, typeof(product_subsub_category), "ss", "newclick()", true);
        btnimage();
    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        query.Value  = "0";
        string prosubsubcode = txtprosubsubcode .Text;
        string prosubsubname = txtprosubsubname .Text;
        string proalias = txtalias .Text;
        string drpprosub = drpproduct .SelectedValue;
        string drpprosubsub = drpsubproduct.SelectedValue;

        if (saveormodify == "0")
        {
            DataSet ds = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.product_subsub_category getcode = new NewAdbooking.Classes.product_subsub_category();

                ds = getcode.chkcode(prosubsubcode, Session["compcode"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.product_subsub_category getcode = new NewAdbooking.classesoracle.product_subsub_category();

                    ds = getcode.chkcode(prosubsubcode, Session["compcode"].ToString());

                }
            else
            {
                NewAdbooking.classmysql.product_subsub_category getcode = new NewAdbooking.classmysql.product_subsub_category();

                ds = getcode.chkcode(prosubsubcode, Session["compcode"].ToString());


            }
                if (ds.Tables[0].Rows.Count < 0)
                {
                    message = "Please Enter The Product Code of " + prosubsubname + " ";
                    AspNetMessageBox(message);
                    return;

                }
                else
                {
                    DataSet di = new DataSet();
                    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
                    {
                    NewAdbooking.Classes.product_subsub_category insertthe = new NewAdbooking.Classes.product_subsub_category();
                   
                    di = insertthe.insertedvalue(drpprosub, drpprosubsub, prosubsubcode, prosubsubname, proalias, Session["compcode"].ToString(), Session["userid"].ToString());
                    }
                    else
                        if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                        {
                            NewAdbooking.classesoracle.product_subsub_category insertthe = new NewAdbooking.classesoracle.product_subsub_category();
                   
                    di = insertthe.insertedvalue(drpprosub, drpprosubsub, prosubsubcode, prosubsubname, proalias, Session["compcode"].ToString(), Session["userid"].ToString());

                        }
                        else
                        {
                            NewAdbooking.classmysql.product_subsub_category insertthe = new NewAdbooking.classmysql.product_subsub_category();
                   
                    di = insertthe.insertedvalue(drpprosub, drpprosubsub, prosubsubcode, prosubsubname, proalias, Session["compcode"].ToString(), Session["userid"].ToString());

                        }

                    getbuttoncheck(formname);
                    //message = "Data Saved Sucessfully ";
                    DataSet ds1 = new DataSet();
                    ds1.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                    message = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
                    AspNetMessageBox(message);

                    drpproduct.SelectedValue = "0";
                    drpsubproduct.SelectedValue = "0";
                    txtprosubsubcode.Text = "";
                    txtprosubsubname.Text = "";
                    txtalias.Text = "";


                    txtprosubsubcode.Enabled = false;
                    txtprosubsubname.Enabled = false;
                    txtalias.Enabled = false;
                    drpproduct.Enabled = false;
                    drpsubproduct.Enabled = false;
                    btnimage();
                    return;


                }
           
            

        }
      
        else
        {
            DataSet du = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.product_subsub_category upadte1 = new NewAdbooking.Classes.product_subsub_category();

                du = upadte1.updatepro(drpprosub, drpprosubsub, prosubsubcode, prosubsubname, proalias, Session["compcode"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.product_subsub_category upadte1 = new NewAdbooking.classesoracle.product_subsub_category();

                    du = upadte1.updatepro(drpprosub, drpprosubsub, prosubsubcode, prosubsubname, proalias, Session["compcode"].ToString());

                    
                }
                else
                {
                    NewAdbooking.classmysql.product_subsub_category upadte1 = new NewAdbooking.classmysql.product_subsub_category();

                    du = upadte1.updatepro(drpprosub, drpprosubsub, prosubsubcode, prosubsubname, proalias, Session["compcode"].ToString());

                }

                txtalias.Enabled = false;
                txtprosubsubname.Enabled = false;
                txtprosubsubcode.Enabled = false;
                drpproduct.Enabled = false;
                drpsubproduct.Enabled = false;

                subproexecute.Tables[0].Rows[fpnl].ItemArray[0] = drpproduct.SelectedValue;
                drpproduct_SelectedIndexChanged(sender, e);

                subproexecute.Tables[0].Rows[fpnl].ItemArray[1] = drpsubproduct.SelectedValue;
                subproexecute.Tables[0].Rows[fpnl].ItemArray[2] = txtprosubsubcode.Text;
                subproexecute.Tables[0].Rows[fpnl].ItemArray[3] = txtprosubsubname.Text;
                subproexecute.Tables[0].Rows[fpnl].ItemArray[4] = txtalias.Text;
                DataSet ds = new DataSet();
            if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.product_subsub_category execute = new NewAdbooking.Classes.product_subsub_category();
                subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.product_subsub_category execute = new NewAdbooking.classesoracle.product_subsub_category();
                    subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());

                }
            else
            {
                NewAdbooking.classmysql.product_subsub_category execute = new NewAdbooking.classmysql.product_subsub_category();
                subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());

            }
               
                ds = subproexecute;

                drpproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                drpsubproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtprosubsubcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtprosubsubname.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();


                updateStatus();
                // message = "Data Update Sucessfully ";
                DataSet ds2 = new DataSet();
                ds2.ReadXml(Server.MapPath("XML/errorMessage.xml"));
                message = ds2.Tables[0].Rows[0].ItemArray[1].ToString();
                AspNetMessageBox(message);

                if (fpnl == 0)
                {
                    btnfirst.Enabled = false;
                    btnprevious.Enabled = false;

                }

                if (fpnl == subproexecute.Tables[0].Rows.Count - 1)
                {
                    btnlast.Enabled = false;
                    btnnext.Enabled = false;

                }
                btnimage();
                return;
           
          
        }
    }
    protected void btnModify_Click(object sender, EventArgs e)
    {
        query.Value = "0";
        txtprosubsubcode.Enabled = false;
        txtalias.Enabled = true;
        txtprosubsubname.Enabled = true;
        drpproduct.Enabled = true;
        drpsubproduct.Enabled = true;
        saveormodify = "1";

        //if (hiddenauto.Value == "1")
        //{
        //    txtprosubsubcode.Enabled = false;
        //    txtalias.Enabled = true;
        //    txtprosubsubname.Enabled = true;
        //    drpproduct.Enabled = true;
        //    drpsubproduct.Enabled = true;
        //}
        //else
        //{
        //    txtprosubsubcode.Enabled = true;           
        //    txtalias.Enabled = true;
        //    txtprosubsubname.Enabled = true;
        //    drpproduct.Enabled = true;
        //    drpsubproduct.Enabled = true;
        //}
        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnQuery.Enabled = false;
        btnimage();
    }
    protected void btnQuery_Click1(object sender, EventArgs e)
    {
        fpnl = 0;
        query.Value = "0";
        drpproduct.SelectedValue = "0";
        drpsubproduct.SelectedValue = "0";
        //ListItem li = new ListItem();
        //li.Text = "--Select Product--";
        //li.Value = "0";
       // drpsubproduct.Items.Clear();

        txtprosubsubcode.Text = "";
        txtprosubsubname.Text = "";
        txtalias.Text = "";

        txtalias.Enabled = true;
        txtprosubsubname.Enabled = true;
        txtprosubsubcode.Enabled = true;
        drpproduct.Enabled = true;
        drpsubproduct.Enabled = true;
        btnExecute.Focus();


        chkstatus(FlagStatus);


        btnQuery.Enabled = false;
        btnExecute.Enabled = true;
        btnSave.Enabled = false;
        btnimage();
    }
    protected void btnExecute_Click(object sender, EventArgs e)
    {


        query.Value = "0";
        string prosubsubcode = txtprosubsubcode.Text;
        exesubsubcode = prosubsubcode;
        string prosubsubname = txtprosubsubname.Text;
        exesubsubname = prosubsubname;
        string prosubalias = txtalias.Text;
        exesubalias = prosubalias;
        string drpprosub = drpproduct.SelectedValue;
        exeprosubdes = drpprosub;
        string drpsubprodu= drpsubproduct.SelectedValue;
        exedrpsubsub = drpsubprodu;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.product_subsub_category execute = new NewAdbooking.Classes.product_subsub_category();
            subproexecute = execute.prosubexecute(drpprosub, drpsubprodu, prosubsubcode, prosubsubname, prosubalias, Session["compcode"].ToString());
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.product_subsub_category execute = new NewAdbooking.classesoracle.product_subsub_category();
                subproexecute = execute.prosubexecute(drpprosub, drpsubprodu, prosubsubcode, prosubsubname, prosubalias, Session["compcode"].ToString());

            }
            else
            {
                NewAdbooking.classmysql.product_subsub_category execute = new NewAdbooking.classmysql.product_subsub_category();
                subproexecute = execute.prosubexecute(drpprosub, drpsubprodu, prosubsubcode, prosubsubname, prosubalias, Session["compcode"].ToString());

            }

            if (subproexecute.Tables[0].Rows.Count == 0)
            {
                message = "Your Search Criteria Does Not Exist";
                AspNetMessageBox(message);

                updateStatus();
                getbuttoncheck(formname);

                drpproduct.SelectedValue = "0";
                drpsubproduct.SelectedValue = "0";
                txtprosubsubcode.Text = "";
                txtprosubsubname.Text = "";
                txtalias.Text = "";

                txtalias.Enabled = false;
                txtprosubsubname.Enabled = false;
                txtprosubsubcode.Enabled = false;
                drpproduct.Enabled = false;
                drpsubproduct.Enabled = false;
                btnimage();
                return;

              

            }

            else
            {
                txtalias.Enabled = false;
                txtprosubsubname.Enabled = false;
                txtprosubsubcode.Enabled = false;
                drpproduct.Enabled = false;
                drpsubproduct.Enabled = false;

                if (drpproduct.Items.FindByValue(subproexecute.Tables[0].Rows[0].ItemArray[0].ToString()) != null)
                {
                    drpproduct.SelectedValue = subproexecute.Tables[0].Rows[0].ItemArray[0].ToString();
                }
                else
                {
                    drpproduct.SelectedValue = null;
                }
                drpproduct_SelectedIndexChanged(sender, e);
                if (drpsubproduct.Items.FindByValue(subproexecute.Tables[0].Rows[0].ItemArray[1].ToString()) != null)
                {
                    drpsubproduct.SelectedValue = subproexecute.Tables[0].Rows[0].ItemArray[1].ToString();
                }
                else
                {
                    drpsubproduct.SelectedValue = null;
                }
                txtprosubsubcode.Text = subproexecute.Tables[0].Rows[0].ItemArray[2].ToString();
                txtprosubsubname.Text = subproexecute.Tables[0].Rows[0].ItemArray[3].ToString();
                txtalias.Text = subproexecute.Tables[0].Rows[0].ItemArray[4].ToString();




            }

            updateStatus();
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;

            if (subproexecute.Tables[0].Rows.Count == 1)
            {
                btnfirst.Enabled = false;
                btnlast.Enabled = false;
                btnprevious.Enabled = false;
                btnnext.Enabled = false;
            }


            btnimage();
    }
    protected void btnCancel_Click1(object sender, EventArgs e)
    {
       
        query.Value = "0";
        drpproduct.SelectedValue = "0";
        drpsubproduct.SelectedValue = "0";
        drpsubproduct.Items.Clear();
        ListItem li = new ListItem();
        li.Text = "--Select Sub Product--";
        li.Value = "0";
        li.Selected = true;
        drpsubproduct.Items.Add(li);

         txtprosubsubcode.Text = "";
        txtprosubsubname.Text = "";
        txtalias.Text = "";

        chkstatus(FlagStatus);

        getbuttoncheck(formname);
        //btnNew.Enabled = false;
        //btnQuery.Enabled = true;
        //btnCancel.Enabled = true;
        //btnExit.Enabled = true;
        txtprosubsubcode.Enabled = false;
        txtprosubsubname.Enabled = false;
        txtalias.Enabled = false;
        drpproduct.Enabled = false;
        drpsubproduct.Enabled = false;

        btnSave.Enabled = false;
        txtalias.Enabled = false;
        ScriptManager.RegisterClientScriptBlock(this, typeof(product_subsub_category), "dd", "document.getElementById('btnNew').focus();", true);
        //txtprosubsubname.Enabled = false;
        //txtprosubsubcode.Enabled = false;
        btnimage();
    }
    protected void btnfirst_Click(object sender, EventArgs e)
    {
        fpnl = 0;

        DataSet ds = new DataSet();
        ds = subproexecute;

        if (drpproduct.Items.FindByValue(ds.Tables[0].Rows[0].ItemArray[0].ToString()) != null)
            drpproduct.SelectedValue = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        else
            drpproduct.SelectedValue = null;
        drpproduct_SelectedIndexChanged(sender, e);
        if (drpsubproduct.Items.FindByValue(ds.Tables[0].Rows[0].ItemArray[1].ToString()) != null)
            drpsubproduct.SelectedValue = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        else
            drpsubproduct.SelectedValue = null;
        txtprosubsubcode.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        txtprosubsubname.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        txtalias.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();


        updateStatus();

        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnimage();
    }
    protected void btnprevious_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = subproexecute;

        // fpnl--;
        int count = ds.Tables[0].Rows.Count - 1;

        fpnl--;

        if (fpnl != -1)
        {
            if (fpnl >= 0 || fpnl <= count)
            {
                if (drpproduct.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
                    drpproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                else
                    drpproduct.SelectedValue = null;
               drpproduct_SelectedIndexChanged(sender, e);
               if (drpsubproduct.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[1].ToString()) != null)
                   drpsubproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
               else
                   drpsubproduct.SelectedValue = null;
               txtprosubsubcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
               txtprosubsubname.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
               txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();


                updateStatus();

                btnfirst.Enabled = true;
                btnlast.Enabled = true;
                btnprevious.Enabled = true;
                btnnext.Enabled = true;
            }
            else
            {
                btnnext.Enabled = true;
                btnlast.Enabled = true;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;

            }
        }
        else
        {
            btnnext.Enabled = true;
            btnlast.Enabled = true;
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;

        }
        if (fpnl == 0)
        {
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = true;
            btnlast.Enabled = true;

        }
        btnimage();
    }
    protected void btnnext_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = subproexecute;
        int count = ds.Tables[0].Rows.Count - 1;
        fpnl++;


        if (fpnl != -1 && fpnl >= 0)
        {
            if (fpnl <= count)
            {
                if (drpproduct.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
                    drpproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                else
                    drpproduct.SelectedValue = null;
                drpproduct_SelectedIndexChanged(sender, e);
                if (drpsubproduct.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[1].ToString()) != null)
                    drpsubproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                else
                    drpsubproduct.SelectedValue = null;
                txtprosubsubcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtprosubsubname.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();

                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }

            else
            {
                btnnext.Enabled = false;
                btnlast.Enabled = false;
                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }
        }
        else
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        if (fpnl == count)
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        btnimage();
    }
    protected void btnlast_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = subproexecute;
        int count = ds.Tables[0].Rows.Count;
        fpnl = count - 1;

        if (drpproduct.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
            drpproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
        else
            drpproduct.SelectedValue = null;
        drpproduct_SelectedIndexChanged(sender, e);
        if (drpsubproduct.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[1].ToString()) != null)
            drpsubproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
        else
            drpsubproduct.SelectedValue = null;
        txtprosubsubcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
        txtprosubsubname.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
        txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();

        updateStatus();

        btnfirst.Enabled = true;
        btnprevious.Enabled = true;
        btnlast.Enabled = false;
        btnnext.Enabled = false;
        btnimage();
    }
    protected void btnDelete_Click(object sender, EventArgs e)
    {
        string prosubsubcode = txtprosubsubcode.Text;

        DataSet ds1 = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.product_subsub_category del = new NewAdbooking.Classes.product_subsub_category();

            ds1 = del.deleteproduct(prosubsubcode, Session["compcode"].ToString());
            
           // subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());//, Session["userid"].ToString());
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.product_subsub_category del = new NewAdbooking.classesoracle.product_subsub_category();

                ds1 = del.deleteproduct(prosubsubcode, Session["compcode"].ToString());

            //    subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());//, Session["userid"].ToString());

            }
            else
            {
                NewAdbooking.classmysql.product_subsub_category del = new NewAdbooking.classmysql.product_subsub_category();

                ds1 = del.deleteproduct(prosubsubcode, Session["compcode"].ToString());
               // subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());//, Session["userid"].ToString());

            }

        if(ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.product_subsub_category execute = new NewAdbooking.Classes.product_subsub_category();
           // subproexecute = execute.prosubexecute(drpprosub, drpsubprodu, prosubsubcode, prosubsubname, prosubalias, Session["compcode"].ToString());

      subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());//, Session["userid"].ToString());

        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.product_subsub_category execute = new NewAdbooking.classesoracle.product_subsub_category();
                // subproexecute = execute.prosubexecute(drpprosub, drpsubprodu, prosubsubcode, prosubsubname, prosubalias, Session["compcode"].ToString());

                subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());//, Session["userid"].ToString());

            }
            else
            {
                NewAdbooking.classmysql.product_subsub_category execute = new NewAdbooking.classmysql.product_subsub_category();
                // subproexecute = execute.prosubexecute(drpprosub, drpsubprodu, prosubsubcode, prosubsubname, prosubalias, Session["compcode"].ToString());

                subproexecute = execute.prosubexecute(exeprosubdes, exedrpsubsub, exesubsubcode, exesubsubname, exesubalias, Session["compcode"].ToString());//, Session["userid"].ToString());

            }

            int a = subproexecute.Tables[0].Rows.Count;
            if (a <= 0)
            {
                message = "There is no data";
                AspNetMessageBox(message);
                chkstatus(FlagStatus);
                updateStatus();
                getbuttoncheck(formname);
                drpproduct.SelectedValue = "0";
                drpsubproduct.SelectedValue = "0";
                txtprosubsubcode.Text = "";
                txtprosubsubname.Text = "";
                txtalias.Text = "";
                btnimage();
                return;
            }
            else if (fpnl == -1 || fpnl >= a)
            {
                DataSet ds = new DataSet();

                ds = subproexecute;
                if (drpproduct.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[0].ToString()) != null)
                    drpproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                else
                    drpproduct.SelectedValue = null;
                drpproduct_SelectedIndexChanged(sender, e);
                if (drpsubproduct.Items.FindByValue(ds.Tables[0].Rows[fpnl].ItemArray[1].ToString()) != null)
                    drpsubproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                else
                    drpsubproduct.SelectedValue = null;
                txtprosubsubcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtprosubsubname.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            }
            else
            {
                DataSet ds = new DataSet();
                ds = subproexecute;

                drpproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                drpproduct_SelectedIndexChanged(sender, e);
                drpsubproduct.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txtprosubsubcode.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtprosubsubname.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                txtalias.Text = ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            }

            //message = "There is no data";
            DataSet ds3 = new DataSet();
            ds3.ReadXml(Server.MapPath("XML/errorMessage.xml"));
            message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
            AspNetMessageBox(message);


            btnimage();
    }
    protected void btnExit_Click(object sender, EventArgs e)
    {

    }
    //protected void drpsubproduct_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    string prosub = drpproduct.SelectedValue;

    //    drpsubproduct.Items.Clear();

    //    NewAdbooking.Classes.product_subsub_category bind = new NewAdbooking.Classes.product_subsub_category();
    //    DataSet ds1 = new DataSet();
    //    ds1 = bind.productsubdes(hiddencompcode.Value, prosub);

    //    ListItem li = new ListItem();
    //    li.Text = "--Select Sub Product--";
    //    li.Value = "0";
    //    li.Selected = true;
    //    drpsubproduct.Items.Add(li);

    //    int x;

    //    for (x = 0; x < ds1.Tables[0].Rows.Count; x++)
    //    {
    //        ListItem li1 = new ListItem();
    //        li1.Text = ds1.Tables[0].Rows[x].ItemArray[1].ToString();
    //        li1.Value = ds1.Tables[0].Rows[x].ItemArray[0].ToString();
    //        drpproduct.Items.Add(li1);

    //    }

    //}

       
    protected void drpproduct_SelectedIndexChanged(object sender, EventArgs e)
    {
        string prosub = drpproduct.SelectedValue;
        if (prosub == "0")
        {
            drpsubproduct.Items.Clear();
            ListItem li = new ListItem();
            li.Text = "--Select Sub Product--";
            li.Value = "0";
            li.Selected = true;
            drpsubproduct.Items.Add(li);
        }
        else
        {


            DataSet ds1 = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.product_subsub_category bind = new NewAdbooking.Classes.product_subsub_category();

                ds1 = bind.productsubdes(hiddencompcode.Value, prosub);
            }
            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.product_subsub_category bind = new NewAdbooking.classesoracle.product_subsub_category();

                    ds1 = bind.productsubdes(hiddencompcode.Value, prosub);

                }
                else
                {
                    NewAdbooking.classmysql.product_subsub_category bind = new NewAdbooking.classmysql.product_subsub_category();

                    ds1 = bind.productsubdes(hiddencompcode.Value, prosub);

                }

            drpsubproduct.Items.Clear();
            ListItem li = new ListItem();
            li.Text = "--Select Sub Product--";
            li.Value = "0";
            li.Selected = true;
            drpsubproduct.Items.Add(li);

            int x;

            for (x = 0; x < ds1.Tables[0].Rows.Count; x++)
            {
                ListItem li1 = new ListItem();
                li1.Text = ds1.Tables[0].Rows[x].ItemArray[1].ToString();
                li1.Value = ds1.Tables[0].Rows[x].ItemArray[0].ToString();
                drpsubproduct.Items.Add(li1);

            }
            if (ds1.Tables[0].Rows.Count == 0)
            {
                message = "There Is No Matching Value Found";
                AspNetMessageBox(message);
                if (drpproduct.Enabled == true)
                {
                    ScriptManager.RegisterClientScriptBlock(this, typeof(product_subsub_category), "ss", "focus1()", true);
                }
            }

            if (drpproduct.Enabled == true)
            {
                ScriptManager.RegisterClientScriptBlock(this, typeof(product_subsub_category), "gb", "document.getElementById('drpproduct').focus();", true);
            }

        }


    }



    public void getbuttoncheck(string formname)
    {
        DataSet butt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.classlibraryforbutton getpermission = new NewAdbooking.Classes.classlibraryforbutton();

            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")

            {
                NewAdbooking.classesoracle.classlibraryforbutton getpermission = new NewAdbooking.classesoracle.classlibraryforbutton();

                butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);

            }
            else
            {
                NewAdbooking.classmysql.classlibraryforbutton getpermission = new NewAdbooking.classmysql.classlibraryforbutton();

                butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);

            }

            string id = butt.Tables[0].Rows[0].ItemArray[0].ToString();


            if (id != "0")
            {
                //var id = ds.Tables[0].Rows[0].button_id;



                if (id == "0" || id == "8")
                {

                    FlagStatus = 0;

                    btnNew.Enabled = false;
                    btnQuery.Enabled = false;
                    btnExecute.Enabled = false;
                    btnCancel.Enabled = false;
                    btnExit.Enabled = false;
                    btnDelete.Enabled = false;
                    btnModify.Enabled = false;

                    btnSave.Enabled = false;
                    btnModify.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;



                    //window.location.href = 'EnterPage.aspx';
                    //alert("You Are Not Authorised To See This Form");
                    //FlagStatus = 0;


                }
                if (id == "1" || id == "9")
                {
                    btnNew.Enabled = true;
                    btnQuery.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnExecute.Enabled = false;

                    btnSave.Enabled = false;
                    btnModify.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    FlagStatus = 1;

                }
                if (id == "2" || id == "10")
                {

                    btnNew.Enabled = false;
                    btnExecute.Enabled = false;
                    btnQuery.Enabled = true;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    //a//btnModify.Enabled = true;
                    btnModify.Enabled = false;

                    btnSave.Enabled = false;
                    //a// btnfirst.Enabled = true;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExit.Enabled = true;
                    FlagStatus = 2;


                }
                if (id == "3" || id == "11")
                {
                    btnNew.Enabled = true;
                    btnQuery.Enabled = true;
                    btnExecute.Enabled = false;
                    btnDelete.Enabled = false;
                    btnModify.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;


                    btnSave.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;

                    FlagStatus = 3;



                }
                if (id == "4" || id == "12")
                {
                    btnNew.Enabled = false;
                    btnQuery.Enabled = true;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExecute.Enabled = false;

                    btnNew.Enabled = false;
                    btnExecute.Enabled = false;
                    btnDelete.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;


                    btnModify.Enabled = false;

                    btnSave.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    FlagStatus = 4;



                }
                if (id == "5" || id == "13")
                {
                    btnNew.Enabled = true;
                    btnSave.Enabled = false;
                    btnQuery.Enabled = true;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExecute.Enabled = false;
                    btnModify.Enabled = false;
                    FlagStatus = 5;


                }
                if (id == "6" || id == "14")
                {
                    btnNew.Enabled = false;
                    btnSave.Enabled = false;
                    btnQuery.Enabled = true;
                    btnModify.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExecute.Enabled = false;

                    FlagStatus = 6;
                }
                if (id == "7" || id == "15")
                {
                    btnNew.Enabled = true;
                    btnSave.Enabled = false;
                    btnQuery.Enabled = true;
                    btnModify.Enabled = false;
                    btnCancel.Enabled = true;
                    btnExit.Enabled = true;
                    btnDelete.Enabled = false;
                    btnfirst.Enabled = false;
                    btnnext.Enabled = false;
                    btnprevious.Enabled = false;
                    btnlast.Enabled = false;
                    btnExecute.Enabled = false;
                    FlagStatus = 7;

                }
            }


      
       

    }

    public void chkstatus(int FlagStatus)
    {
        if (FlagStatus == 0 || FlagStatus == 8)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = false;



        }
        if (FlagStatus == 1 || FlagStatus == 9)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = true;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;

        }
        if (FlagStatus == 2 || FlagStatus == 10)
        {
            btnExecute.Enabled = true;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnNew.Enabled = false;
            btnCancel.Enabled = true;
            btnExecute.Enabled = false;
            btnModify.Enabled = false;
            btnExit.Enabled = true;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;


        }

        if (FlagStatus == 3 || FlagStatus == 11)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

        if (FlagStatus == 4 || FlagStatus == 12)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 5 || FlagStatus == 13)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 6 || FlagStatus == 14)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 7 || FlagStatus == 15)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }


    }

    public void updateStatus()
    {
        chkstatus(FlagStatus);
        if (FlagStatus == 2 || FlagStatus == 3)
        {
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;
            btnDelete.Enabled = false;
        }
        if (FlagStatus == 4)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 5)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 6 || FlagStatus == 7)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
    }

    protected void AspNetMessageBox(string strMessage)
    {
        //strMessage = adminResource.GetStringFromResource(strMessage);
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(product_subsub_category ), "ShowAlert", strAlert, true);
    }

    [Ajax.AjaxMethod]

    public DataSet adchkadvcode(string str, string procode, string prosubcode)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.product_subsub_category auto = new NewAdbooking.Classes.product_subsub_category();

            ds = auto.autocode(str);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.product_subsub_category auto = new NewAdbooking.classesoracle.product_subsub_category();

                ds = auto.autocode(str, procode, prosubcode);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.product_subsub_category auto = new NewAdbooking.classmysql.product_subsub_category();
            ds = auto.autocode(str);
            return ds;
        }


    }
    //[Ajax.AjaxMethod]

    //public DataSet Advdelete(string prosubsubcode, string compcode)
    //{

    //    NewAdbooking.Classes.product_subsub_category del = new NewAdbooking.Classes.product_subsub_category();
    //    DataSet ds1 = new DataSet();
    //    ds1 = del.deleteproduct(prosubsubcode, compcode);
    
    //}
    private void mandatory()
    {
       if (lbproductdescription.Text.IndexOf("*") >= 0)
        {
            hidedrpproduct .Value = "1";
        }
        else
        {
            hidedrpproduct.Value = "0";
        }
        if (lbprosubdeccription.Text.IndexOf("*") >= 0)
        {
            hidedrpsubproduct .Value = "1";
        }
        else
        {
            hidedrpsubproduct.Value = "0";
        }
        if (lbprosubsubcode.Text.IndexOf("*") >= 0)
        {
            hidsubsubcode .Value = "1";
        }
        else
        {
            hidsubsubcode.Value = "0";
        }
        if (lbsubsubprodes.Text.IndexOf("*") >= 0)
        {
            hidesubsubname .Value = "1";
        }
        else
        {
            hidesubsubname.Value = "0";
        }
        if (lbalias.Text.IndexOf("*") >= 0)
        {
            hidesubsubalias .Value = "1";
        }
        else
        {
            hidesubsubalias.Value = "0";
        }
        //if (Representative.Text.IndexOf("*") >= 0)
        //{
        //    hiddenrep.Value = "1";
        //}
        //else
        //{
        //    hiddenrep.Value = "0";
        //}
        //if (validfrom.Text.IndexOf("*") >= 0)
        //{
        //    hiddenvalidfrom.Value = "1";
        //}
        //else
        //{
        //    hiddenvalidfrom.Value = "0";
        //}
        //if (txttilldate.Text.IndexOf("*") >= 0)
        //{
        //    hiddento.Value = "1";
        //}
        //else
        //{
        //    hiddento.Value = "0";
        //}
    }

   
    //protected void drpproduct_SelectedIndexChanged(object sender, EventArgs e)
    //{

    //}
    protected void txtprosubsubcode_TextChanged(object sender, EventArgs e)
    {

    }
    public void btnimage()
    {
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        else
            btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        else
            btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        else
            btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        else
            btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        else
            btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        else
            btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        else
            btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        else
            btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        else
            btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        else
            btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        else
            btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        else
            btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();
    }
}

