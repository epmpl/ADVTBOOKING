using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class ColorMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, System.EventArgs e)
    {
        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";

        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();

        }
        else
        {
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        Ajax.Utility.RegisterTypeForAjax(typeof(ColorMaster));

        //////////////////////
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();



        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/ColorMaster.xml"));

        lbColorcode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString() ;
        lbColorname.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString() ;
        Lbalias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString() ;
       




        hiddenusername.Value = Session["Username"].ToString();
        
       
        btnNew.Focus();
        if (!Page.IsPostBack)
        {
            txtColorCode.Enabled = false;
            txtColorName.Enabled = false;
            txtAlias.Enabled = false;

            btnNew.Attributes.Add("OnClick", "javascript:return NewClick4();");
            btnSave.Attributes.Add("OnClick", "javascript:return SaveClick4();");
            btnModify.Attributes.Add("OnClick", "javascript:return ModifyClick4();");
            btnDelete.Attributes.Add("OnClick", "javascript:return DeleteClick4();");
            btnQuery.Attributes.Add("OnClick", "javascript:return QueryClick4();");
            btnExecute.Attributes.Add("OnClick", "javascript:return ExecuteClick4();");
            btnCancel.Attributes.Add("OnClick", "javascript:return CancelClick4('ColorMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return FirstClick4();");
            btnprevious.Attributes.Add("OnClick", "javascript:return PreviousClick4();");
            btnnext.Attributes.Add("OnClick", "javascript:return NextClick4();");
            btnlast.Attributes.Add("OnClick", "javascript:return LastClick4();");
            btnDelete.Attributes.Add("OnClick", "javascript:return deleteClick();");
            btnExit.Attributes.Add("OnClick", "javascript:return ExitClick4();");
            txtColorName.Attributes.Add("OnChange", "javascript:return autoornot();");
         
            txtAlias.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtAlias');");
            txtColorCode.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtColorCode');");
         
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        // Put user code to initialize the page here
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet modify(string ColorCode,string ColorName,string Alias,string compcode,string userid)
     public DataSet modify(string ColorCode, string ColorName, string Alias, string compcode, string userid, string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.ColorMaster modify = new NewAdbooking.Classes.ColorMaster();
                ds = modify.ModifyValue(ColorCode, ColorName, Alias, compcode, userid);
                //   return ds;
            }


            else
                if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                {
                    NewAdbooking.classesoracle.ColorMaster modify = new NewAdbooking.classesoracle.ColorMaster();
                    ds = modify.ModifyValue(ColorCode, ColorName, Alias, compcode, userid);
                    //   return ds;

                }

                else
                {
                    NewAdbooking.classmysql.ColorMaster modify = new NewAdbooking.classmysql.ColorMaster();
                    ds = modify.ModifyValue(ColorCode, ColorName, Alias, compcode, userid);
                    // return ds;


                }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string ColorCode3 = "Modified Color " + ColorCode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Color ','" + err.Replace("'", "''") + "','Color Updated','" + ColorCode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;

    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
     public DataSet insert(string ColorCode, string ColorName, string Alias, string compcode, string userid, string ip)
     {
         DataSet ds = new DataSet();
         string err = "";
         try
         {
             if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
             {
                 NewAdbooking.Classes.ColorMaster insert = new NewAdbooking.Classes.ColorMaster();

                 ds = insert.InsertValue(ColorCode, ColorName, Alias, compcode, userid);
                 // return ds;
             }

             else
                 if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                 {

                     NewAdbooking.classesoracle.ColorMaster insert = new NewAdbooking.classesoracle.ColorMaster();

                     ds = insert.InsertValue(ColorCode, ColorName, Alias, compcode, userid);
                     //return ds;
                 }
                 else
                 {
                     NewAdbooking.classmysql.ColorMaster insert = new NewAdbooking.classmysql.ColorMaster();
                     ds = insert.InsertValue(compcode, ColorCode, ColorName, userid, Alias);
                     // return ds;


                 }
         }
         catch (Exception e)
         {
             err = e.Message;
         }
         string ColorCode1 = "Inserted Color " + ColorCode;
         clsconnection dconnect = new clsconnection();
         string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Color ','" + err.Replace("'", "''") + "','Color Created','" + ColorCode1;
         sqldd = sqldd + "',";
         sqldd = sqldd + "'" + ip + "')";
         dconnect.executenonquery1(sqldd);
         return ds;
    }

    [Ajax.AjaxMethod]
     public DataSet Select(string ColorCode, string ColorName, string Alias, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.ColorMaster select = new NewAdbooking.Classes.ColorMaster();

            ds = select.SelectValue(ColorCode, ColorName, Alias, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.ColorMaster select = new NewAdbooking.classesoracle.ColorMaster();

                ds = select.SelectValue(ColorCode, ColorName, Alias, compcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.ColorMaster select = new NewAdbooking.classmysql.ColorMaster();
            ds = select.SelectValue(ColorCode, ColorName, Alias, compcode, userid);
            return ds;

        }
    }

    [Ajax.AjaxMethod]
     public DataSet Selectfnpl(string ColorCode, string ColorName, string Alias, string compcode, string userid)
     {
         DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorMaster select = new NewAdbooking.Classes.ColorMaster();            
            ds = select.Selectfnpl(ColorCode, ColorName, Alias, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {

                NewAdbooking.classesoracle.ColorMaster select = new NewAdbooking.classesoracle.ColorMaster();
                ds = select.Selectfnpl(ColorCode, ColorName, Alias, compcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.ColorMaster select = new NewAdbooking.classmysql.ColorMaster();
            ds = select.Selectfnpl(ColorCode, ColorName, Alias, compcode, userid);
            return ds;

        }

    }

    [Ajax.AjaxMethod]
     public DataSet chkcolor(string ColorCode, string ColorName, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.ColorMaster chkcode = new NewAdbooking.Classes.ColorMaster();
         
            ds = chkcode.checkcolor(ColorCode, ColorName, compcode, userid);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.ColorMaster chkcode = new NewAdbooking.classesoracle.ColorMaster();

                ds = chkcode.checkcolor(ColorCode, ColorName, compcode, userid);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.ColorMaster chkcode = new NewAdbooking.classmysql.ColorMaster();
            ds = chkcode.checkcolor(ColorCode, ColorName, compcode, userid);
            return ds;
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
     public DataSet deletecolor(string ColorCode, string compcode, string userid, string ip)
      {
          DataSet da = new DataSet();
          string err = "";
          try
          {
              if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
              {

                  NewAdbooking.Classes.ColorMaster check = new NewAdbooking.Classes.ColorMaster();

                  da = check.DeleteValue(ColorCode, compcode, userid);
                  //     return da;
              }

              else
                  if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
                  {
                      NewAdbooking.classesoracle.ColorMaster check = new NewAdbooking.classesoracle.ColorMaster();

                      da = check.DeleteValue(ColorCode, compcode, userid);
                      //    return da;
                  }
                  else
                  {
                      NewAdbooking.classmysql.ColorMaster check = new NewAdbooking.classmysql.ColorMaster();
                      da = check.DeleteValue(ColorCode, compcode, userid);
                      //  return da;

                  }
          }
          catch (Exception e)
          {
              err = e.Message;
          }
          string ColorCode2 = "Deleted Color " + ColorCode;
          clsconnection dconnect = new clsconnection();
          string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','Color ','" + err.Replace("'", "''") + "','Color Deleted','" + ColorCode2;
          sqldd = sqldd + "',";
          sqldd = sqldd + "'" + ip + "')";
          dconnect.executenonquery1(sqldd);
          return da;
     }

    [Ajax.AjaxMethod]
    public DataSet chkcolorcode(string str)
    {
        DataSet ds = new DataSet();
        if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString()=="sql")
        {
        NewAdbooking.Classes.ColorMaster chk = new NewAdbooking.Classes.ColorMaster();
        
        ds = chk.countcolorcode(str);
        return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.ColorMaster chk = new NewAdbooking.classesoracle.ColorMaster();

                ds = chk.countcolorcode(str);
                return ds;


            }
        else
        {
            NewAdbooking.classmysql.ColorMaster chk = new NewAdbooking.classmysql.ColorMaster();
            ds = chk.countcolorcode(str);
            return ds;


        }

    }
    #region Web Form Designer generated code
    protected void OnInit(EventArgs e)
    {
        //
        // CODEGEN: This call is required by the ASP.NET Web Form Designer.
        //
        InitializeComponent();
        base.OnInit(e);
    }

    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {

    }
    #endregion


   

    
   
}