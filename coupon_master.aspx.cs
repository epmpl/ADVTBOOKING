using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;

public partial class coupon_master : System.Web.UI.Page
{

    static int z = 0;
    string message;
    string compcode1 = "";
    protected void Page_Load(object sender, System.EventArgs e)
    {



        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";

        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            hdndateformate.Value = Session["dateformat"].ToString();
            compcode1 = Session["compcode"].ToString();
        }
        else
        {
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }

        if (hdndateformate.Value == "mm/dd/yyyy")
        {
            HDN_server_date.Value = DateTime.Today.Month + "/" + DateTime.Today.Day + "/" + DateTime.Today.Year;

        }
        else if (hdndateformate.Value == "dd/mm/yyyy")
        {
            HDN_server_date.Value = DateTime.Today.Day + "/" + DateTime.Today.Month + "/" + DateTime.Today.Year;
        }
        else
        {
            HDN_server_date.Value = DateTime.Today.Year + "/" + DateTime.Today.Month + "/" + DateTime.Today.Day;
        }
        DataSet objDataSet = new DataSet();



        DataSet objDataSetbu = new DataSet();
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();




        objDataSet.ReadXml(Server.MapPath("XML/coupon_master.xml"));
        lblprint.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        lblcouname.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        lblcup_amt.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        btnsubmit.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        tblfields.Value = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        selfield.Value = objDataSet.Tables[0].Rows[0].ItemArray[5].ToString();
        mobfield.Value = objDataSet.Tables[0].Rows[0].ItemArray[6].ToString();
        hdnduplicacy.Value = objDataSet.Tables[0].Rows[0].ItemArray[7].ToString();
        hdntablename.Value = objDataSet.Tables[0].Rows[0].ItemArray[8].ToString();
        hiddenusername.Value = Session["username"].ToString();
        Ajax.Utility.RegisterTypeForAjax(typeof(coupon_master));

        if (!Page.IsPostBack)
        {

            btnNew.Attributes.Add("OnClick", "javascript:return CoupExecNew();");
            btnSave.Attributes.Add("OnClick", "javascript:return chkduplicacy();");
            btnCancel.Attributes.Add("OnClick", "javascript:return CoupExecCancel('CoupExecMaster');");
            btnModify.Attributes.Add("OnClick", "javascript:return CoupExecModify('CoupExecMaster');");
            btnQuery.Attributes.Add("OnClick", "javascript:return CoupExecQuery('CoupExecMaster');");
            btnExecute.Attributes.Add("OnClick", "javascript:return CoupExecExecute('CoupExecMaster');");
            btnDelete.Attributes.Add("OnClick", "javascript:return CoupExecDelete();");
            btnfirst.Attributes.Add("OnClick", "javascript:return CoupExecFirst();");
            btnnext.Attributes.Add("OnClick", "javascript:return CoupExecNext();");
            btnprevious.Attributes.Add("OnClick", "javascript:return CoupExecPrevious();");
            btnlast.Attributes.Add("OnClick", "javascript:return CoupExecLast();");
            btnExit.Attributes.Add("onclick", "javascript:return Exit();");
            txtprint_cent.Attributes.Add("onkeydown", "javascript:return fillcoup(event)");
            txtprint_cent.Attributes.Add("onkeypress", "javascript:return fillcoup(event)");
            lstprint.Attributes.Add("onkeydown", "javascript:return onclickcoup(event)");
            lstprint.Attributes.Add("onclick", "javascript:return onclickcoup(event)");

        }
    }




  

    [Ajax.AjaxMethod]
    public DataSet getPubCenter()
    {
      
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.couponmaster coupondetail = new NewAdbooking.Classes.couponmaster();

            ds = coupondetail.getPubCenter();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.couponmaster coupondetail = new NewAdbooking.classesoracle.couponmaster();

            ds = coupondetail.getPubCenter();

        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
           string procedureName = "websp_pubcenter_websp_pubcenter_p";
           string[] parameterValueArray = { compcode1 };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet gencooupon()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.couponmaster coupondetail = new NewAdbooking.Classes.couponmaster();

            ds = coupondetail.get_coupon();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.couponmaster coupondetail = new NewAdbooking.classesoracle.couponmaster();

            ds = coupondetail.get_coupon();

        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "ad_gen_coupon";
            string[] parameterValueArray = { };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public string coupon_save(string tablefields, string tablevalue, string tablename, string action, string dateformat, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        string str = "";
        try
        {

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.couponmaster route = new NewAdbooking.Classes.couponmaster();

                str = route.couponsave(tablefields, tablevalue, tablename, action, dateformat, extra1, extra2);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.couponmaster route = new NewAdbooking.classesoracle.couponmaster();

                str = route.couponsave(tablefields, tablevalue, tablename, action, dateformat, extra1, extra2);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "cir_dynamic_dml_variable_insert_stmt";
                string[] parameterValueArray = { tablefields, tablevalue, tablename, action, dateformat, extra1, extra2 };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
                str = ds.ToString();
            }
            return str;
        }
        catch (Exception ex)
        {
            return ex.Message.ToString();
        }
    }

    [Ajax.AjaxMethod]
    public DataSet route_execute(string tablename, string ex_ficolname, string ex_finalval, string ex_pre, string dateformat, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.couponmaster delroute = new NewAdbooking.Classes.couponmaster();

            ds = delroute.get_execute(tablename, ex_ficolname, ex_finalval, ex_pre, dateformat, extra1, extra2);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.couponmaster delroute = new NewAdbooking.classesoracle.couponmaster();

            ds = delroute.get_execute(tablename, ex_ficolname, ex_finalval, ex_pre, dateformat, extra1, extra2);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "cir_dynamic_dml_variable_execute_stmt";
            string[] parameterValueArray = { tablename, ex_ficolname, ex_finalval, ex_pre, dateformat, extra1, extra2 };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public string get_unitname(string compcode, string unitcode)
    {
        DataSet ds = new DataSet();
        string unittname = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.couponmaster seg = new NewAdbooking.Classes.couponmaster();
                ds = seg.get_unit_name(compcode, unitcode);
            }
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.couponmaster seg = new NewAdbooking.classesoracle.couponmaster();
                ds = seg.get_unit_name(compcode, unitcode);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "cir_get_pubcenter";
                string[] parameterValueArray = { compcode, unitcode };
                NewAdbooking.classmysql.Master obj = new NewAdbooking.classmysql.Master();
                ds = obj.BindCommanFunction(procedureName, parameterValueArray);

            }
            if (ds.Tables[0].Rows.Count > 0)
            {
                unittname = ds.Tables[0].Rows[0].ItemArray[0].ToString();
            }
            return unittname;
        }
        catch (Exception ex)
        {
            return Convert.ToString(ex.Message);
        }
    }
    [Ajax.AjaxMethod]
    public string route_modify(string tablefields, string tablevalue, string tablename, string action, string modcolname, string dateformat, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.couponmaster modroute = new NewAdbooking.Classes.couponmaster();

                ds = modroute.Modify_coup(tablefields, tablevalue, tablename, action, modcolname, dateformat, extra1, extra2);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.couponmaster modroute = new NewAdbooking.classesoracle.couponmaster();

                ds = modroute.Modify_coup(tablefields, tablevalue, tablename, action, modcolname, dateformat, extra1, extra2);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "cir_dynamic_dml_variable_execute_stmt";
                string[] parameterValueArray = { tablefields, tablevalue, tablename, action, modcolname, dateformat, extra1, extra2 };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

            }
            return "True";
        }
        catch (Exception ex)
        {
            return Convert.ToString(ex.Message);
        }
    }

    [Ajax.AjaxMethod]
    public string coup_delete(string fields, string fieldsvalue, string tablename, string action, string wherecon, string dateformat)
    {
        DataSet ds = new DataSet();
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.couponmaster admast = new NewAdbooking.Classes.couponmaster();

                ds = admast.Delete_coup(fields, fieldsvalue, tablename, action, wherecon, dateformat);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.couponmaster admast = new NewAdbooking.classesoracle.couponmaster();

                ds = admast.Delete_coup(fields, fieldsvalue, tablename, action, wherecon, dateformat);
            }
            else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
            {
                string procedureName = "cir_dynamic_dml_variable_delete_stmt";
                string[] parameterValueArray = { fields, fieldsvalue, tablename, action, wherecon, dateformat };
                NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

            }
            return "true";
        }
        catch (Exception ex)
        {
            return Convert.ToString(ex.Message);
        }
    }

    [Ajax.AjaxMethod]
    public DataSet checkduplicacy(string compcol, string compval, string unitcol, string unitval, string tablename, string desc_col, string desc_val, string alias_col, string alias_val, string date, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.couponmaster duplicacy = new NewAdbooking.Classes.couponmaster();

            ds = duplicacy.duplicacy_chk(compcol, compval, unitcol, unitval, tablename, desc_col, desc_val, alias_col, alias_val, date, extra1, extra2);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.couponmaster duplicacy = new NewAdbooking.classesoracle.couponmaster();

            ds = duplicacy.duplicacy_chk(compcol, compval, unitcol, unitval, tablename, desc_col, desc_val, alias_col, alias_val, date, extra1, extra2);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "mysql")
        {
            string procedureName = "cir_check_duplicacy_cir_check_duplicacy_p";
            string[] parameterValueArray = { compcol, compval, unitcol, unitval, tablename, desc_col, desc_val, alias_col, alias_val, date, extra1, extra2 };
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);

        }
        return ds;
    }
}