using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class bookaudit : System.Web.UI.Page
{
    int i = 0;
    int sno = 1;
    protected void Page_Load(object sender, EventArgs e)
    {




        Response.Expires = -1;
        DataGrid1.Visible = true;
        if (Session["compcode"] == null)
        {
            Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddendateformat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();

        hdncompcode.Value = Session["compcode"].ToString();

        hiddenrtaudit_audit.Value = Session["rate_audit"].ToString();

        Ajax.Utility.RegisterTypeForAjax(typeof(bookaudit));
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/Booking_Audit1.xml"));
        lblvfrm.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lblvalidtill.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        lblagency.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        lbluom.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lblagreedrate.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lblclient.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        lblpackage.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        lblagreedamount.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        lblpaymode.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        lblpublichdate.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();

        lbldiscount.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lblrono.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();
        lblnoofinsertion.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
        lblpositionpremium.Text = ds.Tables[0].Rows[0].ItemArray[13].ToString();
        lblrostatus.Text = ds.Tables[0].Rows[0].ItemArray[14].ToString();
        lblpaid.Text = ds.Tables[0].Rows[0].ItemArray[15].ToString();
        lblspecialdiscount.Text = ds.Tables[0].Rows[0].ItemArray[16].ToString();
        lblexecutivename.Text = ds.Tables[0].Rows[0].ItemArray[17].ToString();
        lblcontractname.Text = ds.Tables[0].Rows[0].ItemArray[18].ToString();
        lblspacediscount.Text = ds.Tables[0].Rows[0].ItemArray[19].ToString();
        lbloutstanding.Text = ds.Tables[0].Rows[0].ItemArray[20].ToString();
        lblheight.Text = ds.Tables[0].Rows[0].ItemArray[21].ToString();
        lblspecialcharge.Text = ds.Tables[0].Rows[0].ItemArray[22].ToString();
        lblretainername.Text = ds.Tables[0].Rows[0].ItemArray[23].ToString();
        lbllines.Text = ds.Tables[0].Rows[0].ItemArray[24].ToString();
        lbladdagecomm.Text = ds.Tables[0].Rows[0].ItemArray[25].ToString();
        lblbookingtype.Text = ds.Tables[0].Rows[0].ItemArray[26].ToString();
        lblpageposition.Text = ds.Tables[0].Rows[0].ItemArray[27].ToString();
        lblgrossamt.Text = ds.Tables[0].Rows[0].ItemArray[28].ToString();
        lblcolourtype.Text = ds.Tables[0].Rows[0].ItemArray[29].ToString();
        lblpositionpre1.Text = ds.Tables[0].Rows[0].ItemArray[30].ToString();
        lblretainercommission.Text = ds.Tables[0].Rows[0].ItemArray[31].ToString();
        lbladcategory.Text = ds.Tables[0].Rows[0].ItemArray[32].ToString();
        lblarea.Text = ds.Tables[0].Rows[0].ItemArray[33].ToString();
        lblagtradediscount.Text = ds.Tables[0].Rows[0].ItemArray[34].ToString();
        lbladsubcat1.Text = ds.Tables[0].Rows[0].ItemArray[35].ToString();
        lblschemetype.Text = ds.Tables[0].Rows[0].ItemArray[36].ToString();
        lblbillamount.Text = ds.Tables[0].Rows[0].ItemArray[37].ToString();
        lbladsubcat2.Text = ds.Tables[0].Rows[0].ItemArray[38].ToString();
        lblratecode.Text = ds.Tables[0].Rows[0].ItemArray[39].ToString();
        lbladsubcat3.Text = ds.Tables[0].Rows[0].ItemArray[40].ToString();
        lblcardrate.Text = ds.Tables[0].Rows[0].ItemArray[41].ToString();
        lbladsubcat4.Text = ds.Tables[0].Rows[0].ItemArray[42].ToString();
        lblcardamount.Text = ds.Tables[0].Rows[0].ItemArray[43].ToString();
        Label6.Text = ds.Tables[0].Rows[0].ItemArray[47].ToString();

        btnmodify.Enabled = false;


        if (!IsPostBack)
        {
            bindpub();
            publicationbind();
            //bindagency();
            edition();
            //bindagecli();
            bindbranch();
            //bindexecutive();
            //bindretainer();

            dppubcent.Text = Session["center"].ToString();



            adtypedata(Session["compcode"].ToString());
            //  fillPubCenter(Session["compcode"].ToString());
            btnaudit.Attributes.Add("OnClick", "javascript:return checkboxid();");
            btnmodify.Attributes.Add("OnClick", "javascript:return openpage();");
            // btnclear.Attributes.Add("OnClick", "javascript:return cleardata();");

            dppubcent.Attributes.Add("OnChange", "javascript:return filledition();");
            dpedition.Attributes.Add("onchange", "javascript:return suppbind();");
            btnsubmit.Attributes.Add("OnClick", "javascript:return checklenth();");
            ///
            dpagencyna.Attributes.Add("onkeypress", "javascript:return keySort(this);");


            dpagencyna.Attributes.Add("onkeydown", "javascript:return F2fillagencycr_status(event);");
            dpagencyna.Attributes.Add("onkeypress", "javascript:return F2fillagencycr_status(event);");

            lstagency.Attributes.Add("onclick", "javascript:return ClickAgaencybb(event);");
            lstagency.Attributes.Add("onkeydown", "javascript:return ClickAgaencybb(event);");

            dpagencycli.Attributes.Add("onkeydown", "javascript:return F2fillclientcr_dev(event);");
            dpagencycli.Attributes.Add("onkeypress", "javascript:return F2fillclientcr_dev(event);");

            lstclient.Attributes.Add("onclick", "javascript:return Clickclientaa(event);");
            lstclient.Attributes.Add("onkeydown", "javascript:return Clickclientaa(event);");

          //  dpagencycli.Attributes.Add("onkeypress", "javascript:return keySort(this);");
            dpexecutive.Attributes.Add("onkeydown", "javascript:return F2fillexecutivecr(event);");
            dpexecutive.Attributes.Add("onkeypress", "javascript:return F2fillexecutivecr(event);");

            lstexecutive.Attributes.Add("onclick", "javascript:return Clickexecutive(event);");
            lstexecutive.Attributes.Add("onkeydown", "javascript:return Clickexecutive(event);");

            dpretainer.Attributes.Add("onkeydown", "javascript:return F2fillretainercr_exe(event);");
            dpretainer.Attributes.Add("onkeypress", "javascript:return F2fillretainercr_exe(event);");

            lstretainer.Attributes.Add("onclick", "javascript:return Clickretainer_exe(event);");
            lstretainer.Attributes.Add("onkeydown", "javascript:return Clickretainer_exe(event);");


           // dpretainer.Attributes.Add("onkeypress", "javascript:return keySort(this);");
           // dpexecutive.Attributes.Add("onkeypress", "javascript:return keySort(this);");
            btnExit.Attributes.Add("OnClick", "javascript:return catexitclick();");

            txtvalidityfrom.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            txttilldate.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            dppub1.Attributes.Add("OnChange", "javascript:return filledition();");
            // drpadtype.Attributes.Add("OnChange", "javascript:return filluom();");


        }
        txtagency.ReadOnly = true;
        txtratecode.ReadOnly = true;
        txtclient.ReadOnly = true;
        txtadsubcat4.ReadOnly = true;

        txtagtradediscount.ReadOnly = true;
        txtagreedamount.ReadOnly = true;
        txtarea.ReadOnly = true;
        txtagreedrate.ReadOnly = true;
        txtgrossamt.ReadOnly = true;

        txtcontractname.ReadOnly = true;
        txtaddagecomm.ReadOnly = true;
        txtpackage.ReadOnly = true;
        txtdiscount.ReadOnly = true;
        txtpageposition.ReadOnly = true;
        txtexecutivename.ReadOnly = true;
        txtlines.ReadOnly = true;
        txtbookingtype.ReadOnly = true;
        txtheight.ReadOnly = true;
        txtcolourtype.ReadOnly = true;

        txtwidth.ReadOnly = true;
        txtspecialdiscount.ReadOnly = true;
        txtdiscount.ReadOnly = true;
        txtagreedrate.ReadOnly = true;
        txtschemetype.ReadOnly = true;

        txtpaid.ReadOnly = true;
        txtpublishdate.ReadOnly = true;
        txtpositionpremium.ReadOnly = true;
        txtretainercommission.ReadOnly = true;
        txtadcategory.ReadOnly = true;
        txtadsubcat1.ReadOnly = true;
        txtuom.ReadOnly = true;
        txtoutstanding.ReadOnly = true;
        txtadsubcat2.ReadOnly = true;
        txtspecialcharge.ReadOnly = true;
        txtadsubcat3.ReadOnly = true;
        txtrono.ReadOnly = true;
        txtrostatus.ReadOnly = true;
        txtretainername.ReadOnly = true;
        txtpaymode.ReadOnly = true;
        txtnoofinsertion.ReadOnly = true;
        txtspacediscount.ReadOnly = true;
        txtbillamount.ReadOnly = true;
        txtinsbillamt.ReadOnly = true;
        txtcardrate.ReadOnly = true;
        btnmodify.Enabled = false;
        txtcardamount.ReadOnly = true;


        //txtagencysubcode.Enabled = false;
        //txtagency.Enabled = false;
        //txtheight.Enabled = false;


        txtspacediscount.ReadOnly = true;


    }


    [Ajax.AjaxMethod]
    public DataSet fillEdition2(string publication, string pub_cent, string comp_code)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { publication, pub_cent, comp_code };
        if (ConfigurationSettings.AppSettings["Connectiontype"].ToString() == "sql")
        {
            NewAdbooking.Classes.Class1 pub_cent2 = new NewAdbooking.Classes.Class1();
            ds = pub_cent2.edition(publication, "0", comp_code);
        }
        else if (ConfigurationSettings.AppSettings["Connectiontype"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Class1 pub_cent2 = new NewAdbooking.classesoracle.Class1();
            ds = pub_cent2.edition(publication, pub_cent, comp_code);
        }
        else
        {
            string procedureName = "edition_proc_edition_proc_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;



    }
    protected void btnsubmit_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        string revcenter = "";
        string edition = "";
        string branch = "";
        string[] parameterValueArray = new string[] { txtvalidityfrom.Text, txttilldate.Text, Session["dateformat"].ToString(), revcenter, drpadtype.SelectedValue, dppub1.SelectedValue, dppubcent.SelectedValue, hiddenedition.Value, hdnagency1.Value, hdnclient1.Value, branch, hdnretainer.Value, hdnexecode.Value, hiddensupplement.Value, drpstatus.SelectedValue, drpuom.SelectedValue, Session["userid"].ToString(), txtBookingId.Text };
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            if (drpbranch.SelectedValue == "0")
            {
                branch = "0";
            }
            else
            {
                branch = drpbranch.SelectedValue;
            }

            NewAdbooking.Classes.Booking_Audit1 abc = new NewAdbooking.Classes.Booking_Audit1();
            ds = abc.websp_bindgrid(Session["dateformat"].ToString(), txttilldate.Text, txtvalidityfrom.Text, revcenter, drpadtype.SelectedValue, dppub1.SelectedValue, dppubcent.SelectedValue, hiddenedition.Value, hdnagency1.Value, hdnclient1.Value, branch, hdnretainer.Value, hdnexecode.Value, hiddensupplement.Value, drpstatus.SelectedValue, drpuom.SelectedValue, Session["userid"].ToString(), txtBookingId.Text);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            if (drpbranch.SelectedValue == "0")
            {
                branch = "0";
            }
            else
            {
                branch = drpbranch.SelectedValue;
            }
            NewAdbooking.classesoracle.Booking_Audit1 abc = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = abc.websp_bindgrid(Session["dateformat"].ToString(), txttilldate.Text, txtvalidityfrom.Text, revcenter, drpadtype.SelectedValue, dppub1.SelectedValue, dppubcent.SelectedValue, hiddenedition.Value, hdnagency1.Value, hdnclient1.Value, branch, hdnretainer.Value, hdnexecode.Value, hiddensupplement.Value, drpstatus.SelectedValue, drpuom.SelectedValue, Session["userid"].ToString(), txtBookingId.Text);

        }
        else
        {
            if (drpbranch.SelectedValue == "0")
            {
                branch = "0";
            }
            else
            {
                branch = drpbranch.SelectedValue;
            }
            //string procedureName = "websp_bindaudit_websp_bindaudit_p";
            //NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            //ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
            NewAdbooking.classmysql.audit_comman abc = new NewAdbooking.classmysql.audit_comman();
            ds = abc.websp_bindgrid(txtvalidityfrom.Text, txttilldate.Text, Session["dateformat"].ToString(), revcenter, drpadtype.SelectedValue, dppub1.SelectedValue, dppubcent.SelectedValue, hiddenedition.Value, hdnagency1.Value, hdnclient1.Value, branch, hdnretainer.Value, hdnexecode.Value, hiddensupplement.Value, drpstatus.SelectedValue, drpuom.SelectedValue, Session["userid"].ToString(), txtBookingId.Text);

        }
        Session["RowLen"] = ds.Tables[0].Rows.Count;
        hidden1.Value = Session["RowLen"].ToString();
        if (hidden1.Value == "0")
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(bookaudit), "cc", "checklenthnew()", true);
        }
        //else
        //{
        DataGrid1.DataSource = ds;
        DataGrid1.DataBind();
        //}
    }
    protected void DataGrid1_ItemDataBound(object sender, DataGridItemEventArgs e)
    {

        string sno1 = e.Item.Cells[0].Text;
        string insert_status = e.Item.Cells[15].Text;
        string cioidchk = e.Item.Cells[2].Text;

        if ((sno1 != "S.No") && (cioidchk != "") && (sno1 != "&nbsp;"))
        {
            e.Item.Cells[0].Text = Convert.ToString(sno++);
        }



        if (insert_status == "audit by rate")
        {
            e.Item.Cells[1].Text = "<img src=\"images/flag.gif\" ></img>";
            e.Item.Cells[16].Enabled = false;

        }

        if ((insert_status == "audit by rate") && (insert_status != "") && (insert_status != "&nbsp;"))
        {
            e.Item.Cells[0].Enabled = false;
        }




        hiddenrowcount.Value = Session["RowLen"].ToString();
        if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
        {
            if (e.Item.Cells[4].Text != "&nbsp;")
            {
                // e.Item.Cells[0].Text = "<img src=\"images/flag.gif\" ></img>";
            }
            string bookingid = e.Item.Cells[2].Text;
            //e.Item.Cells[1].Text = "<a id='cio" + i + "' style=\"cursor:hand;color:blue\" onClick=\"openbooking('" + e.Item.Cells[1].Text + "','cio" + i + "','" + hiddenrowcount.Value + "','" + e.Item.Cells[4].Text + "','')\">" + e.Item.Cells[1].Text + "</a>";
            e.Item.Cells[2].Text = "<a style=\"cursor:hand;color:blue\" id='cio" + i + "'  onClick=\"openbooking('" + e.Item.Cells[2].Text + "','cio" + i + "','" + hiddenrowcount.Value + "','" + e.Item.Cells[4].Text + "','" + e.Item.Cells[7].Text + "',''  )\">" + e.Item.Cells[2].Text + "</a>";
            i = i + 1;
        }
    }


    [Ajax.AjaxMethod]
    public DataSet execute(string bookingid, string compcode, string adtype, string dateformat,string insertion)
    {

        DataSet ds = new DataSet();


        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Booking_Audit1 executebullet = new NewAdbooking.Classes.Booking_Audit1();
            ds = executebullet.executeauditmast1(bookingid, compcode, adtype, dateformat, insertion);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Booking_Audit1 executebullet = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = executebullet.executeauditmast1(bookingid, compcode, adtype, dateformat, insertion);
           
        }
        else
        {
            string procedureName = "executebookingdispaudit_executebookingdispaudit_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] {  compcode ,bookingid  , null , null , null ,null  , null  , adtype , dateformat};
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet updatestatus(string bookingid, string insertion, string edition)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Booking_Audit1 executebullet = new NewAdbooking.Classes.Booking_Audit1();

            ds = executebullet.updatestatus(bookingid, insertion, edition);
            return ds;
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Booking_Audit1 executebullet = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = executebullet.updatestatus(bookingid, insertion, edition);
        }
        else
        {
            string procedureName = "updatestaus_updatestaus_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { bookingid, edition, insertion };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    //public void bindretainer()
    //{
    //    DataSet ds = new DataSet();

    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.BillingClass.Classes.publish_audit objregion = new NewAdbooking.BillingClass.Classes.publish_audit();
    //        ds = objregion.bindretainer(Session["compcode"].ToString());

    //    }
    //    else
    //    {
    //        NewAdbooking.classesoracle.Booking_Audit1 objregion = new NewAdbooking.classesoracle.Booking_Audit1();
    //        ds = objregion.bindretainer(Session["compcode"].ToString());
    //    }

    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = ("--Select Retainer--");
    //    li1.Value = "0";
    //    li1.Selected = true;
    //    dpretainer.Items.Add(li1);



    //    int i;
    //    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //    {
    //        ListItem li;
    //        li = new ListItem();
    //        li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //        li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //        dpretainer.Items.Add(li);


    //    }
    //}

    //public void bindexecutive()
    //{
    //    string tname = "";

    //    DataSet ds = new DataSet();

    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {

    //        NewAdbooking.BillingClass.Classes.publish_audit exec = new NewAdbooking.BillingClass.Classes.publish_audit();
    //        ds = exec.adexec(Session["compcode"].ToString(), Session["userid"].ToString(), tname);

    //    }
    //    else
    //    {
    //        NewAdbooking.classesoracle.Booking_Audit1 exec = new NewAdbooking.classesoracle.Booking_Audit1();
    //        ds = exec.adexec(Session["compcode"].ToString(), Session["userid"].ToString(), tname);
    //    }


    //    ListItem li1;
    //    li1 = new ListItem();

    //    li1.Text = "--Select Executive--";
    //    li1.Value = "0";
    //    li1.Selected = true;
    //    dpexecutive.Items.Add(li1);


    //    int i;
    //    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //    {
    //        ListItem li;
    //        li = new ListItem();
    //        li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //        li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //        dpexecutive.Items.Add(li);


    //    }
    //}

    [Ajax.AjaxMethod]
    public DataSet bindsupp(string compcode, string edition)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.BillingClass.Classes.publish_audit pub_cent2 = new NewAdbooking.BillingClass.Classes.publish_audit();
            ds = pub_cent2.pubsupply(compcode, edition);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Booking_Audit1 pub_cent2 = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = pub_cent2.pubsupply(compcode, edition);
        }
        else
        {
            string procedureName = "bindsuppliment_bindsuppliment_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { compcode, edition };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;

    }
    //public void bindagecli()
    //{
    //    // regionhidden = hiddenregion.Value;
    //    DataSet ds = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.Classes.Class1 adagencycli = new NewAdbooking.Classes.Class1();
    //        ds = adagencycli.adagencycli(Session["compcode"].ToString());
    //    }
    //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //    {
    //        NewAdbooking.classesoracle.Class1 adagencycli = new NewAdbooking.classesoracle.Class1();
    //        ds = adagencycli.adagencycli(Session["compcode"].ToString());
    //    }
    //    else
    //    {
    //    }

    //    ListItem li1;
    //    li1 = new ListItem();
    //    dpagencycli.Items.Clear();


    //    DataSet ds1 = new DataSet();
    //    ds1.ReadXml(Server.MapPath("XML/frontend.xml"));
    //    li1.Text = ds1.Tables[0].Rows[0].ItemArray[12].ToString();
    //    // li1.Text = "--Select Client Name--";
    //    li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
    //    li1.Selected = true;
    //    dpagencycli.Items.Add(li1);

    //    int i;
    //    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //    {
    //        ListItem li;
    //        li = new ListItem();
    //        li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //        li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //        dpagencycli.Items.Add(li);


    //    }
    //}

    [Ajax.AjaxMethod]
    public DataSet fillF2_CreditAgency(string compcol, string agen)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.Report.classesoracle.Class1 adagency = new NewAdbooking.Report.classesoracle.Class1();
            ds = adagency.agencyxls(compcol, agen);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Report.Classes.Class1 adagency = new NewAdbooking.Report.Classes.Class1();
            ds = adagency.agencyxls(compcol, agen);
        }
        else
        {
            string procedureName = "bindagencyforxls_bindagencyforxls_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { compcol, agen };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet fillF2_Creditclient(string compcol, string cli)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.Report.classesoracle.Class1 adagencycli = new NewAdbooking.Report.classesoracle.Class1();
            ds = adagencycli.clientxls(compcol, cli);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Report.Classes.Class1 adagencycli = new NewAdbooking.Report.Classes.Class1();
            ds = adagencycli.clientxls(compcol, cli);
        }
        else
        {
            string procedureName = "BINDCLIENTFORXLS_BINDCLIENTFORXLS_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { compcol, cli };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet fillF2_Creditexecutive(string compcol, string exectv)
    {
        string tname = "", userid = "";

        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.Report.classesoracle.billregister exec = new NewAdbooking.Report.classesoracle.billregister();
            ds = exec.executivexls(compcol, userid, tname, exectv);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Report.Classes.Class1 exec = new NewAdbooking.Report.Classes.Class1();
            ds = exec.executivexls(compcol, userid, tname, exectv);
        }
        else
        {
            string procedureName = "xlsBindexecnew_xlsBindexecnew_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { compcol, userid, tname, exectv };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


    [Ajax.AjaxMethod]
    public DataSet fillF2_Creditretainer(string compcol, string ret)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.Report.classesoracle.SHACHIREPORT objregion = new NewAdbooking.Report.classesoracle.SHACHIREPORT();
            ds = objregion.retainerxls(compcol, ret);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Report.Classes.Class1 objregion = new NewAdbooking.Report.Classes.Class1();
            ds = objregion.retainerxls(compcol, ret);
        }
        else
        {
            string procedureName = "xlsRetainerbind.xlsRetainerbind_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { compcol, ret };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        return ds;
    }

    public void edition()
    {
        ListItem li;
        li = new ListItem();
        dpedition.Items.Clear();
        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/frontend.xml"));
        li.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
        //li.Text = "-Select Edition Name-";
        li.Value = "0";
        li.Selected = true;
        dpedition.Items.Add(li);

    }


    public void bindbranch()
    {

        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.BillingClass.Classes.publish_audit bind = new NewAdbooking.BillingClass.Classes.publish_audit();
            ds = bind.bindbranch();
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Booking_Audit1 bind = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = bind.bindbranch();
        }
        else
        {
            string procedureName = "bind_branch_bind_branch_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        int i;
        ListItem li1;

        li1 = new ListItem();
        drpbranch.Items.Clear();
        li1.Text = "-Select Branch-";
        li1.Value = "0";
        li1.Selected = true;
        drpbranch.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpbranch.Items.Add(li);


        }
        drpbranch.SelectedValue = Session["revenue"].ToString();
    }
    public void adtypedata(string compcode)
    {

        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Booking_Audit1 bind = new NewAdbooking.Classes.Booking_Audit1();
            ds = bind.adtypbind(compcode);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            NewAdbooking.classesoracle.Booking_Audit1 bind = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = bind.adtypbind(compcode);

        }
        else
        {
            string procedureName = "advtypbind_advtypbind_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { compcode };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        int i;
        ListItem li1;

        li1 = new ListItem();
        drpadtype.Items.Clear();
        li1.Text = "-Select Ad Type-";
        li1.Value = "0";
        li1.Selected = true;
        drpadtype.Items.Add(li1);

        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            drpadtype.Items.Add(li);


        }

    }

    //public void bindagency()
    //{
    //    DataSet ds = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
    //        NewAdbooking.BillingClass.Classes.publish_audit adagency = new NewAdbooking.BillingClass.Classes.publish_audit();
    //        ds = adagency.agency(Session["compcode"].ToString());

    //    }
    //    else
    //    {

    //        NewAdbooking.classesoracle.Class1 adagency = new NewAdbooking.classesoracle.Class1();
    //        ds = adagency.agency(Session["compcode"].ToString());
    //    }


    //    ListItem li1;
    //    li1 = new ListItem();
    //    dpagencyna.Items.Clear();

    //    DataSet ds1 = new DataSet();
    //    ds1.ReadXml(Server.MapPath("XML/frontend.xml"));
    //    li1.Text = ds1.Tables[0].Rows[0].ItemArray[7].ToString();

    //    li1.Value = "0";
    //    li1.Selected = true;
    //    dpagencyna.Items.Add(li1);

    //    int i;
    //    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //    {
    //        ListItem li;
    //        li = new ListItem();
    //        li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //        li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //        dpagencyna.Items.Add(li);


    //    }
    //}

    //private void fillPubCenter(string compcode)
    //{

    //    DataSet ds;

    //    if(ConfigurationSettings .AppSettings ["ConnectionType"].ToString ()=="sql")
    //    {
    //    NewAdbooking.Classes.Booking_Audit1 logindetail = new NewAdbooking.Classes.Booking_Audit1();       
    //    ds = logindetail.getPubCenter(compcode);
    //    }
    //    else
    //    {
    //        NewAdbooking.classesoracle.Booking_Audit1 logindetail = new NewAdbooking.classesoracle.Booking_Audit1();
    //        ds = logindetail.getPubCenter(compcode);

    //    }
    //    drprevenu.Items.Clear();
    //    ListItem li1;
    //    li1 = new ListItem();
    //    li1.Text = "-Select Center-";
    //    li1.Value = "0";
    //    li1.Selected = true;
    //    drprevenu.Items.Add(li1);

    //    int i;
    //    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //    {
    //        ListItem li;
    //        li = new ListItem();
    //        li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //        li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //        drprevenu.Items.Add(li);
    //    }

    //}

    //protected void DropDownList1_SelectedIndexChanged(object sender, EventArgs e)
    //{
    //    //DataSet ds = new DataSet();
    //    //if (ConfigurationSettings.AppSettings["Connectiontype"].ToString() == "sql")
    //    //{
    //    //    NewAdbooking.Classes.Class1 pub_cent2 = new NewAdbooking.Classes.Class1();
    //    //    ds = pub_cent2.edition(dppub1.SelectedValue, dppubcent.SelectedValue, Session["compcode"].ToString());
    //    //}
    //    //else if (ConfigurationSettings.AppSettings["Connectiontype"].ToString() == "orcl")
    //    //{
    //    //    NewAdbooking.classesoracle.Class1 pub_cent2 = new NewAdbooking.classesoracle.Class1();
    //    //    ds = pub_cent2.edition(dppub1.SelectedValue, dppubcent.SelectedValue, Session["compcode"].ToString());
    //    //}
    //    //else
    //    //{
    //    //}

    //    //int i;
    //    //ListItem li;
    //    //li = new ListItem();
    //    //dpedition.Items.Clear();
    //    //DataSet ds1 = new DataSet();
    //    //ds1.ReadXml(Server.MapPath("XML/frontend.xml"));
    //    //li.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
    //    //li.Value = "0";
    //    //li.Selected = true;
    //    //dpedition.Items.Add(li);


    //    //if (ds.Tables.Count > 0)
    //    //{
    //    //    for (i = 0; i < ds.Tables[0].Rows.Count; i++)
    //    //    {
    //    //        ListItem li1;
    //    //        li1 = new ListItem();
    //    //        li1.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
    //    //        li1.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
    //    //        dpedition.Items.Add(li1);
    //    //    }
    //    //}
    //}

    public void publicationbind()
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["Connectiontype"].ToString() == "sql")
        {
            NewAdbooking.Classes.Class1 pub_cent1 = new NewAdbooking.Classes.Class1();
            ds = pub_cent1.pub_cent(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["Connectiontype"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Class1 pub_cent1 = new NewAdbooking.classesoracle.Class1();
            ds = pub_cent1.pub_cent_NEW(Session["compcode"].ToString());
        }
        else
        {
            string procedureName = "bind_pubcentname_bind_pubcentname_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { Session["compcode"].ToString() };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        int i;
        ListItem li;
        li = new ListItem();
        dppubcent.Items.Clear();

        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/frontend.xml"));
        li.Text = ds1.Tables[0].Rows[0].ItemArray[4].ToString();
        // li.Text = "-Select Publication Center-";
        li.Value = "0";
        li.Selected = true;
        dppubcent.Items.Add(li);


        if (ds.Tables.Count > 0)
        {
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li1;
                li1 = new ListItem();
                li1.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li1.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                dppubcent.Items.Add(li1);
            }
        }


    }

    public void bindpub()
    {
        //regionhidden=hiddenregion.Value;
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["Connectiontype"].ToString() == "sql")
        {
            NewAdbooking.Classes.Class1 advpub = new NewAdbooking.Classes.Class1();
            ds = advpub.advpub(Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["Connectiontype"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Class1 advpub = new NewAdbooking.classesoracle.Class1();
            ds = advpub.advpub(Session["compcode"].ToString());
        }
        else
        {
            string procedureName = "Bind_PubName_Bind_PubName_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { Session["compcode"].ToString() };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        ListItem li1;
        li1 = new ListItem();

        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/frontend.xml"));

        li1.Text = ds1.Tables[0].Rows[0].ItemArray[5].ToString();
        li1.Value = "0";//objDataSet.Tables[0].Rows[i].ItemArray[0].ToString();
        li1.Selected = true;
        dppub1.Items.Add(li1);

        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            dppub1.Items.Add(li);


        }
    }
    protected void btnaudit_Click(object sender, EventArgs e)
    {
        btnsubmit_Click(sender, e);

    }
    [Ajax.AjaxMethod]
    public DataSet adduomAjax(string compcode, string adtype)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Adsize binduom = new NewAdbooking.Classes.Adsize();
            ds = binduom.uombind(compcode, adtype);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Adsize binduom = new NewAdbooking.classesoracle.Adsize();
            ds = binduom.uombind(compcode, adtype);
        }
        else
        {
            string procedureName = "uomadsize_uomadsize_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { compcode, adtype };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }
    protected void drpadtype_SelectedIndexChanged(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Adsize binduom = new NewAdbooking.Classes.Adsize();
            ds = binduom.uombind(Session["compcode"].ToString(), drpadtype.SelectedValue);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Adsize binduom = new NewAdbooking.classesoracle.Adsize();
            ds = binduom.uombind(Session["compcode"].ToString(), drpadtype.SelectedValue);
        }
        else
        {
            string procedureName = "uomadsize_uomadsize_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            string[] parameterValueArray = new string[] { Session["compcode"].ToString(), drpadtype.SelectedValue };
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        drpuom.Items.Clear();
        ListItem li1 = new ListItem();
        li1.Text = "--- Select Uom ---";
        li1.Value = "0";
        li1.Selected = true;
        drpuom.Items.Add(li1);

        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            drpuom.Items.Add(li);


        }
    }

}
