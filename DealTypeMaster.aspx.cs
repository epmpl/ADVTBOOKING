using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class DealTypeMaster : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        if (Session["compcode"] == null)
        {
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }

        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddenDateFormat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();


        Ajax.Utility.RegisterTypeForAjax(typeof(DealTypeMaster));

        //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^//
        //************************Code For Read The XML For The Buttons & Labels**********************//
        //____________________________________________________________________________________________//

        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/Button.xml"));
        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/DealTypeMaster.xml"));
        lbdealcode.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
        lbdealname.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
        Lbdealalias.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();

        //Button Navigation On Page Load

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        txtdealcode .Enabled = false;
        txtdealname .Enabled = false;
        txtdealalias.Enabled = false;

        btnNew.Focus();

        if (!Page.IsPostBack)
        {
            //Function Of Button Call From JavaScript
            btnNew.Attributes.Add("OnClick", "javascript:return DealNewclick();");
            btnSave.Attributes.Add("OnClick", "javascript:return DealSaveclick();");
            btnModify.Attributes.Add("OnClick", "javascript:return DealModifyclick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return DealDeleteclick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return DealQueryclick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return DealExecuteclick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return DealCancelclick('DealTypeMaster');");
            btnfirst.Attributes.Add("OnClick", "javascript:return Dealfirstclick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return Dealpreviousclick();");
            btnnext.Attributes.Add("OnClick", "javascript:return Dealnextclick();");
            btnlast.Attributes.Add("OnClick", "javascript:return Deallastclick();");
            btnExit.Attributes.Add("OnClick", "javascript:return DealExitclick();");
            //Function Of Auto Generated Code
            txtdealname.Attributes.Add("OnChange", "javascript:return dealautogeneratedcode();");

            //txtdealcode.Attributes.Add("OnKeyPress", "javascript:return ClientSpecialchar();");
            //txtdealname.Attributes.Add("OnKeyPress", "javascript:return ClientSpecialchar();");
        
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
    }
   
    //Function For Save Button
    [Ajax.AjaxMethod]

    public DataSet DealSave(string companycode, string userid, string daelcode, string dealname, string dealalias)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DealTypeMaster save = new NewAdbooking.Classes.DealTypeMaster();
            ds = save.savedeal(companycode, userid, daelcode, dealname, dealalias);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.DealTypeMaster save = new NewAdbooking.classesoracle.DealTypeMaster();
                ds = save.savedeal(companycode, userid, daelcode, dealname, dealalias);

            }
        else
        {
            NewAdbooking.classmysql.DealTypeMaster save = new NewAdbooking.classmysql.DealTypeMaster();
            ds = save.savedeal(companycode, userid, daelcode, dealname, dealalias);
        }
        return ds;
           
    }

    //Function For Modify
    [Ajax.AjaxMethod]

    public DataSet DealModify(string companycode, string userid, string dealcode, string dealname, string dealalias)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DealTypeMaster update = new NewAdbooking.Classes.DealTypeMaster();
            ds = update.dealupdate(companycode, userid, dealcode, dealname, dealalias);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.DealTypeMaster update = new NewAdbooking.classesoracle.DealTypeMaster();
                ds = update.dealupdate(companycode, userid, dealcode, dealname, dealalias);

            }
        else
        {
            NewAdbooking.classmysql.DealTypeMaster update = new NewAdbooking.classmysql.DealTypeMaster();

            ds = update.dealupdate(companycode, userid, dealcode, dealname, dealalias);
        }
        return ds;
    }

    //Function For Execute
    [Ajax.AjaxMethod]

    public DataSet dealexe(string companycode, string dealcode, string dealname,string dealalias)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DealTypeMaster exe = new NewAdbooking.Classes.DealTypeMaster();
            ds = exe.execute(companycode, dealcode, dealname, dealalias);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.DealTypeMaster exe = new NewAdbooking.classesoracle.DealTypeMaster();
                ds = exe.execute(companycode, dealcode, dealname, dealalias);
 
            }
        else
        {
            NewAdbooking.classmysql.DealTypeMaster exe = new NewAdbooking.classmysql.DealTypeMaster();

            ds = exe.execute(companycode, dealcode, dealname, dealalias);
        }
        return ds;
    }

    //Function For Delete
    [Ajax.AjaxMethod]

    public void dealdelete(string companycode, string dealcode,string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DealTypeMaster delete = new NewAdbooking.Classes.DealTypeMaster();

            ds = delete.deletedeal(companycode, dealcode, userid);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.DealTypeMaster delete = new NewAdbooking.classesoracle.DealTypeMaster();

                ds = delete.deletedeal(companycode, dealcode, userid);
            }
        else
        {
            NewAdbooking.classmysql.DealTypeMaster delete = new NewAdbooking.classmysql.DealTypeMaster();

            ds = delete.deletedeal(companycode, dealcode, userid);
        }
       // return ds;

    }
 //For Auto Generate Code through the Ajax
   
    [Ajax.AjaxMethod]
    public DataSet chkdealcodename(string str/*,string cod*/)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DealTypeMaster chk = new NewAdbooking.Classes.DealTypeMaster();
            ds = chk.countdealcode(str/*,cod*/);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.DealTypeMaster chk = new NewAdbooking.classesoracle.DealTypeMaster();
                ds = chk.countdealcode(str/*,cod*/);
            }
        else
        {
            NewAdbooking.classmysql.DealTypeMaster chk = new NewAdbooking.classmysql.DealTypeMaster();
            ds = chk.countdealcode(str/*,cod*/);
        }
        return ds;

    }

    [Ajax.AjaxMethod]
    public DataSet dealcode(string companycode, string userid, string dealcode, string dealname)
    {
        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.DealTypeMaster chkdeal = new NewAdbooking.Classes.DealTypeMaster();
            ds = chkdeal.chkdealcode(companycode, userid, dealcode, dealname);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.DealTypeMaster chkdeal = new NewAdbooking.classesoracle.DealTypeMaster();
                ds = chkdeal.chkdealcode(companycode, userid, dealcode, dealname);
            }
        else
        {
            NewAdbooking.classmysql.DealTypeMaster chkdeal = new NewAdbooking.classmysql.DealTypeMaster();
            ds = chkdeal.chkdealcode(companycode, userid, dealcode, dealname);
        }
        return ds;
    }

    //*******************************************************************************************//
    //^^^^^^^^Call The This Function From The Javascript For See the data through the Ajax^^^^^^^//
    //**************************After Click The First,Privious,Next,Last*************************//
    //___________________________________________________________________________________________//
    //[Ajax.AjaxMethod]

    //public DataSet dealfpnl()
    //{
    //    NewAdbooking.Classes.DealTypeMaster first = new NewAdbooking.Classes.DealTypeMaster();
    //    DataSet ds = new DataSet();
    //    ds = first.dealfpnl();
    //    return ds;
    //}








}
