using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class SupplementType : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
         Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";

        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();

        }
        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"]; 
        Ajax.Utility.RegisterTypeForAjax(typeof(SupplementType));

        //////////////////////
        DataSet objDataSetbu = new DataSet();
        // Read in the XML file
        objDataSetbu.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = objDataSetbu.Tables[0].Rows[0].ItemArray[11].ToString();



        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/SupplementType.xml"));

        lbSupptypcode.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lbSuppltypname.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        lbsupptypalias.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
       




        hiddenusername.Value = Session["Username"].ToString();

        btnNew.Enabled = true;
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnnext.Enabled = false;
        btnprevious.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = objDataSetbu.Tables[1].Rows[0].ItemArray[11].ToString();
        btnNew.Focus();
        // Put user code to initialize the page here
        if (!Page.IsPostBack)
        {
            txtSupptypcode.Enabled = false;
            txtSuppltypname.Enabled = false;
            txtAlias.Enabled = false;
        
            btnNew.Attributes.Add("OnClick", "javascript:return suppNewClick();");
            btnSave.Attributes.Add("OnClick", "javascript:return suppSaveClick();");
            btnModify.Attributes.Add("OnClick", "javascript:return suppModifyClick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return suppDeleteClick();");
            btnQuery.Attributes.Add("OnClick", "javascript:return suppQueryClick();");
            btnExecute.Attributes.Add("OnClick", "javascript:return suppExecuteClick();");
            btnCancel.Attributes.Add("OnClick", "javascript:return suppCancelClick('SupplementType');");
            btnfirst.Attributes.Add("OnClick", "javascript:return suppFirstClick();");
            btnprevious.Attributes.Add("OnClick", "javascript:return suppPreviousClick();");
            btnnext.Attributes.Add("OnClick", "javascript:return suppNextClick();");
            btnlast.Attributes.Add("OnClick", "javascript:return suppLastClick();");
            btnDelete.Attributes.Add("OnClick", "javascript:return suppdeleteClick();");
            btnExit.Attributes.Add("OnClick", "javascript:return suppExitClick();");
            txtSuppltypname.Attributes.Add("OnBlur", "javascript:return suppautoornot();");
            //txtSuppltypname.Attributes.Add("OnChange", "javascript:return bla();");

            txtAlias.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtAlias');");
            txtSupptypcode.Attributes.Add("OnBlur", "javascript:return ClientUpperCase('txtSupptypcode');");
         
        }
        // Put user code to initialize the page here
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet modify(string supptypcode,string supptypname,string Alias,string compcode,string userid)
     public DataSet modify(string supptypcode, string supptypname,string Alias, string compcode, string userid,string ip)
     {
         DataSet ds = new DataSet();
         string err = "";
        try
        {
        if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
        {
        NewAdbooking.Classes.SupplementType modify = new NewAdbooking.Classes.SupplementType();
       
        ds = modify.ModifyValue(supptypcode, supptypname,Alias, compcode, userid);
        //return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplementType modify = new NewAdbooking.classesoracle.SupplementType();
            ds = modify.ModifyValue(supptypcode, supptypname, Alias, compcode, userid);
          //  return ds;
        }
        else
        {
            NewAdbooking.classmysql.SupplementType modify = new NewAdbooking.classmysql.SupplementType();

            ds = modify.ModifyValue(supptypcode, supptypname, Alias, compcode, userid);
            //return ds;
        }
        }
        catch(Exception e)
        {
            err=e.Message;
        }
        string supptypcode3 = "Modified SupplementType " + supptypcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','SupplementType','" + err.Replace("'", "''") + "','SupplementType Modified','" + supptypcode3;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;

    }

    [Ajax.AjaxMethod]
    //		public DataSet modify(string supptypcode,string supptypname,string Alias,string compcode,string userid)
    public DataSet modifysuppchk(string supptypcode, string supptypname, string Alias, string compcode, string userid)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplementType modify = new NewAdbooking.Classes.SupplementType();
           
            ds = modify.modifysuppchk1(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplementType modify = new NewAdbooking.classesoracle.SupplementType();
            ds = modify.modifysuppchk1(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.SupplementType modify = new NewAdbooking.classmysql.SupplementType();

            ds = modify.modifysuppchk1(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet insert(string supptypcode,string supptypname,string Alias,string compcode,string userid)
    public DataSet insert(string supptypcode, string supptypname, string Alias, string compcode, string userid,string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.SupplementType insert = new NewAdbooking.Classes.SupplementType();

                ds = insert.InsertValue(supptypcode, supptypname, Alias, compcode, userid);
                //   return ds;
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.SupplementType insert = new NewAdbooking.classesoracle.SupplementType();
                ds = insert.InsertValue(supptypcode, supptypname, Alias, compcode, userid);
                // return ds;
            }
            else
            {

                NewAdbooking.classmysql.SupplementType insert = new NewAdbooking.classmysql.SupplementType();

                ds = insert.InsertValue(supptypcode, supptypname, Alias, compcode, userid);
                //return ds;
            }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string supptypcode1 = "Inserted SupplementType " + supptypcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','SupplementType','" + err.Replace("'", "''") + "','SupplementType Inserted','" + supptypcode1;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;
    }

    [Ajax.AjaxMethod]
    //		public DataSet Select(string supptypcode,string supptypname,string Alias,string compcode,string userid)
     public DataSet Select(string supptypcode, string supptypname,string Alias, string compcode, string userid)
     {
         DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplementType select = new NewAdbooking.Classes.SupplementType();
           
            ds = select.SelectValue(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplementType select = new NewAdbooking.classesoracle.SupplementType();
            ds = select.SelectValue(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }
        else
        {

            NewAdbooking.classmysql.SupplementType select = new NewAdbooking.classmysql.SupplementType();

            ds = select.SelectValue(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }
    }

    [Ajax.AjaxMethod]
    //		public DataSet Selectfnpl(string supptypcode,string supptypname,string Alias,string compcode,string userid)
     public DataSet Selectfnpl(string supptypcode, string supptypname,string Alias, string compcode, string userid)
     {
         DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplementType select = new NewAdbooking.Classes.SupplementType();
          
            ds = select.Selectfnpl(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplementType select = new NewAdbooking.classesoracle.SupplementType();
            ds = select.Selectfnpl(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.SupplementType select = new NewAdbooking.classmysql.SupplementType();

            ds = select.Selectfnpl(supptypcode, supptypname, Alias, compcode, userid);
            return ds;
        }

    }

    [Ajax.AjaxMethod]
    //		public DataSet chkcolor(string supptypcode,string compcode,string userid)
     public DataSet chksupptyp(string supptypcode, string compcode, string userid)
     {
         DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplementType chkcode = new NewAdbooking.Classes.SupplementType();
           
            ds = chkcode.chksupptyp1(supptypcode, compcode, userid);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplementType chkcode = new NewAdbooking.classesoracle.SupplementType();
            ds = chkcode.chksupptyp1(supptypcode, compcode, userid);
            return ds;
        }
        else
        {

            NewAdbooking.classmysql.SupplementType chkcode = new NewAdbooking.classmysql.SupplementType();

            ds = chkcode.chksupptyp1(supptypcode, compcode, userid);
            return ds;
        }


    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    //		public DataSet deletecolor(string supptypcode,string compcode,string userid)
     public DataSet deletecolor(string supptypcode, string compcode, string userid,string ip)
     {
         DataSet da = new DataSet();
        string err="";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {

                NewAdbooking.Classes.SupplementType check = new NewAdbooking.Classes.SupplementType();

                da = check.DeleteValue(supptypcode, compcode, userid);
                //return da;
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.SupplementType check = new NewAdbooking.classesoracle.SupplementType();
                da = check.DeleteValue(supptypcode, compcode, userid);
                //return da;
            }
            else
            {
                NewAdbooking.classmysql.SupplementType check = new NewAdbooking.classmysql.SupplementType();

                da = check.DeleteValue(supptypcode, compcode, userid);
                //return da;
            }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string supptypcode2 = "Deleted SupplementType " + supptypcode;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["userid"] + "','SupplementType','" + err.Replace("'", "''") + "','SupplementType Deleted','" + supptypcode2;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return da;

    }

    [Ajax.AjaxMethod]
    public DataSet chksupptypcode(string str)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.Classes.SupplementType chk = new NewAdbooking.Classes.SupplementType();
            
            ds = chk.countsupptypcode(str);
            return ds;
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.SupplementType chk = new NewAdbooking.classesoracle.SupplementType();
            ds = chk.countsupptypcode(str);
            return ds;
        }
        else
        {
            NewAdbooking.classmysql.SupplementType chk = new NewAdbooking.classmysql.SupplementType();

            ds = chk.countsupptypcode(str);
            return ds;


        }

    

    }
}
