using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class addummydaypages : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        Response.Buffer = true;
        Response.ExpiresAbsolute = DateTime.Now.AddDays(-1d);
        Response.Expires = -1500;
        Response.CacheControl = "no-cache";
      //  btnNew.Focus();

        if (Session["compcode"] != null)
        {
            hiddencompcode.Value = Session["compcode"].ToString();
            hiddenuserid.Value = Session["userid"].ToString();
            hiddenauto.Value = Session["autogenerated"].ToString();
            hiddendateformat.Value = Session["dateformat"].ToString();
        }

        else
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>alert('Your session has been Expired');window.close();</script>");
            return;
        }

        Ajax.Utility.RegisterTypeForAjax(typeof(addummydaypages));
        hiddenusername.Value = Session["Username"].ToString();

        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
       
        btnNew.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();

        DataSet objDataSet = new DataSet();
        objDataSet.ReadXml(Server.MapPath("XML/addummydaypages.xml"));

        lbDay.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        lbPName.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        lbPCName.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        lbEdition.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        lbSuppliment.Text = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        lbNPages.Text = objDataSet.Tables[0].Rows[0].ItemArray[5].ToString();
        lbFrom.Text = objDataSet.Tables[0].Rows[0].ItemArray[6].ToString();
        lbTo.Text = objDataSet.Tables[0].Rows[0].ItemArray[7].ToString();
        //drpDay.Focus();
        drpDay.Items[0].Selected = true;

        pageDis();//Enable false for all controls on load except btnNew, btnQuery, btnCancel and btnExit
        fillPubName();

        if (!Page.IsPostBack)
        {
            btnNew.Attributes.Add("OnClick", "javascript:return adDDPNew();");
            btnSave.Attributes.Add("onClick", "javascript:return adDDPSave_client();");
            btnModify.Attributes.Add("onClick", "javascript:return adDDPModify_client();");
            btnQuery.Attributes.Add("onClick", "javascript:return adDDPQuery_client();");
            btnExecute.Attributes.Add("onClick", "javascript:return adDDPExecute_client();");
            btnCancel.Attributes.Add("onClick", "javascript:return adDDPCancel('addummydaypages');");
            btnDelete.Attributes.Add("onClick", "javascript:return adDDPDelete_client();");
            btnfirst.Attributes.Add("onClick", "javascript:return adDDPFirst();");
            btnprevious.Attributes.Add("onClick", "javascript:return adDDPPrevious();");
            btnnext.Attributes.Add("onClick", "javascript:return adDDPNext();");
            btnlast.Attributes.Add("onClick", "javascript:return adDDPLast();");
            btnExit.Attributes.Add("onClick", "javascript:return adDDPExit();");

            txtFrom.Attributes.Add("onChange", "javascript:return checkdate(this)");
            txtTo.Attributes.Add("onChange", "javascript:return checkdate(this)");

            drpPName.Attributes.Add("onChange", "javascript:return fillCenter_client()");
            drpPCName.Attributes.Add("onChange","javascript:return fillEdiName_client()");
            drpEdition.Attributes.Add("onChange", "javascript:return fillSuppliment_client()");
        }
    }

    //This function Disables all the contrls
    
    public void pageDis()
    {
        btnNew.Enabled = true;
        
        btnSave.Enabled = false;
        btnModify.Enabled = false;
        btnDelete.Enabled = false;
        btnQuery.Enabled = true;
        btnExecute.Enabled = false;
        btnCancel.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = false;
        btnlast.Enabled = false;
        btnExit.Enabled = true;

        drpDay.Enabled = false;
        drpPName.Enabled = false;
        drpPCName.Enabled = false;
        drpEdition.Enabled = false;
        drpSuppliment.Enabled = false;
        txtFrom.Enabled = false;
        txtTo.Enabled = false;

        btnNew.Focus();
    }
//*********************************************************************************************************

//********This function is used to fill the Publication Name for this it calls the function getPubName***
    [Ajax.AjaxMethod]
    public DataSet fillPubName(string ccode)
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
            ds = adDDP.getPubName(ccode);
            return ds;
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();
                ds = adDDP.getPubName(ccode);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
            ds = adDDP.getPubName(ccode);
            return ds;
        }
    }

//*********************************************************************************************************

//***This function is used to fill the Publication Center Name for this it calls the function getPubCName***

    [Ajax.AjaxMethod]
    public DataSet fillPCName()
    {
        DataSet ds;
        if(ConfigurationSettings.AppSettings ["ConnectionType"].ToString ()=="sql")
        {
            NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
            ds = adDDP.getPubCName();
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();
                ds = adDDP.getPubCName();
                return ds;
            }
        else
        {
            NewAdbooking .classmysql .addummydaypages adDDP=new NewAdbooking.classmysql.addummydaypages ();
            ds = adDDP.getPubCName();
            return ds;
        }
    }

//*********************************************************************************************************

//***This function is used to fill the Edition for this it calls the function getEdiName***

    [Ajax.AjaxMethod]
    public DataSet fillEdiName(string pubCode,string pubCenter)
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
            ds = adDDP.getEdiName(pubCode, pubCenter);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();
                ds = adDDP.getEdiName(pubCode, pubCenter);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
            ds = adDDP.getEdiName(pubCode, pubCenter);
            return ds;
        }
    }
//*******************************************************************************************
    [Ajax.AjaxMethod]
    public DataSet fillSuppliment(string pubCode, string pubEdit)
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
            ds = adDDP.getSuppliment(pubCode, pubEdit);
            return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();
                ds = adDDP.getSuppliment(pubCode, pubEdit);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
            ds = adDDP.getSuppliment(pubCode, pubEdit);
            return ds;
        }
    }
//************************************************************************************************
    [Ajax.AjaxMethod]
    public void saveInsert(string day, string pubCode, string centerCode, string ediCode, string supCode, string nPages, string dFrom, string dTo, string compCode, string userId, string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
            ds = adDDP.insertData(day, pubCode, centerCode, ediCode, supCode, nPages, dFrom, dTo, compCode, userId);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();
                ds = adDDP.insertData(day, pubCode, centerCode, ediCode, supCode, nPages, dFrom, dTo, compCode, userId,dateformat);

            }
        else
        {
            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
            ds = adDDP.insertData(day, pubCode, centerCode, ediCode, supCode, nPages, dFrom, dTo, compCode, userId);

        }
    }
//*************************************************************
    [Ajax.AjaxMethod]
    public string chkDup(string day, string pubCode, string centerCode, string ediCode, string supCode,string recordId)
    {
        string dup;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
            dup = adDDP.chkDupRec(day, pubCode, centerCode, ediCode, supCode, recordId);
            return dup;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();
                dup = adDDP.chkDupRec(day, pubCode, centerCode, ediCode, supCode, recordId);
                return dup;
            }
        else
        {
            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
            dup = adDDP.chkDupRec(day, pubCode, centerCode, ediCode, supCode, recordId);
            return dup;
        }
    }
//*************************************************************************
    [Ajax.AjaxMethod]
    public DataSet adDDPExecute(string compCode, string day, string pubCode, string centerCode, string ediCode, string supCode,string dateformat)
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
     
        ds = adDDP.getData(compCode, day, pubCode, centerCode, ediCode, supCode);
        return ds;
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();

                ds = adDDP.getData(compCode, day, pubCode, centerCode, ediCode, supCode,dateformat);
                return ds;
            }
        else
        {
            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
            ds = adDDP.getData(compCode, day, pubCode, centerCode, ediCode, supCode);
            return ds;
        }
    }
//************************************************************************8
    [Ajax.AjaxMethod]
    public void adDDPDelete(string recordId)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
        NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
        ds = adDDP.deleteData(recordId);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();
                ds = adDDP.deleteData(recordId);
            }
        else
        {
            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
            ds = adDDP.deleteData(recordId);
        }
    }
//*********************************************************************************
    [Ajax.AjaxMethod]
    public void saveUpdate(string recordId, string day, string pubCode, string centerCode, string ediCode, string supCode, string nPages, string dFrom, string dTo, string compCode, string userId,string dateformat)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.addummydaypages adDDP = new NewAdbooking.Classes.addummydaypages();
            ds = adDDP.updateData(recordId, day, pubCode, centerCode, ediCode, supCode, nPages, dFrom, dTo, compCode, userId);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages adDDP = new NewAdbooking.classesoracle.addummydaypages();
                ds = adDDP.updateData(recordId, day, pubCode, centerCode, ediCode, supCode, nPages, dFrom, dTo, compCode, userId,dateformat);

            }
        else
        {
            NewAdbooking.classmysql.addummydaypages adDDP = new NewAdbooking.classmysql.addummydaypages();
            ds = adDDP.updateData(recordId, day, pubCode, centerCode, ediCode, supCode, nPages, dFrom, dTo, compCode, userId);
        }
    }
//***************************************************************************************



    private void fillPubName()
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString()== "sql")
        {
            NewAdbooking.Classes.addummydaypages pubNames = new NewAdbooking.Classes.addummydaypages();
            ds = pubNames.getPubName(hiddencompcode.Value);
            drpPName.Items.Clear();
            ListItem li1;
            li1 = new ListItem();
            li1.Text = "--Select Publication--";
            li1.Value = "0";
            li1.Selected = true;
            drpPName.Items.Add(li1);

            int i;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drpPName.Items.Add(li);
            }
        }

        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.addummydaypages pubNames = new NewAdbooking.classesoracle.addummydaypages();
                ds = pubNames.getPubName(hiddencompcode.Value);
                drpPName.Items.Clear();
                ListItem li1;
                li1 = new ListItem();
                li1.Text = "--Select Publication--";
                li1.Value = "0";
                li1.Selected = true;
                drpPName.Items.Add(li1);

                int i;
                for (i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    ListItem li;
                    li = new ListItem();
                    li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                    li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                    drpPName.Items.Add(li);
                }
            }
        else
        {
            NewAdbooking.classmysql.addummydaypages pubNames = new NewAdbooking.classmysql.addummydaypages();
            ds = pubNames.getPubName(hiddencompcode.Value);
            drpPName.Items.Clear();
            ListItem li1;
            li1 = new ListItem();
            li1.Text = "--Select Publication--";
            li1.Value = "0";
            li1.Selected = true;
            drpPName.Items.Add(li1);

            int i;
            for (i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                ListItem li;
                li = new ListItem();
                li.Text = ds.Tables[0].Rows[i].ItemArray[0].ToString();
                li.Value = ds.Tables[0].Rows[i].ItemArray[1].ToString();
                drpPName.Items.Add(li);
            }
        }

    }
}
