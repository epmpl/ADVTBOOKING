using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class rofileform : System.Web.UI.Page
{
    int i = 0;
    int sno = 1;
    int j = 0;
    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        DataGrid1.Visible = true;
        if (Session["compcode"] == null)
        {
            Response.Redirect("login.aspx");
            Response.Write("<script>window.parent.location=\"login.aspx\";</script>");
            return;
        }
        ip1.Value = Request.ServerVariables["REMOTE_ADDR"];
        hiddencomcode.Value = Session["compcode"].ToString();
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenuserid.Value = Session["userid"].ToString();
        hiddendateformat.Value = Session["DateFormat"].ToString();
        hiddenusername.Value = Session["Username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();

        hiddenrtaudit_audit.Value = Session["rate_audit"].ToString();

        Ajax.Utility.RegisterTypeForAjax(typeof(rofileform));
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/rofileform.xml"));
        lblvfrm.Text = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        lblvalidtill.Text = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        lblagency.Text = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        lbluom.Text = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        lblagreedrate.Text = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        lblclient.Text = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        lblpackage.Text = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        lblagreedamount.Text = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        lblpaymode.Text = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        lblpublichdate.Text = ds.Tables[0].Rows[0].ItemArray[9].ToString();

        lbldiscount.Text = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        lblrono.Text = ds.Tables[0].Rows[0].ItemArray[11].ToString();
        lblnoofinsertion.Text = ds.Tables[0].Rows[0].ItemArray[12].ToString();
        lblpositionpremium.Text = ds.Tables[0].Rows[0].ItemArray[13].ToString();
        lblrostatus.Text = ds.Tables[0].Rows[0].ItemArray[14].ToString();
        lblpaid.Text = ds.Tables[0].Rows[0].ItemArray[15].ToString();
        lblspecialdiscount.Text = ds.Tables[0].Rows[0].ItemArray[16].ToString();
        lblexecutivename.Text = ds.Tables[0].Rows[0].ItemArray[17].ToString();
        lblcontractname.Text = ds.Tables[0].Rows[0].ItemArray[18].ToString();
        lblspacediscount.Text = ds.Tables[0].Rows[0].ItemArray[19].ToString();
        lbloutstanding.Text = ds.Tables[0].Rows[0].ItemArray[20].ToString();
        lblheight.Text = ds.Tables[0].Rows[0].ItemArray[21].ToString();
        lblspecialcharge.Text = ds.Tables[0].Rows[0].ItemArray[22].ToString();
        lblretainername.Text = ds.Tables[0].Rows[0].ItemArray[23].ToString();
        lbllines.Text = ds.Tables[0].Rows[0].ItemArray[24].ToString();
        lbladdagecomm.Text = ds.Tables[0].Rows[0].ItemArray[25].ToString();
        lblbookingtype.Text = ds.Tables[0].Rows[0].ItemArray[26].ToString();
        lblpageposition.Text = ds.Tables[0].Rows[0].ItemArray[27].ToString();
        lblgrossamt.Text = ds.Tables[0].Rows[0].ItemArray[28].ToString();
        lblcolourtype.Text = ds.Tables[0].Rows[0].ItemArray[29].ToString();
        lblpositionpre1.Text = ds.Tables[0].Rows[0].ItemArray[30].ToString();
        lblretainercommission.Text = ds.Tables[0].Rows[0].ItemArray[31].ToString();
        lbladcategory.Text = ds.Tables[0].Rows[0].ItemArray[32].ToString();
        lblarea.Text = ds.Tables[0].Rows[0].ItemArray[33].ToString();
        lblagtradediscount.Text = ds.Tables[0].Rows[0].ItemArray[34].ToString();
        lbladsubcat1.Text = ds.Tables[0].Rows[0].ItemArray[35].ToString();
        lblschemetype.Text = ds.Tables[0].Rows[0].ItemArray[36].ToString();
        lblbillamount.Text = ds.Tables[0].Rows[0].ItemArray[37].ToString();
        lbladsubcat2.Text = ds.Tables[0].Rows[0].ItemArray[38].ToString();
        lblratecode.Text = ds.Tables[0].Rows[0].ItemArray[39].ToString();
        lbladsubcat3.Text = ds.Tables[0].Rows[0].ItemArray[40].ToString();
        lblcardrate.Text = ds.Tables[0].Rows[0].ItemArray[41].ToString();
        lbladsubcat4.Text = ds.Tables[0].Rows[0].ItemArray[42].ToString();
        lblcardamount.Text = ds.Tables[0].Rows[0].ItemArray[43].ToString();
        //Label6.Text = ds.Tables[0].Rows[0].ItemArray[47].ToString();
        lblbillrecamt.Text = ds.Tables[0].Rows[0].ItemArray[48].ToString();
        lblbillbalamt.Text = ds.Tables[0].Rows[0].ItemArray[49].ToString();
        lblaudit.Text = ds.Tables[0].Rows[0].ItemArray[50].ToString();
        btnmodify.Enabled = false;
        btnsave1.Enabled = false;
        btnsub.Enabled = false;
        if (!IsPostBack)
        {
            fillPubCenter(Session["compcode"].ToString());
            binddist();
            payment();
            btnsub.Attributes.Add("OnClick", "javascript:return openbookingModify1();");
            dppubcent.Attributes.Add("OnChange", "javascript:return bindQBC();");
            drpdist.Attributes.Add("onchange", "javascript:return bind_taluka();");
            btnsubmit.Attributes.Add("OnClick", "javascript:return mandat();");
            btnExit.Attributes.Add("OnClick", "javascript:return catexitclick1();");
            lstagency.Attributes.Add("onclick", "javascript:return insertagency();");
            lstclient.Attributes.Add("onclick", "javascript:return insertagency();");
            lstexec.Attributes.Add("onclick", "javascript:return insertagency();");
            lstretainer.Attributes.Add("onclick", "javascript:return showretainervalue(this);");
            txtvalidityfrom.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            txttilldate.Attributes.Add("OnChange", "javascript:return checkdate(this);");
            drpbranch.Attributes.Add("OnChange", "javascript:return fetchbranch();");
            DropDownList3.Attributes.Add("OnChange", "javascript:return fetchtalu();");
            btnsave1.Attributes.Add("OnClick", "javascript:return save1();");
        }
    }
    private void fillPubCenter(string compcode)
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {

            NewAdbooking.BillingClass.Classes.session_billing logindetail = new NewAdbooking.BillingClass.Classes.session_billing();
            ds = logindetail.getPubCenter();
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.login logindetail = new NewAdbooking.classesoracle.login();

            ds = logindetail.getPubCenter_company(compcode);

        }
        else
        {
            NewAdbooking.classmysql.login logindetail = new NewAdbooking.classmysql.login();
            ds = logindetail.getPubCenter();
        }



        dppubcent.Items.Clear();
        ListItem li1;



        li1 = new ListItem();
        li1.Text = "All";
        li1.Value = "All";
        li1.Selected = true;
        dppubcent.Items.Add(li1);
        int i;
        for (i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li;
            li = new ListItem();
            li.Text = ds.Tables[0].Rows[i].ItemArray[1].ToString();
            li.Value = ds.Tables[0].Rows[i].ItemArray[0].ToString();
            dppubcent.Items.Add(li);
        }


    }
    [Ajax.AjaxMethod]
    public DataSet fillQBC(string pubcenter)
    {
        DataSet ds;
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.login logindetail = new NewAdbooking.Classes.login();
            ds = logindetail.getQBC(pubcenter);
        }
        else
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.login logindetail = new NewAdbooking.classesoracle.login();
                ds = logindetail.getQBC(pubcenter);
            }
            else
            {
                NewAdbooking.classmysql.login logindetail = new NewAdbooking.classmysql.login();
                ds = logindetail.getQBC(pubcenter);
            }
        return ds;

    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindExec(string compcode, string execname)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.rofileform clsbooking = new NewAdbooking.Classes.rofileform();
            ds = clsbooking.getExec(compcode, execname, "0");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.rofileform clsbooking = new NewAdbooking.classesoracle.rofileform();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = clsbooking.getExec(compcode, execname, "0", Session["revenue"].ToString());
            }
            else
            {
                ds = clsbooking.getExec(compcode, execname, "0", "0");
            }
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = clsbooking.getExec(compcode, execname, "0", Session["revenue"].ToString());
            }
            else
            {
                ds = clsbooking.getExec(compcode, execname, "0", "0");
            }
        }
        return ds;



    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindagencyname(string compcode, string userid, string agency)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.rofileform bindagenname = new NewAdbooking.Classes.rofileform();
            ds = bindagenname.bindagency(compcode, userid, agency);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.rofileform bindagenname = new NewAdbooking.classesoracle.rofileform();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            }
            else
            {
                ds = bindagenname.bindagency(compcode, userid, agency, "0");
            }
        }
        else
        {
            NewAdbooking.classmysql.BookingMaster bindagenname = new NewAdbooking.classmysql.BookingMaster();
            if (Session["FILTER"].ToString() == "D")
            {
                ds = bindagenname.bindagency(compcode, userid, agency, Session["revenue"].ToString());
            }
            else
            {
                ds = bindagenname.bindagency(compcode, userid, agency, "0");
            }
        }
        return ds;



    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindclientname(string compcode, string client)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.BookingMaster clsbooking = new NewAdbooking.Classes.BookingMaster();
            ds = clsbooking.getClientName(compcode, client);
        }

        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            if (Session["FILTER"].ToString() == "D")
            {
                NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
                ds = clsbooking.getClientName(compcode, client, Session["revenue"].ToString());
            }
            else
            {
                NewAdbooking.classesoracle.BookingMaster clsbooking = new NewAdbooking.classesoracle.BookingMaster();
                ds = clsbooking.getClientName(compcode, client, "0");
            }
        }

        else
        {
            NewAdbooking.classmysql.BookingMaster clsbooking = new NewAdbooking.classmysql.BookingMaster();
            ds = clsbooking.getClientName(compcode, client);
        }
        return ds;
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet bindRetainer(string compcode, string reatinername)
    {
        DataSet dsret = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.rofileform getRetain = new NewAdbooking.Classes.rofileform();

            dsret = getRetain.getretainer(compcode, reatinername);

        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.rofileform getRetain = new NewAdbooking.classesoracle.rofileform();
            if (Session["FILTER"].ToString() == "D")
            {
                dsret = getRetain.getretainer(compcode, reatinername, Session["revenue"].ToString());
            }
            else
            {
                dsret = getRetain.getretainer(compcode, reatinername, "0");
            }

        }
        else
        {
            NewAdbooking.classmysql.BookingMaster getRetain = new NewAdbooking.classmysql.BookingMaster();
            dsret = getRetain.getretainer(compcode, reatinername, "0");
        }
        return dsret;
    }
    public void binddist()
    {
        //hdncompcode.Value
        DataSet ds = new DataSet();
        drpdist.Items.Clear();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.taluka_mast district = new NewAdbooking.Classes.taluka_mast();
            ds = district.binddist(hiddencompcode.Value); /*, "", "", "");*/
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.taluka_mast district = new NewAdbooking.classesoracle.taluka_mast();
            ds = district.binddist(hiddencompcode.Value); /*, "", "", "");*/
        }
        ListItem li = new ListItem();
        li.Text = "--Select District--";
        li.Value = "0";
        li.Selected = true;
        drpdist.Items.Add(li);
        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[i]["DIST_NAME"].ToString();
            li1.Value = ds.Tables[0].Rows[i]["DIST_CODE"].ToString();
            drpdist.Items.Add(li1);

        }

    }
    [Ajax.AjaxMethod]
    public DataSet bindtaluka(string compcode, string district)
    {
        DataSet ds = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.BillingClass.classesoracle.billing_save taluka = new NewAdbooking.BillingClass.classesoracle.billing_save();
            ds = taluka.talukabind(compcode, district);
        }
        else
        {
            NewAdbooking.BillingClass.Classes.session_billing taluka = new NewAdbooking.BillingClass.Classes.session_billing();
            ds = taluka.talukabind(compcode, district);
        }


        return ds;

    }
    public void payment()
    {
        //hdncompcode.Value
        DataSet ds = new DataSet();
        DropDownList4.Items.Clear();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.rofileform district = new NewAdbooking.Classes.rofileform();
            ds = district.payment(hiddencompcode.Value); /*, "", "", "");*/
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.rofileform district = new NewAdbooking.classesoracle.rofileform();
            ds = district.payment(hiddencompcode.Value); /*, "", "", "");*/
        }
        ListItem li = new ListItem();
        li.Text = "--Select Payment--";
        li.Value = "0";
        li.Selected = true;
        DropDownList4.Items.Add(li);
        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[i]["Payment_Mode_Name"].ToString();
            li1.Value = ds.Tables[0].Rows[i]["Pay_Mode_Code"].ToString();
            DropDownList4.Items.Add(li1);

        }

    }
    protected void btnsubmit_Click(object sender, EventArgs e)
    {
        string client = "";
        string agency = "";
        string exename = "";
        string retainer = "";
        string branch = hiddenbran.Value;
        if (dpretainer.Text != "" && dpretainer.Text != "-Select Retainer-") 
      {
          retainer = dpretainer.Text.Substring(dpretainer.Text.LastIndexOf("(") + 1, dpretainer.Text.Length - dpretainer.Text.LastIndexOf("(") - 2);
          //string[] retainer1 = dpretainer.Text.Split('(');
          //retainer = retainer1[1].Replace(")", "");
      }

      string district = drpdist.SelectedItem.Text;
       if (txtexecname.Text != "")
       {
           exename = txtexecname.Text.Substring(txtexecname.Text.LastIndexOf("(") + 1, txtexecname.Text.Length - txtexecname.Text.LastIndexOf("(") - 2);
           //string[] exename1 = txtexecname.Text.Split('(');
           //exename = exename1[1].Replace(")", "");
       }
      
       
       string publication =dppubcent.SelectedValue;
       if (txtagency1.Text != "")
       {
           agency = txtagency1.Text.Substring(txtagency1.Text.LastIndexOf("(") + 1, txtagency1.Text.Length - txtagency1.Text.LastIndexOf("(") - 2);
           //string[] agency1 = txtagency1.Text.Split('(');
           //agency = agency1[1].Replace(")", "");
       }

       string taluka = hiddentalu.Value;
       if (txtclient1.Text != "")
       {
           string[] client1 = txtclient1.Text.Split('(');
           client = client1[1].Replace(")", "");
       }
      
       string fromdate=txtvalidityfrom.Text;
       string todate=txttilldate.Text;
       string paymode=DropDownList4.SelectedValue;
       string comecode1 = hiddencomcode.Value;
       string date = hiddendateformat.Value;
       string rostatus = drprodocstatus.SelectedValue;
       string rono = tbrono.Text;
       string bookingid = tbbookingid.Text;
       DataSet ds = new DataSet();

       if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
       {
           NewAdbooking.classesoracle.rofileform taluka1 = new NewAdbooking.classesoracle.rofileform();
           ds = taluka1.gbind(comecode1, paymode, todate, fromdate, client, taluka, agency, publication, exename, district, retainer, branch, date, rostatus,rono,bookingid);
       }
       else
       {
           NewAdbooking.Classes.rofileform taluka1 = new NewAdbooking.Classes.rofileform();
           ds = taluka1.gbind(comecode1, paymode, todate, fromdate, client, taluka, agency, publication, exename, district, retainer, branch, date, rostatus, rono, bookingid);
       }
       Session["RowLen"] = ds.Tables[0].Rows.Count;
       hidden1.Value = Session["RowLen"].ToString();
       if (hidden1.Value == "0")
       {
           ScriptManager.RegisterClientScriptBlock(this, typeof(rofileform), "cc", "checklenthnew1()", true);
       }
       else
       {
           DataGrid1.DataSource = ds;
           DataGrid1.DataBind();
       }
       
    }
   
    protected void DataGrid1_ItemDataBound(object sender, DataGridItemEventArgs e)
    {
        string sno1 = e.Item.Cells[0].Text;
        string cioidchk = e.Item.Cells[1].Text;
        string cioidchk1 = e.Item.Cells[7].Text;
        string cioidchk2 = e.Item.Cells[6].Text;
        if ((sno1 != "S.No")  && (sno1 != "&nbsp;"))
        {
            e.Item.Cells[0].Text = Convert.ToString(sno++);
        }
        hiddenrowcount.Value = Session["RowLen"].ToString();
        if (cioidchk2 != "Tick Vlue")
        {
            if (cioidchk2 == "&nbsp;" || cioidchk2 == "0")
            {
                e.Item.Cells[6].Text = "<select id='select" + j.ToString() + "'><option value=\"0\">Select Tick</option><option value=\"x\">Xerox</option><option value=\"o\">Orginal</option><option value=\"f\">Fax</option></select>";
            }
            else
            {
                e.Item.Cells[6].Text = "<select id='select" + j.ToString() + "'><option value=\"0\">Select Tick</option>";
                if (cioidchk2 == "o")
                {
                e.Item.Cells[6].Text =  e.Item.Cells[6].Text + "<option value=\"x\">Xerox</option><option selected value=\"o\">Orginal</option><option value=\"f\">Fax</option></select>";
                }
                else if (cioidchk2 == "x")
                {
                    e.Item.Cells[6].Text = e.Item.Cells[6].Text +"<option selected value=\"x\">Xerox</option><option  value=\"o\">Orginal</option><option value=\"f\">Fax</option></select>";
                }
                else if (cioidchk2 == "f")
                {
                    e.Item.Cells[6].Text = e.Item.Cells[6].Text +"<option  value=\"x\">Xerox</option><option  value=\"o\">Orginal</option><option selected value=\"f\">Fax</option></select>";
                    
                }
            }
            
        }
        if (cioidchk1 != "Update" && cioidchk1 != "&nbsp;")
        {
            e.Item.Cells[7].Text = "<input type=button value=Update onclick=\"openremark('" + cioidchk + "','"+j.ToString()+"')\" />";
        }
        if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
        {
            string bookingid = e.Item.Cells[1].Text;
            e.Item.Cells[1].Text = "<a style=\"cursor:hand;color:blue\" id='cio" + i + "'  onClick=\"openbooking1('" + e.Item.Cells[1].Text + "','cio" + i + "','" + hiddenrowcount.Value + "','" + e.Item.Cells[5].Text +  "',''  )\">" + e.Item.Cells[1].Text + "</a>";

            
            i = i + 1;
            j = j + 1;
           
        }
        else{
            j=0;
        }
        


    }
    [Ajax.AjaxMethod]
    public DataSet fetchamt(string bookingid, string compcode)
    {

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.rofileform executebullet = new NewAdbooking.Classes.rofileform();
            ds = executebullet.fetchamt(bookingid, compcode);
        }
        else
        {
            NewAdbooking.classesoracle.rofileform executebullet = new NewAdbooking.classesoracle.rofileform();
            ds = executebullet.fetchamt(bookingid, compcode);
            
        }
        return ds;
    }
    [Ajax.AjaxMethod]
    public DataSet execute(string bookingid, string compcode, string adtype, string dateformat)
    {

        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Booking_Audit1 executebullet = new NewAdbooking.Classes.Booking_Audit1();
            ds = executebullet.executeauditmast1(bookingid, compcode, adtype, dateformat,"");
            return ds;
        }
        else
        {
            NewAdbooking.classesoracle.Booking_Audit1 executebullet = new NewAdbooking.classesoracle.Booking_Audit1();
            ds = executebullet.executeauditmast1(bookingid, compcode, adtype, dateformat,"");
            return ds;
        }
    }
    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]
    public DataSet update(string bookingid, string compcode, string tick,string ip)
    {

        DataSet ds = new DataSet();
        string err = "";
        try
        {
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.rofileform executebullet = new NewAdbooking.Classes.rofileform();
            ds = executebullet.executeauditmast2(bookingid, compcode, tick);
        }
        else
        {
            NewAdbooking.classesoracle.rofileform executebullet = new NewAdbooking.classesoracle.rofileform();
            ds = executebullet.executeauditmast2(bookingid, compcode, tick);
          
        }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string branchcode11 = "R.O Form updated by user " + HttpContext.Current.Session["Username"] + " and Booking id is " + bookingid;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','RO Comment','" + err.Replace("'", "''") + "','R.O Form update','" + branchcode11;
        sqldd = sqldd + "',";
        sqldd = sqldd + "'" + ip + "')";
        dconnect.executenonquery1(sqldd);
        return ds;
    }

    [Ajax.AjaxMethod(Ajax.HttpSessionStateRequirement.Read)]

    public void save(string remarks, string cioid,string ip)
    {
        DataSet ds = new DataSet();
        string err = "";
        try
        {
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.rofileform save = new NewAdbooking.Classes.rofileform();
                ds = save.savecomment(cioid, Session["compcode"].ToString(), remarks);
            }
            else
            {
                NewAdbooking.classesoracle.rofileform save = new NewAdbooking.classesoracle.rofileform();
                ds = save.savecomment(cioid, Session["compcode"].ToString(), remarks);

            }
        }
        catch (Exception e)
        {
            err = e.Message;
        }
        string rocomment = remarks;
        string roid="RO_Id="+cioid;
        clsconnection dconnect = new clsconnection();
        string sqldd = "insert into log_new (DATE1,USERID,PROCESSNAME,ERR_DESCRIPTION,OBJECT_PROCESS_ID,DESCRIPTION,IP) values($date,'" + HttpContext.Current.Session["UserId"] + "','RO Comment','" + err.Replace("'", "''")+"','" + roid+ "','"+ rocomment;
        sqldd = sqldd + "','" + ip + "')";
        dconnect.executenonquery1(sqldd);
    }
}
