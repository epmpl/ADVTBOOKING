using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;



public partial class taluka_mast: System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

        if (Session["userid"] == null)
        {
            Response.Redirect("login.aspx");
        }
        else
        {

            hiddencompcode.Value = Session["compcode"].ToString();
            hdnuserid.Value = Session["userid"].ToString();
            hdncompname.Value = Session["comp_name"].ToString();
            hdndateformat.Value = Session["dateformat"].ToString();

            hiddenauto.Value = Session["autogenerated"].ToString();


            if (Session["autogenerated"].ToString() == "1")
            {

                txttaluka_code.Enabled = false;

            }

            bindfreezeflag();


            DataSet ds = new DataSet();
            ds.ReadXml(Server.MapPath("XML/Button.xml"));
            btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
            btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
            btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
            btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
            btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
            btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
            btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
            btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
            btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
            btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
            btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
            btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();


            DataSet ds1 = new DataSet();
            ds1.ReadXml(Server.MapPath("XML/taluka_mast.xml"));
            //lblcomp_code.Text = ds1.Tables[0].Rows[0].ItemArray[0].ToString();
            //lblcomp_name.Text = ds1.Tables[0].Rows[0].ItemArray[1].ToString();

            lbldistcode.Text = ds1.Tables[0].Rows[0].ItemArray[2].ToString();
            lbltaluka_code.Text = ds1.Tables[0].Rows[0].ItemArray[3].ToString();
            lbltaluka_name.Text = ds1.Tables[0].Rows[0].ItemArray[4].ToString();
            lbltaluka_alias.Text = ds1.Tables[0].Rows[0].ItemArray[5].ToString();
            lbltalukao_name.Text = ds1.Tables[0].Rows[0].ItemArray[6].ToString();
            lblfrzflg.Text = ds1.Tables[0].Rows[0].ItemArray[7].ToString();
            tblfields.Value = ds1.Tables[0].Rows[0].ItemArray[8].ToString();
            executefields.Value = ds1.Tables[0].Rows[0].ItemArray[9].ToString();
            deltblfields.Value = ds1.Tables[0].Rows[0].ItemArray[10].ToString();
            hdnduplicacy.Value = ds1.Tables[0].Rows[0].ItemArray[12].ToString();
            hdntablename.Value = ds1.Tables[0].Rows[0].ItemArray[11].ToString();
            string tablename = ds1.Tables[0].Rows[0].ItemArray[11].ToString().ToUpper();
            //lblcountry.Text = ds1.Tables[0].Rows[0].ItemArray[8].ToString();

            //view10.Text = ds1.Tables[2].Rows[0].ItemArray[0].ToString();
            //view11.Text = ds1.Tables[2].Rows[0].ItemArray[1].ToString();
            //view12.Text = ds1.Tables[2].Rows[0].ItemArray[2].ToString();
            //view13.Text = ds1.Tables[2].Rows[0].ItemArray[3].ToString();
            //view14.Text = ds1.Tables[2].Rows[0].ItemArray[4].ToString();
            //view15.Text = ds1.Tables[2].Rows[0].ItemArray[5].ToString();


            btnNew.Enabled = true;
            btnQuery.Enabled = true;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnfirst.Enabled = false;
            btnlast.Enabled = false;
            btnModify.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = false;
            btnDelete.Enabled = false;
            //txt_compcode.Enabled = false;
            //txt_compname.Enabled = false;
            drpdistcode.Enabled = false;
            txttaluka_code.Enabled = false;
            txttaluka_name.Enabled = false;
            txt_talukaalias.Enabled = false;
            txt_talukaoname.Enabled = false;
            drpfrzflag.Enabled = false;
            btnNew.Focus();

            Ajax.Utility.RegisterTypeForAjax(typeof(taluka_mast));


            if (!Page.IsPostBack)
            {
                txttaluka_code.Attributes.Add("OnBlur", "javascript:return uppercase1();");
                txt_talukaalias.Attributes.Add("OnBlur", "javascript:return uppercase2();");
                //txttaluka_name.Attributes.Add("OnBlur", "javascript:return uppercase3();");

                btnNew.Attributes.Add("onclick", "javascript:return EnableOnNew();");
                btnSave.Attributes.Add("onclick", "javascript:return chkduplicacy();");
                btnExit.Attributes.Add("onclick", "javascript:return Exit();");
                btnCancel.Attributes.Add("onclick", "javascript:return ClearAll();");
                btnQuery.Attributes.Add("onclick", "javascript:return EnabledOnQuery();");
                btnExecute.Attributes.Add("onclick", "javascript:return EnableExecute();");


                btnnext.Attributes.Add("onclick", "javascript:return Find_NextRecord();");
                btnprevious.Attributes.Add("onclick", "javascript:return Find_PreRecord();");
                btnfirst.Attributes.Add("onclick", "javascript:return Find_Firstrecord();");
                btnlast.Attributes.Add("onclick", "javascript:return Find_Lastrecord();");
                btnModify.Attributes.Add("onclick", "javascript:return Modify_Records();");
                btnDelete.Attributes.Add("onclick", "javascript:return Delete_Record();");
                //Button4.Attributes.Add("onclick", "javascript:return fetchview();");
                txttaluka_name.Attributes.Add("OnChange", "javascript:return autogen();");

                //view11.Attributes.Add("onclick", "javascript:return click_trcode(this.id);");
                //view12.Attributes.Add("onclick", "javascript:return click_trcode(this.id);");
                //view13.Attributes.Add("onclick", "javascript:return click_trcode(this.id);");
                //view14.Attributes.Add("onclick", "javascript:return click_trcode(this.id);");
                //view15.Attributes.Add("onclick", "javascript:return click_trcode(this.id);");


                bindfreezeflag();
                binddist();

            }
            if (btnNew.Enabled == false)
                btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
            if (btnSave.Enabled == false)
                btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
            if (btnModify.Enabled == false)
                btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
            if (btnQuery.Enabled == false)
                btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
            if (btnExecute.Enabled == false)
                btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
            if (btnCancel.Enabled == false)
                btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
            if (btnfirst.Enabled == false)
                btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
            if (btnprevious.Enabled == false)
                btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
            if (btnnext.Enabled == false)
                btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
            if (btnlast.Enabled == false)
                btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
            if (btnDelete.Enabled == false)
                btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
            if (btnExit.Enabled == false)
                btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
            //NewAdbooking.classesoracle.taluka_mast artypemast = new NewAdbooking.classesoracle.taluka_mast();
            //DataSet ds_table = new DataSet();
            //ds_table = artypemast.col_width(tablename, "");
            //if (ds_table.Tables[0].Rows.Count > 0)
            //{

            //    txttaluka_code.MaxLength = Convert.ToInt16(ds_table.Tables[0].Rows[2].ItemArray[3].ToString());
            //    txttaluka_name.MaxLength = Convert.ToInt16(ds_table.Tables[0].Rows[3].ItemArray[3].ToString());
            //    txt_talukaalias.MaxLength = Convert.ToInt16(ds_table.Tables[0].Rows[4].ItemArray[3].ToString());
            //    txt_talukaoname.MaxLength = Convert.ToInt16(ds_table.Tables[0].Rows[5].ItemArray[3].ToString());


            //}

        }
    }

    //[Ajax.AjaxMethod]
    //public DataSet Autogeneratecode(string compcode,string date, string extra1, string extra2)
    //{
    //    DataSet ds = new DataSet();
    //    if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //    {
           
    //        NewAdbooking.Classes.taluka_mast code = new NewAdbooking.Classes.taluka_mast();
    //        ds = code.taluka_Code(compcode, date, extra1, extra2);
    //    }
    //    else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //    {
    //        NewAdbooking.classesoracle.taluka_mast code = new NewAdbooking.classesoracle.taluka_mast();
    //        ds = code.taluka_Code(compcode, date, extra1, extra2);
    //    }
    //    return ds;
    //}

    [Ajax.AjaxMethod]
    public DataSet save(string compval, string userid, string dist, string t_code, string t_name, string t_alias, string t_othername)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compval, userid, dist, t_code, t_name, t_alias, t_othername };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "savetaluka";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "savetaluka.savetaluka_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "SAVETALUKA_SAVETALUKA_P";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    
    [Ajax.AjaxMethod]
    public DataSet chktalucode(string compval, string userid, string dist, string t_code, string t_name)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compval, userid, dist, t_code, t_name };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "chktalukacode";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "chktalukacode";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "chktalukacode";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    [Ajax.AjaxMethod]
    public DataSet modify(string compval, string userid, string dist, string t_code, string t_name, string t_alias, string t_othername)
    {
        
         DataSet ds = new DataSet();
         string[] parameterValueArray = new string[] { compval, userid, dist, t_code, t_name, t_alias, t_othername };
         if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
         {
             string procedureName = "modifytaluka";
             NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             string procedureName = "modifytaluka.modifytaluka_p";
             NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         else
         {
             string procedureName = "modifytaluka_modifytaluka_p";
             NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
                ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
        return ds;
    }

    public void bindfreezeflag()
    {
        drpfrzflag.Items.Clear();
        DataSet ds1 = new DataSet();
        ds1.ReadXml(Server.MapPath("XML/taluka_mast.xml"));
        ListItem li = new ListItem();
        li.Text = "-Select Freeze Flag-";
        li.Value = "0";
        drpfrzflag.Items.Add(li);

        for (int i = 0; i < ds1.Tables[1].Columns.Count; i++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds1.Tables[1].Rows[0].ItemArray[i].ToString();
            i = i + 1;
            li1.Value = ds1.Tables[1].Rows[0].ItemArray[i].ToString();
            drpfrzflag.Items.Add(li1);
        }
    }


    public void binddist()
    {
        //hdncompcode.Value
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { hiddencompcode.Value ,""};
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "BIND_DIST1";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Bind_Dist1";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "Bind_Dist1";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }

        ListItem li = new ListItem();
        li.Text = "--Select District--";
        li.Value = "0";
        li.Selected = true;
        drpdistcode.Items.Add(li);
        for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
        {
            ListItem li1 = new ListItem();
            li1.Text = ds.Tables[0].Rows[i]["DIST_NAME"].ToString();
            li1.Value = ds.Tables[0].Rows[i]["DIST_CODE"].ToString();
            drpdistcode.Items.Add(li1);

        }

    }

    //[Ajax.AjaxMethod]
    //public DataSet save_tal(string tablefields, string tablevalue, string tablename, string action, string date, string extra1, string extra2)
    //{
    //     DataSet ds = new DataSet();
    //     if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
    //     {
    //         NewAdbooking.Classes.taluka_mast taluka = new NewAdbooking.Classes.taluka_mast();
    //         ds = taluka.Save_tal(tablefields, tablevalue, tablename, action, date, extra1, extra2);
          
    //     }
    //     else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
    //     {
    //         NewAdbooking.classesoracle.taluka_mast taluka = new NewAdbooking.classesoracle.taluka_mast();
    //         ds = taluka.Save_tal(tablefields, tablevalue, tablename, action, date, extra1, extra2);
    //     }
    //     return ds;
    //}


    [Ajax.AjaxMethod]
    public DataSet tal_execute(string compcode, string distcodeexe, string talcodeexe, string talnameexe, string talaliasexe, string talonameexe)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compcode, distcodeexe, talcodeexe, talnameexe, talaliasexe, talonameexe };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "talukaexe";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "talukaexe.talukaexe_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "talukaexe_talukaexe_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

    //[Ajax.AjaxMethod]
    //public DataSet tal_modify(string mod_tablefields, string mod_tablevalue, string mod_tablename, string mod_action, string wherefield, string date, string extra1, string extra2)
    //{
    //    NewAdbooking.classesoracle.taluka_mast taluka = new NewAdbooking.classesoracle.taluka_mast();
    //    DataSet ds = new DataSet();
    //    ds = taluka.Modify_tal(mod_tablefields, mod_tablevalue, mod_tablename, mod_action, wherefield, date, extra1, extra2);
    //    return ds;
    //}


    [Ajax.AjaxMethod]
    public DataSet tal_delete(string talcode)
    {
         DataSet ds = new DataSet();
         string[] parameterValueArray = new string[] { talcode };
         if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
         {
             string procedureName = "talukadel";
             NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
         {
             string procedureName = "talukadel.talukadel_p";
             NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
         else
         {
             string procedureName = "talukadel_talukadel_p";
             NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
             ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
         }
        return ds;
    }

    //[Ajax.AjaxMethod]
    //public DataSet taluka_allview(string compval, string date, string extra1, string extra2)
    //{
    //    NewAdbooking.classesoracle.taluka_mast taluka = new NewAdbooking.classesoracle.taluka_mast();
    //    DataSet ds = new DataSet();
    //    ds = taluka.bind_all_taluka(compval, date, extra1, extra2);
    //    return ds;
    //}

    [Ajax.AjaxMethod]
    public DataSet taluka_allviews_ds(string compcode, string compval, string unitcode, string unitval, string tabname, string by_col_name, string order_type, string date, string extra1, string extra2)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { compcode, compval, unitcode, unitval, tabname, by_col_name, order_type, date, extra1, extra2 };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "Cir_Dynamic_DML_variable_order";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "Cir_Dynamic_DML.variable_order";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "Cir_Dynamic_DML_variable_order";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }


    [Ajax.AjaxMethod]

    public DataSet chkcode(string str)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { str, str.Substring(0, 2) };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "talukamastautocode";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "talukamastautocode.talukamastautocode_p";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "talukamastautocode_talukamastautocode_p";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;

       
    }

    
         //======================================================//

    [Ajax.AjaxMethod]
    public DataSet chktaluname(string str)
    {
        DataSet ds = new DataSet();
        string[] parameterValueArray = new string[] { str };
        if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "sql")
        {
            string procedureName = "chkbranchname";
            NewAdbooking.Classes.CommonClass obj = new NewAdbooking.Classes.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else if (ConfigurationManager.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            string procedureName = "chkbranchname";
            NewAdbooking.classesoracle.CommonClass obj = new NewAdbooking.classesoracle.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        else
        {
            string procedureName = "chkbranchname";
            NewAdbooking.classmysql.CommonClass obj = new NewAdbooking.classmysql.CommonClass();
            ds = obj.DynamicBindProcedure(procedureName, parameterValueArray);
        }
        return ds;
    }

}
