using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;

public partial class Scheme_Master : System.Web.UI.Page
{
    static DataSet executept = new DataSet();

    string formname = "";
    string dateformat = "";
    string userid = "";
    string compcode = "";
    string validfromdate, validtill, message;
    string dd, mm, yyyy, dd1, mm1, yyyy1, cont, bwcode, flag;
    static int FlagStatus, fpnl;
    /////////////this is declared as to check whether user is saving or doing query if saving then this value is 0 indicating 
    ////////////that we are saving the data 
    static string chkquery, saveormodify;
    static string exeschemecode, exeschemename, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount, exediscount_type, contidate;
    ////////////////////////////////////////////////
    ////////////this int is for autogenerated
    int cou = 0;
    ////////////this is to declare the dataset for execute 
    static DataSet executequery = new DataSet();
    static DataSet chkedition = new DataSet();
    int z = 0;
    DataGridItemEventArgs e1;



    protected void Page_Load(object sender, EventArgs e)
    {
        Response.Expires = -1;
        if (Session["compcode"] == null)
        {
            //Response.Redirect("login.aspx");
            //Response.Write("<script>alert(\"Your session has been expired\");window.close();</script>");
            d2.Text = "<script>alert('session Expired');window.close();</script>";
            return;

        }
        compcode = Convert.ToString(Session["compcode"]);
        userid = Convert.ToString(Session["userid"]);
        hiddenuserid.Value = userid;
        hiddencompcode.Value = Session["compcode"].ToString();
        hiddenusername.Value = Session["username"].ToString();
        hiddenauto.Value = Session["autogenerated"].ToString();

        Ajax.Utility.RegisterTypeForAjax(typeof(Scheme_Master));
        if (Session["compcode"] == null)
        {
            //Response.Redirect("login.aspx");
            Response.Write("<script>alert(\"Your session has been expired\");window.close();</script>");
            return;

        }
        dateinsert chkdate = new dateinsert();
        formname = "Scheme_Master";

        hiddendateformat.Value = Session["dateformat"].ToString();
        dateformat = Session["dateformat"].ToString();

        DataSet objDataSet = new DataSet();

        // Read in the XML file
        objDataSet.ReadXml(Server.MapPath("XML/Scheme_Master.xml"));
        lblschemecode.Text = objDataSet.Tables[0].Rows[0].ItemArray[0].ToString();
        lblfrominsert.Text = objDataSet.Tables[0].Rows[0].ItemArray[1].ToString();
        lbltoinsert.Text = objDataSet.Tables[0].Rows[0].ItemArray[2].ToString();
        lblvalidfrom.Text = objDataSet.Tables[0].Rows[0].ItemArray[3].ToString();
        lblvalidto.Text = objDataSet.Tables[0].Rows[0].ItemArray[4].ToString();
        lbldiscount.Text = objDataSet.Tables[0].Rows[0].ItemArray[5].ToString();
        lblschemename.Text = objDataSet.Tables[0].Rows[0].ItemArray[6].ToString();
        lbcat.Text = objDataSet.Tables[0].Rows[0].ItemArray[7].ToString();
        apponcontidate.Text = objDataSet.Tables[0].Rows[0].ItemArray[8].ToString();


        DataSet ds = new DataSet();
        // Read in the XML file
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();


        hiddenprem.Value = Session["premtype"].ToString();


        ScriptManager1.SetFocus(btnNew);

        if (!Page.IsPostBack)
        {

            getbuttoncheck(formname);

            txtvalidfrom.Attributes.Add("OnChange", "javascript:return checkdate(this);  ");
            txtvalidto.Attributes.Add("OnChange", "javascript:return checkdate(this);  ");
            txtdiscount.Attributes.Add("OnChange", "javascript:return checkdiscount();");
            txttoinsert.Attributes.Add("OnChange", "javascript:return checkinsertionno();");
            txtfrominsert.Attributes.Add("OnChange", "javascript:return checkinsertionno1();");
            txtvalidfrom.Attributes.Add("onkeypress", "javascript:return dateenter(event);");
            txtvalidto.Attributes.Add("onkeypress", "javascript:return dateenter(event);");
            //txtschemename.Attributes.Add("OnChange", "javascript:return autoornot();");

            //btnNew.Attributes.Add("onclick", "javascript:return newscheme();");
            btnSave.Attributes.Add("onclick", "javascript:return savescheme();");
            btnDelete.Attributes.Add("onclick", "return confirm('Are you sure you want to delete?');");
            btnExit.Attributes.Add("onclick", "javascript:return closescheme();");
            drpdiscount.Attributes.Add("OnChange", "javascript:refreshDisc();");

            CheckBox8.Attributes.Add("OnClick", "javascript:return checkedunchecked('CheckBox8');");
            // txtpremium.Attributes.Add("onchange", "javascript:return allamountbullet(txtpremium);");

            //bindadcategory();
        }
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
    }

    protected void btnNew_Click1(object sender, EventArgs e)
    {
        hiddenmod.Value = "1";
        saveormodify = "0";
        hiddenshow.Value = "0";
        chkquery = "0";
        fpnl = 0;

        txtschemename.Enabled = true;
        txtvalidfrom.Enabled = true;
        txtvalidto.Enabled = true;
        txtfrominsert.Enabled = true;
        txttoinsert.Enabled = true;
        txtdiscount.Enabled = true;
        drpdiscount.Enabled = true;
        drpadcat.Enabled = true;
        chkcontidate.Enabled = true;



        txtschemecode.Text = "";
        txtschemename.Text = "";
        txtvalidfrom.Text = "";
        txtvalidto.Text = "";
        txtfrominsert.Text = "";
        txttoinsert.Text = "";
        txtdiscount.Text = "";
        //drpdiscount.SelectedValue = hiddenprem.Value;
        drpadcat.SelectedValue = "0";
        drpdiscount.SelectedValue = "0";

        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnNew.Enabled = false;
        btnQuery.Enabled = false;

        //if (hiddenauto.Value == "1")
        //{
        //txtschemecode.Enabled = false;

        //}
        //else
        //{
        txtschemecode.Enabled = true;

        //}



        ScriptManager1.SetFocus(txtschemecode);
        btnimage();

    }
    protected void btnSave_Click(object sender, EventArgs e)
    {
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(Scheme_Master), "abc", "alert('session Expired');window.close();", true);

            return;
        }

        string schemecode = (txtschemecode.Text).Trim();
        string frominsert = txtfrominsert.Text;
        string toinsert = txttoinsert.Text;
        string fromdate = txtvalidfrom.Text;
        string tilldate = txtvalidto.Text;
        string discount = txtdiscount.Text;
        string discount_type = drpdiscount.SelectedValue;
        string scheme_name = (txtschemename.Text).Trim();

        string scheme_id = schemecode + frominsert + toinsert;
        string adcat = drpadcat.SelectedValue;

        flag = "1";

        //===========================================//
        char[] splitterfrom = { '/' };
        char[] splittertill = { '/' };
        string[] myarrayfrom;
        string[] myarraytill;

        string dateformat = Session["dateformat"].ToString();

        myarrayfrom = fromdate.Split(splitterfrom);
        myarraytill = tilldate.Split(splittertill);
        //splitting of date
        if (fromdate != null && fromdate != "")
        {

            myarrayfrom = fromdate.Split(splitterfrom);
        }
        if (tilldate != null && tilldate != "")
        {

            myarraytill = tilldate.Split(splittertill);
        }

        if (dateformat == "dd/mm/yyyy")
        {
            //for from date
            if (fromdate != null && fromdate != "")
            {
                dd = myarrayfrom[0];
                mm = myarrayfrom[1];
                yyyy = myarrayfrom[2];

                validfromdate = mm + "/" + dd + "/" + yyyy;
            }
            else
            {
                validfromdate = "";
            }

            //for till date
            if (tilldate != null && tilldate != "")
            {
                dd1 = myarraytill[0];
                mm1 = myarraytill[1];
                yyyy1 = myarraytill[2];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
            }
            else
            {
                validtill = "";
            }
        }

        if (dateformat == "yyyy/mm/dd")
        {
            //for from date
            if (fromdate != null && fromdate != "")
            {
                yyyy = myarrayfrom[0];
                mm = myarrayfrom[1];
                dd = myarrayfrom[2];

                validfromdate = mm + "/" + dd + "/" + yyyy;
            }
            else
            {
                validfromdate = "";
            }
            //for till date
            if (tilldate != null && tilldate != "")
            {
                yyyy1 = myarraytill[0];
                mm1 = myarraytill[1];
                dd1 = myarraytill[2];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
            }
            else
            {
                validtill = "";
            }

        }

        if (dateformat == "mm/dd/yyyy")
        {
            if (fromdate != null && fromdate != "")
            {
                yyyy = myarrayfrom[2];
                mm = myarrayfrom[0];
                dd = myarrayfrom[1];

                validfromdate = mm + "/" + dd + "/" + yyyy;
                txtvalidfrom.Text = validfromdate;
            }
            else
            {
                validfromdate = "";
            }
            if (tilldate != null && tilldate != "")
            {
                yyyy1 = myarraytill[2];
                mm1 = myarraytill[0];
                dd1 = myarraytill[1];

                validtill = mm1 + "/" + dd1 + "/" + yyyy1;
                txtvalidto.Text = validtill;
            }
            else
            {
                validtill = "";
            }

        }


        //======================================================//
        if (hiddenmod.Value == "2")
        {

            string flagd = "";
            DataSet dsz = new DataSet();

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Scheme_Master chks = new NewAdbooking.Classes.Scheme_Master();
                dsz = chks.schememodifychk(scheme_id, schemecode, scheme_name, Session["compcode"].ToString());
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Scheme_Master chks = new NewAdbooking.classesoracle.Scheme_Master();
                dsz = chks.schememodifychk(scheme_id, schemecode, scheme_name, Session["compcode"].ToString());
            }
            else
            {
                NewAdbooking.classmysql.Scheme_Master chks = new NewAdbooking.classmysql.Scheme_Master();
                dsz = chks.schememodifychk(scheme_id, schemecode, scheme_name, Session["compcode"].ToString());
            }



            if (dsz.Tables[0].Rows.Count > 0)
            {
                //  flagd = "Y";
                message = "This Scheme Name already exists";
                AspNetMessageBox(message);

                txtschemename.Text = "";
                ScriptManager1.SetFocus(txtschemename);
                return;
            }
            else if ((dsz.Tables[1].Rows.Count > 0) && (flag != "1"))
            {
                //flagd = "N";
                message = "This Scheme Code already exists";
                AspNetMessageBox(message);

                txtschemecode.Text = "";
                ScriptManager1.SetFocus(txtschemename);
                return;
            }


            //if (flagd == "Y")
            //{

            //    message = "This Scheme Name already exists";
            //    AspNetMessageBox(message);

            //    txtschemename.Text = "";
            //    ScriptManager1.SetFocus(txtschemename);

            //    return;
            //}




            string sun, mon, tue, wed, thu, fri, sat, contidate;
            if (CheckBox1.Checked == true)
            {
                sun = "Y";
            }
            else
            {
                sun = "N";
            }
            if (CheckBox2.Checked == true)
            {
                mon = "Y";
            }
            else
            {
                mon = "N";
            }

            if (CheckBox3.Checked == true)
            {
                tue = "Y";
            }
            else
            {
                tue = "N";
            }
            if (CheckBox4.Checked == true)
            {
                wed = "Y";
            }
            else
            {
                wed = "N";
            }
            if (CheckBox5.Checked == true)
            {
                thu = "Y";
            }
            else
            {
                thu = "N";
            }
            if (CheckBox6.Checked == true)
            {
                fri = "Y";
            }
            else
            {
                fri = "N";
            }

            if (CheckBox7.Checked == true)
            {
                sat = "Y";
            }
            else
            {
                sat = "N";
            }

            if (chkcontidate.Checked == true)
            {
                contidate = "1";
            }
            else
            {
                contidate = "0";
            }


            DataSet di = new DataSet();
            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")  //use for update
            {
                NewAdbooking.Classes.Scheme_Master insertthe = new NewAdbooking.Classes.Scheme_Master();
                di = insertthe.savescheme(scheme_id, schemecode, frominsert, toinsert, validfromdate, validtill, discount_type, discount, compcode, userid, flag, scheme_name, sun, mon, tue, wed, thu, fri, sat, contidate,"");
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Scheme_Master insertthe = new NewAdbooking.classesoracle.Scheme_Master();
                di = insertthe.savescheme(scheme_id, schemecode, frominsert, toinsert, validfromdate, validtill, discount_type, discount, compcode, userid, flag, scheme_name, sun, mon, tue, wed, thu, fri, sat, contidate, "","");

            }
            else
            {
                NewAdbooking.classmysql.Scheme_Master insertthe = new NewAdbooking.classmysql.Scheme_Master();
                di = insertthe.savescheme(scheme_id, schemecode, frominsert, toinsert, validfromdate, validtill, discount_type, discount, compcode, userid, flag, scheme_name);
            }


            getbuttoncheck(formname);

            txtschemecode.Enabled = false;
            txtschemename.Enabled = false;
            txtvalidfrom.Enabled = false;
            txtvalidto.Enabled = false;
            txtfrominsert.Enabled = false;
            txttoinsert.Enabled = false;
            txtdiscount.Enabled = false;
            drpdiscount.Enabled = false;

            executept.Tables[0].Rows[fpnl].ItemArray[0] = txtschemecode.Text;
            executept.Tables[0].Rows[fpnl].ItemArray[1] = txtfrominsert.Text;
            executept.Tables[0].Rows[fpnl].ItemArray[2] = txttoinsert.Text;
            executept.Tables[0].Rows[fpnl].ItemArray[3] = txtdiscount.Text;
            executept.Tables[0].Rows[fpnl].ItemArray[4] = txtvalidfrom.Text;
            executept.Tables[0].Rows[fpnl].ItemArray[5] = txtvalidto.Text;
            executept.Tables[0].Rows[fpnl].ItemArray[6] = drpdiscount.SelectedValue;
            executept.Tables[0].Rows[fpnl].ItemArray[7] = txtschemename.Text;

            if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
            {
                NewAdbooking.Classes.Scheme_Master execute = new NewAdbooking.Classes.Scheme_Master();
                executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename, contidate);
            }
            else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
            {
                NewAdbooking.classesoracle.Scheme_Master execute = new NewAdbooking.classesoracle.Scheme_Master();
                executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename);
            }

            else
            {
                NewAdbooking.classmysql.Scheme_Master execute = new NewAdbooking.classmysql.Scheme_Master();

                executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename);
            }
            //ptexecute(exeschemecode,exefrominsert,exetoinsert,exevalidfrom,exevalidto,exediscount, Session["compcode"].ToString());

            DataSet ds = new DataSet();
            ds = executept;

            dateinsert getdatechkexec = new dateinsert();
            string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, ds.Tables[0].Rows[fpnl].ItemArray[4].ToString());
            string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, ds.Tables[0].Rows[fpnl].ItemArray[5].ToString());

            //  drppublication.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            txtschemecode.Text = ds.Tables[0].Rows[fpnl].ItemArray[0].ToString();
            txtfrominsert.Text = ds.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            txttoinsert.Text = ds.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            txtdiscount.Text = ds.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            txtvalidfrom.Text = execvalidfromdate;// ds.Tables[0].Rows[fpnl].ItemArray[4].ToString();
            txtvalidto.Text = execfirstvalidtill;// ds.Tables[0].Rows[fpnl].ItemArray[5].ToString();
            drpdiscount.SelectedValue = ds.Tables[0].Rows[fpnl].ItemArray[6].ToString();
            txtschemename.Text = ds.Tables[0].Rows[fpnl].ItemArray[7].ToString();

            if (executept.Tables[0].Rows[0]["CONTINUOUS_DATE"].ToString() == "1")
            {
                chkcontidate.Checked = true;
            }
            else
            {
                chkcontidate.Checked = false;
            }


            if (ds.Tables[0].Rows[fpnl]["sun"].ToString() == "Y")
            {
                CheckBox1.Checked = true;
            }
            else
            {
                CheckBox1.Checked = false;
            }

            if (ds.Tables[0].Rows[fpnl]["mon"].ToString() == "Y")
            {
                CheckBox2.Checked = true;
            }
            else
            {
                CheckBox2.Checked = false;
            }

            if (ds.Tables[0].Rows[fpnl]["tue"].ToString() == "Y")
            {
                CheckBox3.Checked = true;
            }
            else
            {
                CheckBox3.Checked = false;
            }


            if (ds.Tables[0].Rows[fpnl]["wed"].ToString() == "Y")
            {
                CheckBox4.Checked = true;
            }
            else
            {
                CheckBox4.Checked = false;
            }


            if (ds.Tables[0].Rows[fpnl]["thu"].ToString() == "Y")
            {
                CheckBox5.Checked = true;
            }
            else
            {
                CheckBox5.Checked = false;
            }



            if (ds.Tables[0].Rows[fpnl]["fri"].ToString() == "Y")
            {
                CheckBox6.Checked = true;
            }
            else
            {
                CheckBox6.Checked = false;
            }


            if (ds.Tables[0].Rows[fpnl]["sat"].ToString() == "Y")
            {
                CheckBox7.Checked = true;
            }
            else
            {
                CheckBox7.Checked = false;
            }


            updateStatus();

            DataSet ds1 = new DataSet();
            ds1.ReadXml(Server.MapPath("XML/errorMessage.xml"));
            message = ds1.Tables[0].Rows[0].ItemArray[1].ToString();
            AspNetMessageBox(message);

            if (fpnl == 0)
            {
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;
            }
            if (fpnl == executept.Tables[0].Rows.Count - 1)
            {
                btnlast.Enabled = false;
                btnnext.Enabled = false;
            }
            btnimage();
            ScriptManager1.SetFocus(btnModify);

            return;
        }

        else
        {

        }

    }
    protected void btnModify_Click(object sender, EventArgs e)
    {
        hiddenmod.Value = "2";

        saveormodify = "1";

        txtschemecode.Enabled = false;
        txtvalidfrom.Enabled = true;
        txtvalidto.Enabled = true;
        txtfrominsert.Enabled = false;
        txttoinsert.Enabled = false;
        txtdiscount.Enabled = true;
        drpdiscount.Enabled = false;
        txtschemename.Enabled = true;
        drpadcat.Enabled = true;

        saveormodify = "1";

        chkstatus(FlagStatus);
        btnSave.Enabled = true;
        btnQuery.Enabled = false;
        //ScriptManager1.SetFocus(txtschemename);
        btnimage();
        ScriptManager1.SetFocus(btnSave);

    }
    protected void btnQuery_Click1(object sender, EventArgs e)
    {

        fpnl = 0;

        txtschemecode.Text = "";
        txtschemename.Text = "";
        txtvalidfrom.Text = "";
        txtvalidto.Text = "";
        txtfrominsert.Text = "";
        txttoinsert.Text = "";
        txtdiscount.Text = "";
        drpdiscount.SelectedValue = "0";// hiddenprem.Value;
        // drppublication.SelectedValue = "0";

        txtschemecode.Enabled = true;
        txtschemename.Enabled = true;
        txtvalidfrom.Enabled = true;
        txtvalidto.Enabled = true;
        txtfrominsert.Enabled = true;
        txttoinsert.Enabled = true;
        txtdiscount.Enabled = true;
        drpdiscount.Enabled = false;






        //  drppublication.Enabled = true;


        chkstatus(FlagStatus);


        btnQuery.Enabled = false;
        btnExecute.Enabled = true;

        btnSave.Enabled = false;
        btnimage();
        ScriptManager1.SetFocus(btnExecute);
    }
    protected void btnExecute_Click(object sender, EventArgs e)
    {

        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(Scheme_Master), "abc", "alert('session Expired');window.close();", true);

            return;
        }
        string ptschemecode = txtschemecode.Text;
        exeschemecode = ptschemecode;

        string ptschemename = txtschemename.Text;
        exeschemename = ptschemename;

        string ptfrominsert = txtfrominsert.Text;
        exefrominsert = ptfrominsert;

        string pttoinsert = txttoinsert.Text;
        exetoinsert = pttoinsert;

        string ptvalidfrom = txtvalidfrom.Text;
        exevalidfrom = ptvalidfrom;

        string ptvalidto = txtvalidto.Text;
        exevalidto = ptvalidto;

        string ptdiscount = txtdiscount.Text;
        exediscount = ptdiscount;

        string ptdiscount_type = drpdiscount.SelectedValue;
        exediscount_type = ptdiscount_type;

        string contidate = "";



        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Scheme_Master execute = new NewAdbooking.Classes.Scheme_Master();
            executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename, contidate);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            NewAdbooking.classesoracle.Scheme_Master execute = new NewAdbooking.classesoracle.Scheme_Master();
            executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename);

        }
        else
        {
            NewAdbooking.classmysql.Scheme_Master execute = new NewAdbooking.classmysql.Scheme_Master();

            executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename);
        }


        if (executept.Tables[0].Rows.Count == 0)
        {
            message = "Your Search Criteria Does Not Exist";
            AspNetMessageBox(message);

            updateStatus();
            getbuttoncheck(formname);

            txtschemecode.Text = "";
            txtschemename.Text = "";
            txtvalidfrom.Text = "";
            txtvalidto.Text = "";
            txtfrominsert.Text = "";
            txttoinsert.Text = "";
            txtdiscount.Text = "";
            btnimage();
            return;
        }
        else
        {
            txtschemecode.Text = executept.Tables[0].Rows[0].ItemArray[0].ToString();
            txtfrominsert.Text = executept.Tables[0].Rows[0].ItemArray[1].ToString();
            txttoinsert.Text = executept.Tables[0].Rows[0].ItemArray[2].ToString();
            txtdiscount.Text = executept.Tables[0].Rows[0].ItemArray[3].ToString();


            dateinsert getdatechkexec = new dateinsert();
            string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[0].ItemArray[4].ToString());
            string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[0].ItemArray[5].ToString());

            txtvalidfrom.Text = execvalidfromdate;//executept.Tables[0].Rows[0].ItemArray[4].ToString();//execvalidfromdate;
            txtvalidto.Text = execfirstvalidtill;//executept.Tables[0].Rows[0].ItemArray[5].ToString();//execfirstvalidtill;

            drpdiscount.SelectedValue = executept.Tables[0].Rows[0].ItemArray[6].ToString();

            txtschemename.Text = executept.Tables[0].Rows[0].ItemArray[7].ToString();
            drpadcat.SelectedValue = executept.Tables[0].Rows[0].ItemArray[8].ToString();

            if (executept.Tables[0].Rows[0]["CONTINUOUS_DATE"].ToString() == "1")
            {
                chkcontidate.Checked = true;
            }
            else
            {
                chkcontidate.Checked = false;
            }
            //  chkcontidate.Checked = true;
            if (executept.Tables[0].Rows[0]["sun"].ToString() == "Y")
            {
                CheckBox1.Checked = true;
            }
            else
            {
                CheckBox1.Checked = false;
            }

            if (executept.Tables[0].Rows[0]["mon"].ToString() == "Y")
            {
                CheckBox2.Checked = true;
            }
            else
            {
                CheckBox2.Checked = false;
            }

            if (executept.Tables[0].Rows[0]["tue"].ToString() == "Y")
            {
                CheckBox3.Checked = true;
            }
            else
            {
                CheckBox3.Checked = false;
            }


            if (executept.Tables[0].Rows[0]["wed"].ToString() == "Y")
            {
                CheckBox4.Checked = true;
            }
            else
            {
                CheckBox4.Checked = false;
            }


            if (executept.Tables[0].Rows[0]["thu"].ToString() == "Y")
            {
                CheckBox5.Checked = true;
            }
            else
            {
                CheckBox5.Checked = false;
            }



            if (executept.Tables[0].Rows[0]["fri"].ToString() == "Y")
            {
                CheckBox6.Checked = true;
            }
            else
            {
                CheckBox6.Checked = false;
            }


            if (executept.Tables[0].Rows[0]["sat"].ToString() == "Y")
            {
                CheckBox7.Checked = true;
            }
            else
            {
                CheckBox7.Checked = false;
            }


            txtschemecode.Enabled = false;
            txtschemename.Enabled = false;
            txtvalidfrom.Enabled = false;
            txtvalidto.Enabled = false;
            txtfrominsert.Enabled = false;
            txttoinsert.Enabled = false;
            txtdiscount.Enabled = false;
        }

        updateStatus();
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnnext.Enabled = true;
        btnlast.Enabled = true;
        if (executept.Tables[0].Rows.Count == 1)
        {
            btnfirst.Enabled = false;
            btnlast.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = false;
        }
        btnimage();
        ScriptManager1.SetFocus(btnModify);
        return;

    }


    [Ajax.AjaxMethod]
    //		public DataSet savechk(string boxcode,string compcode,string userid)
    public DataSet savechk(string scheme_id, string schemecode, string frominsert, string toinsert, string validfrom, string validto, string discount, string compcode, string userid, string scheme_name, string sc, string contidate)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Scheme_Master exe = new NewAdbooking.Classes.Scheme_Master();
            ds = exe.schemechk(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount, compcode, userid, scheme_name, sc);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            NewAdbooking.classesoracle.Scheme_Master exe = new NewAdbooking.classesoracle.Scheme_Master();
            ds = exe.schemechk(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount, compcode, userid, scheme_name, sc);

        }
        else
        {
            NewAdbooking.classmysql.Scheme_Master exe = new NewAdbooking.classmysql.Scheme_Master();
            ds = exe.schemechk(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount, compcode, userid, scheme_name, sc);
        }
        return ds;

    }

    [Ajax.AjaxMethod]

    public DataSet modifychk(string scheme_id, string schemecode, string frominsert, string toinsert, string validfrom, string validto, string discount, string compcode, string userid, string scheme_name)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Scheme_Master exe = new NewAdbooking.Classes.Scheme_Master();

            ds = exe.modifyscheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount, compcode, userid, scheme_name);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Scheme_Master exe = new NewAdbooking.classesoracle.Scheme_Master();
            ds = exe.modifyscheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount, compcode, userid, scheme_name);
        }
        else
        {
            NewAdbooking.classmysql.Scheme_Master exe = new NewAdbooking.classmysql.Scheme_Master();
            ds = exe.modifyscheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount, compcode, userid, scheme_name);
        }
        return ds;

    }

    [Ajax.AjaxMethod]

    public DataSet checkcode(string scheme_name)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Scheme_Master exe = new NewAdbooking.Classes.Scheme_Master();
            ds = exe.schemeautocode(scheme_name);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Scheme_Master exe = new NewAdbooking.classesoracle.Scheme_Master();
            ds = exe.schemeautocode(scheme_name);
        }
        else
        {
            NewAdbooking.classmysql.Scheme_Master exe = new NewAdbooking.classmysql.Scheme_Master();

            ds = exe.schemeautocode(scheme_name);
        }
        return ds;

    }

    [Ajax.AjaxMethod]
    public void update(string scheme_id, string schemecode, string frominsert, string toinsert, string validfrom, string validto, string discount_type, string discount, string compcode, string userid, string flag, string scheme_name, string sun, string mon, string tue, string wed, string thu, string fri, string sat, string contidate)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Scheme_Master update = new NewAdbooking.Classes.Scheme_Master();

            ds = update.savescheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount_type, discount, compcode, userid, flag, scheme_name, sun, mon, tue, wed, thu, fri, sat, contidate,"");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Scheme_Master update = new NewAdbooking.classesoracle.Scheme_Master();

            ds = update.savescheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount_type, discount, compcode, userid, flag, scheme_name, sun, mon, tue, wed, thu, fri, sat, contidate, "","");

        }
        else
        {
            NewAdbooking.classmysql.Scheme_Master update = new NewAdbooking.classmysql.Scheme_Master();

            ds = update.savescheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount_type, discount, compcode, userid, flag, scheme_name);
        }

    }

    [Ajax.AjaxMethod]
    //    public void savescheme(string scheme_id, string schemecode, string frominsert, string toinsert, string validfrom, string validto, string discount_type, string discount, string compcode, string userid, string flag)
    //    public void savescheme(string scheme_id, string schemecode, string frominsert, string toinsert, string validfrom, string validto, string discount_type, string discount, string compcode, string userid, string flag)
    //public void saveschme(string scheme_id, string schemecode, string frominsert, string toinsert, string validfrom, string validto, string discount_type, string discount, string compcode, string userid, string flag, string scheme_name,string adcat)
    public void saveschme(string scheme_id, string schemecode, string frominsert, string toinsert, string validfrom, string validto, string discount_type, string discount, string compcode, string userid, string flag, string scheme_name, string sun, string mon, string tue, string wed, string thu, string fri, string sat, string contidate)
    {
        DataSet ds = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Scheme_Master save = new NewAdbooking.Classes.Scheme_Master();

            ds = save.savescheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount_type, discount, compcode, userid, flag, scheme_name, sun, mon, tue, wed, thu, fri, sat, contidate,"");
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {

            NewAdbooking.classesoracle.Scheme_Master save = new NewAdbooking.classesoracle.Scheme_Master();
            ds = save.savescheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount_type, discount, compcode, userid, flag, scheme_name, sun, mon, tue, wed, thu, fri, sat, contidate, "","");

        }
        else
        {
            NewAdbooking.classmysql.Scheme_Master save = new NewAdbooking.classmysql.Scheme_Master();

            ds = save.savescheme(scheme_id, schemecode, frominsert, toinsert, validfrom, validto, discount_type, discount, compcode, userid, flag, scheme_name);
        }
    }

    protected void AspNetMessageBox(string strMessage)
    {
        //strMessage = adminResource.GetStringFromResource(strMessage);
        string strAlert = "";
        strAlert = "alert('" + strMessage + "')";
        ScriptManager.RegisterClientScriptBlock(this, typeof(Scheme_Master), "ShowAlert", strAlert, true);
    }
    protected void btnCancel_Click1(object sender, EventArgs e)
    {

        txtschemecode.Text = "";
        txtfrominsert.Text = "";
        txttoinsert.Text = "";
        txtdiscount.Text = "";
        txtvalidfrom.Text = "";
        txtschemename.Text = "";
        txtvalidto.Text = "";
        drpdiscount.SelectedValue = "0";
        drpadcat.SelectedValue = "0";

        txtschemecode.Enabled = false;
        txtschemename.Enabled = false;
        txtfrominsert.Enabled = false;
        txttoinsert.Enabled = false;
        txtdiscount.Enabled = false;
        txtvalidfrom.Enabled = false;
        txtvalidto.Enabled = false;
        drpdiscount.Enabled = false;
        drpadcat.Enabled = false;

        chkcontidate.Checked = false;
        CheckBox1.Checked = false;
        CheckBox2.Checked = false;
        CheckBox3.Checked = false;
        CheckBox4.Checked = false;
        CheckBox5.Checked = false;
        CheckBox6.Checked = false;
        CheckBox6.Checked = false;
        CheckBox7.Checked = false;

        saveormodify = "0";
        chkquery = "0";
        fpnl = 0;
        chkquery = "0";
        saveormodify = "0";

        chkstatus(FlagStatus);

        getbuttoncheck(formname);

        btnModify.Enabled = false;
        btnimage();
        ScriptManager1.SetFocus(btnNew);


    }
    protected void btnfirst_Click(object sender, EventArgs e)
    {
        fpnl = 0;

        DataSet ds = new DataSet();
        ds = executept;

        txtschemecode.Text = executept.Tables[0].Rows[0].ItemArray[0].ToString();
        txtfrominsert.Text = executept.Tables[0].Rows[0].ItemArray[1].ToString();
        txttoinsert.Text = executept.Tables[0].Rows[0].ItemArray[2].ToString();
        txtdiscount.Text = executept.Tables[0].Rows[0].ItemArray[3].ToString();
        drpdiscount.SelectedValue = executept.Tables[0].Rows[0].ItemArray[6].ToString();

        dateinsert getdatechkexec = new dateinsert();
        string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[0].ItemArray[4].ToString());
        string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[0].ItemArray[5].ToString());

        //txtvalidfrom.Text =executept.Tables[0].Rows[0].ItemArray[4].ToString();//execvalidfromdate;
        //txtvalidto.Text =executept.Tables[0].Rows[0].ItemArray[5].ToString();//execfirstvalidtill;
        txtvalidfrom.Text = execvalidfromdate;
        txtvalidto.Text = execfirstvalidtill;
        txtschemename.Text = executept.Tables[0].Rows[0].ItemArray[7].ToString();
        drpadcat.SelectedValue = executept.Tables[0].Rows[0].ItemArray[8].ToString();

        if (executept.Tables[0].Rows[0]["CONTINUOUS_DATE"].ToString() == "1")
        {
            chkcontidate.Checked = true;
        }
        else
        {
            chkcontidate.Checked = false;
        }

        if (executept.Tables[0].Rows[0]["sun"].ToString() == "Y")
        {
            CheckBox1.Checked = true;
        }
        else
        {
            CheckBox1.Checked = false;
        }

        if (executept.Tables[0].Rows[0]["mon"].ToString() == "Y")
        {
            CheckBox2.Checked = true;
        }
        else
        {
            CheckBox2.Checked = false;
        }

        if (executept.Tables[0].Rows[0]["tue"].ToString() == "Y")
        {
            CheckBox3.Checked = true;
        }
        else
        {
            CheckBox3.Checked = false;
        }


        if (executept.Tables[0].Rows[0]["wed"].ToString() == "Y")
        {
            CheckBox4.Checked = true;
        }
        else
        {
            CheckBox4.Checked = false;
        }


        if (executept.Tables[0].Rows[0]["thu"].ToString() == "Y")
        {
            CheckBox5.Checked = true;
        }
        else
        {
            CheckBox5.Checked = false;
        }



        if (executept.Tables[0].Rows[0]["fri"].ToString() == "Y")
        {
            CheckBox6.Checked = true;
        }
        else
        {
            CheckBox6.Checked = false;
        }


        if (executept.Tables[0].Rows[0]["sat"].ToString() == "Y")
        {
            CheckBox7.Checked = true;
        }
        else
        {
            CheckBox7.Checked = false;
        }


        updateStatus();
        btnnext.Enabled = true;
        btnlast.Enabled = true;
        btnfirst.Enabled = false;
        btnprevious.Enabled = false;
        btnimage();
    }
    protected void btnprevious_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = executept;

        // fpnl--;
        int count = ds.Tables[0].Rows.Count - 1;

        fpnl--;

        if (fpnl != -1)
        {
            if (fpnl >= 0 || fpnl <= count)
            {


                txtschemecode.Text = executept.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                txtfrominsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txttoinsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtdiscount.Text = executept.Tables[0].Rows[fpnl].ItemArray[3].ToString();
                drpdiscount.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[6].ToString();

                dateinsert getdatechkexec = new dateinsert();
                string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[4].ToString());
                string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[5].ToString());

                txtvalidfrom.Text = executept.Tables[0].Rows[fpnl].ItemArray[4].ToString();//execvalidfromdate;
                txtvalidto.Text = executept.Tables[0].Rows[fpnl].ItemArray[5].ToString();//execfirstvalidtill;

                txtvalidfrom.Text = execvalidfromdate;
                txtvalidto.Text = execfirstvalidtill;

                txtschemename.Text = executept.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                drpadcat.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[8].ToString();

                if (executept.Tables[0].Rows[fpnl]["CONTINUOUS_DATE"].ToString() == "1")
                {
                    chkcontidate.Checked = true;
                }
                else
                {
                    chkcontidate.Checked = false;
                }

                if (executept.Tables[0].Rows[fpnl]["sun"].ToString() == "Y")
                {
                    CheckBox1.Checked = true;
                }
                else
                {
                    CheckBox1.Checked = false;
                }

                if (executept.Tables[0].Rows[fpnl]["mon"].ToString() == "Y")
                {
                    CheckBox2.Checked = true;
                }
                else
                {
                    CheckBox2.Checked = false;
                }

                if (executept.Tables[0].Rows[fpnl]["tue"].ToString() == "Y")
                {
                    CheckBox3.Checked = true;
                }
                else
                {
                    CheckBox3.Checked = false;
                }


                if (executept.Tables[0].Rows[fpnl]["wed"].ToString() == "Y")
                {
                    CheckBox4.Checked = true;
                }
                else
                {
                    CheckBox4.Checked = false;
                }


                if (executept.Tables[0].Rows[fpnl]["thu"].ToString() == "Y")
                {
                    CheckBox5.Checked = true;
                }
                else
                {
                    CheckBox5.Checked = false;
                }



                if (executept.Tables[0].Rows[fpnl]["fri"].ToString() == "Y")
                {
                    CheckBox6.Checked = true;
                }
                else
                {
                    CheckBox6.Checked = false;
                }


                if (executept.Tables[0].Rows[fpnl]["sat"].ToString() == "Y")
                {
                    CheckBox7.Checked = true;
                }
                else
                {
                    CheckBox7.Checked = false;
                }





                updateStatus();

                btnfirst.Enabled = true;
                btnlast.Enabled = true;
                btnprevious.Enabled = true;
                btnnext.Enabled = true;
            }
            else
            {
                btnnext.Enabled = true;
                btnlast.Enabled = true;
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;

            }
        }
        else
        {
            btnnext.Enabled = true;
            btnlast.Enabled = true;
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;

        }
        if (fpnl == 0)
        {
            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = true;
            btnlast.Enabled = true;

        }
        btnimage();
    }
    protected void btnnext_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = executept;
        int count = ds.Tables[0].Rows.Count - 1;
        fpnl++;


        if (fpnl != -1 && fpnl >= 0)
        {
            if (fpnl <= count)
            {

                txtschemecode.Text = executept.Tables[0].Rows[fpnl].ItemArray[0].ToString();
                txtfrominsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[1].ToString();
                txttoinsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[2].ToString();
                txtdiscount.Text = executept.Tables[0].Rows[fpnl].ItemArray[3].ToString();


                dateinsert getdatechkexec = new dateinsert();
                string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[4].ToString());
                string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[5].ToString());

                drpdiscount.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[6].ToString();

                //txtvalidfrom.Text = executept.Tables[0].Rows[fpnl].ItemArray[4].ToString();//execvalidfromdate;
                //txtvalidto.Text = executept.Tables[0].Rows[fpnl].ItemArray[5].ToString();// execfirstvalidtill;
                txtvalidfrom.Text = execvalidfromdate;
                txtvalidto.Text = execfirstvalidtill;
                txtschemename.Text = executept.Tables[0].Rows[fpnl].ItemArray[7].ToString();
                drpadcat.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[8].ToString();

                if (executept.Tables[0].Rows[fpnl]["CONTINUOUS_DATE"].ToString() == "1")
                {
                    chkcontidate.Checked = true;
                }
                else
                {
                    chkcontidate.Checked = false;
                }

                if (executept.Tables[0].Rows[fpnl]["sun"].ToString() == "Y")
                {
                    CheckBox1.Checked = true;
                }
                else
                {
                    CheckBox1.Checked = false;
                }

                if (executept.Tables[0].Rows[fpnl]["mon"].ToString() == "Y")
                {
                    CheckBox2.Checked = true;
                }
                else
                {
                    CheckBox2.Checked = false;
                }

                if (executept.Tables[0].Rows[fpnl]["tue"].ToString() == "Y")
                {
                    CheckBox3.Checked = true;
                }
                else
                {
                    CheckBox3.Checked = false;
                }


                if (executept.Tables[0].Rows[fpnl]["wed"].ToString() == "Y")
                {
                    CheckBox4.Checked = true;
                }
                else
                {
                    CheckBox4.Checked = false;
                }


                if (executept.Tables[0].Rows[fpnl]["thu"].ToString() == "Y")
                {
                    CheckBox5.Checked = true;
                }
                else
                {
                    CheckBox5.Checked = false;
                }



                if (executept.Tables[0].Rows[fpnl]["fri"].ToString() == "Y")
                {
                    CheckBox6.Checked = true;
                }
                else
                {
                    CheckBox6.Checked = false;
                }


                if (executept.Tables[0].Rows[fpnl]["sat"].ToString() == "Y")
                {
                    CheckBox7.Checked = true;
                }
                else
                {
                    CheckBox7.Checked = false;
                }



                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }

            else
            {
                btnnext.Enabled = false;
                btnlast.Enabled = false;
                btnfirst.Enabled = true;
                btnprevious.Enabled = true;

            }
        }
        else
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }
        if (fpnl == count)
        {
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnfirst.Enabled = true;
            btnprevious.Enabled = true;

        }

        btnimage();
    }
    protected void btnlast_Click(object sender, EventArgs e)
    {
        DataSet ds = new DataSet();
        ds = executept;
        int count = ds.Tables[0].Rows.Count;
        fpnl = count - 1;

        txtschemecode.Text = executept.Tables[0].Rows[fpnl].ItemArray[0].ToString();
        txtfrominsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[1].ToString();
        txttoinsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[2].ToString();
        txtdiscount.Text = executept.Tables[0].Rows[fpnl].ItemArray[3].ToString();
        drpdiscount.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[6].ToString();

        dateinsert getdatechkexec = new dateinsert();
        string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[4].ToString());
        string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[5].ToString());

        //txtvalidfrom.Text = executept.Tables[0].Rows[fpnl].ItemArray[4].ToString();//execvalidfromdate;
        //txtvalidto.Text = executept.Tables[0].Rows[fpnl].ItemArray[5].ToString();//execfirstvalidtill;
        txtvalidfrom.Text = execvalidfromdate;
        txtvalidto.Text = execfirstvalidtill;
        txtschemename.Text = executept.Tables[0].Rows[fpnl].ItemArray[7].ToString();
        drpadcat.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[8].ToString();

        if (executept.Tables[0].Rows[fpnl]["CONTINUOUS_DATE"].ToString() == "1")
        {
            chkcontidate.Checked = true;
        }
        else
        {
            chkcontidate.Checked = false;
        }


        if (executept.Tables[0].Rows[fpnl]["sun"].ToString() == "Y")
        {
            CheckBox1.Checked = true;
        }
        else
        {
            CheckBox1.Checked = false;
        }

        if (executept.Tables[0].Rows[fpnl]["mon"].ToString() == "Y")
        {
            CheckBox2.Checked = true;
        }
        else
        {
            CheckBox2.Checked = false;
        }

        if (executept.Tables[0].Rows[fpnl]["tue"].ToString() == "Y")
        {
            CheckBox3.Checked = true;
        }
        else
        {
            CheckBox3.Checked = false;
        }


        if (executept.Tables[0].Rows[fpnl]["wed"].ToString() == "Y")
        {
            CheckBox4.Checked = true;
        }
        else
        {
            CheckBox4.Checked = false;
        }


        if (executept.Tables[0].Rows[fpnl]["thu"].ToString() == "Y")
        {
            CheckBox5.Checked = true;
        }
        else
        {
            CheckBox5.Checked = false;
        }



        if (executept.Tables[0].Rows[fpnl]["fri"].ToString() == "Y")
        {
            CheckBox6.Checked = true;
        }
        else
        {
            CheckBox6.Checked = false;
        }


        if (executept.Tables[0].Rows[fpnl]["sat"].ToString() == "Y")
        {
            CheckBox7.Checked = true;
        }
        else
        {
            CheckBox7.Checked = false;
        }



        updateStatus();

        btnfirst.Enabled = true;
        btnprevious.Enabled = true;
        btnlast.Enabled = false;
        btnnext.Enabled = false;
        btnimage();
    }
    protected void btnDelete_Click(object sender, EventArgs e)
    {
        try
        {
            string sess = Session["compcode"].ToString();
        }
        catch (Exception ex)
        {
            ScriptManager.RegisterClientScriptBlock(this, typeof(Scheme_Master), "abc", "alert('session Expired');window.close();", true);

            return;
        }
        string scheme_id = txtschemecode.Text + txtfrominsert.Text + txttoinsert.Text;

        DataSet ds1 = new DataSet();

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Scheme_Master del = new NewAdbooking.Classes.Scheme_Master();
            ds1 = del.ptdelete(scheme_id, Session["compcode"].ToString());
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Scheme_Master del = new NewAdbooking.classesoracle.Scheme_Master();
            ds1 = del.ptdelete(scheme_id, Session["compcode"].ToString());

        }
        else
        {
            NewAdbooking.classmysql.Scheme_Master del = new NewAdbooking.classmysql.Scheme_Master();
            ds1 = del.ptdelete(scheme_id, Session["compcode"].ToString());
        }

        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.Scheme_Master execute = new NewAdbooking.Classes.Scheme_Master();
            executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename, contidate);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.Scheme_Master execute = new NewAdbooking.classesoracle.Scheme_Master();
            executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename);

        }
        else
        {
            NewAdbooking.classmysql.Scheme_Master execute = new NewAdbooking.classmysql.Scheme_Master();
            executept = execute.ptexecute(exeschemecode, exefrominsert, exetoinsert, exevalidfrom, exevalidto, exediscount_type, exediscount, Session["compcode"].ToString(), exeschemename);
        }

        int a = executept.Tables[0].Rows.Count;
        if (a <= 0)
        {
            message = "There is no data";
            AspNetMessageBox(message);
            updateStatus();
            getbuttoncheck(formname);

            txtschemecode.Text = "";
            txtschemename.Text = "";
            txtfrominsert.Text = "";
            txttoinsert.Text = "";
            txtdiscount.Text = "";
            txtvalidfrom.Text = "";
            txtvalidto.Text = "";
            drpdiscount.SelectedValue = "0";

            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = false;
            btnlast.Enabled = false;
            btnimage();


            return;

        }

        else if (a == 1)
        {
            DataSet ds = new DataSet();

            ds = executept;
            fpnl = 0;

            txtschemecode.Text = executept.Tables[0].Rows[fpnl].ItemArray[0].ToString();
            txtfrominsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            txttoinsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            txtdiscount.Text = executept.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            drpdiscount.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[6].ToString();

            dateinsert getdatechkexec = new dateinsert();
            string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[4].ToString());
            string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[5].ToString());

            txtvalidfrom.Text = execvalidfromdate;// executept.Tables[0].Rows[0].ItemArray[4].ToString();
            txtvalidto.Text = execfirstvalidtill;// executept.Tables[0].Rows[0].ItemArray[5].ToString();


            txtschemename.Text = executept.Tables[0].Rows[fpnl].ItemArray[7].ToString();

            btnfirst.Enabled = false;
            btnprevious.Enabled = false;
            btnnext.Enabled = false;
            btnlast.Enabled = false;

            DataSet ds3 = new DataSet();
            ds3.ReadXml(Server.MapPath("XML/errorMessage.xml"));
            message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
            AspNetMessageBox(message);
        }
        else if (fpnl == -1 || fpnl >= a)
        {
            DataSet ds = new DataSet();

            ds = executept;
            fpnl = a - 1;//Manish
            //txtschemecode.Text = executept.Tables[0].Rows[0].ItemArray[0].ToString();
            //txtfrominsert.Text = executept.Tables[0].Rows[0].ItemArray[1].ToString();
            //txttoinsert.Text = executept.Tables[0].Rows[0].ItemArray[2].ToString();
            //txtdiscount.Text = executept.Tables[0].Rows[0].ItemArray[3].ToString();
            //drpdiscount.SelectedValue = executept.Tables[0].Rows[0].ItemArray[6].ToString();

            txtschemecode.Text = executept.Tables[0].Rows[fpnl].ItemArray[0].ToString();
            txtfrominsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            txttoinsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            txtdiscount.Text = executept.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            drpdiscount.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[6].ToString();

            dateinsert getdatechkexec = new dateinsert();
            string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[4].ToString());
            string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[5].ToString());

            txtvalidfrom.Text = execvalidfromdate;// executept.Tables[0].Rows[0].ItemArray[4].ToString();
            txtvalidto.Text = execfirstvalidtill;// executept.Tables[0].Rows[0].ItemArray[5].ToString();


            txtschemename.Text = executept.Tables[0].Rows[fpnl].ItemArray[7].ToString();

            btnfirst.Enabled = true;
            btnprevious.Enabled = true;
            btnnext.Enabled = false;
            btnlast.Enabled = false;

            DataSet ds3 = new DataSet();
            ds3.ReadXml(Server.MapPath("XML/errorMessage.xml"));
            message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
            AspNetMessageBox(message);

        }

        else
        {
            DataSet ds = new DataSet();
            ds = executept;
            txtschemecode.Text = executept.Tables[0].Rows[fpnl].ItemArray[0].ToString();
            txtfrominsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[1].ToString();
            txttoinsert.Text = executept.Tables[0].Rows[fpnl].ItemArray[2].ToString();
            txtdiscount.Text = executept.Tables[0].Rows[fpnl].ItemArray[3].ToString();
            drpdiscount.SelectedValue = executept.Tables[0].Rows[fpnl].ItemArray[6].ToString();

            dateinsert getdatechkexec = new dateinsert();
            string execvalidfromdate = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[4].ToString());
            string execfirstvalidtill = getdatechkexec.getDateScheme(dateformat, executept.Tables[0].Rows[fpnl].ItemArray[5].ToString());

            txtvalidfrom.Text = execvalidfromdate;// executept.Tables[0].Rows[0].ItemArray[4].ToString();
            txtvalidto.Text = execfirstvalidtill;// executept.Tables[0].Rows[0].ItemArray[5].ToString();

            txtschemename.Text = executept.Tables[0].Rows[fpnl].ItemArray[7].ToString();

            DataSet ds3 = new DataSet();
            ds3.ReadXml(Server.MapPath("XML/errorMessage.xml"));
            message = ds3.Tables[0].Rows[0].ItemArray[2].ToString();
            AspNetMessageBox(message);

            if (fpnl == 0)
            {
                btnfirst.Enabled = false;
                btnprevious.Enabled = false;
                btnnext.Enabled = true;
                btnlast.Enabled = true;
            }
            else
            {
                btnfirst.Enabled = true;
                btnprevious.Enabled = true;
                btnnext.Enabled = true;
                btnlast.Enabled = true;
            }
        }
        btnimage();
    }
    protected void btnExit_Click(object sender, EventArgs e)
    {

    }


    public void getbuttoncheck(string formname)
    {
        DataSet butt = new DataSet();
        if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "sql")
        {
            NewAdbooking.Classes.classlibraryforbutton getpermission = new NewAdbooking.Classes.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        else if (ConfigurationSettings.AppSettings["ConnectionType"].ToString() == "orcl")
        {
            NewAdbooking.classesoracle.classlibraryforbutton getpermission = new NewAdbooking.classesoracle.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);

        }
        else
        {
            NewAdbooking.classmysql.classlibraryforbutton getpermission = new NewAdbooking.classmysql.classlibraryforbutton();
            butt = getpermission.getbuttonpermission(Session["compcode"].ToString(), Session["userid"].ToString(), formname);
        }
        string id = butt.Tables[0].Rows[0].ItemArray[0].ToString();


        if (id != "0")
        {
            //var id = ds.Tables[0].Rows[0].button_id;



            if (id == "0" || id == "8")
            {

                FlagStatus = 0;

                btnNew.Enabled = false;
                btnQuery.Enabled = false;
                btnExecute.Enabled = false;
                btnCancel.Enabled = false;
                btnExit.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;



                //window.location.href = 'EnterPage.aspx';
                //alert("You Are Not Authorised To See This Form");
                //FlagStatus = 0;
                //

            }
            if (id == "1" || id == "9")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnExecute.Enabled = false;

                btnSave.Enabled = false;
                btnModify.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 1;

            }
            if (id == "2" || id == "10")
            {

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnModify.Enabled = true;

                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExit.Enabled = true;
                FlagStatus = 2;


            }
            if (id == "3" || id == "11")
            {
                btnNew.Enabled = true;
                btnQuery.Enabled = true;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;


                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;

                FlagStatus = 3;



            }
            if (id == "4" || id == "12")
            {
                btnNew.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                btnNew.Enabled = false;
                btnExecute.Enabled = false;
                btnDelete.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;


                btnModify.Enabled = false;

                btnSave.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                FlagStatus = 4;



            }
            if (id == "5" || id == "13")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                btnModify.Enabled = false;
                FlagStatus = 5;


            }
            if (id == "6" || id == "14")
            {
                btnNew.Enabled = false;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;

                FlagStatus = 6;
            }
            if (id == "7" || id == "15")
            {
                btnNew.Enabled = true;
                btnSave.Enabled = false;
                btnQuery.Enabled = true;
                btnModify.Enabled = false;
                btnCancel.Enabled = true;
                btnExit.Enabled = true;
                btnDelete.Enabled = false;
                btnfirst.Enabled = false;
                btnnext.Enabled = false;
                btnprevious.Enabled = false;
                btnlast.Enabled = false;
                btnExecute.Enabled = false;
                FlagStatus = 7;

            }
        }




    }

    public void chkstatus(int FlagStatus)
    {
        if (FlagStatus == 0 || FlagStatus == 8)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = false;
            btnExecute.Enabled = false;
            btnCancel.Enabled = false;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = false;



        }
        if (FlagStatus == 1 || FlagStatus == 9)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnSave.Enabled = true;
            btnExecute.Enabled = false;
            btnCancel.Enabled = true;
            btnModify.Enabled = false;

            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;

        }
        if (FlagStatus == 2 || FlagStatus == 10)
        {
            btnExecute.Enabled = true;
            btnQuery.Enabled = false;
            btnDelete.Enabled = false;
            btnNew.Enabled = false;
            btnCancel.Enabled = true;
            btnExecute.Enabled = false;
            btnModify.Enabled = false;
            btnExit.Enabled = true;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
            btnExit.Enabled = true;


        }

        if (FlagStatus == 3 || FlagStatus == 11)
        {
            btnNew.Enabled = false;
            btnQuery.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }

        if (FlagStatus == 4 || FlagStatus == 12)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 5 || FlagStatus == 13)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 6 || FlagStatus == 14)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }
        if (FlagStatus == 7 || FlagStatus == 15)
        {
            btnNew.Enabled = false;
            btnExecute.Enabled = false;
            btnDelete.Enabled = false;
            btnCancel.Enabled = true;
            btnExit.Enabled = true;


            btnModify.Enabled = false;

            btnSave.Enabled = true;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;
        }


    }

    public void updateStatus()
    {
        chkstatus(FlagStatus);
        if (FlagStatus == 2 || FlagStatus == 3)
        {
            btnQuery.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;
            btnDelete.Enabled = false;
        }
        if (FlagStatus == 4)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 5)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }
        if (FlagStatus == 6 || FlagStatus == 7)
        {
            btnDelete.Enabled = true;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = true;
            btnfirst.Enabled = true;
            btnnext.Enabled = true;
            btnprevious.Enabled = true;
            btnlast.Enabled = true;

        }

        if (FlagStatus == 1 || FlagStatus == 0)
        {
            btnDelete.Enabled = false;
            btnExecute.Enabled = false;
            btnSave.Enabled = false;
            btnQuery.Enabled = true;
            btnModify.Enabled = false;
            btnfirst.Enabled = false;
            btnnext.Enabled = false;
            btnprevious.Enabled = false;
            btnlast.Enabled = false;

        }
    }

    public void btnimage()
    {
        DataSet ds = new DataSet();
        ds.ReadXml(Server.MapPath("XML/button.xml"));
        if (btnNew.Enabled == false)
            btnNew.ImageUrl = ds.Tables[1].Rows[0].ItemArray[0].ToString();
        else
            btnNew.ImageUrl = ds.Tables[0].Rows[0].ItemArray[0].ToString();
        if (btnSave.Enabled == false)
            btnSave.ImageUrl = ds.Tables[1].Rows[0].ItemArray[1].ToString();
        else
            btnSave.ImageUrl = ds.Tables[0].Rows[0].ItemArray[1].ToString();
        if (btnModify.Enabled == false)
            btnModify.ImageUrl = ds.Tables[1].Rows[0].ItemArray[2].ToString();
        else
            btnModify.ImageUrl = ds.Tables[0].Rows[0].ItemArray[2].ToString();
        if (btnQuery.Enabled == false)
            btnQuery.ImageUrl = ds.Tables[1].Rows[0].ItemArray[3].ToString();
        else
            btnQuery.ImageUrl = ds.Tables[0].Rows[0].ItemArray[3].ToString();
        if (btnExecute.Enabled == false)
            btnExecute.ImageUrl = ds.Tables[1].Rows[0].ItemArray[4].ToString();
        else
            btnExecute.ImageUrl = ds.Tables[0].Rows[0].ItemArray[4].ToString();
        if (btnCancel.Enabled == false)
            btnCancel.ImageUrl = ds.Tables[1].Rows[0].ItemArray[5].ToString();
        else
            btnCancel.ImageUrl = ds.Tables[0].Rows[0].ItemArray[5].ToString();
        if (btnfirst.Enabled == false)
            btnfirst.ImageUrl = ds.Tables[1].Rows[0].ItemArray[6].ToString();
        else
            btnfirst.ImageUrl = ds.Tables[0].Rows[0].ItemArray[6].ToString();
        if (btnprevious.Enabled == false)
            btnprevious.ImageUrl = ds.Tables[1].Rows[0].ItemArray[7].ToString();
        else
            btnprevious.ImageUrl = ds.Tables[0].Rows[0].ItemArray[7].ToString();
        if (btnnext.Enabled == false)
            btnnext.ImageUrl = ds.Tables[1].Rows[0].ItemArray[8].ToString();
        else
            btnnext.ImageUrl = ds.Tables[0].Rows[0].ItemArray[8].ToString();
        if (btnlast.Enabled == false)
            btnlast.ImageUrl = ds.Tables[1].Rows[0].ItemArray[9].ToString();
        else
            btnlast.ImageUrl = ds.Tables[0].Rows[0].ItemArray[9].ToString();
        if (btnDelete.Enabled == false)
            btnDelete.ImageUrl = ds.Tables[1].Rows[0].ItemArray[10].ToString();
        else
            btnDelete.ImageUrl = ds.Tables[0].Rows[0].ItemArray[10].ToString();
        if (btnExit.Enabled == false)
            btnExit.ImageUrl = ds.Tables[1].Rows[0].ItemArray[11].ToString();
        else
            btnExit.ImageUrl = ds.Tables[0].Rows[0].ItemArray[11].ToString();
    }

    protected void CheckBox1_Load(object sender, System.EventArgs e)
    {
        CheckBox1.Attributes.Add("OnLoad", "javascript:return disablecheck();");


    }

}
